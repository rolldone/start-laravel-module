/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@tabler/core/dist/js/tabler.js":
/*!*****************************************************!*\
  !*** ./node_modules/@tabler/core/dist/js/tabler.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
* Tabler v1.0.0-beta11 (https://tabler.io)
* @version 1.0.0-beta11
* @link https://tabler.io
* Copyright 2018-2022 The Tabler Authors
* Copyright 2018-2022 codecalm.net PaweÅ‚ Kuna
* Licensed under MIT (https://github.com/tabler/tabler/blob/master/LICENSE)
*/
(function (factory) {
	 true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
		__WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) :
	0;
})((function () { 'use strict';

	var e,t,n="function"==typeof Map?new Map:(e=[],t=[],{has:function(t){return e.indexOf(t)>-1},get:function(n){return t[e.indexOf(n)]},set:function(n,o){-1===e.indexOf(n)&&(e.push(n),t.push(o));},delete:function(n){var o=e.indexOf(n);o>-1&&(e.splice(o,1),t.splice(o,1));}}),o=function(e){return new Event(e,{bubbles:!0})};try{new Event("test");}catch(e){o=function(e){var t=document.createEvent("Event");return t.initEvent(e,!0,!1),t};}function r(e){var t=n.get(e);t&&t.destroy();}function i(e){var t=n.get(e);t&&t.update();}var l=null;"undefined"==typeof window||"function"!=typeof window.getComputedStyle?((l=function(e){return e}).destroy=function(e){return e},l.update=function(e){return e}):((l=function(e,t){return e&&Array.prototype.forEach.call(e.length?e:[e],function(e){return function(e){if(e&&e.nodeName&&"TEXTAREA"===e.nodeName&&!n.has(e)){var t,r=null,i=null,l=null,d=function(){e.clientWidth!==i&&c();},a=function(t){window.removeEventListener("resize",d,!1),e.removeEventListener("input",c,!1),e.removeEventListener("keyup",c,!1),e.removeEventListener("autosize:destroy",a,!1),e.removeEventListener("autosize:update",c,!1),Object.keys(t).forEach(function(n){e.style[n]=t[n];}),n.delete(e);}.bind(e,{height:e.style.height,resize:e.style.resize,overflowY:e.style.overflowY,overflowX:e.style.overflowX,wordWrap:e.style.wordWrap});e.addEventListener("autosize:destroy",a,!1),"onpropertychange"in e&&"oninput"in e&&e.addEventListener("keyup",c,!1),window.addEventListener("resize",d,!1),e.addEventListener("input",c,!1),e.addEventListener("autosize:update",c,!1),e.style.overflowX="hidden",e.style.wordWrap="break-word",n.set(e,{destroy:a,update:c}),"vertical"===(t=window.getComputedStyle(e,null)).resize?e.style.resize="none":"both"===t.resize&&(e.style.resize="horizontal"),r="content-box"===t.boxSizing?-(parseFloat(t.paddingTop)+parseFloat(t.paddingBottom)):parseFloat(t.borderTopWidth)+parseFloat(t.borderBottomWidth),isNaN(r)&&(r=0),c();}function u(t){var n=e.style.width;e.style.width="0px",e.style.width=n,e.style.overflowY=t;}function s(){if(0!==e.scrollHeight){var t=function(e){for(var t=[];e&&e.parentNode&&e.parentNode instanceof Element;)e.parentNode.scrollTop&&t.push({node:e.parentNode,scrollTop:e.parentNode.scrollTop}),e=e.parentNode;return t}(e),n=document.documentElement&&document.documentElement.scrollTop;e.style.height="",e.style.height=e.scrollHeight+r+"px",i=e.clientWidth,t.forEach(function(e){e.node.scrollTop=e.scrollTop;}),n&&(document.documentElement.scrollTop=n);}}function c(){s();var t=Math.round(parseFloat(e.style.height)),n=window.getComputedStyle(e,null),r="content-box"===n.boxSizing?Math.round(parseFloat(n.height)):e.offsetHeight;if(r<t?"hidden"===n.overflowY&&(u("scroll"),s(),r="content-box"===n.boxSizing?Math.round(parseFloat(window.getComputedStyle(e,null).height)):e.offsetHeight):"hidden"!==n.overflowY&&(u("hidden"),s(),r="content-box"===n.boxSizing?Math.round(parseFloat(window.getComputedStyle(e,null).height)):e.offsetHeight),l!==r){l=r;var i=o("autosize:resized");try{e.dispatchEvent(i);}catch(e){}}}}(e)}),e}).destroy=function(e){return e&&Array.prototype.forEach.call(e.length?e:[e],r),e},l.update=function(e){return e&&Array.prototype.forEach.call(e.length?e:[e],i),e});var d=l;

	var elements = document.querySelectorAll('[data-bs-toggle="autosize"]');
	if (elements.length) {
	  elements.forEach(function (element) {
	    d(element);
	  });
	}

	function _typeof(obj) {
	  "@babel/helpers - typeof";
	  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
	    return typeof obj;
	  } : function (obj) {
	    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	  }, _typeof(obj);
	}
	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}
	function _defineProperties(target, props) {
	  for (var i = 0; i < props.length; i++) {
	    var descriptor = props[i];
	    descriptor.enumerable = descriptor.enumerable || false;
	    descriptor.configurable = true;
	    if ("value" in descriptor) descriptor.writable = true;
	    Object.defineProperty(target, descriptor.key, descriptor);
	  }
	}
	function _createClass(Constructor, protoProps, staticProps) {
	  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
	  if (staticProps) _defineProperties(Constructor, staticProps);
	  Object.defineProperty(Constructor, "prototype", {
	    writable: false
	  });
	  return Constructor;
	}
	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	  return obj;
	}
	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function");
	  }
	  subClass.prototype = Object.create(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      writable: true,
	      configurable: true
	    }
	  });
	  Object.defineProperty(subClass, "prototype", {
	    writable: false
	  });
	  if (superClass) _setPrototypeOf(subClass, superClass);
	}
	function _getPrototypeOf(o) {
	  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
	    return o.__proto__ || Object.getPrototypeOf(o);
	  };
	  return _getPrototypeOf(o);
	}
	function _setPrototypeOf(o, p) {
	  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
	    o.__proto__ = p;
	    return o;
	  };
	  return _setPrototypeOf(o, p);
	}
	function _isNativeReflectConstruct() {
	  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
	  if (Reflect.construct.sham) return false;
	  if (typeof Proxy === "function") return true;
	  try {
	    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
	    return true;
	  } catch (e) {
	    return false;
	  }
	}
	function _objectWithoutPropertiesLoose(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;
	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }
	  return target;
	}
	function _objectWithoutProperties(source, excluded) {
	  if (source == null) return {};
	  var target = _objectWithoutPropertiesLoose(source, excluded);
	  var key, i;
	  if (Object.getOwnPropertySymbols) {
	    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
	    for (i = 0; i < sourceSymbolKeys.length; i++) {
	      key = sourceSymbolKeys[i];
	      if (excluded.indexOf(key) >= 0) continue;
	      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
	      target[key] = source[key];
	    }
	  }
	  return target;
	}
	function _assertThisInitialized(self) {
	  if (self === void 0) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	  return self;
	}
	function _possibleConstructorReturn(self, call) {
	  if (call && (typeof call === "object" || typeof call === "function")) {
	    return call;
	  } else if (call !== void 0) {
	    throw new TypeError("Derived constructors may only return object or undefined");
	  }
	  return _assertThisInitialized(self);
	}
	function _createSuper(Derived) {
	  var hasNativeReflectConstruct = _isNativeReflectConstruct();
	  return function _createSuperInternal() {
	    var Super = _getPrototypeOf(Derived),
	        result;
	    if (hasNativeReflectConstruct) {
	      var NewTarget = _getPrototypeOf(this).constructor;
	      result = Reflect.construct(Super, arguments, NewTarget);
	    } else {
	      result = Super.apply(this, arguments);
	    }
	    return _possibleConstructorReturn(this, result);
	  };
	}
	function _superPropBase(object, property) {
	  while (!Object.prototype.hasOwnProperty.call(object, property)) {
	    object = _getPrototypeOf(object);
	    if (object === null) break;
	  }
	  return object;
	}
	function _get() {
	  if (typeof Reflect !== "undefined" && Reflect.get) {
	    _get = Reflect.get;
	  } else {
	    _get = function _get(target, property, receiver) {
	      var base = _superPropBase(target, property);
	      if (!base) return;
	      var desc = Object.getOwnPropertyDescriptor(base, property);
	      if (desc.get) {
	        return desc.get.call(arguments.length < 3 ? target : receiver);
	      }
	      return desc.value;
	    };
	  }
	  return _get.apply(this, arguments);
	}
	function set(target, property, value, receiver) {
	  if (typeof Reflect !== "undefined" && Reflect.set) {
	    set = Reflect.set;
	  } else {
	    set = function set(target, property, value, receiver) {
	      var base = _superPropBase(target, property);
	      var desc;
	      if (base) {
	        desc = Object.getOwnPropertyDescriptor(base, property);
	        if (desc.set) {
	          desc.set.call(receiver, value);
	          return true;
	        } else if (!desc.writable) {
	          return false;
	        }
	      }
	      desc = Object.getOwnPropertyDescriptor(receiver, property);
	      if (desc) {
	        if (!desc.writable) {
	          return false;
	        }
	        desc.value = value;
	        Object.defineProperty(receiver, property, desc);
	      } else {
	        _defineProperty(receiver, property, value);
	      }
	      return true;
	    };
	  }
	  return set(target, property, value, receiver);
	}
	function _set(target, property, value, receiver, isStrict) {
	  var s = set(target, property, value, receiver || target);
	  if (!s && isStrict) {
	    throw new Error('failed to set property');
	  }
	  return value;
	}
	function _slicedToArray(arr, i) {
	  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
	}
	function _arrayWithHoles(arr) {
	  if (Array.isArray(arr)) return arr;
	}
	function _iterableToArrayLimit(arr, i) {
	  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
	  if (_i == null) return;
	  var _arr = [];
	  var _n = true;
	  var _d = false;
	  var _s, _e;
	  try {
	    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
	      _arr.push(_s.value);
	      if (i && _arr.length === i) break;
	    }
	  } catch (err) {
	    _d = true;
	    _e = err;
	  } finally {
	    try {
	      if (!_n && _i["return"] != null) _i["return"]();
	    } finally {
	      if (_d) throw _e;
	    }
	  }
	  return _arr;
	}
	function _unsupportedIterableToArray(o, minLen) {
	  if (!o) return;
	  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
	  var n = Object.prototype.toString.call(o).slice(8, -1);
	  if (n === "Object" && o.constructor) n = o.constructor.name;
	  if (n === "Map" || n === "Set") return Array.from(o);
	  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
	}
	function _arrayLikeToArray(arr, len) {
	  if (len == null || len > arr.length) len = arr.length;
	  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
	  return arr2;
	}
	function _nonIterableRest() {
	  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}

	var ChangeDetails = function () {
	  function ChangeDetails(details) {
	    _classCallCheck(this, ChangeDetails);
	    Object.assign(this, {
	      inserted: '',
	      rawInserted: '',
	      skip: false,
	      tailShift: 0
	    }, details);
	  }
	  _createClass(ChangeDetails, [{
	    key: "aggregate",
	    value: function aggregate(details) {
	      this.rawInserted += details.rawInserted;
	      this.skip = this.skip || details.skip;
	      this.inserted += details.inserted;
	      this.tailShift += details.tailShift;
	      return this;
	    }
	  }, {
	    key: "offset",
	    get: function get() {
	      return this.tailShift + this.inserted.length;
	    }
	  }]);
	  return ChangeDetails;
	}();

	function isString(str) {
	  return typeof str === 'string' || str instanceof String;
	}
	var DIRECTION = {
	  NONE: 'NONE',
	  LEFT: 'LEFT',
	  FORCE_LEFT: 'FORCE_LEFT',
	  RIGHT: 'RIGHT',
	  FORCE_RIGHT: 'FORCE_RIGHT'
	};
	function forceDirection(direction) {
	  switch (direction) {
	    case DIRECTION.LEFT:
	      return DIRECTION.FORCE_LEFT;
	    case DIRECTION.RIGHT:
	      return DIRECTION.FORCE_RIGHT;
	    default:
	      return direction;
	  }
	}
	function escapeRegExp(str) {
	  return str.replace(/([.*+?^=!:${}()|[\]\/\\])/g, '\\$1');
	}
	function normalizePrepare(prep) {
	  return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];
	}
	function objectIncludes(b, a) {
	  if (a === b) return true;
	  var arrA = Array.isArray(a),
	      arrB = Array.isArray(b),
	      i;
	  if (arrA && arrB) {
	    if (a.length != b.length) return false;
	    for (i = 0; i < a.length; i++) {
	      if (!objectIncludes(a[i], b[i])) return false;
	    }
	    return true;
	  }
	  if (arrA != arrB) return false;
	  if (a && b && _typeof(a) === 'object' && _typeof(b) === 'object') {
	    var dateA = a instanceof Date,
	        dateB = b instanceof Date;
	    if (dateA && dateB) return a.getTime() == b.getTime();
	    if (dateA != dateB) return false;
	    var regexpA = a instanceof RegExp,
	        regexpB = b instanceof RegExp;
	    if (regexpA && regexpB) return a.toString() == b.toString();
	    if (regexpA != regexpB) return false;
	    var keys = Object.keys(a);
	    for (i = 0; i < keys.length; i++) {
	      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
	    }
	    for (i = 0; i < keys.length; i++) {
	      if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;
	    }
	    return true;
	  } else if (a && b && typeof a === 'function' && typeof b === 'function') {
	    return a.toString() === b.toString();
	  }
	  return false;
	}

	var ActionDetails = function () {
	  function ActionDetails(value, cursorPos, oldValue, oldSelection) {
	    _classCallCheck(this, ActionDetails);
	    this.value = value;
	    this.cursorPos = cursorPos;
	    this.oldValue = oldValue;
	    this.oldSelection = oldSelection;
	    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {
	      --this.oldSelection.start;
	    }
	  }
	  _createClass(ActionDetails, [{
	    key: "startChangePos",
	    get: function get() {
	      return Math.min(this.cursorPos, this.oldSelection.start);
	    }
	  }, {
	    key: "insertedCount",
	    get: function get() {
	      return this.cursorPos - this.startChangePos;
	    }
	  }, {
	    key: "inserted",
	    get: function get() {
	      return this.value.substr(this.startChangePos, this.insertedCount);
	    }
	  }, {
	    key: "removedCount",
	    get: function get() {
	      return Math.max(this.oldSelection.end - this.startChangePos ||
	      this.oldValue.length - this.value.length, 0);
	    }
	  }, {
	    key: "removed",
	    get: function get() {
	      return this.oldValue.substr(this.startChangePos, this.removedCount);
	    }
	  }, {
	    key: "head",
	    get: function get() {
	      return this.value.substring(0, this.startChangePos);
	    }
	  }, {
	    key: "tail",
	    get: function get() {
	      return this.value.substring(this.startChangePos + this.insertedCount);
	    }
	  }, {
	    key: "removeDirection",
	    get: function get() {
	      if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;
	      return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&
	      this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;
	    }
	  }]);
	  return ActionDetails;
	}();

	var ContinuousTailDetails = function () {
	  function ContinuousTailDetails() {
	    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	    var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	    var stop = arguments.length > 2 ? arguments[2] : undefined;
	    _classCallCheck(this, ContinuousTailDetails);
	    this.value = value;
	    this.from = from;
	    this.stop = stop;
	  }
	  _createClass(ContinuousTailDetails, [{
	    key: "toString",
	    value: function toString() {
	      return this.value;
	    }
	  }, {
	    key: "extend",
	    value: function extend(tail) {
	      this.value += String(tail);
	    }
	  }, {
	    key: "appendTo",
	    value: function appendTo(masked) {
	      return masked.append(this.toString(), {
	        tail: true
	      }).aggregate(masked._appendPlaceholder());
	    }
	  }, {
	    key: "state",
	    get: function get() {
	      return {
	        value: this.value,
	        from: this.from,
	        stop: this.stop
	      };
	    },
	    set: function set(state) {
	      Object.assign(this, state);
	    }
	  }, {
	    key: "unshift",
	    value: function unshift(beforePos) {
	      if (!this.value.length || beforePos != null && this.from >= beforePos) return '';
	      var shiftChar = this.value[0];
	      this.value = this.value.slice(1);
	      return shiftChar;
	    }
	  }, {
	    key: "shift",
	    value: function shift() {
	      if (!this.value.length) return '';
	      var shiftChar = this.value[this.value.length - 1];
	      this.value = this.value.slice(0, -1);
	      return shiftChar;
	    }
	  }]);
	  return ContinuousTailDetails;
	}();

	function IMask(el) {
	  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  return new IMask.InputMask(el, opts);
	}

	var Masked = function () {
	  function Masked(opts) {
	    _classCallCheck(this, Masked);
	    this._value = '';
	    this._update(Object.assign({}, Masked.DEFAULTS, opts));
	    this.isInitialized = true;
	  }
	  _createClass(Masked, [{
	    key: "updateOptions",
	    value: function updateOptions(opts) {
	      if (!Object.keys(opts).length) return;
	      this.withValueRefresh(this._update.bind(this, opts));
	    }
	  }, {
	    key: "_update",
	    value: function _update(opts) {
	      Object.assign(this, opts);
	    }
	  }, {
	    key: "state",
	    get: function get() {
	      return {
	        _value: this.value
	      };
	    },
	    set: function set(state) {
	      this._value = state._value;
	    }
	  }, {
	    key: "reset",
	    value: function reset() {
	      this._value = '';
	    }
	  }, {
	    key: "value",
	    get: function get() {
	      return this._value;
	    },
	    set: function set(value) {
	      this.resolve(value);
	    }
	  }, {
	    key: "resolve",
	    value: function resolve(value) {
	      this.reset();
	      this.append(value, {
	        input: true
	      }, '');
	      this.doCommit();
	      return this.value;
	    }
	  }, {
	    key: "unmaskedValue",
	    get: function get() {
	      return this.value;
	    },
	    set: function set(value) {
	      this.reset();
	      this.append(value, {}, '');
	      this.doCommit();
	    }
	  }, {
	    key: "typedValue",
	    get: function get() {
	      return this.doParse(this.value);
	    },
	    set: function set(value) {
	      this.value = this.doFormat(value);
	    }
	  }, {
	    key: "rawInputValue",
	    get: function get() {
	      return this.extractInput(0, this.value.length, {
	        raw: true
	      });
	    },
	    set: function set(value) {
	      this.reset();
	      this.append(value, {
	        raw: true
	      }, '');
	      this.doCommit();
	    }
	  }, {
	    key: "isComplete",
	    get: function get() {
	      return true;
	    }
	  }, {
	    key: "isFilled",
	    get: function get() {
	      return this.isComplete;
	    }
	  }, {
	    key: "nearestInputPos",
	    value: function nearestInputPos(cursorPos, direction) {
	      return cursorPos;
	    }
	  }, {
	    key: "extractInput",
	    value: function extractInput() {
	      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;
	      return this.value.slice(fromPos, toPos);
	    }
	  }, {
	    key: "extractTail",
	    value: function extractTail() {
	      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;
	      return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);
	    }
	  }, {
	    key: "appendTail",
	    value: function appendTail(tail) {
	      if (isString(tail)) tail = new ContinuousTailDetails(String(tail));
	      return tail.appendTo(this);
	    }
	  }, {
	    key: "_appendCharRaw",
	    value: function _appendCharRaw(ch) {
	      if (!ch) return new ChangeDetails();
	      this._value += ch;
	      return new ChangeDetails({
	        inserted: ch,
	        rawInserted: ch
	      });
	    }
	  }, {
	    key: "_appendChar",
	    value: function _appendChar(ch) {
	      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var checkTail = arguments.length > 2 ? arguments[2] : undefined;
	      var consistentState = this.state;
	      var details;
	      var _normalizePrepare = normalizePrepare(this.doPrepare(ch, flags));
	      var _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2);
	      ch = _normalizePrepare2[0];
	      details = _normalizePrepare2[1];
	      details = details.aggregate(this._appendCharRaw(ch, flags));
	      if (details.inserted) {
	        var consistentTail;
	        var appended = this.doValidate(flags) !== false;
	        if (appended && checkTail != null) {
	          var beforeTailState = this.state;
	          if (this.overwrite === true) {
	            consistentTail = checkTail.state;
	            checkTail.unshift(this.value.length);
	          }
	          var tailDetails = this.appendTail(checkTail);
	          appended = tailDetails.rawInserted === checkTail.toString();
	          if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {
	            this.state = beforeTailState;
	            consistentTail = checkTail.state;
	            checkTail.shift();
	            tailDetails = this.appendTail(checkTail);
	            appended = tailDetails.rawInserted === checkTail.toString();
	          }
	          if (appended && tailDetails.inserted) this.state = beforeTailState;
	        }
	        if (!appended) {
	          details = new ChangeDetails();
	          this.state = consistentState;
	          if (checkTail && consistentTail) checkTail.state = consistentTail;
	        }
	      }
	      return details;
	    }
	  }, {
	    key: "_appendPlaceholder",
	    value: function _appendPlaceholder() {
	      return new ChangeDetails();
	    }
	  }, {
	    key: "_appendEager",
	    value: function _appendEager() {
	      return new ChangeDetails();
	    }
	  }, {
	    key: "append",
	    value: function append(str, flags, tail) {
	      if (!isString(str)) throw new Error('value should be string');
	      var details = new ChangeDetails();
	      var checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;
	      if (flags && flags.tail) flags._beforeTailState = this.state;
	      for (var ci = 0; ci < str.length; ++ci) {
	        details.aggregate(this._appendChar(str[ci], flags, checkTail));
	      }
	      if (checkTail != null) {
	        details.tailShift += this.appendTail(checkTail).tailShift;
	      }
	      if (this.eager && flags !== null && flags !== void 0 && flags.input && str) {
	        details.aggregate(this._appendEager());
	      }
	      return details;
	    }
	  }, {
	    key: "remove",
	    value: function remove() {
	      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;
	      this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);
	      return new ChangeDetails();
	    }
	  }, {
	    key: "withValueRefresh",
	    value: function withValueRefresh(fn) {
	      if (this._refreshing || !this.isInitialized) return fn();
	      this._refreshing = true;
	      var rawInput = this.rawInputValue;
	      var value = this.value;
	      var ret = fn();
	      this.rawInputValue = rawInput;
	      if (this.value && this.value !== value && value.indexOf(this.value) === 0) {
	        this.append(value.slice(this.value.length), {}, '');
	      }
	      delete this._refreshing;
	      return ret;
	    }
	  }, {
	    key: "runIsolated",
	    value: function runIsolated(fn) {
	      if (this._isolated || !this.isInitialized) return fn(this);
	      this._isolated = true;
	      var state = this.state;
	      var ret = fn(this);
	      this.state = state;
	      delete this._isolated;
	      return ret;
	    }
	  }, {
	    key: "doPrepare",
	    value: function doPrepare(str) {
	      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      return this.prepare ? this.prepare(str, this, flags) : str;
	    }
	  }, {
	    key: "doValidate",
	    value: function doValidate(flags) {
	      return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));
	    }
	  }, {
	    key: "doCommit",
	    value: function doCommit() {
	      if (this.commit) this.commit(this.value, this);
	    }
	  }, {
	    key: "doFormat",
	    value: function doFormat(value) {
	      return this.format ? this.format(value, this) : value;
	    }
	  }, {
	    key: "doParse",
	    value: function doParse(str) {
	      return this.parse ? this.parse(str, this) : str;
	    }
	  }, {
	    key: "splice",
	    value: function splice(start, deleteCount, inserted, removeDirection) {
	      var tailPos = start + deleteCount;
	      var tail = this.extractTail(tailPos);
	      var oldRawValue;
	      if (this.eager) {
	        removeDirection = forceDirection(removeDirection);
	        oldRawValue = this.extractInput(0, tailPos, {
	          raw: true
	        });
	      }
	      var startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !this.eager ? DIRECTION.NONE : removeDirection);
	      var details = new ChangeDetails({
	        tailShift: startChangePos - start
	      }).aggregate(this.remove(startChangePos));
	      if (this.eager && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {
	        if (removeDirection === DIRECTION.FORCE_LEFT) {
	          var valLength;
	          while (oldRawValue === this.rawInputValue && (valLength = this.value.length)) {
	            details.aggregate(new ChangeDetails({
	              tailShift: -1
	            })).aggregate(this.remove(valLength - 1));
	          }
	        } else if (removeDirection === DIRECTION.FORCE_RIGHT) {
	          tail.unshift();
	        }
	      }
	      return details.aggregate(this.append(inserted, {
	        input: true
	      }, tail));
	    }
	  }, {
	    key: "maskEquals",
	    value: function maskEquals(mask) {
	      return this.mask === mask;
	    }
	  }]);
	  return Masked;
	}();
	Masked.DEFAULTS = {
	  format: function format(v) {
	    return v;
	  },
	  parse: function parse(v) {
	    return v;
	  }
	};
	IMask.Masked = Masked;

	function maskedClass(mask) {
	  if (mask == null) {
	    throw new Error('mask property should be defined');
	  }
	  if (mask instanceof RegExp) return IMask.MaskedRegExp;
	  if (isString(mask)) return IMask.MaskedPattern;
	  if (mask instanceof Date || mask === Date) return IMask.MaskedDate;
	  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return IMask.MaskedNumber;
	  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;
	  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;
	  if (mask instanceof IMask.Masked) return mask.constructor;
	  if (mask instanceof Function) return IMask.MaskedFunction;
	  console.warn('Mask not found for mask', mask);
	  return IMask.Masked;
	}
	function createMask(opts) {
	  if (IMask.Masked && opts instanceof IMask.Masked) return opts;
	  opts = Object.assign({}, opts);
	  var mask = opts.mask;
	  if (IMask.Masked && mask instanceof IMask.Masked) return mask;
	  var MaskedClass = maskedClass(mask);
	  if (!MaskedClass) throw new Error('Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.');
	  return new MaskedClass(opts);
	}
	IMask.createMask = createMask;

	var _excluded$4 = ["mask"];
	var DEFAULT_INPUT_DEFINITIONS = {
	  '0': /\d/,
	  'a': /[\u0041-\u005A\u0061-\u007A\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0\u08A2-\u08AC\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097F\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191C\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA697\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA80-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
	  '*': /./
	};
	var PatternInputDefinition = function () {
	  function PatternInputDefinition(opts) {
	    _classCallCheck(this, PatternInputDefinition);
	    var mask = opts.mask,
	        blockOpts = _objectWithoutProperties(opts, _excluded$4);
	    this.masked = createMask({
	      mask: mask
	    });
	    Object.assign(this, blockOpts);
	  }
	  _createClass(PatternInputDefinition, [{
	    key: "reset",
	    value: function reset() {
	      this.isFilled = false;
	      this.masked.reset();
	    }
	  }, {
	    key: "remove",
	    value: function remove() {
	      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;
	      if (fromPos === 0 && toPos >= 1) {
	        this.isFilled = false;
	        return this.masked.remove(fromPos, toPos);
	      }
	      return new ChangeDetails();
	    }
	  }, {
	    key: "value",
	    get: function get() {
	      return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : '');
	    }
	  }, {
	    key: "unmaskedValue",
	    get: function get() {
	      return this.masked.unmaskedValue;
	    }
	  }, {
	    key: "isComplete",
	    get: function get() {
	      return Boolean(this.masked.value) || this.isOptional;
	    }
	  }, {
	    key: "_appendChar",
	    value: function _appendChar(ch) {
	      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      if (this.isFilled) return new ChangeDetails();
	      var state = this.masked.state;
	      var details = this.masked._appendChar(ch, flags);
	      if (details.inserted && this.doValidate(flags) === false) {
	        details.inserted = details.rawInserted = '';
	        this.masked.state = state;
	      }
	      if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {
	        details.inserted = this.placeholderChar;
	      }
	      details.skip = !details.inserted && !this.isOptional;
	      this.isFilled = Boolean(details.inserted);
	      return details;
	    }
	  }, {
	    key: "append",
	    value: function append() {
	      var _this$masked;
	      return (_this$masked = this.masked).append.apply(_this$masked, arguments);
	    }
	  }, {
	    key: "_appendPlaceholder",
	    value: function _appendPlaceholder() {
	      var details = new ChangeDetails();
	      if (this.isFilled || this.isOptional) return details;
	      this.isFilled = true;
	      details.inserted = this.placeholderChar;
	      return details;
	    }
	  }, {
	    key: "_appendEager",
	    value: function _appendEager() {
	      return new ChangeDetails();
	    }
	  }, {
	    key: "extractTail",
	    value: function extractTail() {
	      var _this$masked2;
	      return (_this$masked2 = this.masked).extractTail.apply(_this$masked2, arguments);
	    }
	  }, {
	    key: "appendTail",
	    value: function appendTail() {
	      var _this$masked3;
	      return (_this$masked3 = this.masked).appendTail.apply(_this$masked3, arguments);
	    }
	  }, {
	    key: "extractInput",
	    value: function extractInput() {
	      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;
	      var flags = arguments.length > 2 ? arguments[2] : undefined;
	      return this.masked.extractInput(fromPos, toPos, flags);
	    }
	  }, {
	    key: "nearestInputPos",
	    value: function nearestInputPos(cursorPos) {
	      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DIRECTION.NONE;
	      var minPos = 0;
	      var maxPos = this.value.length;
	      var boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);
	      switch (direction) {
	        case DIRECTION.LEFT:
	        case DIRECTION.FORCE_LEFT:
	          return this.isComplete ? boundPos : minPos;
	        case DIRECTION.RIGHT:
	        case DIRECTION.FORCE_RIGHT:
	          return this.isComplete ? boundPos : maxPos;
	        case DIRECTION.NONE:
	        default:
	          return boundPos;
	      }
	    }
	  }, {
	    key: "doValidate",
	    value: function doValidate() {
	      var _this$masked4, _this$parent;
	      return (_this$masked4 = this.masked).doValidate.apply(_this$masked4, arguments) && (!this.parent || (_this$parent = this.parent).doValidate.apply(_this$parent, arguments));
	    }
	  }, {
	    key: "doCommit",
	    value: function doCommit() {
	      this.masked.doCommit();
	    }
	  }, {
	    key: "state",
	    get: function get() {
	      return {
	        masked: this.masked.state,
	        isFilled: this.isFilled
	      };
	    },
	    set: function set(state) {
	      this.masked.state = state.masked;
	      this.isFilled = state.isFilled;
	    }
	  }]);
	  return PatternInputDefinition;
	}();

	var PatternFixedDefinition = function () {
	  function PatternFixedDefinition(opts) {
	    _classCallCheck(this, PatternFixedDefinition);
	    Object.assign(this, opts);
	    this._value = '';
	    this.isFixed = true;
	  }
	  _createClass(PatternFixedDefinition, [{
	    key: "value",
	    get: function get() {
	      return this._value;
	    }
	  }, {
	    key: "unmaskedValue",
	    get: function get() {
	      return this.isUnmasking ? this.value : '';
	    }
	  }, {
	    key: "reset",
	    value: function reset() {
	      this._isRawInput = false;
	      this._value = '';
	    }
	  }, {
	    key: "remove",
	    value: function remove() {
	      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._value.length;
	      this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);
	      if (!this._value) this._isRawInput = false;
	      return new ChangeDetails();
	    }
	  }, {
	    key: "nearestInputPos",
	    value: function nearestInputPos(cursorPos) {
	      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DIRECTION.NONE;
	      var minPos = 0;
	      var maxPos = this._value.length;
	      switch (direction) {
	        case DIRECTION.LEFT:
	        case DIRECTION.FORCE_LEFT:
	          return minPos;
	        case DIRECTION.NONE:
	        case DIRECTION.RIGHT:
	        case DIRECTION.FORCE_RIGHT:
	        default:
	          return maxPos;
	      }
	    }
	  }, {
	    key: "extractInput",
	    value: function extractInput() {
	      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._value.length;
	      var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	      return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';
	    }
	  }, {
	    key: "isComplete",
	    get: function get() {
	      return true;
	    }
	  }, {
	    key: "isFilled",
	    get: function get() {
	      return Boolean(this._value);
	    }
	  }, {
	    key: "_appendChar",
	    value: function _appendChar(ch) {
	      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var details = new ChangeDetails();
	      if (this._value) return details;
	      var appended = this.char === ch;
	      var isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && !this.eager && !flags.tail;
	      if (isResolved) details.rawInserted = this.char;
	      this._value = details.inserted = this.char;
	      this._isRawInput = isResolved && (flags.raw || flags.input);
	      return details;
	    }
	  }, {
	    key: "_appendEager",
	    value: function _appendEager() {
	      return this._appendChar(this.char);
	    }
	  }, {
	    key: "_appendPlaceholder",
	    value: function _appendPlaceholder() {
	      var details = new ChangeDetails();
	      if (this._value) return details;
	      this._value = details.inserted = this.char;
	      return details;
	    }
	  }, {
	    key: "extractTail",
	    value: function extractTail() {
	      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;
	      return new ContinuousTailDetails('');
	    }
	  }, {
	    key: "appendTail",
	    value: function appendTail(tail) {
	      if (isString(tail)) tail = new ContinuousTailDetails(String(tail));
	      return tail.appendTo(this);
	    }
	  }, {
	    key: "append",
	    value: function append(str, flags, tail) {
	      var details = this._appendChar(str[0], flags);
	      if (tail != null) {
	        details.tailShift += this.appendTail(tail).tailShift;
	      }
	      return details;
	    }
	  }, {
	    key: "doCommit",
	    value: function doCommit() {}
	  }, {
	    key: "state",
	    get: function get() {
	      return {
	        _value: this._value,
	        _isRawInput: this._isRawInput
	      };
	    },
	    set: function set(state) {
	      Object.assign(this, state);
	    }
	  }]);
	  return PatternFixedDefinition;
	}();

	var _excluded$3 = ["chunks"];
	var ChunksTailDetails = function () {
	  function ChunksTailDetails() {
	    var chunks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	    var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	    _classCallCheck(this, ChunksTailDetails);
	    this.chunks = chunks;
	    this.from = from;
	  }
	  _createClass(ChunksTailDetails, [{
	    key: "toString",
	    value: function toString() {
	      return this.chunks.map(String).join('');
	    }
	  }, {
	    key: "extend",
	    value: function extend(tailChunk) {
	      if (!String(tailChunk)) return;
	      if (isString(tailChunk)) tailChunk = new ContinuousTailDetails(String(tailChunk));
	      var lastChunk = this.chunks[this.chunks.length - 1];
	      var extendLast = lastChunk && (
	      lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&
	      tailChunk.from === lastChunk.from + lastChunk.toString().length;
	      if (tailChunk instanceof ContinuousTailDetails) {
	        if (extendLast) {
	          lastChunk.extend(tailChunk.toString());
	        } else {
	          this.chunks.push(tailChunk);
	        }
	      } else if (tailChunk instanceof ChunksTailDetails) {
	        if (tailChunk.stop == null) {
	          var firstTailChunk;
	          while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {
	            firstTailChunk = tailChunk.chunks.shift();
	            firstTailChunk.from += tailChunk.from;
	            this.extend(firstTailChunk);
	          }
	        }
	        if (tailChunk.toString()) {
	          tailChunk.stop = tailChunk.blockIndex;
	          this.chunks.push(tailChunk);
	        }
	      }
	    }
	  }, {
	    key: "appendTo",
	    value: function appendTo(masked) {
	      if (!(masked instanceof IMask.MaskedPattern)) {
	        var tail = new ContinuousTailDetails(this.toString());
	        return tail.appendTo(masked);
	      }
	      var details = new ChangeDetails();
	      for (var ci = 0; ci < this.chunks.length && !details.skip; ++ci) {
	        var chunk = this.chunks[ci];
	        var lastBlockIter = masked._mapPosToBlock(masked.value.length);
	        var stop = chunk.stop;
	        var chunkBlock = void 0;
	        if (stop != null && (
	        !lastBlockIter || lastBlockIter.index <= stop)) {
	          if (chunk instanceof ChunksTailDetails ||
	          masked._stops.indexOf(stop) >= 0) {
	            details.aggregate(masked._appendPlaceholder(stop));
	          }
	          chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];
	        }
	        if (chunkBlock) {
	          var tailDetails = chunkBlock.appendTail(chunk);
	          tailDetails.skip = false;
	          details.aggregate(tailDetails);
	          masked._value += tailDetails.inserted;
	          var remainChars = chunk.toString().slice(tailDetails.rawInserted.length);
	          if (remainChars) details.aggregate(masked.append(remainChars, {
	            tail: true
	          }));
	        } else {
	          details.aggregate(masked.append(chunk.toString(), {
	            tail: true
	          }));
	        }
	      }
	      return details;
	    }
	  }, {
	    key: "state",
	    get: function get() {
	      return {
	        chunks: this.chunks.map(function (c) {
	          return c.state;
	        }),
	        from: this.from,
	        stop: this.stop,
	        blockIndex: this.blockIndex
	      };
	    },
	    set: function set(state) {
	      var chunks = state.chunks,
	          props = _objectWithoutProperties(state, _excluded$3);
	      Object.assign(this, props);
	      this.chunks = chunks.map(function (cstate) {
	        var chunk = "chunks" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails();
	        chunk.state = cstate;
	        return chunk;
	      });
	    }
	  }, {
	    key: "unshift",
	    value: function unshift(beforePos) {
	      if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';
	      var chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;
	      var ci = 0;
	      while (ci < this.chunks.length) {
	        var chunk = this.chunks[ci];
	        var shiftChar = chunk.unshift(chunkShiftPos);
	        if (chunk.toString()) {
	          if (!shiftChar) break;
	          ++ci;
	        } else {
	          this.chunks.splice(ci, 1);
	        }
	        if (shiftChar) return shiftChar;
	      }
	      return '';
	    }
	  }, {
	    key: "shift",
	    value: function shift() {
	      if (!this.chunks.length) return '';
	      var ci = this.chunks.length - 1;
	      while (0 <= ci) {
	        var chunk = this.chunks[ci];
	        var shiftChar = chunk.shift();
	        if (chunk.toString()) {
	          if (!shiftChar) break;
	          --ci;
	        } else {
	          this.chunks.splice(ci, 1);
	        }
	        if (shiftChar) return shiftChar;
	      }
	      return '';
	    }
	  }]);
	  return ChunksTailDetails;
	}();

	var PatternCursor = function () {
	  function PatternCursor(masked, pos) {
	    _classCallCheck(this, PatternCursor);
	    this.masked = masked;
	    this._log = [];
	    var _ref = masked._mapPosToBlock(pos) || (pos < 0 ?
	    {
	      index: 0,
	      offset: 0
	    } :
	    {
	      index: this.masked._blocks.length,
	      offset: 0
	    }),
	        offset = _ref.offset,
	        index = _ref.index;
	    this.offset = offset;
	    this.index = index;
	    this.ok = false;
	  }
	  _createClass(PatternCursor, [{
	    key: "block",
	    get: function get() {
	      return this.masked._blocks[this.index];
	    }
	  }, {
	    key: "pos",
	    get: function get() {
	      return this.masked._blockStartPos(this.index) + this.offset;
	    }
	  }, {
	    key: "state",
	    get: function get() {
	      return {
	        index: this.index,
	        offset: this.offset,
	        ok: this.ok
	      };
	    },
	    set: function set(s) {
	      Object.assign(this, s);
	    }
	  }, {
	    key: "pushState",
	    value: function pushState() {
	      this._log.push(this.state);
	    }
	  }, {
	    key: "popState",
	    value: function popState() {
	      var s = this._log.pop();
	      this.state = s;
	      return s;
	    }
	  }, {
	    key: "bindBlock",
	    value: function bindBlock() {
	      if (this.block) return;
	      if (this.index < 0) {
	        this.index = 0;
	        this.offset = 0;
	      }
	      if (this.index >= this.masked._blocks.length) {
	        this.index = this.masked._blocks.length - 1;
	        this.offset = this.block.value.length;
	      }
	    }
	  }, {
	    key: "_pushLeft",
	    value: function _pushLeft(fn) {
	      this.pushState();
	      for (this.bindBlock(); 0 <= this.index; --this.index, this.offset = ((_this$block = this.block) === null || _this$block === void 0 ? void 0 : _this$block.value.length) || 0) {
	        var _this$block;
	        if (fn()) return this.ok = true;
	      }
	      return this.ok = false;
	    }
	  }, {
	    key: "_pushRight",
	    value: function _pushRight(fn) {
	      this.pushState();
	      for (this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {
	        if (fn()) return this.ok = true;
	      }
	      return this.ok = false;
	    }
	  }, {
	    key: "pushLeftBeforeFilled",
	    value: function pushLeftBeforeFilled() {
	      var _this = this;
	      return this._pushLeft(function () {
	        if (_this.block.isFixed || !_this.block.value) return;
	        _this.offset = _this.block.nearestInputPos(_this.offset, DIRECTION.FORCE_LEFT);
	        if (_this.offset !== 0) return true;
	      });
	    }
	  }, {
	    key: "pushLeftBeforeInput",
	    value: function pushLeftBeforeInput() {
	      var _this2 = this;
	      return this._pushLeft(function () {
	        if (_this2.block.isFixed) return;
	        _this2.offset = _this2.block.nearestInputPos(_this2.offset, DIRECTION.LEFT);
	        return true;
	      });
	    }
	  }, {
	    key: "pushLeftBeforeRequired",
	    value: function pushLeftBeforeRequired() {
	      var _this3 = this;
	      return this._pushLeft(function () {
	        if (_this3.block.isFixed || _this3.block.isOptional && !_this3.block.value) return;
	        _this3.offset = _this3.block.nearestInputPos(_this3.offset, DIRECTION.LEFT);
	        return true;
	      });
	    }
	  }, {
	    key: "pushRightBeforeFilled",
	    value: function pushRightBeforeFilled() {
	      var _this4 = this;
	      return this._pushRight(function () {
	        if (_this4.block.isFixed || !_this4.block.value) return;
	        _this4.offset = _this4.block.nearestInputPos(_this4.offset, DIRECTION.FORCE_RIGHT);
	        if (_this4.offset !== _this4.block.value.length) return true;
	      });
	    }
	  }, {
	    key: "pushRightBeforeInput",
	    value: function pushRightBeforeInput() {
	      var _this5 = this;
	      return this._pushRight(function () {
	        if (_this5.block.isFixed) return;
	        _this5.offset = _this5.block.nearestInputPos(_this5.offset, DIRECTION.NONE);
	        return true;
	      });
	    }
	  }, {
	    key: "pushRightBeforeRequired",
	    value: function pushRightBeforeRequired() {
	      var _this6 = this;
	      return this._pushRight(function () {
	        if (_this6.block.isFixed || _this6.block.isOptional && !_this6.block.value) return;
	        _this6.offset = _this6.block.nearestInputPos(_this6.offset, DIRECTION.NONE);
	        return true;
	      });
	    }
	  }]);
	  return PatternCursor;
	}();

	var MaskedRegExp = function (_Masked) {
	  _inherits(MaskedRegExp, _Masked);
	  var _super = _createSuper(MaskedRegExp);
	  function MaskedRegExp() {
	    _classCallCheck(this, MaskedRegExp);
	    return _super.apply(this, arguments);
	  }
	  _createClass(MaskedRegExp, [{
	    key: "_update",
	    value:
	    function _update(opts) {
	      if (opts.mask) opts.validate = function (value) {
	        return value.search(opts.mask) >= 0;
	      };
	      _get(_getPrototypeOf(MaskedRegExp.prototype), "_update", this).call(this, opts);
	    }
	  }]);
	  return MaskedRegExp;
	}(Masked);
	IMask.MaskedRegExp = MaskedRegExp;

	var _excluded$2 = ["_blocks"];
	var MaskedPattern = function (_Masked) {
	  _inherits(MaskedPattern, _Masked);
	  var _super = _createSuper(MaskedPattern);
	  function MaskedPattern() {
	    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    _classCallCheck(this, MaskedPattern);
	    opts.definitions = Object.assign({}, DEFAULT_INPUT_DEFINITIONS, opts.definitions);
	    return _super.call(this, Object.assign({}, MaskedPattern.DEFAULTS, opts));
	  }
	  _createClass(MaskedPattern, [{
	    key: "_update",
	    value: function _update() {
	      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	      opts.definitions = Object.assign({}, this.definitions, opts.definitions);
	      _get(_getPrototypeOf(MaskedPattern.prototype), "_update", this).call(this, opts);
	      this._rebuildMask();
	    }
	  }, {
	    key: "_rebuildMask",
	    value: function _rebuildMask() {
	      var _this = this;
	      var defs = this.definitions;
	      this._blocks = [];
	      this._stops = [];
	      this._maskedBlocks = {};
	      var pattern = this.mask;
	      if (!pattern || !defs) return;
	      var unmaskingBlock = false;
	      var optionalBlock = false;
	      for (var i = 0; i < pattern.length; ++i) {
	        if (this.blocks) {
	          var _ret = function () {
	            var p = pattern.slice(i);
	            var bNames = Object.keys(_this.blocks).filter(function (bName) {
	              return p.indexOf(bName) === 0;
	            });
	            bNames.sort(function (a, b) {
	              return b.length - a.length;
	            });
	            var bName = bNames[0];
	            if (bName) {
	              var maskedBlock = createMask(Object.assign({
	                parent: _this,
	                lazy: _this.lazy,
	                eager: _this.eager,
	                placeholderChar: _this.placeholderChar,
	                overwrite: _this.overwrite
	              }, _this.blocks[bName]));
	              if (maskedBlock) {
	                _this._blocks.push(maskedBlock);
	                if (!_this._maskedBlocks[bName]) _this._maskedBlocks[bName] = [];
	                _this._maskedBlocks[bName].push(_this._blocks.length - 1);
	              }
	              i += bName.length - 1;
	              return "continue";
	            }
	          }();
	          if (_ret === "continue") continue;
	        }
	        var char = pattern[i];
	        var isInput = (char in defs);
	        if (char === MaskedPattern.STOP_CHAR) {
	          this._stops.push(this._blocks.length);
	          continue;
	        }
	        if (char === '{' || char === '}') {
	          unmaskingBlock = !unmaskingBlock;
	          continue;
	        }
	        if (char === '[' || char === ']') {
	          optionalBlock = !optionalBlock;
	          continue;
	        }
	        if (char === MaskedPattern.ESCAPE_CHAR) {
	          ++i;
	          char = pattern[i];
	          if (!char) break;
	          isInput = false;
	        }
	        var def = isInput ? new PatternInputDefinition({
	          parent: this,
	          lazy: this.lazy,
	          eager: this.eager,
	          placeholderChar: this.placeholderChar,
	          mask: defs[char],
	          isOptional: optionalBlock
	        }) : new PatternFixedDefinition({
	          char: char,
	          eager: this.eager,
	          isUnmasking: unmaskingBlock
	        });
	        this._blocks.push(def);
	      }
	    }
	  }, {
	    key: "state",
	    get: function get() {
	      return Object.assign({}, _get(_getPrototypeOf(MaskedPattern.prototype), "state", this), {
	        _blocks: this._blocks.map(function (b) {
	          return b.state;
	        })
	      });
	    },
	    set: function set(state) {
	      var _blocks = state._blocks,
	          maskedState = _objectWithoutProperties(state, _excluded$2);
	      this._blocks.forEach(function (b, bi) {
	        return b.state = _blocks[bi];
	      });
	      _set(_getPrototypeOf(MaskedPattern.prototype), "state", maskedState, this, true);
	    }
	  }, {
	    key: "reset",
	    value: function reset() {
	      _get(_getPrototypeOf(MaskedPattern.prototype), "reset", this).call(this);
	      this._blocks.forEach(function (b) {
	        return b.reset();
	      });
	    }
	  }, {
	    key: "isComplete",
	    get: function get() {
	      return this._blocks.every(function (b) {
	        return b.isComplete;
	      });
	    }
	  }, {
	    key: "isFilled",
	    get: function get() {
	      return this._blocks.every(function (b) {
	        return b.isFilled;
	      });
	    }
	  }, {
	    key: "isFixed",
	    get: function get() {
	      return this._blocks.every(function (b) {
	        return b.isFixed;
	      });
	    }
	  }, {
	    key: "isOptional",
	    get: function get() {
	      return this._blocks.every(function (b) {
	        return b.isOptional;
	      });
	    }
	  }, {
	    key: "doCommit",
	    value: function doCommit() {
	      this._blocks.forEach(function (b) {
	        return b.doCommit();
	      });
	      _get(_getPrototypeOf(MaskedPattern.prototype), "doCommit", this).call(this);
	    }
	  }, {
	    key: "unmaskedValue",
	    get: function get() {
	      return this._blocks.reduce(function (str, b) {
	        return str += b.unmaskedValue;
	      }, '');
	    },
	    set: function set(unmaskedValue) {
	      _set(_getPrototypeOf(MaskedPattern.prototype), "unmaskedValue", unmaskedValue, this, true);
	    }
	  }, {
	    key: "value",
	    get: function get() {
	      return this._blocks.reduce(function (str, b) {
	        return str += b.value;
	      }, '');
	    },
	    set: function set(value) {
	      _set(_getPrototypeOf(MaskedPattern.prototype), "value", value, this, true);
	    }
	  }, {
	    key: "appendTail",
	    value: function appendTail(tail) {
	      return _get(_getPrototypeOf(MaskedPattern.prototype), "appendTail", this).call(this, tail).aggregate(this._appendPlaceholder());
	    }
	  }, {
	    key: "_appendEager",
	    value: function _appendEager() {
	      var _this$_mapPosToBlock;
	      var details = new ChangeDetails();
	      var startBlockIndex = (_this$_mapPosToBlock = this._mapPosToBlock(this.value.length)) === null || _this$_mapPosToBlock === void 0 ? void 0 : _this$_mapPosToBlock.index;
	      if (startBlockIndex == null) return details;
	      if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;
	      for (var bi = startBlockIndex; bi < this._blocks.length; ++bi) {
	        var d = this._blocks[bi]._appendEager();
	        if (!d.inserted) break;
	        details.aggregate(d);
	      }
	      return details;
	    }
	  }, {
	    key: "_appendCharRaw",
	    value: function _appendCharRaw(ch) {
	      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var blockIter = this._mapPosToBlock(this.value.length);
	      var details = new ChangeDetails();
	      if (!blockIter) return details;
	      for (var bi = blockIter.index;; ++bi) {
	        var _flags$_beforeTailSta;
	        var _block = this._blocks[bi];
	        if (!_block) break;
	        var blockDetails = _block._appendChar(ch, Object.assign({}, flags, {
	          _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) === null || _flags$_beforeTailSta === void 0 ? void 0 : _flags$_beforeTailSta._blocks[bi]
	        }));
	        var skip = blockDetails.skip;
	        details.aggregate(blockDetails);
	        if (skip || blockDetails.rawInserted) break;
	      }
	      return details;
	    }
	  }, {
	    key: "extractTail",
	    value: function extractTail() {
	      var _this2 = this;
	      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;
	      var chunkTail = new ChunksTailDetails();
	      if (fromPos === toPos) return chunkTail;
	      this._forEachBlocksInRange(fromPos, toPos, function (b, bi, bFromPos, bToPos) {
	        var blockChunk = b.extractTail(bFromPos, bToPos);
	        blockChunk.stop = _this2._findStopBefore(bi);
	        blockChunk.from = _this2._blockStartPos(bi);
	        if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;
	        chunkTail.extend(blockChunk);
	      });
	      return chunkTail;
	    }
	  }, {
	    key: "extractInput",
	    value: function extractInput() {
	      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;
	      var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	      if (fromPos === toPos) return '';
	      var input = '';
	      this._forEachBlocksInRange(fromPos, toPos, function (b, _, fromPos, toPos) {
	        input += b.extractInput(fromPos, toPos, flags);
	      });
	      return input;
	    }
	  }, {
	    key: "_findStopBefore",
	    value: function _findStopBefore(blockIndex) {
	      var stopBefore;
	      for (var si = 0; si < this._stops.length; ++si) {
	        var stop = this._stops[si];
	        if (stop <= blockIndex) stopBefore = stop;else break;
	      }
	      return stopBefore;
	    }
	  }, {
	    key: "_appendPlaceholder",
	    value: function _appendPlaceholder(toBlockIndex) {
	      var _this3 = this;
	      var details = new ChangeDetails();
	      if (this.lazy && toBlockIndex == null) return details;
	      var startBlockIter = this._mapPosToBlock(this.value.length);
	      if (!startBlockIter) return details;
	      var startBlockIndex = startBlockIter.index;
	      var endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;
	      this._blocks.slice(startBlockIndex, endBlockIndex).forEach(function (b) {
	        if (!b.lazy || toBlockIndex != null) {
	          var args = b._blocks != null ? [b._blocks.length] : [];
	          var bDetails = b._appendPlaceholder.apply(b, args);
	          _this3._value += bDetails.inserted;
	          details.aggregate(bDetails);
	        }
	      });
	      return details;
	    }
	  }, {
	    key: "_mapPosToBlock",
	    value: function _mapPosToBlock(pos) {
	      var accVal = '';
	      for (var bi = 0; bi < this._blocks.length; ++bi) {
	        var _block2 = this._blocks[bi];
	        var blockStartPos = accVal.length;
	        accVal += _block2.value;
	        if (pos <= accVal.length) {
	          return {
	            index: bi,
	            offset: pos - blockStartPos
	          };
	        }
	      }
	    }
	  }, {
	    key: "_blockStartPos",
	    value: function _blockStartPos(blockIndex) {
	      return this._blocks.slice(0, blockIndex).reduce(function (pos, b) {
	        return pos += b.value.length;
	      }, 0);
	    }
	  }, {
	    key: "_forEachBlocksInRange",
	    value: function _forEachBlocksInRange(fromPos) {
	      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;
	      var fn = arguments.length > 2 ? arguments[2] : undefined;
	      var fromBlockIter = this._mapPosToBlock(fromPos);
	      if (fromBlockIter) {
	        var toBlockIter = this._mapPosToBlock(toPos);
	        var isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;
	        var fromBlockStartPos = fromBlockIter.offset;
	        var fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].value.length;
	        fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);
	        if (toBlockIter && !isSameBlock) {
	          for (var bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {
	            fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);
	          }
	          fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);
	        }
	      }
	    }
	  }, {
	    key: "remove",
	    value: function remove() {
	      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;
	      var removeDetails = _get(_getPrototypeOf(MaskedPattern.prototype), "remove", this).call(this, fromPos, toPos);
	      this._forEachBlocksInRange(fromPos, toPos, function (b, _, bFromPos, bToPos) {
	        removeDetails.aggregate(b.remove(bFromPos, bToPos));
	      });
	      return removeDetails;
	    }
	  }, {
	    key: "nearestInputPos",
	    value: function nearestInputPos(cursorPos) {
	      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DIRECTION.NONE;
	      if (!this._blocks.length) return 0;
	      var cursor = new PatternCursor(this, cursorPos);
	      if (direction === DIRECTION.NONE) {
	        if (cursor.pushRightBeforeInput()) return cursor.pos;
	        cursor.popState();
	        if (cursor.pushLeftBeforeInput()) return cursor.pos;
	        return this.value.length;
	      }
	      if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {
	        if (direction === DIRECTION.LEFT) {
	          cursor.pushRightBeforeFilled();
	          if (cursor.ok && cursor.pos === cursorPos) return cursorPos;
	          cursor.popState();
	        }
	        cursor.pushLeftBeforeInput();
	        cursor.pushLeftBeforeRequired();
	        cursor.pushLeftBeforeFilled();
	        if (direction === DIRECTION.LEFT) {
	          cursor.pushRightBeforeInput();
	          cursor.pushRightBeforeRequired();
	          if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;
	          cursor.popState();
	          if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;
	          cursor.popState();
	        }
	        if (cursor.ok) return cursor.pos;
	        if (direction === DIRECTION.FORCE_LEFT) return 0;
	        cursor.popState();
	        if (cursor.ok) return cursor.pos;
	        cursor.popState();
	        if (cursor.ok) return cursor.pos;
	        return 0;
	      }
	      if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {
	        cursor.pushRightBeforeInput();
	        cursor.pushRightBeforeRequired();
	        if (cursor.pushRightBeforeFilled()) return cursor.pos;
	        if (direction === DIRECTION.FORCE_RIGHT) return this.value.length;
	        cursor.popState();
	        if (cursor.ok) return cursor.pos;
	        cursor.popState();
	        if (cursor.ok) return cursor.pos;
	        return this.nearestInputPos(cursorPos, DIRECTION.LEFT);
	      }
	      return cursorPos;
	    }
	  }, {
	    key: "maskedBlock",
	    value: function maskedBlock(name) {
	      return this.maskedBlocks(name)[0];
	    }
	  }, {
	    key: "maskedBlocks",
	    value: function maskedBlocks(name) {
	      var _this4 = this;
	      var indices = this._maskedBlocks[name];
	      if (!indices) return [];
	      return indices.map(function (gi) {
	        return _this4._blocks[gi];
	      });
	    }
	  }]);
	  return MaskedPattern;
	}(Masked);
	MaskedPattern.DEFAULTS = {
	  lazy: true,
	  placeholderChar: '_'
	};
	MaskedPattern.STOP_CHAR = '`';
	MaskedPattern.ESCAPE_CHAR = '\\';
	MaskedPattern.InputDefinition = PatternInputDefinition;
	MaskedPattern.FixedDefinition = PatternFixedDefinition;
	IMask.MaskedPattern = MaskedPattern;

	var MaskedRange = function (_MaskedPattern) {
	  _inherits(MaskedRange, _MaskedPattern);
	  var _super = _createSuper(MaskedRange);
	  function MaskedRange() {
	    _classCallCheck(this, MaskedRange);
	    return _super.apply(this, arguments);
	  }
	  _createClass(MaskedRange, [{
	    key: "_matchFrom",
	    get:
	    function get() {
	      return this.maxLength - String(this.from).length;
	    }
	  }, {
	    key: "_update",
	    value: function _update(opts) {
	      opts = Object.assign({
	        to: this.to || 0,
	        from: this.from || 0,
	        maxLength: this.maxLength || 0
	      }, opts);
	      var maxLength = String(opts.to).length;
	      if (opts.maxLength != null) maxLength = Math.max(maxLength, opts.maxLength);
	      opts.maxLength = maxLength;
	      var fromStr = String(opts.from).padStart(maxLength, '0');
	      var toStr = String(opts.to).padStart(maxLength, '0');
	      var sameCharsCount = 0;
	      while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) {
	        ++sameCharsCount;
	      }
	      opts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\0') + '0'.repeat(maxLength - sameCharsCount);
	      _get(_getPrototypeOf(MaskedRange.prototype), "_update", this).call(this, opts);
	    }
	  }, {
	    key: "isComplete",
	    get: function get() {
	      return _get(_getPrototypeOf(MaskedRange.prototype), "isComplete", this) && Boolean(this.value);
	    }
	  }, {
	    key: "boundaries",
	    value: function boundaries(str) {
	      var minstr = '';
	      var maxstr = '';
	      var _ref = str.match(/^(\D*)(\d*)(\D*)/) || [],
	          _ref2 = _slicedToArray(_ref, 3),
	          placeholder = _ref2[1],
	          num = _ref2[2];
	      if (num) {
	        minstr = '0'.repeat(placeholder.length) + num;
	        maxstr = '9'.repeat(placeholder.length) + num;
	      }
	      minstr = minstr.padEnd(this.maxLength, '0');
	      maxstr = maxstr.padEnd(this.maxLength, '9');
	      return [minstr, maxstr];
	    }
	  }, {
	    key: "doPrepare",
	    value: function doPrepare(ch) {
	      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var details;
	      var _normalizePrepare = normalizePrepare(_get(_getPrototypeOf(MaskedRange.prototype), "doPrepare", this).call(this, ch.replace(/\D/g, ''), flags));
	      var _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2);
	      ch = _normalizePrepare2[0];
	      details = _normalizePrepare2[1];
	      if (!this.autofix || !ch) return ch;
	      var fromStr = String(this.from).padStart(this.maxLength, '0');
	      var toStr = String(this.to).padStart(this.maxLength, '0');
	      var nextVal = this.value + ch;
	      if (nextVal.length > this.maxLength) return '';
	      var _this$boundaries = this.boundaries(nextVal),
	          _this$boundaries2 = _slicedToArray(_this$boundaries, 2),
	          minstr = _this$boundaries2[0],
	          maxstr = _this$boundaries2[1];
	      if (Number(maxstr) < this.from) return fromStr[nextVal.length - 1];
	      if (Number(minstr) > this.to) {
	        if (this.autofix === 'pad' && nextVal.length < this.maxLength) {
	          return ['', details.aggregate(this.append(fromStr[nextVal.length - 1] + ch, flags))];
	        }
	        return toStr[nextVal.length - 1];
	      }
	      return ch;
	    }
	  }, {
	    key: "doValidate",
	    value: function doValidate() {
	      var _get2;
	      var str = this.value;
	      var firstNonZero = str.search(/[^0]/);
	      if (firstNonZero === -1 && str.length <= this._matchFrom) return true;
	      var _this$boundaries3 = this.boundaries(str),
	          _this$boundaries4 = _slicedToArray(_this$boundaries3, 2),
	          minstr = _this$boundaries4[0],
	          maxstr = _this$boundaries4[1];
	      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	      return this.from <= Number(maxstr) && Number(minstr) <= this.to && (_get2 = _get(_getPrototypeOf(MaskedRange.prototype), "doValidate", this)).call.apply(_get2, [this].concat(args));
	    }
	  }]);
	  return MaskedRange;
	}(MaskedPattern);
	IMask.MaskedRange = MaskedRange;

	var MaskedDate = function (_MaskedPattern) {
	  _inherits(MaskedDate, _MaskedPattern);
	  var _super = _createSuper(MaskedDate);
	  function MaskedDate(opts) {
	    _classCallCheck(this, MaskedDate);
	    return _super.call(this, Object.assign({}, MaskedDate.DEFAULTS, opts));
	  }
	  _createClass(MaskedDate, [{
	    key: "_update",
	    value: function _update(opts) {
	      if (opts.mask === Date) delete opts.mask;
	      if (opts.pattern) opts.mask = opts.pattern;
	      var blocks = opts.blocks;
	      opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());
	      if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();
	      if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();
	      if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to) {
	        opts.blocks.m.from = opts.min.getMonth() + 1;
	        opts.blocks.m.to = opts.max.getMonth() + 1;
	        if (opts.blocks.m.from === opts.blocks.m.to) {
	          opts.blocks.d.from = opts.min.getDate();
	          opts.blocks.d.to = opts.max.getDate();
	        }
	      }
	      Object.assign(opts.blocks, this.blocks, blocks);
	      Object.keys(opts.blocks).forEach(function (bk) {
	        var b = opts.blocks[bk];
	        if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;
	      });
	      _get(_getPrototypeOf(MaskedDate.prototype), "_update", this).call(this, opts);
	    }
	  }, {
	    key: "doValidate",
	    value: function doValidate() {
	      var _get2;
	      var date = this.date;
	      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	      return (_get2 = _get(_getPrototypeOf(MaskedDate.prototype), "doValidate", this)).call.apply(_get2, [this].concat(args)) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));
	    }
	  }, {
	    key: "isDateExist",
	    value: function isDateExist(str) {
	      return this.format(this.parse(str, this), this).indexOf(str) >= 0;
	    }
	  }, {
	    key: "date",
	    get: function get() {
	      return this.typedValue;
	    },
	    set: function set(date) {
	      this.typedValue = date;
	    }
	  }, {
	    key: "typedValue",
	    get: function get() {
	      return this.isComplete ? _get(_getPrototypeOf(MaskedDate.prototype), "typedValue", this) : null;
	    },
	    set: function set(value) {
	      _set(_getPrototypeOf(MaskedDate.prototype), "typedValue", value, this, true);
	    }
	  }, {
	    key: "maskEquals",
	    value: function maskEquals(mask) {
	      return mask === Date || _get(_getPrototypeOf(MaskedDate.prototype), "maskEquals", this).call(this, mask);
	    }
	  }]);
	  return MaskedDate;
	}(MaskedPattern);
	MaskedDate.DEFAULTS = {
	  pattern: 'd{.}`m{.}`Y',
	  format: function format(date) {
	    if (!date) return '';
	    var day = String(date.getDate()).padStart(2, '0');
	    var month = String(date.getMonth() + 1).padStart(2, '0');
	    var year = date.getFullYear();
	    return [day, month, year].join('.');
	  },
	  parse: function parse(str) {
	    var _str$split = str.split('.'),
	        _str$split2 = _slicedToArray(_str$split, 3),
	        day = _str$split2[0],
	        month = _str$split2[1],
	        year = _str$split2[2];
	    return new Date(year, month - 1, day);
	  }
	};
	MaskedDate.GET_DEFAULT_BLOCKS = function () {
	  return {
	    d: {
	      mask: MaskedRange,
	      from: 1,
	      to: 31,
	      maxLength: 2
	    },
	    m: {
	      mask: MaskedRange,
	      from: 1,
	      to: 12,
	      maxLength: 2
	    },
	    Y: {
	      mask: MaskedRange,
	      from: 1900,
	      to: 9999
	    }
	  };
	};
	IMask.MaskedDate = MaskedDate;

	var MaskElement = function () {
	  function MaskElement() {
	    _classCallCheck(this, MaskElement);
	  }
	  _createClass(MaskElement, [{
	    key: "selectionStart",
	    get:
	    function get() {
	      var start;
	      try {
	        start = this._unsafeSelectionStart;
	      } catch (e) {}
	      return start != null ? start : this.value.length;
	    }
	  }, {
	    key: "selectionEnd",
	    get: function get() {
	      var end;
	      try {
	        end = this._unsafeSelectionEnd;
	      } catch (e) {}
	      return end != null ? end : this.value.length;
	    }
	  }, {
	    key: "select",
	    value: function select(start, end) {
	      if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;
	      try {
	        this._unsafeSelect(start, end);
	      } catch (e) {}
	    }
	  }, {
	    key: "_unsafeSelect",
	    value: function _unsafeSelect(start, end) {}
	  }, {
	    key: "isActive",
	    get: function get() {
	      return false;
	    }
	  }, {
	    key: "bindEvents",
	    value: function bindEvents(handlers) {}
	  }, {
	    key: "unbindEvents",
	    value: function unbindEvents() {}
	  }]);
	  return MaskElement;
	}();
	IMask.MaskElement = MaskElement;

	var HTMLMaskElement = function (_MaskElement) {
	  _inherits(HTMLMaskElement, _MaskElement);
	  var _super = _createSuper(HTMLMaskElement);
	  function HTMLMaskElement(input) {
	    var _this;
	    _classCallCheck(this, HTMLMaskElement);
	    _this = _super.call(this);
	    _this.input = input;
	    _this._handlers = {};
	    return _this;
	  }
	  _createClass(HTMLMaskElement, [{
	    key: "rootElement",
	    get: function get() {
	      var _this$input$getRootNo, _this$input$getRootNo2, _this$input;
	      return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) === null || _this$input$getRootNo2 === void 0 ? void 0 : _this$input$getRootNo2.call(_this$input)) !== null && _this$input$getRootNo !== void 0 ? _this$input$getRootNo : document;
	    }
	  }, {
	    key: "isActive",
	    get: function get() {
	      return this.input === this.rootElement.activeElement;
	    }
	  }, {
	    key: "_unsafeSelectionStart",
	    get: function get() {
	      return this.input.selectionStart;
	    }
	  }, {
	    key: "_unsafeSelectionEnd",
	    get: function get() {
	      return this.input.selectionEnd;
	    }
	  }, {
	    key: "_unsafeSelect",
	    value: function _unsafeSelect(start, end) {
	      this.input.setSelectionRange(start, end);
	    }
	  }, {
	    key: "value",
	    get: function get() {
	      return this.input.value;
	    },
	    set: function set(value) {
	      this.input.value = value;
	    }
	  }, {
	    key: "bindEvents",
	    value: function bindEvents(handlers) {
	      var _this2 = this;
	      Object.keys(handlers).forEach(function (event) {
	        return _this2._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]);
	      });
	    }
	  }, {
	    key: "unbindEvents",
	    value: function unbindEvents() {
	      var _this3 = this;
	      Object.keys(this._handlers).forEach(function (event) {
	        return _this3._toggleEventHandler(event);
	      });
	    }
	  }, {
	    key: "_toggleEventHandler",
	    value: function _toggleEventHandler(event, handler) {
	      if (this._handlers[event]) {
	        this.input.removeEventListener(event, this._handlers[event]);
	        delete this._handlers[event];
	      }
	      if (handler) {
	        this.input.addEventListener(event, handler);
	        this._handlers[event] = handler;
	      }
	    }
	  }]);
	  return HTMLMaskElement;
	}(MaskElement);
	HTMLMaskElement.EVENTS_MAP = {
	  selectionChange: 'keydown',
	  input: 'input',
	  drop: 'drop',
	  click: 'click',
	  focus: 'focus',
	  commit: 'blur'
	};
	IMask.HTMLMaskElement = HTMLMaskElement;

	var HTMLContenteditableMaskElement = function (_HTMLMaskElement) {
	  _inherits(HTMLContenteditableMaskElement, _HTMLMaskElement);
	  var _super = _createSuper(HTMLContenteditableMaskElement);
	  function HTMLContenteditableMaskElement() {
	    _classCallCheck(this, HTMLContenteditableMaskElement);
	    return _super.apply(this, arguments);
	  }
	  _createClass(HTMLContenteditableMaskElement, [{
	    key: "_unsafeSelectionStart",
	    get:
	    function get() {
	      var root = this.rootElement;
	      var selection = root.getSelection && root.getSelection();
	      var anchorOffset = selection && selection.anchorOffset;
	      var focusOffset = selection && selection.focusOffset;
	      if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {
	        return anchorOffset;
	      }
	      return focusOffset;
	    }
	  }, {
	    key: "_unsafeSelectionEnd",
	    get: function get() {
	      var root = this.rootElement;
	      var selection = root.getSelection && root.getSelection();
	      var anchorOffset = selection && selection.anchorOffset;
	      var focusOffset = selection && selection.focusOffset;
	      if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {
	        return anchorOffset;
	      }
	      return focusOffset;
	    }
	  }, {
	    key: "_unsafeSelect",
	    value: function _unsafeSelect(start, end) {
	      if (!this.rootElement.createRange) return;
	      var range = this.rootElement.createRange();
	      range.setStart(this.input.firstChild || this.input, start);
	      range.setEnd(this.input.lastChild || this.input, end);
	      var root = this.rootElement;
	      var selection = root.getSelection && root.getSelection();
	      if (selection) {
	        selection.removeAllRanges();
	        selection.addRange(range);
	      }
	    }
	  }, {
	    key: "value",
	    get: function get() {
	      return this.input.textContent;
	    },
	    set: function set(value) {
	      this.input.textContent = value;
	    }
	  }]);
	  return HTMLContenteditableMaskElement;
	}(HTMLMaskElement);
	IMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;

	var _excluded$1 = ["mask"];
	var InputMask = function () {
	  function InputMask(el, opts) {
	    _classCallCheck(this, InputMask);
	    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLMaskElement(el);
	    this.masked = createMask(opts);
	    this._listeners = {};
	    this._value = '';
	    this._unmaskedValue = '';
	    this._saveSelection = this._saveSelection.bind(this);
	    this._onInput = this._onInput.bind(this);
	    this._onChange = this._onChange.bind(this);
	    this._onDrop = this._onDrop.bind(this);
	    this._onFocus = this._onFocus.bind(this);
	    this._onClick = this._onClick.bind(this);
	    this.alignCursor = this.alignCursor.bind(this);
	    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);
	    this._bindEvents();
	    this.updateValue();
	    this._onChange();
	  }
	  _createClass(InputMask, [{
	    key: "mask",
	    get: function get() {
	      return this.masked.mask;
	    },
	    set: function set(mask) {
	      if (this.maskEquals(mask)) return;
	      if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {
	        this.masked.updateOptions({
	          mask: mask
	        });
	        return;
	      }
	      var masked = createMask({
	        mask: mask
	      });
	      masked.unmaskedValue = this.masked.unmaskedValue;
	      this.masked = masked;
	    }
	  }, {
	    key: "maskEquals",
	    value: function maskEquals(mask) {
	      var _this$masked;
	      return mask == null || ((_this$masked = this.masked) === null || _this$masked === void 0 ? void 0 : _this$masked.maskEquals(mask));
	    }
	  }, {
	    key: "value",
	    get: function get() {
	      return this._value;
	    },
	    set: function set(str) {
	      this.masked.value = str;
	      this.updateControl();
	      this.alignCursor();
	    }
	  }, {
	    key: "unmaskedValue",
	    get: function get() {
	      return this._unmaskedValue;
	    },
	    set: function set(str) {
	      this.masked.unmaskedValue = str;
	      this.updateControl();
	      this.alignCursor();
	    }
	  }, {
	    key: "typedValue",
	    get: function get() {
	      return this.masked.typedValue;
	    },
	    set: function set(val) {
	      this.masked.typedValue = val;
	      this.updateControl();
	      this.alignCursor();
	    }
	  }, {
	    key: "_bindEvents",
	    value: function _bindEvents() {
	      this.el.bindEvents({
	        selectionChange: this._saveSelection,
	        input: this._onInput,
	        drop: this._onDrop,
	        click: this._onClick,
	        focus: this._onFocus,
	        commit: this._onChange
	      });
	    }
	  }, {
	    key: "_unbindEvents",
	    value: function _unbindEvents() {
	      if (this.el) this.el.unbindEvents();
	    }
	  }, {
	    key: "_fireEvent",
	    value: function _fireEvent(ev) {
	      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	      var listeners = this._listeners[ev];
	      if (!listeners) return;
	      listeners.forEach(function (l) {
	        return l.apply(void 0, args);
	      });
	    }
	  }, {
	    key: "selectionStart",
	    get: function get() {
	      return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;
	    }
	  }, {
	    key: "cursorPos",
	    get: function get() {
	      return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;
	    },
	    set: function set(pos) {
	      if (!this.el || !this.el.isActive) return;
	      this.el.select(pos, pos);
	      this._saveSelection();
	    }
	  }, {
	    key: "_saveSelection",
	    value: function
	    _saveSelection() {
	      if (this.value !== this.el.value) {
	        console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.');
	      }
	      this._selection = {
	        start: this.selectionStart,
	        end: this.cursorPos
	      };
	    }
	  }, {
	    key: "updateValue",
	    value: function updateValue() {
	      this.masked.value = this.el.value;
	      this._value = this.masked.value;
	    }
	  }, {
	    key: "updateControl",
	    value: function updateControl() {
	      var newUnmaskedValue = this.masked.unmaskedValue;
	      var newValue = this.masked.value;
	      var isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;
	      this._unmaskedValue = newUnmaskedValue;
	      this._value = newValue;
	      if (this.el.value !== newValue) this.el.value = newValue;
	      if (isChanged) this._fireChangeEvents();
	    }
	  }, {
	    key: "updateOptions",
	    value: function updateOptions(opts) {
	      var mask = opts.mask,
	          restOpts = _objectWithoutProperties(opts, _excluded$1);
	      var updateMask = !this.maskEquals(mask);
	      var updateOpts = !objectIncludes(this.masked, restOpts);
	      if (updateMask) this.mask = mask;
	      if (updateOpts) this.masked.updateOptions(restOpts);
	      if (updateMask || updateOpts) this.updateControl();
	    }
	  }, {
	    key: "updateCursor",
	    value: function updateCursor(cursorPos) {
	      if (cursorPos == null) return;
	      this.cursorPos = cursorPos;
	      this._delayUpdateCursor(cursorPos);
	    }
	  }, {
	    key: "_delayUpdateCursor",
	    value: function _delayUpdateCursor(cursorPos) {
	      var _this = this;
	      this._abortUpdateCursor();
	      this._changingCursorPos = cursorPos;
	      this._cursorChanging = setTimeout(function () {
	        if (!_this.el) return;
	        _this.cursorPos = _this._changingCursorPos;
	        _this._abortUpdateCursor();
	      }, 10);
	    }
	  }, {
	    key: "_fireChangeEvents",
	    value: function _fireChangeEvents() {
	      this._fireEvent('accept', this._inputEvent);
	      if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);
	    }
	  }, {
	    key: "_abortUpdateCursor",
	    value: function _abortUpdateCursor() {
	      if (this._cursorChanging) {
	        clearTimeout(this._cursorChanging);
	        delete this._cursorChanging;
	      }
	    }
	  }, {
	    key: "alignCursor",
	    value: function alignCursor() {
	      this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));
	    }
	  }, {
	    key: "alignCursorFriendly",
	    value: function alignCursorFriendly() {
	      if (this.selectionStart !== this.cursorPos) return;
	      this.alignCursor();
	    }
	  }, {
	    key: "on",
	    value: function on(ev, handler) {
	      if (!this._listeners[ev]) this._listeners[ev] = [];
	      this._listeners[ev].push(handler);
	      return this;
	    }
	  }, {
	    key: "off",
	    value: function off(ev, handler) {
	      if (!this._listeners[ev]) return this;
	      if (!handler) {
	        delete this._listeners[ev];
	        return this;
	      }
	      var hIndex = this._listeners[ev].indexOf(handler);
	      if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);
	      return this;
	    }
	  }, {
	    key: "_onInput",
	    value: function _onInput(e) {
	      this._inputEvent = e;
	      this._abortUpdateCursor();
	      if (!this._selection) return this.updateValue();
	      var details = new ActionDetails(
	      this.el.value, this.cursorPos,
	      this.value, this._selection);
	      var oldRawValue = this.masked.rawInputValue;
	      var offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection).offset;
	      var removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;
	      var cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);
	      if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);
	      this.updateControl();
	      this.updateCursor(cursorPos);
	      delete this._inputEvent;
	    }
	  }, {
	    key: "_onChange",
	    value: function _onChange() {
	      if (this.value !== this.el.value) {
	        this.updateValue();
	      }
	      this.masked.doCommit();
	      this.updateControl();
	      this._saveSelection();
	    }
	  }, {
	    key: "_onDrop",
	    value: function _onDrop(ev) {
	      ev.preventDefault();
	      ev.stopPropagation();
	    }
	  }, {
	    key: "_onFocus",
	    value: function _onFocus(ev) {
	      this.alignCursorFriendly();
	    }
	  }, {
	    key: "_onClick",
	    value: function _onClick(ev) {
	      this.alignCursorFriendly();
	    }
	  }, {
	    key: "destroy",
	    value: function destroy() {
	      this._unbindEvents();
	      this._listeners.length = 0;
	      delete this.el;
	    }
	  }]);
	  return InputMask;
	}();
	IMask.InputMask = InputMask;

	var MaskedEnum = function (_MaskedPattern) {
	  _inherits(MaskedEnum, _MaskedPattern);
	  var _super = _createSuper(MaskedEnum);
	  function MaskedEnum() {
	    _classCallCheck(this, MaskedEnum);
	    return _super.apply(this, arguments);
	  }
	  _createClass(MaskedEnum, [{
	    key: "_update",
	    value:
	    function _update(opts) {
	      if (opts.enum) opts.mask = '*'.repeat(opts.enum[0].length);
	      _get(_getPrototypeOf(MaskedEnum.prototype), "_update", this).call(this, opts);
	    }
	  }, {
	    key: "doValidate",
	    value: function doValidate() {
	      var _this = this,
	          _get2;
	      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	      return this.enum.some(function (e) {
	        return e.indexOf(_this.unmaskedValue) >= 0;
	      }) && (_get2 = _get(_getPrototypeOf(MaskedEnum.prototype), "doValidate", this)).call.apply(_get2, [this].concat(args));
	    }
	  }]);
	  return MaskedEnum;
	}(MaskedPattern);
	IMask.MaskedEnum = MaskedEnum;

	var MaskedNumber = function (_Masked) {
	  _inherits(MaskedNumber, _Masked);
	  var _super = _createSuper(MaskedNumber);
	  function MaskedNumber(opts) {
	    _classCallCheck(this, MaskedNumber);
	    return _super.call(this, Object.assign({}, MaskedNumber.DEFAULTS, opts));
	  }
	  _createClass(MaskedNumber, [{
	    key: "_update",
	    value: function _update(opts) {
	      _get(_getPrototypeOf(MaskedNumber.prototype), "_update", this).call(this, opts);
	      this._updateRegExps();
	    }
	  }, {
	    key: "_updateRegExps",
	    value: function _updateRegExps() {
	      var start = '^' + (this.allowNegative ? '[+|\\-]?' : '');
	      var midInput = '(0|([1-9]+\\d*))?';
	      var mid = '\\d*';
	      var end = (this.scale ? '(' + escapeRegExp(this.radix) + '\\d{0,' + this.scale + '})?' : '') + '$';
	      this._numberRegExpInput = new RegExp(start + midInput + end);
	      this._numberRegExp = new RegExp(start + mid + end);
	      this._mapToRadixRegExp = new RegExp('[' + this.mapToRadix.map(escapeRegExp).join('') + ']', 'g');
	      this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');
	    }
	  }, {
	    key: "_removeThousandsSeparators",
	    value: function _removeThousandsSeparators(value) {
	      return value.replace(this._thousandsSeparatorRegExp, '');
	    }
	  }, {
	    key: "_insertThousandsSeparators",
	    value: function _insertThousandsSeparators(value) {
	      var parts = value.split(this.radix);
	      parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, this.thousandsSeparator);
	      return parts.join(this.radix);
	    }
	  }, {
	    key: "doPrepare",
	    value: function doPrepare(ch) {
	      var _get2;
	      ch = ch.replace(this._mapToRadixRegExp, this.radix);
	      var noSepCh = this._removeThousandsSeparators(ch);
	      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	      var _normalizePrepare = normalizePrepare((_get2 = _get(_getPrototypeOf(MaskedNumber.prototype), "doPrepare", this)).call.apply(_get2, [this, noSepCh].concat(args))),
	          _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2),
	          prepCh = _normalizePrepare2[0],
	          details = _normalizePrepare2[1];
	      if (ch && !noSepCh) details.skip = true;
	      return [prepCh, details];
	    }
	  }, {
	    key: "_separatorsCount",
	    value: function _separatorsCount(to) {
	      var extendOnSeparators = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	      var count = 0;
	      for (var pos = 0; pos < to; ++pos) {
	        if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {
	          ++count;
	          if (extendOnSeparators) to += this.thousandsSeparator.length;
	        }
	      }
	      return count;
	    }
	  }, {
	    key: "_separatorsCountFromSlice",
	    value: function _separatorsCountFromSlice() {
	      var slice = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._value;
	      return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);
	    }
	  }, {
	    key: "extractInput",
	    value: function extractInput() {
	      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;
	      var flags = arguments.length > 2 ? arguments[2] : undefined;
	      var _this$_adjustRangeWit = this._adjustRangeWithSeparators(fromPos, toPos);
	      var _this$_adjustRangeWit2 = _slicedToArray(_this$_adjustRangeWit, 2);
	      fromPos = _this$_adjustRangeWit2[0];
	      toPos = _this$_adjustRangeWit2[1];
	      return this._removeThousandsSeparators(_get(_getPrototypeOf(MaskedNumber.prototype), "extractInput", this).call(this, fromPos, toPos, flags));
	    }
	  }, {
	    key: "_appendCharRaw",
	    value: function _appendCharRaw(ch) {
	      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      if (!this.thousandsSeparator) return _get(_getPrototypeOf(MaskedNumber.prototype), "_appendCharRaw", this).call(this, ch, flags);
	      var prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;
	      var prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);
	      this._value = this._removeThousandsSeparators(this.value);
	      var appendDetails = _get(_getPrototypeOf(MaskedNumber.prototype), "_appendCharRaw", this).call(this, ch, flags);
	      this._value = this._insertThousandsSeparators(this._value);
	      var beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;
	      var beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);
	      appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;
	      appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;
	      return appendDetails;
	    }
	  }, {
	    key: "_findSeparatorAround",
	    value: function _findSeparatorAround(pos) {
	      if (this.thousandsSeparator) {
	        var searchFrom = pos - this.thousandsSeparator.length + 1;
	        var separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);
	        if (separatorPos <= pos) return separatorPos;
	      }
	      return -1;
	    }
	  }, {
	    key: "_adjustRangeWithSeparators",
	    value: function _adjustRangeWithSeparators(from, to) {
	      var separatorAroundFromPos = this._findSeparatorAround(from);
	      if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;
	      var separatorAroundToPos = this._findSeparatorAround(to);
	      if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;
	      return [from, to];
	    }
	  }, {
	    key: "remove",
	    value: function remove() {
	      var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	      var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;
	      var _this$_adjustRangeWit3 = this._adjustRangeWithSeparators(fromPos, toPos);
	      var _this$_adjustRangeWit4 = _slicedToArray(_this$_adjustRangeWit3, 2);
	      fromPos = _this$_adjustRangeWit4[0];
	      toPos = _this$_adjustRangeWit4[1];
	      var valueBeforePos = this.value.slice(0, fromPos);
	      var valueAfterPos = this.value.slice(toPos);
	      var prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);
	      this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));
	      var beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);
	      return new ChangeDetails({
	        tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length
	      });
	    }
	  }, {
	    key: "nearestInputPos",
	    value: function nearestInputPos(cursorPos, direction) {
	      if (!this.thousandsSeparator) return cursorPos;
	      switch (direction) {
	        case DIRECTION.NONE:
	        case DIRECTION.LEFT:
	        case DIRECTION.FORCE_LEFT:
	          {
	            var separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);
	            if (separatorAtLeftPos >= 0) {
	              var separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;
	              if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) {
	                return separatorAtLeftPos;
	              }
	            }
	            break;
	          }
	        case DIRECTION.RIGHT:
	        case DIRECTION.FORCE_RIGHT:
	          {
	            var separatorAtRightPos = this._findSeparatorAround(cursorPos);
	            if (separatorAtRightPos >= 0) {
	              return separatorAtRightPos + this.thousandsSeparator.length;
	            }
	          }
	      }
	      return cursorPos;
	    }
	  }, {
	    key: "doValidate",
	    value: function doValidate(flags) {
	      var regexp = flags.input ? this._numberRegExpInput : this._numberRegExp;
	      var valid = regexp.test(this._removeThousandsSeparators(this.value));
	      if (valid) {
	        var number = this.number;
	        valid = valid && !isNaN(number) && (
	        this.min == null || this.min >= 0 || this.min <= this.number) && (
	        this.max == null || this.max <= 0 || this.number <= this.max);
	      }
	      return valid && _get(_getPrototypeOf(MaskedNumber.prototype), "doValidate", this).call(this, flags);
	    }
	  }, {
	    key: "doCommit",
	    value: function doCommit() {
	      if (this.value) {
	        var number = this.number;
	        var validnum = number;
	        if (this.min != null) validnum = Math.max(validnum, this.min);
	        if (this.max != null) validnum = Math.min(validnum, this.max);
	        if (validnum !== number) this.unmaskedValue = String(validnum);
	        var formatted = this.value;
	        if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);
	        if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);
	        this._value = formatted;
	      }
	      _get(_getPrototypeOf(MaskedNumber.prototype), "doCommit", this).call(this);
	    }
	  }, {
	    key: "_normalizeZeros",
	    value: function _normalizeZeros(value) {
	      var parts = this._removeThousandsSeparators(value).split(this.radix);
	      parts[0] = parts[0].replace(/^(\D*)(0*)(\d*)/, function (match, sign, zeros, num) {
	        return sign + num;
	      });
	      if (value.length && !/\d$/.test(parts[0])) parts[0] = parts[0] + '0';
	      if (parts.length > 1) {
	        parts[1] = parts[1].replace(/0*$/, '');
	        if (!parts[1].length) parts.length = 1;
	      }
	      return this._insertThousandsSeparators(parts.join(this.radix));
	    }
	  }, {
	    key: "_padFractionalZeros",
	    value: function _padFractionalZeros(value) {
	      if (!value) return value;
	      var parts = value.split(this.radix);
	      if (parts.length < 2) parts.push('');
	      parts[1] = parts[1].padEnd(this.scale, '0');
	      return parts.join(this.radix);
	    }
	  }, {
	    key: "unmaskedValue",
	    get: function get() {
	      return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, '.');
	    },
	    set: function set(unmaskedValue) {
	      _set(_getPrototypeOf(MaskedNumber.prototype), "unmaskedValue", unmaskedValue.replace('.', this.radix), this, true);
	    }
	  }, {
	    key: "typedValue",
	    get: function get() {
	      return Number(this.unmaskedValue);
	    },
	    set: function set(n) {
	      _set(_getPrototypeOf(MaskedNumber.prototype), "unmaskedValue", String(n), this, true);
	    }
	  }, {
	    key: "number",
	    get: function get() {
	      return this.typedValue;
	    },
	    set: function set(number) {
	      this.typedValue = number;
	    }
	  }, {
	    key: "allowNegative",
	    get: function get() {
	      return this.signed || this.min != null && this.min < 0 || this.max != null && this.max < 0;
	    }
	  }]);
	  return MaskedNumber;
	}(Masked);
	MaskedNumber.DEFAULTS = {
	  radix: ',',
	  thousandsSeparator: '',
	  mapToRadix: ['.'],
	  scale: 2,
	  signed: false,
	  normalizeZeros: true,
	  padFractionalZeros: false
	};
	IMask.MaskedNumber = MaskedNumber;

	var MaskedFunction = function (_Masked) {
	  _inherits(MaskedFunction, _Masked);
	  var _super = _createSuper(MaskedFunction);
	  function MaskedFunction() {
	    _classCallCheck(this, MaskedFunction);
	    return _super.apply(this, arguments);
	  }
	  _createClass(MaskedFunction, [{
	    key: "_update",
	    value:
	    function _update(opts) {
	      if (opts.mask) opts.validate = opts.mask;
	      _get(_getPrototypeOf(MaskedFunction.prototype), "_update", this).call(this, opts);
	    }
	  }]);
	  return MaskedFunction;
	}(Masked);
	IMask.MaskedFunction = MaskedFunction;

	var _excluded = ["compiledMasks", "currentMaskRef", "currentMask"];
	var MaskedDynamic = function (_Masked) {
	  _inherits(MaskedDynamic, _Masked);
	  var _super = _createSuper(MaskedDynamic);
	  function MaskedDynamic(opts) {
	    var _this;
	    _classCallCheck(this, MaskedDynamic);
	    _this = _super.call(this, Object.assign({}, MaskedDynamic.DEFAULTS, opts));
	    _this.currentMask = null;
	    return _this;
	  }
	  _createClass(MaskedDynamic, [{
	    key: "_update",
	    value: function _update(opts) {
	      _get(_getPrototypeOf(MaskedDynamic.prototype), "_update", this).call(this, opts);
	      if ('mask' in opts) {
	        this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(function (m) {
	          return createMask(m);
	        }) : [];
	      }
	    }
	  }, {
	    key: "_appendCharRaw",
	    value: function _appendCharRaw(ch) {
	      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var details = this._applyDispatch(ch, flags);
	      if (this.currentMask) {
	        details.aggregate(this.currentMask._appendChar(ch, flags));
	      }
	      return details;
	    }
	  }, {
	    key: "_applyDispatch",
	    value: function _applyDispatch() {
	      var appended = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;
	      var inputValue = this.rawInputValue;
	      var insertValue = flags.tail && flags._beforeTailState != null ?
	      flags._beforeTailState._rawInputValue : inputValue;
	      var tailValue = inputValue.slice(insertValue.length);
	      var prevMask = this.currentMask;
	      var details = new ChangeDetails();
	      var prevMaskState = prevMask && prevMask.state;
	      this.currentMask = this.doDispatch(appended, Object.assign({}, flags));
	      if (this.currentMask) {
	        if (this.currentMask !== prevMask) {
	          this.currentMask.reset();
	          if (insertValue) {
	            var d = this.currentMask.append(insertValue, {
	              raw: true
	            });
	            details.tailShift = d.inserted.length - prevValueBeforeTail.length;
	          }
	          if (tailValue) {
	            details.tailShift += this.currentMask.append(tailValue, {
	              raw: true,
	              tail: true
	            }).tailShift;
	          }
	        } else {
	          this.currentMask.state = prevMaskState;
	        }
	      }
	      return details;
	    }
	  }, {
	    key: "_appendPlaceholder",
	    value: function _appendPlaceholder() {
	      var details = this._applyDispatch.apply(this, arguments);
	      if (this.currentMask) {
	        details.aggregate(this.currentMask._appendPlaceholder());
	      }
	      return details;
	    }
	  }, {
	    key: "_appendEager",
	    value: function _appendEager() {
	      var details = this._applyDispatch.apply(this, arguments);
	      if (this.currentMask) {
	        details.aggregate(this.currentMask._appendEager());
	      }
	      return details;
	    }
	  }, {
	    key: "doDispatch",
	    value: function doDispatch(appended) {
	      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      return this.dispatch(appended, this, flags);
	    }
	  }, {
	    key: "doValidate",
	    value: function doValidate() {
	      var _get2, _this$currentMask;
	      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	      return (_get2 = _get(_getPrototypeOf(MaskedDynamic.prototype), "doValidate", this)).call.apply(_get2, [this].concat(args)) && (!this.currentMask || (_this$currentMask = this.currentMask).doValidate.apply(_this$currentMask, args));
	    }
	  }, {
	    key: "reset",
	    value: function reset() {
	      var _this$currentMask2;
	      (_this$currentMask2 = this.currentMask) === null || _this$currentMask2 === void 0 ? void 0 : _this$currentMask2.reset();
	      this.compiledMasks.forEach(function (m) {
	        return m.reset();
	      });
	    }
	  }, {
	    key: "value",
	    get: function get() {
	      return this.currentMask ? this.currentMask.value : '';
	    },
	    set: function set(value) {
	      _set(_getPrototypeOf(MaskedDynamic.prototype), "value", value, this, true);
	    }
	  }, {
	    key: "unmaskedValue",
	    get: function get() {
	      return this.currentMask ? this.currentMask.unmaskedValue : '';
	    },
	    set: function set(unmaskedValue) {
	      _set(_getPrototypeOf(MaskedDynamic.prototype), "unmaskedValue", unmaskedValue, this, true);
	    }
	  }, {
	    key: "typedValue",
	    get: function get() {
	      return this.currentMask ? this.currentMask.typedValue : '';
	    }
	    ,
	    set: function set(value) {
	      var unmaskedValue = String(value);
	      if (this.currentMask) {
	        this.currentMask.typedValue = value;
	        unmaskedValue = this.currentMask.unmaskedValue;
	      }
	      this.unmaskedValue = unmaskedValue;
	    }
	  }, {
	    key: "isComplete",
	    get: function get() {
	      var _this$currentMask3;
	      return Boolean((_this$currentMask3 = this.currentMask) === null || _this$currentMask3 === void 0 ? void 0 : _this$currentMask3.isComplete);
	    }
	  }, {
	    key: "isFilled",
	    get: function get() {
	      var _this$currentMask4;
	      return Boolean((_this$currentMask4 = this.currentMask) === null || _this$currentMask4 === void 0 ? void 0 : _this$currentMask4.isFilled);
	    }
	  }, {
	    key: "remove",
	    value: function remove() {
	      var details = new ChangeDetails();
	      if (this.currentMask) {
	        var _this$currentMask5;
	        details.aggregate((_this$currentMask5 = this.currentMask).remove.apply(_this$currentMask5, arguments))
	        .aggregate(this._applyDispatch());
	      }
	      return details;
	    }
	  }, {
	    key: "state",
	    get: function get() {
	      return Object.assign({}, _get(_getPrototypeOf(MaskedDynamic.prototype), "state", this), {
	        _rawInputValue: this.rawInputValue,
	        compiledMasks: this.compiledMasks.map(function (m) {
	          return m.state;
	        }),
	        currentMaskRef: this.currentMask,
	        currentMask: this.currentMask && this.currentMask.state
	      });
	    },
	    set: function set(state) {
	      var compiledMasks = state.compiledMasks,
	          currentMaskRef = state.currentMaskRef,
	          currentMask = state.currentMask,
	          maskedState = _objectWithoutProperties(state, _excluded);
	      this.compiledMasks.forEach(function (m, mi) {
	        return m.state = compiledMasks[mi];
	      });
	      if (currentMaskRef != null) {
	        this.currentMask = currentMaskRef;
	        this.currentMask.state = currentMask;
	      }
	      _set(_getPrototypeOf(MaskedDynamic.prototype), "state", maskedState, this, true);
	    }
	  }, {
	    key: "extractInput",
	    value: function extractInput() {
	      var _this$currentMask6;
	      return this.currentMask ? (_this$currentMask6 = this.currentMask).extractInput.apply(_this$currentMask6, arguments) : '';
	    }
	  }, {
	    key: "extractTail",
	    value: function extractTail() {
	      var _this$currentMask7, _get3;
	      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }
	      return this.currentMask ? (_this$currentMask7 = this.currentMask).extractTail.apply(_this$currentMask7, args) : (_get3 = _get(_getPrototypeOf(MaskedDynamic.prototype), "extractTail", this)).call.apply(_get3, [this].concat(args));
	    }
	  }, {
	    key: "doCommit",
	    value: function doCommit() {
	      if (this.currentMask) this.currentMask.doCommit();
	      _get(_getPrototypeOf(MaskedDynamic.prototype), "doCommit", this).call(this);
	    }
	  }, {
	    key: "nearestInputPos",
	    value: function nearestInputPos() {
	      var _this$currentMask8, _get4;
	      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	        args[_key3] = arguments[_key3];
	      }
	      return this.currentMask ? (_this$currentMask8 = this.currentMask).nearestInputPos.apply(_this$currentMask8, args) : (_get4 = _get(_getPrototypeOf(MaskedDynamic.prototype), "nearestInputPos", this)).call.apply(_get4, [this].concat(args));
	    }
	  }, {
	    key: "overwrite",
	    get: function get() {
	      return this.currentMask ? this.currentMask.overwrite : _get(_getPrototypeOf(MaskedDynamic.prototype), "overwrite", this);
	    },
	    set: function set(overwrite) {
	      console.warn('"overwrite" option is not available in dynamic mask, use this option in siblings');
	    }
	  }, {
	    key: "eager",
	    get: function get() {
	      return this.currentMask ? this.currentMask.eager : _get(_getPrototypeOf(MaskedDynamic.prototype), "eager", this);
	    },
	    set: function set(eager) {
	      console.warn('"eager" option is not available in dynamic mask, use this option in siblings');
	    }
	  }, {
	    key: "maskEquals",
	    value: function maskEquals(mask) {
	      return Array.isArray(mask) && this.compiledMasks.every(function (m, mi) {
	        var _mask$mi;
	        return m.maskEquals((_mask$mi = mask[mi]) === null || _mask$mi === void 0 ? void 0 : _mask$mi.mask);
	      });
	    }
	  }]);
	  return MaskedDynamic;
	}(Masked);
	MaskedDynamic.DEFAULTS = {
	  dispatch: function dispatch(appended, masked, flags) {
	    if (!masked.compiledMasks.length) return;
	    var inputValue = masked.rawInputValue;
	    var inputs = masked.compiledMasks.map(function (m, index) {
	      m.reset();
	      m.append(inputValue, {
	        raw: true
	      });
	      m.append(appended, flags);
	      var weight = m.rawInputValue.length;
	      return {
	        weight: weight,
	        index: index
	      };
	    });
	    inputs.sort(function (i1, i2) {
	      return i2.weight - i1.weight;
	    });
	    return masked.compiledMasks[inputs[0].index];
	  }
	};
	IMask.MaskedDynamic = MaskedDynamic;

	var PIPE_TYPE = {
	  MASKED: 'value',
	  UNMASKED: 'unmaskedValue',
	  TYPED: 'typedValue'
	};
	function createPipe(mask) {
	  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : PIPE_TYPE.MASKED;
	  var to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : PIPE_TYPE.MASKED;
	  var masked = createMask(mask);
	  return function (value) {
	    return masked.runIsolated(function (m) {
	      m[from] = value;
	      return m[to];
	    });
	  };
	}
	function pipe(value) {
	  for (var _len = arguments.length, pipeArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	    pipeArgs[_key - 1] = arguments[_key];
	  }
	  return createPipe.apply(void 0, pipeArgs)(value);
	}
	IMask.PIPE_TYPE = PIPE_TYPE;
	IMask.createPipe = createPipe;
	IMask.pipe = pipe;

	try {
	  globalThis.IMask = IMask;
	} catch (e) {}

	var maskElementList = [].slice.call(document.querySelectorAll('[data-mask]'));
	maskElementList.map(function (maskEl) {
	  return new IMask(maskEl, {
	    mask: maskEl.dataset.mask,
	    lazy: maskEl.dataset['mask-visible'] === 'true'
	  });
	});

	var top = 'top';
	var bottom = 'bottom';
	var right = 'right';
	var left = 'left';
	var auto = 'auto';
	var basePlacements = [top, bottom, right, left];
	var start = 'start';
	var end = 'end';
	var clippingParents = 'clippingParents';
	var viewport = 'viewport';
	var popper = 'popper';
	var reference = 'reference';
	var variationPlacements = basePlacements.reduce(function (acc, placement) {
	  return acc.concat([placement + "-" + start, placement + "-" + end]);
	}, []);
	var placements = [].concat(basePlacements, [auto]).reduce(function (acc, placement) {
	  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
	}, []);
	var beforeRead = 'beforeRead';
	var read = 'read';
	var afterRead = 'afterRead';
	var beforeMain = 'beforeMain';
	var main = 'main';
	var afterMain = 'afterMain';
	var beforeWrite = 'beforeWrite';
	var write = 'write';
	var afterWrite = 'afterWrite';
	var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

	function getNodeName(element) {
	  return element ? (element.nodeName || '').toLowerCase() : null;
	}

	function getWindow(node) {
	  if (node == null) {
	    return window;
	  }
	  if (node.toString() !== '[object Window]') {
	    var ownerDocument = node.ownerDocument;
	    return ownerDocument ? ownerDocument.defaultView || window : window;
	  }
	  return node;
	}

	function isElement$1(node) {
	  var OwnElement = getWindow(node).Element;
	  return node instanceof OwnElement || node instanceof Element;
	}
	function isHTMLElement(node) {
	  var OwnElement = getWindow(node).HTMLElement;
	  return node instanceof OwnElement || node instanceof HTMLElement;
	}
	function isShadowRoot(node) {
	  if (typeof ShadowRoot === 'undefined') {
	    return false;
	  }
	  var OwnElement = getWindow(node).ShadowRoot;
	  return node instanceof OwnElement || node instanceof ShadowRoot;
	}

	function applyStyles(_ref) {
	  var state = _ref.state;
	  Object.keys(state.elements).forEach(function (name) {
	    var style = state.styles[name] || {};
	    var attributes = state.attributes[name] || {};
	    var element = state.elements[name];
	    if (!isHTMLElement(element) || !getNodeName(element)) {
	      return;
	    }
	    Object.assign(element.style, style);
	    Object.keys(attributes).forEach(function (name) {
	      var value = attributes[name];
	      if (value === false) {
	        element.removeAttribute(name);
	      } else {
	        element.setAttribute(name, value === true ? '' : value);
	      }
	    });
	  });
	}
	function effect$2(_ref2) {
	  var state = _ref2.state;
	  var initialStyles = {
	    popper: {
	      position: state.options.strategy,
	      left: '0',
	      top: '0',
	      margin: '0'
	    },
	    arrow: {
	      position: 'absolute'
	    },
	    reference: {}
	  };
	  Object.assign(state.elements.popper.style, initialStyles.popper);
	  state.styles = initialStyles;
	  if (state.elements.arrow) {
	    Object.assign(state.elements.arrow.style, initialStyles.arrow);
	  }
	  return function () {
	    Object.keys(state.elements).forEach(function (name) {
	      var element = state.elements[name];
	      var attributes = state.attributes[name] || {};
	      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
	      var style = styleProperties.reduce(function (style, property) {
	        style[property] = '';
	        return style;
	      }, {});
	      if (!isHTMLElement(element) || !getNodeName(element)) {
	        return;
	      }
	      Object.assign(element.style, style);
	      Object.keys(attributes).forEach(function (attribute) {
	        element.removeAttribute(attribute);
	      });
	    });
	  };
	}
	var applyStyles$1 = {
	  name: 'applyStyles',
	  enabled: true,
	  phase: 'write',
	  fn: applyStyles,
	  effect: effect$2,
	  requires: ['computeStyles']
	};

	function getBasePlacement(placement) {
	  return placement.split('-')[0];
	}

	var max = Math.max;
	var min = Math.min;
	var round = Math.round;

	function getBoundingClientRect(element, includeScale) {
	  if (includeScale === void 0) {
	    includeScale = false;
	  }
	  var rect = element.getBoundingClientRect();
	  var scaleX = 1;
	  var scaleY = 1;
	  if (isHTMLElement(element) && includeScale) {
	    var offsetHeight = element.offsetHeight;
	    var offsetWidth = element.offsetWidth;
	    if (offsetWidth > 0) {
	      scaleX = round(rect.width) / offsetWidth || 1;
	    }
	    if (offsetHeight > 0) {
	      scaleY = round(rect.height) / offsetHeight || 1;
	    }
	  }
	  return {
	    width: rect.width / scaleX,
	    height: rect.height / scaleY,
	    top: rect.top / scaleY,
	    right: rect.right / scaleX,
	    bottom: rect.bottom / scaleY,
	    left: rect.left / scaleX,
	    x: rect.left / scaleX,
	    y: rect.top / scaleY
	  };
	}

	function getLayoutRect(element) {
	  var clientRect = getBoundingClientRect(element);
	  var width = element.offsetWidth;
	  var height = element.offsetHeight;
	  if (Math.abs(clientRect.width - width) <= 1) {
	    width = clientRect.width;
	  }
	  if (Math.abs(clientRect.height - height) <= 1) {
	    height = clientRect.height;
	  }
	  return {
	    x: element.offsetLeft,
	    y: element.offsetTop,
	    width: width,
	    height: height
	  };
	}

	function contains(parent, child) {
	  var rootNode = child.getRootNode && child.getRootNode();
	  if (parent.contains(child)) {
	    return true;
	  }
	  else if (rootNode && isShadowRoot(rootNode)) {
	      var next = child;
	      do {
	        if (next && parent.isSameNode(next)) {
	          return true;
	        }
	        next = next.parentNode || next.host;
	      } while (next);
	    }
	  return false;
	}

	function getComputedStyle$1(element) {
	  return getWindow(element).getComputedStyle(element);
	}

	function isTableElement(element) {
	  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
	}

	function getDocumentElement(element) {
	  return ((isElement$1(element) ? element.ownerDocument :
	  element.document) || window.document).documentElement;
	}

	function getParentNode(element) {
	  if (getNodeName(element) === 'html') {
	    return element;
	  }
	  return (
	    element.assignedSlot ||
	    element.parentNode || (
	    isShadowRoot(element) ? element.host : null) ||
	    getDocumentElement(element)
	  );
	}

	function getTrueOffsetParent(element) {
	  if (!isHTMLElement(element) ||
	  getComputedStyle$1(element).position === 'fixed') {
	    return null;
	  }
	  return element.offsetParent;
	}
	function getContainingBlock(element) {
	  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;
	  var isIE = navigator.userAgent.indexOf('Trident') !== -1;
	  if (isIE && isHTMLElement(element)) {
	    var elementCss = getComputedStyle$1(element);
	    if (elementCss.position === 'fixed') {
	      return null;
	    }
	  }
	  var currentNode = getParentNode(element);
	  if (isShadowRoot(currentNode)) {
	    currentNode = currentNode.host;
	  }
	  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {
	    var css = getComputedStyle$1(currentNode);
	    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
	      return currentNode;
	    } else {
	      currentNode = currentNode.parentNode;
	    }
	  }
	  return null;
	}
	function getOffsetParent(element) {
	  var window = getWindow(element);
	  var offsetParent = getTrueOffsetParent(element);
	  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {
	    offsetParent = getTrueOffsetParent(offsetParent);
	  }
	  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static')) {
	    return window;
	  }
	  return offsetParent || getContainingBlock(element) || window;
	}

	function getMainAxisFromPlacement(placement) {
	  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
	}

	function within(min$1, value, max$1) {
	  return max(min$1, min(value, max$1));
	}
	function withinMaxClamp(min, value, max) {
	  var v = within(min, value, max);
	  return v > max ? max : v;
	}

	function getFreshSideObject() {
	  return {
	    top: 0,
	    right: 0,
	    bottom: 0,
	    left: 0
	  };
	}

	function mergePaddingObject(paddingObject) {
	  return Object.assign({}, getFreshSideObject(), paddingObject);
	}

	function expandToHashMap(value, keys) {
	  return keys.reduce(function (hashMap, key) {
	    hashMap[key] = value;
	    return hashMap;
	  }, {});
	}

	var toPaddingObject = function toPaddingObject(padding, state) {
	  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
	    placement: state.placement
	  })) : padding;
	  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
	};
	function arrow(_ref) {
	  var _state$modifiersData$;
	  var state = _ref.state,
	      name = _ref.name,
	      options = _ref.options;
	  var arrowElement = state.elements.arrow;
	  var popperOffsets = state.modifiersData.popperOffsets;
	  var basePlacement = getBasePlacement(state.placement);
	  var axis = getMainAxisFromPlacement(basePlacement);
	  var isVertical = [left, right].indexOf(basePlacement) >= 0;
	  var len = isVertical ? 'height' : 'width';
	  if (!arrowElement || !popperOffsets) {
	    return;
	  }
	  var paddingObject = toPaddingObject(options.padding, state);
	  var arrowRect = getLayoutRect(arrowElement);
	  var minProp = axis === 'y' ? top : left;
	  var maxProp = axis === 'y' ? bottom : right;
	  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
	  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
	  var arrowOffsetParent = getOffsetParent(arrowElement);
	  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
	  var centerToReference = endDiff / 2 - startDiff / 2;
	  var min = paddingObject[minProp];
	  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
	  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
	  var offset = within(min, center, max);
	  var axisProp = axis;
	  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
	}
	function effect$1(_ref2) {
	  var state = _ref2.state,
	      options = _ref2.options;
	  var _options$element = options.element,
	      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;
	  if (arrowElement == null) {
	    return;
	  }
	  if (typeof arrowElement === 'string') {
	    arrowElement = state.elements.popper.querySelector(arrowElement);
	    if (!arrowElement) {
	      return;
	    }
	  }
	  if (!contains(state.elements.popper, arrowElement)) {
	    return;
	  }
	  state.elements.arrow = arrowElement;
	}
	var arrow$1 = {
	  name: 'arrow',
	  enabled: true,
	  phase: 'main',
	  fn: arrow,
	  effect: effect$1,
	  requires: ['popperOffsets'],
	  requiresIfExists: ['preventOverflow']
	};

	function getVariation(placement) {
	  return placement.split('-')[1];
	}

	var unsetSides = {
	  top: 'auto',
	  right: 'auto',
	  bottom: 'auto',
	  left: 'auto'
	};
	function roundOffsetsByDPR(_ref) {
	  var x = _ref.x,
	      y = _ref.y;
	  var win = window;
	  var dpr = win.devicePixelRatio || 1;
	  return {
	    x: round(x * dpr) / dpr || 0,
	    y: round(y * dpr) / dpr || 0
	  };
	}
	function mapToStyles(_ref2) {
	  var _Object$assign2;
	  var popper = _ref2.popper,
	      popperRect = _ref2.popperRect,
	      placement = _ref2.placement,
	      variation = _ref2.variation,
	      offsets = _ref2.offsets,
	      position = _ref2.position,
	      gpuAcceleration = _ref2.gpuAcceleration,
	      adaptive = _ref2.adaptive,
	      roundOffsets = _ref2.roundOffsets,
	      isFixed = _ref2.isFixed;
	  var _offsets$x = offsets.x,
	      x = _offsets$x === void 0 ? 0 : _offsets$x,
	      _offsets$y = offsets.y,
	      y = _offsets$y === void 0 ? 0 : _offsets$y;
	  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
	    x: x,
	    y: y
	  }) : {
	    x: x,
	    y: y
	  };
	  x = _ref3.x;
	  y = _ref3.y;
	  var hasX = offsets.hasOwnProperty('x');
	  var hasY = offsets.hasOwnProperty('y');
	  var sideX = left;
	  var sideY = top;
	  var win = window;
	  if (adaptive) {
	    var offsetParent = getOffsetParent(popper);
	    var heightProp = 'clientHeight';
	    var widthProp = 'clientWidth';
	    if (offsetParent === getWindow(popper)) {
	      offsetParent = getDocumentElement(popper);
	      if (getComputedStyle$1(offsetParent).position !== 'static' && position === 'absolute') {
	        heightProp = 'scrollHeight';
	        widthProp = 'scrollWidth';
	      }
	    }
	    offsetParent = offsetParent;
	    if (placement === top || (placement === left || placement === right) && variation === end) {
	      sideY = bottom;
	      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height :
	      offsetParent[heightProp];
	      y -= offsetY - popperRect.height;
	      y *= gpuAcceleration ? 1 : -1;
	    }
	    if (placement === left || (placement === top || placement === bottom) && variation === end) {
	      sideX = right;
	      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width :
	      offsetParent[widthProp];
	      x -= offsetX - popperRect.width;
	      x *= gpuAcceleration ? 1 : -1;
	    }
	  }
	  var commonStyles = Object.assign({
	    position: position
	  }, adaptive && unsetSides);
	  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
	    x: x,
	    y: y
	  }) : {
	    x: x,
	    y: y
	  };
	  x = _ref4.x;
	  y = _ref4.y;
	  if (gpuAcceleration) {
	    var _Object$assign;
	    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
	  }
	  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
	}
	function computeStyles(_ref5) {
	  var state = _ref5.state,
	      options = _ref5.options;
	  var _options$gpuAccelerat = options.gpuAcceleration,
	      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
	      _options$adaptive = options.adaptive,
	      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
	      _options$roundOffsets = options.roundOffsets,
	      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
	  var commonStyles = {
	    placement: getBasePlacement(state.placement),
	    variation: getVariation(state.placement),
	    popper: state.elements.popper,
	    popperRect: state.rects.popper,
	    gpuAcceleration: gpuAcceleration,
	    isFixed: state.options.strategy === 'fixed'
	  };
	  if (state.modifiersData.popperOffsets != null) {
	    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
	      offsets: state.modifiersData.popperOffsets,
	      position: state.options.strategy,
	      adaptive: adaptive,
	      roundOffsets: roundOffsets
	    })));
	  }
	  if (state.modifiersData.arrow != null) {
	    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
	      offsets: state.modifiersData.arrow,
	      position: 'absolute',
	      adaptive: false,
	      roundOffsets: roundOffsets
	    })));
	  }
	  state.attributes.popper = Object.assign({}, state.attributes.popper, {
	    'data-popper-placement': state.placement
	  });
	}
	var computeStyles$1 = {
	  name: 'computeStyles',
	  enabled: true,
	  phase: 'beforeWrite',
	  fn: computeStyles,
	  data: {}
	};

	var passive = {
	  passive: true
	};
	function effect(_ref) {
	  var state = _ref.state,
	      instance = _ref.instance,
	      options = _ref.options;
	  var _options$scroll = options.scroll,
	      scroll = _options$scroll === void 0 ? true : _options$scroll,
	      _options$resize = options.resize,
	      resize = _options$resize === void 0 ? true : _options$resize;
	  var window = getWindow(state.elements.popper);
	  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
	  if (scroll) {
	    scrollParents.forEach(function (scrollParent) {
	      scrollParent.addEventListener('scroll', instance.update, passive);
	    });
	  }
	  if (resize) {
	    window.addEventListener('resize', instance.update, passive);
	  }
	  return function () {
	    if (scroll) {
	      scrollParents.forEach(function (scrollParent) {
	        scrollParent.removeEventListener('scroll', instance.update, passive);
	      });
	    }
	    if (resize) {
	      window.removeEventListener('resize', instance.update, passive);
	    }
	  };
	}
	var eventListeners = {
	  name: 'eventListeners',
	  enabled: true,
	  phase: 'write',
	  fn: function fn() {},
	  effect: effect,
	  data: {}
	};

	var hash$1 = {
	  left: 'right',
	  right: 'left',
	  bottom: 'top',
	  top: 'bottom'
	};
	function getOppositePlacement(placement) {
	  return placement.replace(/left|right|bottom|top/g, function (matched) {
	    return hash$1[matched];
	  });
	}

	var hash = {
	  start: 'end',
	  end: 'start'
	};
	function getOppositeVariationPlacement(placement) {
	  return placement.replace(/start|end/g, function (matched) {
	    return hash[matched];
	  });
	}

	function getWindowScroll(node) {
	  var win = getWindow(node);
	  var scrollLeft = win.pageXOffset;
	  var scrollTop = win.pageYOffset;
	  return {
	    scrollLeft: scrollLeft,
	    scrollTop: scrollTop
	  };
	}

	function getWindowScrollBarX(element) {
	  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
	}

	function getViewportRect(element) {
	  var win = getWindow(element);
	  var html = getDocumentElement(element);
	  var visualViewport = win.visualViewport;
	  var width = html.clientWidth;
	  var height = html.clientHeight;
	  var x = 0;
	  var y = 0;
	  if (visualViewport) {
	    width = visualViewport.width;
	    height = visualViewport.height;
	    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
	      x = visualViewport.offsetLeft;
	      y = visualViewport.offsetTop;
	    }
	  }
	  return {
	    width: width,
	    height: height,
	    x: x + getWindowScrollBarX(element),
	    y: y
	  };
	}

	function getDocumentRect(element) {
	  var _element$ownerDocumen;
	  var html = getDocumentElement(element);
	  var winScroll = getWindowScroll(element);
	  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
	  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
	  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
	  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
	  var y = -winScroll.scrollTop;
	  if (getComputedStyle$1(body || html).direction === 'rtl') {
	    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
	  }
	  return {
	    width: width,
	    height: height,
	    x: x,
	    y: y
	  };
	}

	function isScrollParent(element) {
	  var _getComputedStyle = getComputedStyle$1(element),
	      overflow = _getComputedStyle.overflow,
	      overflowX = _getComputedStyle.overflowX,
	      overflowY = _getComputedStyle.overflowY;
	  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
	}

	function getScrollParent(node) {
	  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
	    return node.ownerDocument.body;
	  }
	  if (isHTMLElement(node) && isScrollParent(node)) {
	    return node;
	  }
	  return getScrollParent(getParentNode(node));
	}

	function listScrollParents(element, list) {
	  var _element$ownerDocumen;
	  if (list === void 0) {
	    list = [];
	  }
	  var scrollParent = getScrollParent(element);
	  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
	  var win = getWindow(scrollParent);
	  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
	  var updatedList = list.concat(target);
	  return isBody ? updatedList :
	  updatedList.concat(listScrollParents(getParentNode(target)));
	}

	function rectToClientRect(rect) {
	  return Object.assign({}, rect, {
	    left: rect.x,
	    top: rect.y,
	    right: rect.x + rect.width,
	    bottom: rect.y + rect.height
	  });
	}

	function getInnerBoundingClientRect(element) {
	  var rect = getBoundingClientRect(element);
	  rect.top = rect.top + element.clientTop;
	  rect.left = rect.left + element.clientLeft;
	  rect.bottom = rect.top + element.clientHeight;
	  rect.right = rect.left + element.clientWidth;
	  rect.width = element.clientWidth;
	  rect.height = element.clientHeight;
	  rect.x = rect.left;
	  rect.y = rect.top;
	  return rect;
	}
	function getClientRectFromMixedType(element, clippingParent) {
	  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isElement$1(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
	}
	function getClippingParents(element) {
	  var clippingParents = listScrollParents(getParentNode(element));
	  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle$1(element).position) >= 0;
	  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
	  if (!isElement$1(clipperElement)) {
	    return [];
	  }
	  return clippingParents.filter(function (clippingParent) {
	    return isElement$1(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';
	  });
	}
	function getClippingRect(element, boundary, rootBoundary) {
	  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
	  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
	  var firstClippingParent = clippingParents[0];
	  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
	    var rect = getClientRectFromMixedType(element, clippingParent);
	    accRect.top = max(rect.top, accRect.top);
	    accRect.right = min(rect.right, accRect.right);
	    accRect.bottom = min(rect.bottom, accRect.bottom);
	    accRect.left = max(rect.left, accRect.left);
	    return accRect;
	  }, getClientRectFromMixedType(element, firstClippingParent));
	  clippingRect.width = clippingRect.right - clippingRect.left;
	  clippingRect.height = clippingRect.bottom - clippingRect.top;
	  clippingRect.x = clippingRect.left;
	  clippingRect.y = clippingRect.top;
	  return clippingRect;
	}

	function computeOffsets(_ref) {
	  var reference = _ref.reference,
	      element = _ref.element,
	      placement = _ref.placement;
	  var basePlacement = placement ? getBasePlacement(placement) : null;
	  var variation = placement ? getVariation(placement) : null;
	  var commonX = reference.x + reference.width / 2 - element.width / 2;
	  var commonY = reference.y + reference.height / 2 - element.height / 2;
	  var offsets;
	  switch (basePlacement) {
	    case top:
	      offsets = {
	        x: commonX,
	        y: reference.y - element.height
	      };
	      break;
	    case bottom:
	      offsets = {
	        x: commonX,
	        y: reference.y + reference.height
	      };
	      break;
	    case right:
	      offsets = {
	        x: reference.x + reference.width,
	        y: commonY
	      };
	      break;
	    case left:
	      offsets = {
	        x: reference.x - element.width,
	        y: commonY
	      };
	      break;
	    default:
	      offsets = {
	        x: reference.x,
	        y: reference.y
	      };
	  }
	  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
	  if (mainAxis != null) {
	    var len = mainAxis === 'y' ? 'height' : 'width';
	    switch (variation) {
	      case start:
	        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
	        break;
	      case end:
	        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
	        break;
	    }
	  }
	  return offsets;
	}

	function detectOverflow(state, options) {
	  if (options === void 0) {
	    options = {};
	  }
	  var _options = options,
	      _options$placement = _options.placement,
	      placement = _options$placement === void 0 ? state.placement : _options$placement,
	      _options$boundary = _options.boundary,
	      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
	      _options$rootBoundary = _options.rootBoundary,
	      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
	      _options$elementConte = _options.elementContext,
	      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
	      _options$altBoundary = _options.altBoundary,
	      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
	      _options$padding = _options.padding,
	      padding = _options$padding === void 0 ? 0 : _options$padding;
	  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
	  var altContext = elementContext === popper ? reference : popper;
	  var popperRect = state.rects.popper;
	  var element = state.elements[altBoundary ? altContext : elementContext];
	  var clippingClientRect = getClippingRect(isElement$1(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);
	  var referenceClientRect = getBoundingClientRect(state.elements.reference);
	  var popperOffsets = computeOffsets({
	    reference: referenceClientRect,
	    element: popperRect,
	    strategy: 'absolute',
	    placement: placement
	  });
	  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));
	  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
	  var overflowOffsets = {
	    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
	    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
	    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
	    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
	  };
	  var offsetData = state.modifiersData.offset;
	  if (elementContext === popper && offsetData) {
	    var offset = offsetData[placement];
	    Object.keys(overflowOffsets).forEach(function (key) {
	      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
	      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
	      overflowOffsets[key] += offset[axis] * multiply;
	    });
	  }
	  return overflowOffsets;
	}

	function computeAutoPlacement(state, options) {
	  if (options === void 0) {
	    options = {};
	  }
	  var _options = options,
	      placement = _options.placement,
	      boundary = _options.boundary,
	      rootBoundary = _options.rootBoundary,
	      padding = _options.padding,
	      flipVariations = _options.flipVariations,
	      _options$allowedAutoP = _options.allowedAutoPlacements,
	      allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
	  var variation = getVariation(placement);
	  var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
	    return getVariation(placement) === variation;
	  }) : basePlacements;
	  var allowedPlacements = placements$1.filter(function (placement) {
	    return allowedAutoPlacements.indexOf(placement) >= 0;
	  });
	  if (allowedPlacements.length === 0) {
	    allowedPlacements = placements$1;
	  }
	  var overflows = allowedPlacements.reduce(function (acc, placement) {
	    acc[placement] = detectOverflow(state, {
	      placement: placement,
	      boundary: boundary,
	      rootBoundary: rootBoundary,
	      padding: padding
	    })[getBasePlacement(placement)];
	    return acc;
	  }, {});
	  return Object.keys(overflows).sort(function (a, b) {
	    return overflows[a] - overflows[b];
	  });
	}

	function getExpandedFallbackPlacements(placement) {
	  if (getBasePlacement(placement) === auto) {
	    return [];
	  }
	  var oppositePlacement = getOppositePlacement(placement);
	  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
	}
	function flip(_ref) {
	  var state = _ref.state,
	      options = _ref.options,
	      name = _ref.name;
	  if (state.modifiersData[name]._skip) {
	    return;
	  }
	  var _options$mainAxis = options.mainAxis,
	      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
	      _options$altAxis = options.altAxis,
	      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
	      specifiedFallbackPlacements = options.fallbackPlacements,
	      padding = options.padding,
	      boundary = options.boundary,
	      rootBoundary = options.rootBoundary,
	      altBoundary = options.altBoundary,
	      _options$flipVariatio = options.flipVariations,
	      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
	      allowedAutoPlacements = options.allowedAutoPlacements;
	  var preferredPlacement = state.options.placement;
	  var basePlacement = getBasePlacement(preferredPlacement);
	  var isBasePlacement = basePlacement === preferredPlacement;
	  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
	  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
	    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {
	      placement: placement,
	      boundary: boundary,
	      rootBoundary: rootBoundary,
	      padding: padding,
	      flipVariations: flipVariations,
	      allowedAutoPlacements: allowedAutoPlacements
	    }) : placement);
	  }, []);
	  var referenceRect = state.rects.reference;
	  var popperRect = state.rects.popper;
	  var checksMap = new Map();
	  var makeFallbackChecks = true;
	  var firstFittingPlacement = placements[0];
	  for (var i = 0; i < placements.length; i++) {
	    var placement = placements[i];
	    var _basePlacement = getBasePlacement(placement);
	    var isStartVariation = getVariation(placement) === start;
	    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
	    var len = isVertical ? 'width' : 'height';
	    var overflow = detectOverflow(state, {
	      placement: placement,
	      boundary: boundary,
	      rootBoundary: rootBoundary,
	      altBoundary: altBoundary,
	      padding: padding
	    });
	    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
	    if (referenceRect[len] > popperRect[len]) {
	      mainVariationSide = getOppositePlacement(mainVariationSide);
	    }
	    var altVariationSide = getOppositePlacement(mainVariationSide);
	    var checks = [];
	    if (checkMainAxis) {
	      checks.push(overflow[_basePlacement] <= 0);
	    }
	    if (checkAltAxis) {
	      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
	    }
	    if (checks.every(function (check) {
	      return check;
	    })) {
	      firstFittingPlacement = placement;
	      makeFallbackChecks = false;
	      break;
	    }
	    checksMap.set(placement, checks);
	  }
	  if (makeFallbackChecks) {
	    var numberOfChecks = flipVariations ? 3 : 1;
	    var _loop = function _loop(_i) {
	      var fittingPlacement = placements.find(function (placement) {
	        var checks = checksMap.get(placement);
	        if (checks) {
	          return checks.slice(0, _i).every(function (check) {
	            return check;
	          });
	        }
	      });
	      if (fittingPlacement) {
	        firstFittingPlacement = fittingPlacement;
	        return "break";
	      }
	    };
	    for (var _i = numberOfChecks; _i > 0; _i--) {
	      var _ret = _loop(_i);
	      if (_ret === "break") break;
	    }
	  }
	  if (state.placement !== firstFittingPlacement) {
	    state.modifiersData[name]._skip = true;
	    state.placement = firstFittingPlacement;
	    state.reset = true;
	  }
	}
	var flip$1 = {
	  name: 'flip',
	  enabled: true,
	  phase: 'main',
	  fn: flip,
	  requiresIfExists: ['offset'],
	  data: {
	    _skip: false
	  }
	};

	function getSideOffsets(overflow, rect, preventedOffsets) {
	  if (preventedOffsets === void 0) {
	    preventedOffsets = {
	      x: 0,
	      y: 0
	    };
	  }
	  return {
	    top: overflow.top - rect.height - preventedOffsets.y,
	    right: overflow.right - rect.width + preventedOffsets.x,
	    bottom: overflow.bottom - rect.height + preventedOffsets.y,
	    left: overflow.left - rect.width - preventedOffsets.x
	  };
	}
	function isAnySideFullyClipped(overflow) {
	  return [top, right, bottom, left].some(function (side) {
	    return overflow[side] >= 0;
	  });
	}
	function hide(_ref) {
	  var state = _ref.state,
	      name = _ref.name;
	  var referenceRect = state.rects.reference;
	  var popperRect = state.rects.popper;
	  var preventedOffsets = state.modifiersData.preventOverflow;
	  var referenceOverflow = detectOverflow(state, {
	    elementContext: 'reference'
	  });
	  var popperAltOverflow = detectOverflow(state, {
	    altBoundary: true
	  });
	  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
	  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
	  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
	  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
	  state.modifiersData[name] = {
	    referenceClippingOffsets: referenceClippingOffsets,
	    popperEscapeOffsets: popperEscapeOffsets,
	    isReferenceHidden: isReferenceHidden,
	    hasPopperEscaped: hasPopperEscaped
	  };
	  state.attributes.popper = Object.assign({}, state.attributes.popper, {
	    'data-popper-reference-hidden': isReferenceHidden,
	    'data-popper-escaped': hasPopperEscaped
	  });
	}
	var hide$1 = {
	  name: 'hide',
	  enabled: true,
	  phase: 'main',
	  requiresIfExists: ['preventOverflow'],
	  fn: hide
	};

	function distanceAndSkiddingToXY(placement, rects, offset) {
	  var basePlacement = getBasePlacement(placement);
	  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
	  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
	    placement: placement
	  })) : offset,
	      skidding = _ref[0],
	      distance = _ref[1];
	  skidding = skidding || 0;
	  distance = (distance || 0) * invertDistance;
	  return [left, right].indexOf(basePlacement) >= 0 ? {
	    x: distance,
	    y: skidding
	  } : {
	    x: skidding,
	    y: distance
	  };
	}
	function offset(_ref2) {
	  var state = _ref2.state,
	      options = _ref2.options,
	      name = _ref2.name;
	  var _options$offset = options.offset,
	      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
	  var data = placements.reduce(function (acc, placement) {
	    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
	    return acc;
	  }, {});
	  var _data$state$placement = data[state.placement],
	      x = _data$state$placement.x,
	      y = _data$state$placement.y;
	  if (state.modifiersData.popperOffsets != null) {
	    state.modifiersData.popperOffsets.x += x;
	    state.modifiersData.popperOffsets.y += y;
	  }
	  state.modifiersData[name] = data;
	}
	var offset$1 = {
	  name: 'offset',
	  enabled: true,
	  phase: 'main',
	  requires: ['popperOffsets'],
	  fn: offset
	};

	function popperOffsets(_ref) {
	  var state = _ref.state,
	      name = _ref.name;
	  state.modifiersData[name] = computeOffsets({
	    reference: state.rects.reference,
	    element: state.rects.popper,
	    strategy: 'absolute',
	    placement: state.placement
	  });
	}
	var popperOffsets$1 = {
	  name: 'popperOffsets',
	  enabled: true,
	  phase: 'read',
	  fn: popperOffsets,
	  data: {}
	};

	function getAltAxis(axis) {
	  return axis === 'x' ? 'y' : 'x';
	}

	function preventOverflow(_ref) {
	  var state = _ref.state,
	      options = _ref.options,
	      name = _ref.name;
	  var _options$mainAxis = options.mainAxis,
	      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
	      _options$altAxis = options.altAxis,
	      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
	      boundary = options.boundary,
	      rootBoundary = options.rootBoundary,
	      altBoundary = options.altBoundary,
	      padding = options.padding,
	      _options$tether = options.tether,
	      tether = _options$tether === void 0 ? true : _options$tether,
	      _options$tetherOffset = options.tetherOffset,
	      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
	  var overflow = detectOverflow(state, {
	    boundary: boundary,
	    rootBoundary: rootBoundary,
	    padding: padding,
	    altBoundary: altBoundary
	  });
	  var basePlacement = getBasePlacement(state.placement);
	  var variation = getVariation(state.placement);
	  var isBasePlacement = !variation;
	  var mainAxis = getMainAxisFromPlacement(basePlacement);
	  var altAxis = getAltAxis(mainAxis);
	  var popperOffsets = state.modifiersData.popperOffsets;
	  var referenceRect = state.rects.reference;
	  var popperRect = state.rects.popper;
	  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
	    placement: state.placement
	  })) : tetherOffset;
	  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
	    mainAxis: tetherOffsetValue,
	    altAxis: tetherOffsetValue
	  } : Object.assign({
	    mainAxis: 0,
	    altAxis: 0
	  }, tetherOffsetValue);
	  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
	  var data = {
	    x: 0,
	    y: 0
	  };
	  if (!popperOffsets) {
	    return;
	  }
	  if (checkMainAxis) {
	    var _offsetModifierState$;
	    var mainSide = mainAxis === 'y' ? top : left;
	    var altSide = mainAxis === 'y' ? bottom : right;
	    var len = mainAxis === 'y' ? 'height' : 'width';
	    var offset = popperOffsets[mainAxis];
	    var min$1 = offset + overflow[mainSide];
	    var max$1 = offset - overflow[altSide];
	    var additive = tether ? -popperRect[len] / 2 : 0;
	    var minLen = variation === start ? referenceRect[len] : popperRect[len];
	    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
	    var arrowElement = state.elements.arrow;
	    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
	      width: 0,
	      height: 0
	    };
	    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
	    var arrowPaddingMin = arrowPaddingObject[mainSide];
	    var arrowPaddingMax = arrowPaddingObject[altSide];
	    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
	    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
	    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
	    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
	    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
	    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
	    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
	    var tetherMax = offset + maxOffset - offsetModifierValue;
	    var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max(max$1, tetherMax) : max$1);
	    popperOffsets[mainAxis] = preventedOffset;
	    data[mainAxis] = preventedOffset - offset;
	  }
	  if (checkAltAxis) {
	    var _offsetModifierState$2;
	    var _mainSide = mainAxis === 'x' ? top : left;
	    var _altSide = mainAxis === 'x' ? bottom : right;
	    var _offset = popperOffsets[altAxis];
	    var _len = altAxis === 'y' ? 'height' : 'width';
	    var _min = _offset + overflow[_mainSide];
	    var _max = _offset - overflow[_altSide];
	    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;
	    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
	    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
	    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
	    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
	    popperOffsets[altAxis] = _preventedOffset;
	    data[altAxis] = _preventedOffset - _offset;
	  }
	  state.modifiersData[name] = data;
	}
	var preventOverflow$1 = {
	  name: 'preventOverflow',
	  enabled: true,
	  phase: 'main',
	  fn: preventOverflow,
	  requiresIfExists: ['offset']
	};

	function getHTMLElementScroll(element) {
	  return {
	    scrollLeft: element.scrollLeft,
	    scrollTop: element.scrollTop
	  };
	}

	function getNodeScroll(node) {
	  if (node === getWindow(node) || !isHTMLElement(node)) {
	    return getWindowScroll(node);
	  } else {
	    return getHTMLElementScroll(node);
	  }
	}

	function isElementScaled(element) {
	  var rect = element.getBoundingClientRect();
	  var scaleX = round(rect.width) / element.offsetWidth || 1;
	  var scaleY = round(rect.height) / element.offsetHeight || 1;
	  return scaleX !== 1 || scaleY !== 1;
	}
	function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
	  if (isFixed === void 0) {
	    isFixed = false;
	  }
	  var isOffsetParentAnElement = isHTMLElement(offsetParent);
	  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
	  var documentElement = getDocumentElement(offsetParent);
	  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);
	  var scroll = {
	    scrollLeft: 0,
	    scrollTop: 0
	  };
	  var offsets = {
	    x: 0,
	    y: 0
	  };
	  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
	    if (getNodeName(offsetParent) !== 'body' ||
	    isScrollParent(documentElement)) {
	      scroll = getNodeScroll(offsetParent);
	    }
	    if (isHTMLElement(offsetParent)) {
	      offsets = getBoundingClientRect(offsetParent, true);
	      offsets.x += offsetParent.clientLeft;
	      offsets.y += offsetParent.clientTop;
	    } else if (documentElement) {
	      offsets.x = getWindowScrollBarX(documentElement);
	    }
	  }
	  return {
	    x: rect.left + scroll.scrollLeft - offsets.x,
	    y: rect.top + scroll.scrollTop - offsets.y,
	    width: rect.width,
	    height: rect.height
	  };
	}

	function order(modifiers) {
	  var map = new Map();
	  var visited = new Set();
	  var result = [];
	  modifiers.forEach(function (modifier) {
	    map.set(modifier.name, modifier);
	  });
	  function sort(modifier) {
	    visited.add(modifier.name);
	    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
	    requires.forEach(function (dep) {
	      if (!visited.has(dep)) {
	        var depModifier = map.get(dep);
	        if (depModifier) {
	          sort(depModifier);
	        }
	      }
	    });
	    result.push(modifier);
	  }
	  modifiers.forEach(function (modifier) {
	    if (!visited.has(modifier.name)) {
	      sort(modifier);
	    }
	  });
	  return result;
	}
	function orderModifiers(modifiers) {
	  var orderedModifiers = order(modifiers);
	  return modifierPhases.reduce(function (acc, phase) {
	    return acc.concat(orderedModifiers.filter(function (modifier) {
	      return modifier.phase === phase;
	    }));
	  }, []);
	}

	function debounce(fn) {
	  var pending;
	  return function () {
	    if (!pending) {
	      pending = new Promise(function (resolve) {
	        Promise.resolve().then(function () {
	          pending = undefined;
	          resolve(fn());
	        });
	      });
	    }
	    return pending;
	  };
	}

	function mergeByName(modifiers) {
	  var merged = modifiers.reduce(function (merged, current) {
	    var existing = merged[current.name];
	    merged[current.name] = existing ? Object.assign({}, existing, current, {
	      options: Object.assign({}, existing.options, current.options),
	      data: Object.assign({}, existing.data, current.data)
	    }) : current;
	    return merged;
	  }, {});
	  return Object.keys(merged).map(function (key) {
	    return merged[key];
	  });
	}

	var DEFAULT_OPTIONS = {
	  placement: 'bottom',
	  modifiers: [],
	  strategy: 'absolute'
	};
	function areValidElements() {
	  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }
	  return !args.some(function (element) {
	    return !(element && typeof element.getBoundingClientRect === 'function');
	  });
	}
	function popperGenerator(generatorOptions) {
	  if (generatorOptions === void 0) {
	    generatorOptions = {};
	  }
	  var _generatorOptions = generatorOptions,
	      _generatorOptions$def = _generatorOptions.defaultModifiers,
	      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
	      _generatorOptions$def2 = _generatorOptions.defaultOptions,
	      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
	  return function createPopper(reference, popper, options) {
	    if (options === void 0) {
	      options = defaultOptions;
	    }
	    var state = {
	      placement: 'bottom',
	      orderedModifiers: [],
	      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
	      modifiersData: {},
	      elements: {
	        reference: reference,
	        popper: popper
	      },
	      attributes: {},
	      styles: {}
	    };
	    var effectCleanupFns = [];
	    var isDestroyed = false;
	    var instance = {
	      state: state,
	      setOptions: function setOptions(setOptionsAction) {
	        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
	        cleanupModifierEffects();
	        state.options = Object.assign({}, defaultOptions, state.options, options);
	        state.scrollParents = {
	          reference: isElement$1(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
	          popper: listScrollParents(popper)
	        };
	        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers)));
	        state.orderedModifiers = orderedModifiers.filter(function (m) {
	          return m.enabled;
	        });
	        runModifierEffects();
	        return instance.update();
	      },
	      forceUpdate: function forceUpdate() {
	        if (isDestroyed) {
	          return;
	        }
	        var _state$elements = state.elements,
	            reference = _state$elements.reference,
	            popper = _state$elements.popper;
	        if (!areValidElements(reference, popper)) {
	          return;
	        }
	        state.rects = {
	          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),
	          popper: getLayoutRect(popper)
	        };
	        state.reset = false;
	        state.placement = state.options.placement;
	        state.orderedModifiers.forEach(function (modifier) {
	          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
	        });
	        for (var index = 0; index < state.orderedModifiers.length; index++) {
	          if (state.reset === true) {
	            state.reset = false;
	            index = -1;
	            continue;
	          }
	          var _state$orderedModifie = state.orderedModifiers[index],
	              fn = _state$orderedModifie.fn,
	              _state$orderedModifie2 = _state$orderedModifie.options,
	              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
	              name = _state$orderedModifie.name;
	          if (typeof fn === 'function') {
	            state = fn({
	              state: state,
	              options: _options,
	              name: name,
	              instance: instance
	            }) || state;
	          }
	        }
	      },
	      update: debounce(function () {
	        return new Promise(function (resolve) {
	          instance.forceUpdate();
	          resolve(state);
	        });
	      }),
	      destroy: function destroy() {
	        cleanupModifierEffects();
	        isDestroyed = true;
	      }
	    };
	    if (!areValidElements(reference, popper)) {
	      return instance;
	    }
	    instance.setOptions(options).then(function (state) {
	      if (!isDestroyed && options.onFirstUpdate) {
	        options.onFirstUpdate(state);
	      }
	    });
	    function runModifierEffects() {
	      state.orderedModifiers.forEach(function (_ref3) {
	        var name = _ref3.name,
	            _ref3$options = _ref3.options,
	            options = _ref3$options === void 0 ? {} : _ref3$options,
	            effect = _ref3.effect;
	        if (typeof effect === 'function') {
	          var cleanupFn = effect({
	            state: state,
	            name: name,
	            instance: instance,
	            options: options
	          });
	          var noopFn = function noopFn() {};
	          effectCleanupFns.push(cleanupFn || noopFn);
	        }
	      });
	    }
	    function cleanupModifierEffects() {
	      effectCleanupFns.forEach(function (fn) {
	        return fn();
	      });
	      effectCleanupFns = [];
	    }
	    return instance;
	  };
	}
	var createPopper$2 = popperGenerator();

	var defaultModifiers$1 = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1];
	var createPopper$1 = popperGenerator({
	  defaultModifiers: defaultModifiers$1
	});

	var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];
	var createPopper = popperGenerator({
	  defaultModifiers: defaultModifiers
	});

	var Popper = /*#__PURE__*/Object.freeze({
		__proto__: null,
		popperGenerator: popperGenerator,
		detectOverflow: detectOverflow,
		createPopperBase: createPopper$2,
		createPopper: createPopper,
		createPopperLite: createPopper$1,
		top: top,
		bottom: bottom,
		right: right,
		left: left,
		auto: auto,
		basePlacements: basePlacements,
		start: start,
		end: end,
		clippingParents: clippingParents,
		viewport: viewport,
		popper: popper,
		reference: reference,
		variationPlacements: variationPlacements,
		placements: placements,
		beforeRead: beforeRead,
		read: read,
		afterRead: afterRead,
		beforeMain: beforeMain,
		main: main,
		afterMain: afterMain,
		beforeWrite: beforeWrite,
		write: write,
		afterWrite: afterWrite,
		modifierPhases: modifierPhases,
		applyStyles: applyStyles$1,
		arrow: arrow$1,
		computeStyles: computeStyles$1,
		eventListeners: eventListeners,
		flip: flip$1,
		hide: hide$1,
		offset: offset$1,
		popperOffsets: popperOffsets$1,
		preventOverflow: preventOverflow$1
	});

	/*!
	  * Bootstrap v5.2.0 (https://getbootstrap.com/)
	  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
	  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
	  */
	const MAX_UID = 1000000;
	const MILLISECONDS_MULTIPLIER = 1000;
	const TRANSITION_END = 'transitionend';
	const toType = object => {
	  if (object === null || object === undefined) {
	    return `${object}`;
	  }
	  return Object.prototype.toString.call(object).match(/\s([a-z]+)/i)[1].toLowerCase();
	};
	const getUID = prefix => {
	  do {
	    prefix += Math.floor(Math.random() * MAX_UID);
	  } while (document.getElementById(prefix));
	  return prefix;
	};
	const getSelector = element => {
	  let selector = element.getAttribute('data-bs-target');
	  if (!selector || selector === '#') {
	    let hrefAttribute = element.getAttribute('href');
	    if (!hrefAttribute || !hrefAttribute.includes('#') && !hrefAttribute.startsWith('.')) {
	      return null;
	    }
	    if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {
	      hrefAttribute = `#${hrefAttribute.split('#')[1]}`;
	    }
	    selector = hrefAttribute && hrefAttribute !== '#' ? hrefAttribute.trim() : null;
	  }
	  return selector;
	};
	const getSelectorFromElement = element => {
	  const selector = getSelector(element);
	  if (selector) {
	    return document.querySelector(selector) ? selector : null;
	  }
	  return null;
	};
	const getElementFromSelector = element => {
	  const selector = getSelector(element);
	  return selector ? document.querySelector(selector) : null;
	};
	const getTransitionDurationFromElement = element => {
	  if (!element) {
	    return 0;
	  }
	  let {
	    transitionDuration,
	    transitionDelay
	  } = window.getComputedStyle(element);
	  const floatTransitionDuration = Number.parseFloat(transitionDuration);
	  const floatTransitionDelay = Number.parseFloat(transitionDelay);
	  if (!floatTransitionDuration && !floatTransitionDelay) {
	    return 0;
	  }
	  transitionDuration = transitionDuration.split(',')[0];
	  transitionDelay = transitionDelay.split(',')[0];
	  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;
	};
	const triggerTransitionEnd = element => {
	  element.dispatchEvent(new Event(TRANSITION_END));
	};
	const isElement = object => {
	  if (!object || typeof object !== 'object') {
	    return false;
	  }
	  if (typeof object.jquery !== 'undefined') {
	    object = object[0];
	  }
	  return typeof object.nodeType !== 'undefined';
	};
	const getElement = object => {
	  if (isElement(object)) {
	    return object.jquery ? object[0] : object;
	  }
	  if (typeof object === 'string' && object.length > 0) {
	    return document.querySelector(object);
	  }
	  return null;
	};
	const isVisible = element => {
	  if (!isElement(element) || element.getClientRects().length === 0) {
	    return false;
	  }
	  const elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible';
	  const closedDetails = element.closest('details:not([open])');
	  if (!closedDetails) {
	    return elementIsVisible;
	  }
	  if (closedDetails !== element) {
	    const summary = element.closest('summary');
	    if (summary && summary.parentNode !== closedDetails) {
	      return false;
	    }
	    if (summary === null) {
	      return false;
	    }
	  }
	  return elementIsVisible;
	};
	const isDisabled = element => {
	  if (!element || element.nodeType !== Node.ELEMENT_NODE) {
	    return true;
	  }
	  if (element.classList.contains('disabled')) {
	    return true;
	  }
	  if (typeof element.disabled !== 'undefined') {
	    return element.disabled;
	  }
	  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false';
	};
	const findShadowRoot = element => {
	  if (!document.documentElement.attachShadow) {
	    return null;
	  }
	  if (typeof element.getRootNode === 'function') {
	    const root = element.getRootNode();
	    return root instanceof ShadowRoot ? root : null;
	  }
	  if (element instanceof ShadowRoot) {
	    return element;
	  }
	  if (!element.parentNode) {
	    return null;
	  }
	  return findShadowRoot(element.parentNode);
	};
	const noop = () => {};
	const reflow = element => {
	  element.offsetHeight;
	};
	const getjQuery = () => {
	  if (window.jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {
	    return window.jQuery;
	  }
	  return null;
	};
	const DOMContentLoadedCallbacks = [];
	const onDOMContentLoaded = callback => {
	  if (document.readyState === 'loading') {
	    if (!DOMContentLoadedCallbacks.length) {
	      document.addEventListener('DOMContentLoaded', () => {
	        for (const callback of DOMContentLoadedCallbacks) {
	          callback();
	        }
	      });
	    }
	    DOMContentLoadedCallbacks.push(callback);
	  } else {
	    callback();
	  }
	};
	const isRTL = () => document.documentElement.dir === 'rtl';
	const defineJQueryPlugin = plugin => {
	  onDOMContentLoaded(() => {
	    const $ = getjQuery();
	    if ($) {
	      const name = plugin.NAME;
	      const JQUERY_NO_CONFLICT = $.fn[name];
	      $.fn[name] = plugin.jQueryInterface;
	      $.fn[name].Constructor = plugin;
	      $.fn[name].noConflict = () => {
	        $.fn[name] = JQUERY_NO_CONFLICT;
	        return plugin.jQueryInterface;
	      };
	    }
	  });
	};
	const execute = callback => {
	  if (typeof callback === 'function') {
	    callback();
	  }
	};
	const executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {
	  if (!waitForTransition) {
	    execute(callback);
	    return;
	  }
	  const durationPadding = 5;
	  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;
	  let called = false;
	  const handler = ({
	    target
	  }) => {
	    if (target !== transitionElement) {
	      return;
	    }
	    called = true;
	    transitionElement.removeEventListener(TRANSITION_END, handler);
	    execute(callback);
	  };
	  transitionElement.addEventListener(TRANSITION_END, handler);
	  setTimeout(() => {
	    if (!called) {
	      triggerTransitionEnd(transitionElement);
	    }
	  }, emulatedDuration);
	};
	const getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {
	  const listLength = list.length;
	  let index = list.indexOf(activeElement);
	  if (index === -1) {
	    return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0];
	  }
	  index += shouldGetNext ? 1 : -1;
	  if (isCycleAllowed) {
	    index = (index + listLength) % listLength;
	  }
	  return list[Math.max(0, Math.min(index, listLength - 1))];
	};
	const namespaceRegex = /[^.]*(?=\..*)\.|.*/;
	const stripNameRegex = /\..*/;
	const stripUidRegex = /::\d+$/;
	const eventRegistry = {};
	let uidEvent = 1;
	const customEvents = {
	  mouseenter: 'mouseover',
	  mouseleave: 'mouseout'
	};
	const nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);
	function makeEventUid(element, uid) {
	  return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;
	}
	function getElementEvents(element) {
	  const uid = makeEventUid(element);
	  element.uidEvent = uid;
	  eventRegistry[uid] = eventRegistry[uid] || {};
	  return eventRegistry[uid];
	}
	function bootstrapHandler(element, fn) {
	  return function handler(event) {
	    hydrateObj(event, {
	      delegateTarget: element
	    });
	    if (handler.oneOff) {
	      EventHandler.off(element, event.type, fn);
	    }
	    return fn.apply(element, [event]);
	  };
	}
	function bootstrapDelegationHandler(element, selector, fn) {
	  return function handler(event) {
	    const domElements = element.querySelectorAll(selector);
	    for (let {
	      target
	    } = event; target && target !== this; target = target.parentNode) {
	      for (const domElement of domElements) {
	        if (domElement !== target) {
	          continue;
	        }
	        hydrateObj(event, {
	          delegateTarget: target
	        });
	        if (handler.oneOff) {
	          EventHandler.off(element, event.type, selector, fn);
	        }
	        return fn.apply(target, [event]);
	      }
	    }
	  };
	}
	function findHandler(events, callable, delegationSelector = null) {
	  return Object.values(events).find(event => event.callable === callable && event.delegationSelector === delegationSelector);
	}
	function normalizeParameters(originalTypeEvent, handler, delegationFunction) {
	  const isDelegated = typeof handler === 'string';
	  const callable = isDelegated ? delegationFunction : handler || delegationFunction;
	  let typeEvent = getTypeEvent(originalTypeEvent);
	  if (!nativeEvents.has(typeEvent)) {
	    typeEvent = originalTypeEvent;
	  }
	  return [isDelegated, callable, typeEvent];
	}
	function addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {
	  if (typeof originalTypeEvent !== 'string' || !element) {
	    return;
	  }
	  let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);
	  if (originalTypeEvent in customEvents) {
	    const wrapFunction = fn => {
	      return function (event) {
	        if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) {
	          return fn.call(this, event);
	        }
	      };
	    };
	    callable = wrapFunction(callable);
	  }
	  const events = getElementEvents(element);
	  const handlers = events[typeEvent] || (events[typeEvent] = {});
	  const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null);
	  if (previousFunction) {
	    previousFunction.oneOff = previousFunction.oneOff && oneOff;
	    return;
	  }
	  const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''));
	  const fn = isDelegated ? bootstrapDelegationHandler(element, handler, callable) : bootstrapHandler(element, callable);
	  fn.delegationSelector = isDelegated ? handler : null;
	  fn.callable = callable;
	  fn.oneOff = oneOff;
	  fn.uidEvent = uid;
	  handlers[uid] = fn;
	  element.addEventListener(typeEvent, fn, isDelegated);
	}
	function removeHandler(element, events, typeEvent, handler, delegationSelector) {
	  const fn = findHandler(events[typeEvent], handler, delegationSelector);
	  if (!fn) {
	    return;
	  }
	  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));
	  delete events[typeEvent][fn.uidEvent];
	}
	function removeNamespacedHandlers(element, events, typeEvent, namespace) {
	  const storeElementEvent = events[typeEvent] || {};
	  for (const handlerKey of Object.keys(storeElementEvent)) {
	    if (handlerKey.includes(namespace)) {
	      const event = storeElementEvent[handlerKey];
	      removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);
	    }
	  }
	}
	function getTypeEvent(event) {
	  event = event.replace(stripNameRegex, '');
	  return customEvents[event] || event;
	}
	const EventHandler = {
	  on(element, event, handler, delegationFunction) {
	    addHandler(element, event, handler, delegationFunction, false);
	  },
	  one(element, event, handler, delegationFunction) {
	    addHandler(element, event, handler, delegationFunction, true);
	  },
	  off(element, originalTypeEvent, handler, delegationFunction) {
	    if (typeof originalTypeEvent !== 'string' || !element) {
	      return;
	    }
	    const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);
	    const inNamespace = typeEvent !== originalTypeEvent;
	    const events = getElementEvents(element);
	    const storeElementEvent = events[typeEvent] || {};
	    const isNamespace = originalTypeEvent.startsWith('.');
	    if (typeof callable !== 'undefined') {
	      if (!Object.keys(storeElementEvent).length) {
	        return;
	      }
	      removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null);
	      return;
	    }
	    if (isNamespace) {
	      for (const elementEvent of Object.keys(events)) {
	        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));
	      }
	    }
	    for (const keyHandlers of Object.keys(storeElementEvent)) {
	      const handlerKey = keyHandlers.replace(stripUidRegex, '');
	      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {
	        const event = storeElementEvent[keyHandlers];
	        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);
	      }
	    }
	  },
	  trigger(element, event, args) {
	    if (typeof event !== 'string' || !element) {
	      return null;
	    }
	    const $ = getjQuery();
	    const typeEvent = getTypeEvent(event);
	    const inNamespace = event !== typeEvent;
	    let jQueryEvent = null;
	    let bubbles = true;
	    let nativeDispatch = true;
	    let defaultPrevented = false;
	    if (inNamespace && $) {
	      jQueryEvent = $.Event(event, args);
	      $(element).trigger(jQueryEvent);
	      bubbles = !jQueryEvent.isPropagationStopped();
	      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();
	      defaultPrevented = jQueryEvent.isDefaultPrevented();
	    }
	    let evt = new Event(event, {
	      bubbles,
	      cancelable: true
	    });
	    evt = hydrateObj(evt, args);
	    if (defaultPrevented) {
	      evt.preventDefault();
	    }
	    if (nativeDispatch) {
	      element.dispatchEvent(evt);
	    }
	    if (evt.defaultPrevented && jQueryEvent) {
	      jQueryEvent.preventDefault();
	    }
	    return evt;
	  }
	};
	function hydrateObj(obj, meta) {
	  for (const [key, value] of Object.entries(meta || {})) {
	    try {
	      obj[key] = value;
	    } catch (_unused) {
	      Object.defineProperty(obj, key, {
	        configurable: true,
	        get() {
	          return value;
	        }
	      });
	    }
	  }
	  return obj;
	}
	const elementMap = new Map();
	const Data = {
	  set(element, key, instance) {
	    if (!elementMap.has(element)) {
	      elementMap.set(element, new Map());
	    }
	    const instanceMap = elementMap.get(element);
	    if (!instanceMap.has(key) && instanceMap.size !== 0) {
	      console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);
	      return;
	    }
	    instanceMap.set(key, instance);
	  },
	  get(element, key) {
	    if (elementMap.has(element)) {
	      return elementMap.get(element).get(key) || null;
	    }
	    return null;
	  },
	  remove(element, key) {
	    if (!elementMap.has(element)) {
	      return;
	    }
	    const instanceMap = elementMap.get(element);
	    instanceMap.delete(key);
	    if (instanceMap.size === 0) {
	      elementMap.delete(element);
	    }
	  }
	};
	function normalizeData(value) {
	  if (value === 'true') {
	    return true;
	  }
	  if (value === 'false') {
	    return false;
	  }
	  if (value === Number(value).toString()) {
	    return Number(value);
	  }
	  if (value === '' || value === 'null') {
	    return null;
	  }
	  if (typeof value !== 'string') {
	    return value;
	  }
	  try {
	    return JSON.parse(decodeURIComponent(value));
	  } catch (_unused) {
	    return value;
	  }
	}
	function normalizeDataKey(key) {
	  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`);
	}
	const Manipulator = {
	  setDataAttribute(element, key, value) {
	    element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value);
	  },
	  removeDataAttribute(element, key) {
	    element.removeAttribute(`data-bs-${normalizeDataKey(key)}`);
	  },
	  getDataAttributes(element) {
	    if (!element) {
	      return {};
	    }
	    const attributes = {};
	    const bsKeys = Object.keys(element.dataset).filter(key => key.startsWith('bs') && !key.startsWith('bsConfig'));
	    for (const key of bsKeys) {
	      let pureKey = key.replace(/^bs/, '');
	      pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);
	      attributes[pureKey] = normalizeData(element.dataset[key]);
	    }
	    return attributes;
	  },
	  getDataAttribute(element, key) {
	    return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`));
	  }
	};
	class Config {
	  static get Default() {
	    return {};
	  }
	  static get DefaultType() {
	    return {};
	  }
	  static get NAME() {
	    throw new Error('You have to implement the static method "NAME", for each component!');
	  }
	  _getConfig(config) {
	    config = this._mergeConfigObj(config);
	    config = this._configAfterMerge(config);
	    this._typeCheckConfig(config);
	    return config;
	  }
	  _configAfterMerge(config) {
	    return config;
	  }
	  _mergeConfigObj(config, element) {
	    const jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {};
	    return { ...this.constructor.Default,
	      ...(typeof jsonConfig === 'object' ? jsonConfig : {}),
	      ...(isElement(element) ? Manipulator.getDataAttributes(element) : {}),
	      ...(typeof config === 'object' ? config : {})
	    };
	  }
	  _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {
	    for (const property of Object.keys(configTypes)) {
	      const expectedTypes = configTypes[property];
	      const value = config[property];
	      const valueType = isElement(value) ? 'element' : toType(value);
	      if (!new RegExp(expectedTypes).test(valueType)) {
	        throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${property}" provided type "${valueType}" but expected type "${expectedTypes}".`);
	      }
	    }
	  }
	}
	const VERSION = '5.2.0';
	class BaseComponent extends Config {
	  constructor(element, config) {
	    super();
	    element = getElement(element);
	    if (!element) {
	      return;
	    }
	    this._element = element;
	    this._config = this._getConfig(config);
	    Data.set(this._element, this.constructor.DATA_KEY, this);
	  }
	  dispose() {
	    Data.remove(this._element, this.constructor.DATA_KEY);
	    EventHandler.off(this._element, this.constructor.EVENT_KEY);
	    for (const propertyName of Object.getOwnPropertyNames(this)) {
	      this[propertyName] = null;
	    }
	  }
	  _queueCallback(callback, element, isAnimated = true) {
	    executeAfterTransition(callback, element, isAnimated);
	  }
	  _getConfig(config) {
	    config = this._mergeConfigObj(config, this._element);
	    config = this._configAfterMerge(config);
	    this._typeCheckConfig(config);
	    return config;
	  }
	  static getInstance(element) {
	    return Data.get(getElement(element), this.DATA_KEY);
	  }
	  static getOrCreateInstance(element, config = {}) {
	    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);
	  }
	  static get VERSION() {
	    return VERSION;
	  }
	  static get DATA_KEY() {
	    return `bs.${this.NAME}`;
	  }
	  static get EVENT_KEY() {
	    return `.${this.DATA_KEY}`;
	  }
	  static eventName(name) {
	    return `${name}${this.EVENT_KEY}`;
	  }
	}
	const enableDismissTrigger = (component, method = 'hide') => {
	  const clickEvent = `click.dismiss${component.EVENT_KEY}`;
	  const name = component.NAME;
	  EventHandler.on(document, clickEvent, `[data-bs-dismiss="${name}"]`, function (event) {
	    if (['A', 'AREA'].includes(this.tagName)) {
	      event.preventDefault();
	    }
	    if (isDisabled(this)) {
	      return;
	    }
	    const target = getElementFromSelector(this) || this.closest(`.${name}`);
	    const instance = component.getOrCreateInstance(target);
	    instance[method]();
	  });
	};
	const NAME$f = 'alert';
	const DATA_KEY$a = 'bs.alert';
	const EVENT_KEY$b = `.${DATA_KEY$a}`;
	const EVENT_CLOSE = `close${EVENT_KEY$b}`;
	const EVENT_CLOSED = `closed${EVENT_KEY$b}`;
	const CLASS_NAME_FADE$5 = 'fade';
	const CLASS_NAME_SHOW$8 = 'show';
	class Alert extends BaseComponent {
	  static get NAME() {
	    return NAME$f;
	  }
	  close() {
	    const closeEvent = EventHandler.trigger(this._element, EVENT_CLOSE);
	    if (closeEvent.defaultPrevented) {
	      return;
	    }
	    this._element.classList.remove(CLASS_NAME_SHOW$8);
	    const isAnimated = this._element.classList.contains(CLASS_NAME_FADE$5);
	    this._queueCallback(() => this._destroyElement(), this._element, isAnimated);
	  }
	  _destroyElement() {
	    this._element.remove();
	    EventHandler.trigger(this._element, EVENT_CLOSED);
	    this.dispose();
	  }
	  static jQueryInterface(config) {
	    return this.each(function () {
	      const data = Alert.getOrCreateInstance(this);
	      if (typeof config !== 'string') {
	        return;
	      }
	      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {
	        throw new TypeError(`No method named "${config}"`);
	      }
	      data[config](this);
	    });
	  }
	}
	enableDismissTrigger(Alert, 'close');
	defineJQueryPlugin(Alert);
	const NAME$e = 'button';
	const DATA_KEY$9 = 'bs.button';
	const EVENT_KEY$a = `.${DATA_KEY$9}`;
	const DATA_API_KEY$6 = '.data-api';
	const CLASS_NAME_ACTIVE$3 = 'active';
	const SELECTOR_DATA_TOGGLE$5 = '[data-bs-toggle="button"]';
	const EVENT_CLICK_DATA_API$6 = `click${EVENT_KEY$a}${DATA_API_KEY$6}`;
	class Button extends BaseComponent {
	  static get NAME() {
	    return NAME$e;
	  }
	  toggle() {
	    this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE$3));
	  }
	  static jQueryInterface(config) {
	    return this.each(function () {
	      const data = Button.getOrCreateInstance(this);
	      if (config === 'toggle') {
	        data[config]();
	      }
	    });
	  }
	}
	EventHandler.on(document, EVENT_CLICK_DATA_API$6, SELECTOR_DATA_TOGGLE$5, event => {
	  event.preventDefault();
	  const button = event.target.closest(SELECTOR_DATA_TOGGLE$5);
	  const data = Button.getOrCreateInstance(button);
	  data.toggle();
	});
	defineJQueryPlugin(Button);
	const SelectorEngine = {
	  find(selector, element = document.documentElement) {
	    return [].concat(...Element.prototype.querySelectorAll.call(element, selector));
	  },
	  findOne(selector, element = document.documentElement) {
	    return Element.prototype.querySelector.call(element, selector);
	  },
	  children(element, selector) {
	    return [].concat(...element.children).filter(child => child.matches(selector));
	  },
	  parents(element, selector) {
	    const parents = [];
	    let ancestor = element.parentNode.closest(selector);
	    while (ancestor) {
	      parents.push(ancestor);
	      ancestor = ancestor.parentNode.closest(selector);
	    }
	    return parents;
	  },
	  prev(element, selector) {
	    let previous = element.previousElementSibling;
	    while (previous) {
	      if (previous.matches(selector)) {
	        return [previous];
	      }
	      previous = previous.previousElementSibling;
	    }
	    return [];
	  },
	  next(element, selector) {
	    let next = element.nextElementSibling;
	    while (next) {
	      if (next.matches(selector)) {
	        return [next];
	      }
	      next = next.nextElementSibling;
	    }
	    return [];
	  },
	  focusableChildren(element) {
	    const focusables = ['a', 'button', 'input', 'textarea', 'select', 'details', '[tabindex]', '[contenteditable="true"]'].map(selector => `${selector}:not([tabindex^="-"])`).join(',');
	    return this.find(focusables, element).filter(el => !isDisabled(el) && isVisible(el));
	  }
	};
	const NAME$d = 'swipe';
	const EVENT_KEY$9 = '.bs.swipe';
	const EVENT_TOUCHSTART = `touchstart${EVENT_KEY$9}`;
	const EVENT_TOUCHMOVE = `touchmove${EVENT_KEY$9}`;
	const EVENT_TOUCHEND = `touchend${EVENT_KEY$9}`;
	const EVENT_POINTERDOWN = `pointerdown${EVENT_KEY$9}`;
	const EVENT_POINTERUP = `pointerup${EVENT_KEY$9}`;
	const POINTER_TYPE_TOUCH = 'touch';
	const POINTER_TYPE_PEN = 'pen';
	const CLASS_NAME_POINTER_EVENT = 'pointer-event';
	const SWIPE_THRESHOLD = 40;
	const Default$c = {
	  endCallback: null,
	  leftCallback: null,
	  rightCallback: null
	};
	const DefaultType$c = {
	  endCallback: '(function|null)',
	  leftCallback: '(function|null)',
	  rightCallback: '(function|null)'
	};
	class Swipe extends Config {
	  constructor(element, config) {
	    super();
	    this._element = element;
	    if (!element || !Swipe.isSupported()) {
	      return;
	    }
	    this._config = this._getConfig(config);
	    this._deltaX = 0;
	    this._supportPointerEvents = Boolean(window.PointerEvent);
	    this._initEvents();
	  }
	  static get Default() {
	    return Default$c;
	  }
	  static get DefaultType() {
	    return DefaultType$c;
	  }
	  static get NAME() {
	    return NAME$d;
	  }
	  dispose() {
	    EventHandler.off(this._element, EVENT_KEY$9);
	  }
	  _start(event) {
	    if (!this._supportPointerEvents) {
	      this._deltaX = event.touches[0].clientX;
	      return;
	    }
	    if (this._eventIsPointerPenTouch(event)) {
	      this._deltaX = event.clientX;
	    }
	  }
	  _end(event) {
	    if (this._eventIsPointerPenTouch(event)) {
	      this._deltaX = event.clientX - this._deltaX;
	    }
	    this._handleSwipe();
	    execute(this._config.endCallback);
	  }
	  _move(event) {
	    this._deltaX = event.touches && event.touches.length > 1 ? 0 : event.touches[0].clientX - this._deltaX;
	  }
	  _handleSwipe() {
	    const absDeltaX = Math.abs(this._deltaX);
	    if (absDeltaX <= SWIPE_THRESHOLD) {
	      return;
	    }
	    const direction = absDeltaX / this._deltaX;
	    this._deltaX = 0;
	    if (!direction) {
	      return;
	    }
	    execute(direction > 0 ? this._config.rightCallback : this._config.leftCallback);
	  }
	  _initEvents() {
	    if (this._supportPointerEvents) {
	      EventHandler.on(this._element, EVENT_POINTERDOWN, event => this._start(event));
	      EventHandler.on(this._element, EVENT_POINTERUP, event => this._end(event));
	      this._element.classList.add(CLASS_NAME_POINTER_EVENT);
	    } else {
	      EventHandler.on(this._element, EVENT_TOUCHSTART, event => this._start(event));
	      EventHandler.on(this._element, EVENT_TOUCHMOVE, event => this._move(event));
	      EventHandler.on(this._element, EVENT_TOUCHEND, event => this._end(event));
	    }
	  }
	  _eventIsPointerPenTouch(event) {
	    return this._supportPointerEvents && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH);
	  }
	  static isSupported() {
	    return 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;
	  }
	}
	const NAME$c = 'carousel';
	const DATA_KEY$8 = 'bs.carousel';
	const EVENT_KEY$8 = `.${DATA_KEY$8}`;
	const DATA_API_KEY$5 = '.data-api';
	const ARROW_LEFT_KEY$1 = 'ArrowLeft';
	const ARROW_RIGHT_KEY$1 = 'ArrowRight';
	const TOUCHEVENT_COMPAT_WAIT = 500;
	const ORDER_NEXT = 'next';
	const ORDER_PREV = 'prev';
	const DIRECTION_LEFT = 'left';
	const DIRECTION_RIGHT = 'right';
	const EVENT_SLIDE = `slide${EVENT_KEY$8}`;
	const EVENT_SLID = `slid${EVENT_KEY$8}`;
	const EVENT_KEYDOWN$1 = `keydown${EVENT_KEY$8}`;
	const EVENT_MOUSEENTER$1 = `mouseenter${EVENT_KEY$8}`;
	const EVENT_MOUSELEAVE$1 = `mouseleave${EVENT_KEY$8}`;
	const EVENT_DRAG_START = `dragstart${EVENT_KEY$8}`;
	const EVENT_LOAD_DATA_API$3 = `load${EVENT_KEY$8}${DATA_API_KEY$5}`;
	const EVENT_CLICK_DATA_API$5 = `click${EVENT_KEY$8}${DATA_API_KEY$5}`;
	const CLASS_NAME_CAROUSEL = 'carousel';
	const CLASS_NAME_ACTIVE$2 = 'active';
	const CLASS_NAME_SLIDE = 'slide';
	const CLASS_NAME_END = 'carousel-item-end';
	const CLASS_NAME_START = 'carousel-item-start';
	const CLASS_NAME_NEXT = 'carousel-item-next';
	const CLASS_NAME_PREV = 'carousel-item-prev';
	const SELECTOR_ACTIVE = '.active';
	const SELECTOR_ITEM = '.carousel-item';
	const SELECTOR_ACTIVE_ITEM = SELECTOR_ACTIVE + SELECTOR_ITEM;
	const SELECTOR_ITEM_IMG = '.carousel-item img';
	const SELECTOR_INDICATORS = '.carousel-indicators';
	const SELECTOR_DATA_SLIDE = '[data-bs-slide], [data-bs-slide-to]';
	const SELECTOR_DATA_RIDE = '[data-bs-ride="carousel"]';
	const KEY_TO_DIRECTION = {
	  [ARROW_LEFT_KEY$1]: DIRECTION_RIGHT,
	  [ARROW_RIGHT_KEY$1]: DIRECTION_LEFT
	};
	const Default$b = {
	  interval: 5000,
	  keyboard: true,
	  pause: 'hover',
	  ride: false,
	  touch: true,
	  wrap: true
	};
	const DefaultType$b = {
	  interval: '(number|boolean)',
	  keyboard: 'boolean',
	  pause: '(string|boolean)',
	  ride: '(boolean|string)',
	  touch: 'boolean',
	  wrap: 'boolean'
	};
	class Carousel extends BaseComponent {
	  constructor(element, config) {
	    super(element, config);
	    this._interval = null;
	    this._activeElement = null;
	    this._isSliding = false;
	    this.touchTimeout = null;
	    this._swipeHelper = null;
	    this._indicatorsElement = SelectorEngine.findOne(SELECTOR_INDICATORS, this._element);
	    this._addEventListeners();
	    if (this._config.ride === CLASS_NAME_CAROUSEL) {
	      this.cycle();
	    }
	  }
	  static get Default() {
	    return Default$b;
	  }
	  static get DefaultType() {
	    return DefaultType$b;
	  }
	  static get NAME() {
	    return NAME$c;
	  }
	  next() {
	    this._slide(ORDER_NEXT);
	  }
	  nextWhenVisible() {
	    if (!document.hidden && isVisible(this._element)) {
	      this.next();
	    }
	  }
	  prev() {
	    this._slide(ORDER_PREV);
	  }
	  pause() {
	    if (this._isSliding) {
	      triggerTransitionEnd(this._element);
	    }
	    this._clearInterval();
	  }
	  cycle() {
	    this._clearInterval();
	    this._updateInterval();
	    this._interval = setInterval(() => this.nextWhenVisible(), this._config.interval);
	  }
	  _maybeEnableCycle() {
	    if (!this._config.ride) {
	      return;
	    }
	    if (this._isSliding) {
	      EventHandler.one(this._element, EVENT_SLID, () => this.cycle());
	      return;
	    }
	    this.cycle();
	  }
	  to(index) {
	    const items = this._getItems();
	    if (index > items.length - 1 || index < 0) {
	      return;
	    }
	    if (this._isSliding) {
	      EventHandler.one(this._element, EVENT_SLID, () => this.to(index));
	      return;
	    }
	    const activeIndex = this._getItemIndex(this._getActive());
	    if (activeIndex === index) {
	      return;
	    }
	    const order = index > activeIndex ? ORDER_NEXT : ORDER_PREV;
	    this._slide(order, items[index]);
	  }
	  dispose() {
	    if (this._swipeHelper) {
	      this._swipeHelper.dispose();
	    }
	    super.dispose();
	  }
	  _configAfterMerge(config) {
	    config.defaultInterval = config.interval;
	    return config;
	  }
	  _addEventListeners() {
	    if (this._config.keyboard) {
	      EventHandler.on(this._element, EVENT_KEYDOWN$1, event => this._keydown(event));
	    }
	    if (this._config.pause === 'hover') {
	      EventHandler.on(this._element, EVENT_MOUSEENTER$1, () => this.pause());
	      EventHandler.on(this._element, EVENT_MOUSELEAVE$1, () => this._maybeEnableCycle());
	    }
	    if (this._config.touch && Swipe.isSupported()) {
	      this._addTouchEventListeners();
	    }
	  }
	  _addTouchEventListeners() {
	    for (const img of SelectorEngine.find(SELECTOR_ITEM_IMG, this._element)) {
	      EventHandler.on(img, EVENT_DRAG_START, event => event.preventDefault());
	    }
	    const endCallBack = () => {
	      if (this._config.pause !== 'hover') {
	        return;
	      }
	      this.pause();
	      if (this.touchTimeout) {
	        clearTimeout(this.touchTimeout);
	      }
	      this.touchTimeout = setTimeout(() => this._maybeEnableCycle(), TOUCHEVENT_COMPAT_WAIT + this._config.interval);
	    };
	    const swipeConfig = {
	      leftCallback: () => this._slide(this._directionToOrder(DIRECTION_LEFT)),
	      rightCallback: () => this._slide(this._directionToOrder(DIRECTION_RIGHT)),
	      endCallback: endCallBack
	    };
	    this._swipeHelper = new Swipe(this._element, swipeConfig);
	  }
	  _keydown(event) {
	    if (/input|textarea/i.test(event.target.tagName)) {
	      return;
	    }
	    const direction = KEY_TO_DIRECTION[event.key];
	    if (direction) {
	      event.preventDefault();
	      this._slide(this._directionToOrder(direction));
	    }
	  }
	  _getItemIndex(element) {
	    return this._getItems().indexOf(element);
	  }
	  _setActiveIndicatorElement(index) {
	    if (!this._indicatorsElement) {
	      return;
	    }
	    const activeIndicator = SelectorEngine.findOne(SELECTOR_ACTIVE, this._indicatorsElement);
	    activeIndicator.classList.remove(CLASS_NAME_ACTIVE$2);
	    activeIndicator.removeAttribute('aria-current');
	    const newActiveIndicator = SelectorEngine.findOne(`[data-bs-slide-to="${index}"]`, this._indicatorsElement);
	    if (newActiveIndicator) {
	      newActiveIndicator.classList.add(CLASS_NAME_ACTIVE$2);
	      newActiveIndicator.setAttribute('aria-current', 'true');
	    }
	  }
	  _updateInterval() {
	    const element = this._activeElement || this._getActive();
	    if (!element) {
	      return;
	    }
	    const elementInterval = Number.parseInt(element.getAttribute('data-bs-interval'), 10);
	    this._config.interval = elementInterval || this._config.defaultInterval;
	  }
	  _slide(order, element = null) {
	    if (this._isSliding) {
	      return;
	    }
	    const activeElement = this._getActive();
	    const isNext = order === ORDER_NEXT;
	    const nextElement = element || getNextActiveElement(this._getItems(), activeElement, isNext, this._config.wrap);
	    if (nextElement === activeElement) {
	      return;
	    }
	    const nextElementIndex = this._getItemIndex(nextElement);
	    const triggerEvent = eventName => {
	      return EventHandler.trigger(this._element, eventName, {
	        relatedTarget: nextElement,
	        direction: this._orderToDirection(order),
	        from: this._getItemIndex(activeElement),
	        to: nextElementIndex
	      });
	    };
	    const slideEvent = triggerEvent(EVENT_SLIDE);
	    if (slideEvent.defaultPrevented) {
	      return;
	    }
	    if (!activeElement || !nextElement) {
	      return;
	    }
	    const isCycling = Boolean(this._interval);
	    this.pause();
	    this._isSliding = true;
	    this._setActiveIndicatorElement(nextElementIndex);
	    this._activeElement = nextElement;
	    const directionalClassName = isNext ? CLASS_NAME_START : CLASS_NAME_END;
	    const orderClassName = isNext ? CLASS_NAME_NEXT : CLASS_NAME_PREV;
	    nextElement.classList.add(orderClassName);
	    reflow(nextElement);
	    activeElement.classList.add(directionalClassName);
	    nextElement.classList.add(directionalClassName);
	    const completeCallBack = () => {
	      nextElement.classList.remove(directionalClassName, orderClassName);
	      nextElement.classList.add(CLASS_NAME_ACTIVE$2);
	      activeElement.classList.remove(CLASS_NAME_ACTIVE$2, orderClassName, directionalClassName);
	      this._isSliding = false;
	      triggerEvent(EVENT_SLID);
	    };
	    this._queueCallback(completeCallBack, activeElement, this._isAnimated());
	    if (isCycling) {
	      this.cycle();
	    }
	  }
	  _isAnimated() {
	    return this._element.classList.contains(CLASS_NAME_SLIDE);
	  }
	  _getActive() {
	    return SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element);
	  }
	  _getItems() {
	    return SelectorEngine.find(SELECTOR_ITEM, this._element);
	  }
	  _clearInterval() {
	    if (this._interval) {
	      clearInterval(this._interval);
	      this._interval = null;
	    }
	  }
	  _directionToOrder(direction) {
	    if (isRTL()) {
	      return direction === DIRECTION_LEFT ? ORDER_PREV : ORDER_NEXT;
	    }
	    return direction === DIRECTION_LEFT ? ORDER_NEXT : ORDER_PREV;
	  }
	  _orderToDirection(order) {
	    if (isRTL()) {
	      return order === ORDER_PREV ? DIRECTION_LEFT : DIRECTION_RIGHT;
	    }
	    return order === ORDER_PREV ? DIRECTION_RIGHT : DIRECTION_LEFT;
	  }
	  static jQueryInterface(config) {
	    return this.each(function () {
	      const data = Carousel.getOrCreateInstance(this, config);
	      if (typeof config === 'number') {
	        data.to(config);
	        return;
	      }
	      if (typeof config === 'string') {
	        if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {
	          throw new TypeError(`No method named "${config}"`);
	        }
	        data[config]();
	      }
	    });
	  }
	}
	EventHandler.on(document, EVENT_CLICK_DATA_API$5, SELECTOR_DATA_SLIDE, function (event) {
	  const target = getElementFromSelector(this);
	  if (!target || !target.classList.contains(CLASS_NAME_CAROUSEL)) {
	    return;
	  }
	  event.preventDefault();
	  const carousel = Carousel.getOrCreateInstance(target);
	  const slideIndex = this.getAttribute('data-bs-slide-to');
	  if (slideIndex) {
	    carousel.to(slideIndex);
	    carousel._maybeEnableCycle();
	    return;
	  }
	  if (Manipulator.getDataAttribute(this, 'slide') === 'next') {
	    carousel.next();
	    carousel._maybeEnableCycle();
	    return;
	  }
	  carousel.prev();
	  carousel._maybeEnableCycle();
	});
	EventHandler.on(window, EVENT_LOAD_DATA_API$3, () => {
	  const carousels = SelectorEngine.find(SELECTOR_DATA_RIDE);
	  for (const carousel of carousels) {
	    Carousel.getOrCreateInstance(carousel);
	  }
	});
	defineJQueryPlugin(Carousel);
	const NAME$b = 'collapse';
	const DATA_KEY$7 = 'bs.collapse';
	const EVENT_KEY$7 = `.${DATA_KEY$7}`;
	const DATA_API_KEY$4 = '.data-api';
	const EVENT_SHOW$6 = `show${EVENT_KEY$7}`;
	const EVENT_SHOWN$6 = `shown${EVENT_KEY$7}`;
	const EVENT_HIDE$6 = `hide${EVENT_KEY$7}`;
	const EVENT_HIDDEN$6 = `hidden${EVENT_KEY$7}`;
	const EVENT_CLICK_DATA_API$4 = `click${EVENT_KEY$7}${DATA_API_KEY$4}`;
	const CLASS_NAME_SHOW$7 = 'show';
	const CLASS_NAME_COLLAPSE = 'collapse';
	const CLASS_NAME_COLLAPSING = 'collapsing';
	const CLASS_NAME_COLLAPSED = 'collapsed';
	const CLASS_NAME_DEEPER_CHILDREN = `:scope .${CLASS_NAME_COLLAPSE} .${CLASS_NAME_COLLAPSE}`;
	const CLASS_NAME_HORIZONTAL = 'collapse-horizontal';
	const WIDTH = 'width';
	const HEIGHT = 'height';
	const SELECTOR_ACTIVES = '.collapse.show, .collapse.collapsing';
	const SELECTOR_DATA_TOGGLE$4 = '[data-bs-toggle="collapse"]';
	const Default$a = {
	  parent: null,
	  toggle: true
	};
	const DefaultType$a = {
	  parent: '(null|element)',
	  toggle: 'boolean'
	};
	class Collapse extends BaseComponent {
	  constructor(element, config) {
	    super(element, config);
	    this._isTransitioning = false;
	    this._triggerArray = [];
	    const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE$4);
	    for (const elem of toggleList) {
	      const selector = getSelectorFromElement(elem);
	      const filterElement = SelectorEngine.find(selector).filter(foundElement => foundElement === this._element);
	      if (selector !== null && filterElement.length) {
	        this._triggerArray.push(elem);
	      }
	    }
	    this._initializeChildren();
	    if (!this._config.parent) {
	      this._addAriaAndCollapsedClass(this._triggerArray, this._isShown());
	    }
	    if (this._config.toggle) {
	      this.toggle();
	    }
	  }
	  static get Default() {
	    return Default$a;
	  }
	  static get DefaultType() {
	    return DefaultType$a;
	  }
	  static get NAME() {
	    return NAME$b;
	  }
	  toggle() {
	    if (this._isShown()) {
	      this.hide();
	    } else {
	      this.show();
	    }
	  }
	  show() {
	    if (this._isTransitioning || this._isShown()) {
	      return;
	    }
	    let activeChildren = [];
	    if (this._config.parent) {
	      activeChildren = this._getFirstLevelChildren(SELECTOR_ACTIVES).filter(element => element !== this._element).map(element => Collapse.getOrCreateInstance(element, {
	        toggle: false
	      }));
	    }
	    if (activeChildren.length && activeChildren[0]._isTransitioning) {
	      return;
	    }
	    const startEvent = EventHandler.trigger(this._element, EVENT_SHOW$6);
	    if (startEvent.defaultPrevented) {
	      return;
	    }
	    for (const activeInstance of activeChildren) {
	      activeInstance.hide();
	    }
	    const dimension = this._getDimension();
	    this._element.classList.remove(CLASS_NAME_COLLAPSE);
	    this._element.classList.add(CLASS_NAME_COLLAPSING);
	    this._element.style[dimension] = 0;
	    this._addAriaAndCollapsedClass(this._triggerArray, true);
	    this._isTransitioning = true;
	    const complete = () => {
	      this._isTransitioning = false;
	      this._element.classList.remove(CLASS_NAME_COLLAPSING);
	      this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW$7);
	      this._element.style[dimension] = '';
	      EventHandler.trigger(this._element, EVENT_SHOWN$6);
	    };
	    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);
	    const scrollSize = `scroll${capitalizedDimension}`;
	    this._queueCallback(complete, this._element, true);
	    this._element.style[dimension] = `${this._element[scrollSize]}px`;
	  }
	  hide() {
	    if (this._isTransitioning || !this._isShown()) {
	      return;
	    }
	    const startEvent = EventHandler.trigger(this._element, EVENT_HIDE$6);
	    if (startEvent.defaultPrevented) {
	      return;
	    }
	    const dimension = this._getDimension();
	    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`;
	    reflow(this._element);
	    this._element.classList.add(CLASS_NAME_COLLAPSING);
	    this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW$7);
	    for (const trigger of this._triggerArray) {
	      const element = getElementFromSelector(trigger);
	      if (element && !this._isShown(element)) {
	        this._addAriaAndCollapsedClass([trigger], false);
	      }
	    }
	    this._isTransitioning = true;
	    const complete = () => {
	      this._isTransitioning = false;
	      this._element.classList.remove(CLASS_NAME_COLLAPSING);
	      this._element.classList.add(CLASS_NAME_COLLAPSE);
	      EventHandler.trigger(this._element, EVENT_HIDDEN$6);
	    };
	    this._element.style[dimension] = '';
	    this._queueCallback(complete, this._element, true);
	  }
	  _isShown(element = this._element) {
	    return element.classList.contains(CLASS_NAME_SHOW$7);
	  }
	  _configAfterMerge(config) {
	    config.toggle = Boolean(config.toggle);
	    config.parent = getElement(config.parent);
	    return config;
	  }
	  _getDimension() {
	    return this._element.classList.contains(CLASS_NAME_HORIZONTAL) ? WIDTH : HEIGHT;
	  }
	  _initializeChildren() {
	    if (!this._config.parent) {
	      return;
	    }
	    const children = this._getFirstLevelChildren(SELECTOR_DATA_TOGGLE$4);
	    for (const element of children) {
	      const selected = getElementFromSelector(element);
	      if (selected) {
	        this._addAriaAndCollapsedClass([element], this._isShown(selected));
	      }
	    }
	  }
	  _getFirstLevelChildren(selector) {
	    const children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent);
	    return SelectorEngine.find(selector, this._config.parent).filter(element => !children.includes(element));
	  }
	  _addAriaAndCollapsedClass(triggerArray, isOpen) {
	    if (!triggerArray.length) {
	      return;
	    }
	    for (const element of triggerArray) {
	      element.classList.toggle(CLASS_NAME_COLLAPSED, !isOpen);
	      element.setAttribute('aria-expanded', isOpen);
	    }
	  }
	  static jQueryInterface(config) {
	    const _config = {};
	    if (typeof config === 'string' && /show|hide/.test(config)) {
	      _config.toggle = false;
	    }
	    return this.each(function () {
	      const data = Collapse.getOrCreateInstance(this, _config);
	      if (typeof config === 'string') {
	        if (typeof data[config] === 'undefined') {
	          throw new TypeError(`No method named "${config}"`);
	        }
	        data[config]();
	      }
	    });
	  }
	}
	EventHandler.on(document, EVENT_CLICK_DATA_API$4, SELECTOR_DATA_TOGGLE$4, function (event) {
	  if (event.target.tagName === 'A' || event.delegateTarget && event.delegateTarget.tagName === 'A') {
	    event.preventDefault();
	  }
	  const selector = getSelectorFromElement(this);
	  const selectorElements = SelectorEngine.find(selector);
	  for (const element of selectorElements) {
	    Collapse.getOrCreateInstance(element, {
	      toggle: false
	    }).toggle();
	  }
	});
	defineJQueryPlugin(Collapse);
	const NAME$a = 'dropdown';
	const DATA_KEY$6 = 'bs.dropdown';
	const EVENT_KEY$6 = `.${DATA_KEY$6}`;
	const DATA_API_KEY$3 = '.data-api';
	const ESCAPE_KEY$2 = 'Escape';
	const TAB_KEY$1 = 'Tab';
	const ARROW_UP_KEY$1 = 'ArrowUp';
	const ARROW_DOWN_KEY$1 = 'ArrowDown';
	const RIGHT_MOUSE_BUTTON = 2;
	const EVENT_HIDE$5 = `hide${EVENT_KEY$6}`;
	const EVENT_HIDDEN$5 = `hidden${EVENT_KEY$6}`;
	const EVENT_SHOW$5 = `show${EVENT_KEY$6}`;
	const EVENT_SHOWN$5 = `shown${EVENT_KEY$6}`;
	const EVENT_CLICK_DATA_API$3 = `click${EVENT_KEY$6}${DATA_API_KEY$3}`;
	const EVENT_KEYDOWN_DATA_API = `keydown${EVENT_KEY$6}${DATA_API_KEY$3}`;
	const EVENT_KEYUP_DATA_API = `keyup${EVENT_KEY$6}${DATA_API_KEY$3}`;
	const CLASS_NAME_SHOW$6 = 'show';
	const CLASS_NAME_DROPUP = 'dropup';
	const CLASS_NAME_DROPEND = 'dropend';
	const CLASS_NAME_DROPSTART = 'dropstart';
	const CLASS_NAME_DROPUP_CENTER = 'dropup-center';
	const CLASS_NAME_DROPDOWN_CENTER = 'dropdown-center';
	const SELECTOR_DATA_TOGGLE$3 = '[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)';
	const SELECTOR_DATA_TOGGLE_SHOWN = `${SELECTOR_DATA_TOGGLE$3}.${CLASS_NAME_SHOW$6}`;
	const SELECTOR_MENU = '.dropdown-menu';
	const SELECTOR_NAVBAR = '.navbar';
	const SELECTOR_NAVBAR_NAV = '.navbar-nav';
	const SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';
	const PLACEMENT_TOP = isRTL() ? 'top-end' : 'top-start';
	const PLACEMENT_TOPEND = isRTL() ? 'top-start' : 'top-end';
	const PLACEMENT_BOTTOM = isRTL() ? 'bottom-end' : 'bottom-start';
	const PLACEMENT_BOTTOMEND = isRTL() ? 'bottom-start' : 'bottom-end';
	const PLACEMENT_RIGHT = isRTL() ? 'left-start' : 'right-start';
	const PLACEMENT_LEFT = isRTL() ? 'right-start' : 'left-start';
	const PLACEMENT_TOPCENTER = 'top';
	const PLACEMENT_BOTTOMCENTER = 'bottom';
	const Default$9 = {
	  autoClose: true,
	  boundary: 'clippingParents',
	  display: 'dynamic',
	  offset: [0, 2],
	  popperConfig: null,
	  reference: 'toggle'
	};
	const DefaultType$9 = {
	  autoClose: '(boolean|string)',
	  boundary: '(string|element)',
	  display: 'string',
	  offset: '(array|string|function)',
	  popperConfig: '(null|object|function)',
	  reference: '(string|element|object)'
	};
	class Dropdown extends BaseComponent {
	  constructor(element, config) {
	    super(element, config);
	    this._popper = null;
	    this._parent = this._element.parentNode;
	    this._menu = SelectorEngine.findOne(SELECTOR_MENU, this._parent);
	    this._inNavbar = this._detectNavbar();
	  }
	  static get Default() {
	    return Default$9;
	  }
	  static get DefaultType() {
	    return DefaultType$9;
	  }
	  static get NAME() {
	    return NAME$a;
	  }
	  toggle() {
	    return this._isShown() ? this.hide() : this.show();
	  }
	  show() {
	    if (isDisabled(this._element) || this._isShown()) {
	      return;
	    }
	    const relatedTarget = {
	      relatedTarget: this._element
	    };
	    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$5, relatedTarget);
	    if (showEvent.defaultPrevented) {
	      return;
	    }
	    this._createPopper();
	    if ('ontouchstart' in document.documentElement && !this._parent.closest(SELECTOR_NAVBAR_NAV)) {
	      for (const element of [].concat(...document.body.children)) {
	        EventHandler.on(element, 'mouseover', noop);
	      }
	    }
	    this._element.focus();
	    this._element.setAttribute('aria-expanded', true);
	    this._menu.classList.add(CLASS_NAME_SHOW$6);
	    this._element.classList.add(CLASS_NAME_SHOW$6);
	    EventHandler.trigger(this._element, EVENT_SHOWN$5, relatedTarget);
	  }
	  hide() {
	    if (isDisabled(this._element) || !this._isShown()) {
	      return;
	    }
	    const relatedTarget = {
	      relatedTarget: this._element
	    };
	    this._completeHide(relatedTarget);
	  }
	  dispose() {
	    if (this._popper) {
	      this._popper.destroy();
	    }
	    super.dispose();
	  }
	  update() {
	    this._inNavbar = this._detectNavbar();
	    if (this._popper) {
	      this._popper.update();
	    }
	  }
	  _completeHide(relatedTarget) {
	    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$5, relatedTarget);
	    if (hideEvent.defaultPrevented) {
	      return;
	    }
	    if ('ontouchstart' in document.documentElement) {
	      for (const element of [].concat(...document.body.children)) {
	        EventHandler.off(element, 'mouseover', noop);
	      }
	    }
	    if (this._popper) {
	      this._popper.destroy();
	    }
	    this._menu.classList.remove(CLASS_NAME_SHOW$6);
	    this._element.classList.remove(CLASS_NAME_SHOW$6);
	    this._element.setAttribute('aria-expanded', 'false');
	    Manipulator.removeDataAttribute(this._menu, 'popper');
	    EventHandler.trigger(this._element, EVENT_HIDDEN$5, relatedTarget);
	  }
	  _getConfig(config) {
	    config = super._getConfig(config);
	    if (typeof config.reference === 'object' && !isElement(config.reference) && typeof config.reference.getBoundingClientRect !== 'function') {
	      throw new TypeError(`${NAME$a.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);
	    }
	    return config;
	  }
	  _createPopper() {
	    if (typeof Popper === 'undefined') {
	      throw new TypeError('Bootstrap\'s dropdowns require Popper (https://popper.js.org)');
	    }
	    let referenceElement = this._element;
	    if (this._config.reference === 'parent') {
	      referenceElement = this._parent;
	    } else if (isElement(this._config.reference)) {
	      referenceElement = getElement(this._config.reference);
	    } else if (typeof this._config.reference === 'object') {
	      referenceElement = this._config.reference;
	    }
	    const popperConfig = this._getPopperConfig();
	    this._popper = createPopper(referenceElement, this._menu, popperConfig);
	  }
	  _isShown() {
	    return this._menu.classList.contains(CLASS_NAME_SHOW$6);
	  }
	  _getPlacement() {
	    const parentDropdown = this._parent;
	    if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {
	      return PLACEMENT_RIGHT;
	    }
	    if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {
	      return PLACEMENT_LEFT;
	    }
	    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP_CENTER)) {
	      return PLACEMENT_TOPCENTER;
	    }
	    if (parentDropdown.classList.contains(CLASS_NAME_DROPDOWN_CENTER)) {
	      return PLACEMENT_BOTTOMCENTER;
	    }
	    const isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end';
	    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {
	      return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP;
	    }
	    return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM;
	  }
	  _detectNavbar() {
	    return this._element.closest(SELECTOR_NAVBAR) !== null;
	  }
	  _getOffset() {
	    const {
	      offset
	    } = this._config;
	    if (typeof offset === 'string') {
	      return offset.split(',').map(value => Number.parseInt(value, 10));
	    }
	    if (typeof offset === 'function') {
	      return popperData => offset(popperData, this._element);
	    }
	    return offset;
	  }
	  _getPopperConfig() {
	    const defaultBsPopperConfig = {
	      placement: this._getPlacement(),
	      modifiers: [{
	        name: 'preventOverflow',
	        options: {
	          boundary: this._config.boundary
	        }
	      }, {
	        name: 'offset',
	        options: {
	          offset: this._getOffset()
	        }
	      }]
	    };
	    if (this._inNavbar || this._config.display === 'static') {
	      Manipulator.setDataAttribute(this._menu, 'popper', 'static');
	      defaultBsPopperConfig.modifiers = [{
	        name: 'applyStyles',
	        enabled: false
	      }];
	    }
	    return { ...defaultBsPopperConfig,
	      ...(typeof this._config.popperConfig === 'function' ? this._config.popperConfig(defaultBsPopperConfig) : this._config.popperConfig)
	    };
	  }
	  _selectMenuItem({
	    key,
	    target
	  }) {
	    const items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(element => isVisible(element));
	    if (!items.length) {
	      return;
	    }
	    getNextActiveElement(items, target, key === ARROW_DOWN_KEY$1, !items.includes(target)).focus();
	  }
	  static jQueryInterface(config) {
	    return this.each(function () {
	      const data = Dropdown.getOrCreateInstance(this, config);
	      if (typeof config !== 'string') {
	        return;
	      }
	      if (typeof data[config] === 'undefined') {
	        throw new TypeError(`No method named "${config}"`);
	      }
	      data[config]();
	    });
	  }
	  static clearMenus(event) {
	    if (event.button === RIGHT_MOUSE_BUTTON || event.type === 'keyup' && event.key !== TAB_KEY$1) {
	      return;
	    }
	    const openToggles = SelectorEngine.find(SELECTOR_DATA_TOGGLE_SHOWN);
	    for (const toggle of openToggles) {
	      const context = Dropdown.getInstance(toggle);
	      if (!context || context._config.autoClose === false) {
	        continue;
	      }
	      const composedPath = event.composedPath();
	      const isMenuTarget = composedPath.includes(context._menu);
	      if (composedPath.includes(context._element) || context._config.autoClose === 'inside' && !isMenuTarget || context._config.autoClose === 'outside' && isMenuTarget) {
	        continue;
	      }
	      if (context._menu.contains(event.target) && (event.type === 'keyup' && event.key === TAB_KEY$1 || /input|select|option|textarea|form/i.test(event.target.tagName))) {
	        continue;
	      }
	      const relatedTarget = {
	        relatedTarget: context._element
	      };
	      if (event.type === 'click') {
	        relatedTarget.clickEvent = event;
	      }
	      context._completeHide(relatedTarget);
	    }
	  }
	  static dataApiKeydownHandler(event) {
	    const isInput = /input|textarea/i.test(event.target.tagName);
	    const isEscapeEvent = event.key === ESCAPE_KEY$2;
	    const isUpOrDownEvent = [ARROW_UP_KEY$1, ARROW_DOWN_KEY$1].includes(event.key);
	    if (!isUpOrDownEvent && !isEscapeEvent) {
	      return;
	    }
	    if (isInput && !isEscapeEvent) {
	      return;
	    }
	    event.preventDefault();
	    const getToggleButton = SelectorEngine.findOne(SELECTOR_DATA_TOGGLE$3, event.delegateTarget.parentNode);
	    const instance = Dropdown.getOrCreateInstance(getToggleButton);
	    if (isUpOrDownEvent) {
	      event.stopPropagation();
	      instance.show();
	      instance._selectMenuItem(event);
	      return;
	    }
	    if (instance._isShown()) {
	      event.stopPropagation();
	      instance.hide();
	      getToggleButton.focus();
	    }
	  }
	}
	EventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE$3, Dropdown.dataApiKeydownHandler);
	EventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler);
	EventHandler.on(document, EVENT_CLICK_DATA_API$3, Dropdown.clearMenus);
	EventHandler.on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus);
	EventHandler.on(document, EVENT_CLICK_DATA_API$3, SELECTOR_DATA_TOGGLE$3, function (event) {
	  event.preventDefault();
	  Dropdown.getOrCreateInstance(this).toggle();
	});
	defineJQueryPlugin(Dropdown);
	const SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';
	const SELECTOR_STICKY_CONTENT = '.sticky-top';
	const PROPERTY_PADDING = 'padding-right';
	const PROPERTY_MARGIN = 'margin-right';
	class ScrollBarHelper {
	  constructor() {
	    this._element = document.body;
	  }
	  getWidth() {
	    const documentWidth = document.documentElement.clientWidth;
	    return Math.abs(window.innerWidth - documentWidth);
	  }
	  hide() {
	    const width = this.getWidth();
	    this._disableOverFlow();
	    this._setElementAttributes(this._element, PROPERTY_PADDING, calculatedValue => calculatedValue + width);
	    this._setElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING, calculatedValue => calculatedValue + width);
	    this._setElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN, calculatedValue => calculatedValue - width);
	  }
	  reset() {
	    this._resetElementAttributes(this._element, 'overflow');
	    this._resetElementAttributes(this._element, PROPERTY_PADDING);
	    this._resetElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING);
	    this._resetElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN);
	  }
	  isOverflowing() {
	    return this.getWidth() > 0;
	  }
	  _disableOverFlow() {
	    this._saveInitialAttribute(this._element, 'overflow');
	    this._element.style.overflow = 'hidden';
	  }
	  _setElementAttributes(selector, styleProperty, callback) {
	    const scrollbarWidth = this.getWidth();
	    const manipulationCallBack = element => {
	      if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {
	        return;
	      }
	      this._saveInitialAttribute(element, styleProperty);
	      const calculatedValue = window.getComputedStyle(element).getPropertyValue(styleProperty);
	      element.style.setProperty(styleProperty, `${callback(Number.parseFloat(calculatedValue))}px`);
	    };
	    this._applyManipulationCallback(selector, manipulationCallBack);
	  }
	  _saveInitialAttribute(element, styleProperty) {
	    const actualValue = element.style.getPropertyValue(styleProperty);
	    if (actualValue) {
	      Manipulator.setDataAttribute(element, styleProperty, actualValue);
	    }
	  }
	  _resetElementAttributes(selector, styleProperty) {
	    const manipulationCallBack = element => {
	      const value = Manipulator.getDataAttribute(element, styleProperty);
	      if (value === null) {
	        element.style.removeProperty(styleProperty);
	        return;
	      }
	      Manipulator.removeDataAttribute(element, styleProperty);
	      element.style.setProperty(styleProperty, value);
	    };
	    this._applyManipulationCallback(selector, manipulationCallBack);
	  }
	  _applyManipulationCallback(selector, callBack) {
	    if (isElement(selector)) {
	      callBack(selector);
	      return;
	    }
	    for (const sel of SelectorEngine.find(selector, this._element)) {
	      callBack(sel);
	    }
	  }
	}
	const NAME$9 = 'backdrop';
	const CLASS_NAME_FADE$4 = 'fade';
	const CLASS_NAME_SHOW$5 = 'show';
	const EVENT_MOUSEDOWN = `mousedown.bs.${NAME$9}`;
	const Default$8 = {
	  className: 'modal-backdrop',
	  clickCallback: null,
	  isAnimated: false,
	  isVisible: true,
	  rootElement: 'body'
	};
	const DefaultType$8 = {
	  className: 'string',
	  clickCallback: '(function|null)',
	  isAnimated: 'boolean',
	  isVisible: 'boolean',
	  rootElement: '(element|string)'
	};
	class Backdrop extends Config {
	  constructor(config) {
	    super();
	    this._config = this._getConfig(config);
	    this._isAppended = false;
	    this._element = null;
	  }
	  static get Default() {
	    return Default$8;
	  }
	  static get DefaultType() {
	    return DefaultType$8;
	  }
	  static get NAME() {
	    return NAME$9;
	  }
	  show(callback) {
	    if (!this._config.isVisible) {
	      execute(callback);
	      return;
	    }
	    this._append();
	    const element = this._getElement();
	    if (this._config.isAnimated) {
	      reflow(element);
	    }
	    element.classList.add(CLASS_NAME_SHOW$5);
	    this._emulateAnimation(() => {
	      execute(callback);
	    });
	  }
	  hide(callback) {
	    if (!this._config.isVisible) {
	      execute(callback);
	      return;
	    }
	    this._getElement().classList.remove(CLASS_NAME_SHOW$5);
	    this._emulateAnimation(() => {
	      this.dispose();
	      execute(callback);
	    });
	  }
	  dispose() {
	    if (!this._isAppended) {
	      return;
	    }
	    EventHandler.off(this._element, EVENT_MOUSEDOWN);
	    this._element.remove();
	    this._isAppended = false;
	  }
	  _getElement() {
	    if (!this._element) {
	      const backdrop = document.createElement('div');
	      backdrop.className = this._config.className;
	      if (this._config.isAnimated) {
	        backdrop.classList.add(CLASS_NAME_FADE$4);
	      }
	      this._element = backdrop;
	    }
	    return this._element;
	  }
	  _configAfterMerge(config) {
	    config.rootElement = getElement(config.rootElement);
	    return config;
	  }
	  _append() {
	    if (this._isAppended) {
	      return;
	    }
	    const element = this._getElement();
	    this._config.rootElement.append(element);
	    EventHandler.on(element, EVENT_MOUSEDOWN, () => {
	      execute(this._config.clickCallback);
	    });
	    this._isAppended = true;
	  }
	  _emulateAnimation(callback) {
	    executeAfterTransition(callback, this._getElement(), this._config.isAnimated);
	  }
	}
	const NAME$8 = 'focustrap';
	const DATA_KEY$5 = 'bs.focustrap';
	const EVENT_KEY$5 = `.${DATA_KEY$5}`;
	const EVENT_FOCUSIN$2 = `focusin${EVENT_KEY$5}`;
	const EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY$5}`;
	const TAB_KEY = 'Tab';
	const TAB_NAV_FORWARD = 'forward';
	const TAB_NAV_BACKWARD = 'backward';
	const Default$7 = {
	  autofocus: true,
	  trapElement: null
	};
	const DefaultType$7 = {
	  autofocus: 'boolean',
	  trapElement: 'element'
	};
	class FocusTrap extends Config {
	  constructor(config) {
	    super();
	    this._config = this._getConfig(config);
	    this._isActive = false;
	    this._lastTabNavDirection = null;
	  }
	  static get Default() {
	    return Default$7;
	  }
	  static get DefaultType() {
	    return DefaultType$7;
	  }
	  static get NAME() {
	    return NAME$8;
	  }
	  activate() {
	    if (this._isActive) {
	      return;
	    }
	    if (this._config.autofocus) {
	      this._config.trapElement.focus();
	    }
	    EventHandler.off(document, EVENT_KEY$5);
	    EventHandler.on(document, EVENT_FOCUSIN$2, event => this._handleFocusin(event));
	    EventHandler.on(document, EVENT_KEYDOWN_TAB, event => this._handleKeydown(event));
	    this._isActive = true;
	  }
	  deactivate() {
	    if (!this._isActive) {
	      return;
	    }
	    this._isActive = false;
	    EventHandler.off(document, EVENT_KEY$5);
	  }
	  _handleFocusin(event) {
	    const {
	      trapElement
	    } = this._config;
	    if (event.target === document || event.target === trapElement || trapElement.contains(event.target)) {
	      return;
	    }
	    const elements = SelectorEngine.focusableChildren(trapElement);
	    if (elements.length === 0) {
	      trapElement.focus();
	    } else if (this._lastTabNavDirection === TAB_NAV_BACKWARD) {
	      elements[elements.length - 1].focus();
	    } else {
	      elements[0].focus();
	    }
	  }
	  _handleKeydown(event) {
	    if (event.key !== TAB_KEY) {
	      return;
	    }
	    this._lastTabNavDirection = event.shiftKey ? TAB_NAV_BACKWARD : TAB_NAV_FORWARD;
	  }
	}
	const NAME$7 = 'modal';
	const DATA_KEY$4 = 'bs.modal';
	const EVENT_KEY$4 = `.${DATA_KEY$4}`;
	const DATA_API_KEY$2 = '.data-api';
	const ESCAPE_KEY$1 = 'Escape';
	const EVENT_HIDE$4 = `hide${EVENT_KEY$4}`;
	const EVENT_HIDE_PREVENTED$1 = `hidePrevented${EVENT_KEY$4}`;
	const EVENT_HIDDEN$4 = `hidden${EVENT_KEY$4}`;
	const EVENT_SHOW$4 = `show${EVENT_KEY$4}`;
	const EVENT_SHOWN$4 = `shown${EVENT_KEY$4}`;
	const EVENT_RESIZE$1 = `resize${EVENT_KEY$4}`;
	const EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY$4}`;
	const EVENT_KEYDOWN_DISMISS$1 = `keydown.dismiss${EVENT_KEY$4}`;
	const EVENT_CLICK_DATA_API$2 = `click${EVENT_KEY$4}${DATA_API_KEY$2}`;
	const CLASS_NAME_OPEN = 'modal-open';
	const CLASS_NAME_FADE$3 = 'fade';
	const CLASS_NAME_SHOW$4 = 'show';
	const CLASS_NAME_STATIC = 'modal-static';
	const OPEN_SELECTOR$1 = '.modal.show';
	const SELECTOR_DIALOG = '.modal-dialog';
	const SELECTOR_MODAL_BODY = '.modal-body';
	const SELECTOR_DATA_TOGGLE$2 = '[data-bs-toggle="modal"]';
	const Default$6 = {
	  backdrop: true,
	  focus: true,
	  keyboard: true
	};
	const DefaultType$6 = {
	  backdrop: '(boolean|string)',
	  focus: 'boolean',
	  keyboard: 'boolean'
	};
	class Modal extends BaseComponent {
	  constructor(element, config) {
	    super(element, config);
	    this._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, this._element);
	    this._backdrop = this._initializeBackDrop();
	    this._focustrap = this._initializeFocusTrap();
	    this._isShown = false;
	    this._isTransitioning = false;
	    this._scrollBar = new ScrollBarHelper();
	    this._addEventListeners();
	  }
	  static get Default() {
	    return Default$6;
	  }
	  static get DefaultType() {
	    return DefaultType$6;
	  }
	  static get NAME() {
	    return NAME$7;
	  }
	  toggle(relatedTarget) {
	    return this._isShown ? this.hide() : this.show(relatedTarget);
	  }
	  show(relatedTarget) {
	    if (this._isShown || this._isTransitioning) {
	      return;
	    }
	    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$4, {
	      relatedTarget
	    });
	    if (showEvent.defaultPrevented) {
	      return;
	    }
	    this._isShown = true;
	    this._isTransitioning = true;
	    this._scrollBar.hide();
	    document.body.classList.add(CLASS_NAME_OPEN);
	    this._adjustDialog();
	    this._backdrop.show(() => this._showElement(relatedTarget));
	  }
	  hide() {
	    if (!this._isShown || this._isTransitioning) {
	      return;
	    }
	    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$4);
	    if (hideEvent.defaultPrevented) {
	      return;
	    }
	    this._isShown = false;
	    this._isTransitioning = true;
	    this._focustrap.deactivate();
	    this._element.classList.remove(CLASS_NAME_SHOW$4);
	    this._queueCallback(() => this._hideModal(), this._element, this._isAnimated());
	  }
	  dispose() {
	    for (const htmlElement of [window, this._dialog]) {
	      EventHandler.off(htmlElement, EVENT_KEY$4);
	    }
	    this._backdrop.dispose();
	    this._focustrap.deactivate();
	    super.dispose();
	  }
	  handleUpdate() {
	    this._adjustDialog();
	  }
	  _initializeBackDrop() {
	    return new Backdrop({
	      isVisible: Boolean(this._config.backdrop),
	      isAnimated: this._isAnimated()
	    });
	  }
	  _initializeFocusTrap() {
	    return new FocusTrap({
	      trapElement: this._element
	    });
	  }
	  _showElement(relatedTarget) {
	    if (!document.body.contains(this._element)) {
	      document.body.append(this._element);
	    }
	    this._element.style.display = 'block';
	    this._element.removeAttribute('aria-hidden');
	    this._element.setAttribute('aria-modal', true);
	    this._element.setAttribute('role', 'dialog');
	    this._element.scrollTop = 0;
	    const modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog);
	    if (modalBody) {
	      modalBody.scrollTop = 0;
	    }
	    reflow(this._element);
	    this._element.classList.add(CLASS_NAME_SHOW$4);
	    const transitionComplete = () => {
	      if (this._config.focus) {
	        this._focustrap.activate();
	      }
	      this._isTransitioning = false;
	      EventHandler.trigger(this._element, EVENT_SHOWN$4, {
	        relatedTarget
	      });
	    };
	    this._queueCallback(transitionComplete, this._dialog, this._isAnimated());
	  }
	  _addEventListeners() {
	    EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS$1, event => {
	      if (event.key !== ESCAPE_KEY$1) {
	        return;
	      }
	      if (this._config.keyboard) {
	        event.preventDefault();
	        this.hide();
	        return;
	      }
	      this._triggerBackdropTransition();
	    });
	    EventHandler.on(window, EVENT_RESIZE$1, () => {
	      if (this._isShown && !this._isTransitioning) {
	        this._adjustDialog();
	      }
	    });
	    EventHandler.on(this._element, EVENT_MOUSEDOWN_DISMISS, event => {
	      if (event.target !== event.currentTarget) {
	        return;
	      }
	      if (this._config.backdrop === 'static') {
	        this._triggerBackdropTransition();
	        return;
	      }
	      if (this._config.backdrop) {
	        this.hide();
	      }
	    });
	  }
	  _hideModal() {
	    this._element.style.display = 'none';
	    this._element.setAttribute('aria-hidden', true);
	    this._element.removeAttribute('aria-modal');
	    this._element.removeAttribute('role');
	    this._isTransitioning = false;
	    this._backdrop.hide(() => {
	      document.body.classList.remove(CLASS_NAME_OPEN);
	      this._resetAdjustments();
	      this._scrollBar.reset();
	      EventHandler.trigger(this._element, EVENT_HIDDEN$4);
	    });
	  }
	  _isAnimated() {
	    return this._element.classList.contains(CLASS_NAME_FADE$3);
	  }
	  _triggerBackdropTransition() {
	    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED$1);
	    if (hideEvent.defaultPrevented) {
	      return;
	    }
	    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;
	    const initialOverflowY = this._element.style.overflowY;
	    if (initialOverflowY === 'hidden' || this._element.classList.contains(CLASS_NAME_STATIC)) {
	      return;
	    }
	    if (!isModalOverflowing) {
	      this._element.style.overflowY = 'hidden';
	    }
	    this._element.classList.add(CLASS_NAME_STATIC);
	    this._queueCallback(() => {
	      this._element.classList.remove(CLASS_NAME_STATIC);
	      this._queueCallback(() => {
	        this._element.style.overflowY = initialOverflowY;
	      }, this._dialog);
	    }, this._dialog);
	    this._element.focus();
	  }
	  _adjustDialog() {
	    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;
	    const scrollbarWidth = this._scrollBar.getWidth();
	    const isBodyOverflowing = scrollbarWidth > 0;
	    if (isBodyOverflowing && !isModalOverflowing) {
	      const property = isRTL() ? 'paddingLeft' : 'paddingRight';
	      this._element.style[property] = `${scrollbarWidth}px`;
	    }
	    if (!isBodyOverflowing && isModalOverflowing) {
	      const property = isRTL() ? 'paddingRight' : 'paddingLeft';
	      this._element.style[property] = `${scrollbarWidth}px`;
	    }
	  }
	  _resetAdjustments() {
	    this._element.style.paddingLeft = '';
	    this._element.style.paddingRight = '';
	  }
	  static jQueryInterface(config, relatedTarget) {
	    return this.each(function () {
	      const data = Modal.getOrCreateInstance(this, config);
	      if (typeof config !== 'string') {
	        return;
	      }
	      if (typeof data[config] === 'undefined') {
	        throw new TypeError(`No method named "${config}"`);
	      }
	      data[config](relatedTarget);
	    });
	  }
	}
	EventHandler.on(document, EVENT_CLICK_DATA_API$2, SELECTOR_DATA_TOGGLE$2, function (event) {
	  const target = getElementFromSelector(this);
	  if (['A', 'AREA'].includes(this.tagName)) {
	    event.preventDefault();
	  }
	  EventHandler.one(target, EVENT_SHOW$4, showEvent => {
	    if (showEvent.defaultPrevented) {
	      return;
	    }
	    EventHandler.one(target, EVENT_HIDDEN$4, () => {
	      if (isVisible(this)) {
	        this.focus();
	      }
	    });
	  });
	  const alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR$1);
	  if (alreadyOpen) {
	    Modal.getInstance(alreadyOpen).hide();
	  }
	  const data = Modal.getOrCreateInstance(target);
	  data.toggle(this);
	});
	enableDismissTrigger(Modal);
	defineJQueryPlugin(Modal);
	const NAME$6 = 'offcanvas';
	const DATA_KEY$3 = 'bs.offcanvas';
	const EVENT_KEY$3 = `.${DATA_KEY$3}`;
	const DATA_API_KEY$1 = '.data-api';
	const EVENT_LOAD_DATA_API$2 = `load${EVENT_KEY$3}${DATA_API_KEY$1}`;
	const ESCAPE_KEY = 'Escape';
	const CLASS_NAME_SHOW$3 = 'show';
	const CLASS_NAME_SHOWING$1 = 'showing';
	const CLASS_NAME_HIDING = 'hiding';
	const CLASS_NAME_BACKDROP = 'offcanvas-backdrop';
	const OPEN_SELECTOR = '.offcanvas.show';
	const EVENT_SHOW$3 = `show${EVENT_KEY$3}`;
	const EVENT_SHOWN$3 = `shown${EVENT_KEY$3}`;
	const EVENT_HIDE$3 = `hide${EVENT_KEY$3}`;
	const EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY$3}`;
	const EVENT_HIDDEN$3 = `hidden${EVENT_KEY$3}`;
	const EVENT_RESIZE = `resize${EVENT_KEY$3}`;
	const EVENT_CLICK_DATA_API$1 = `click${EVENT_KEY$3}${DATA_API_KEY$1}`;
	const EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY$3}`;
	const SELECTOR_DATA_TOGGLE$1 = '[data-bs-toggle="offcanvas"]';
	const Default$5 = {
	  backdrop: true,
	  keyboard: true,
	  scroll: false
	};
	const DefaultType$5 = {
	  backdrop: '(boolean|string)',
	  keyboard: 'boolean',
	  scroll: 'boolean'
	};
	class Offcanvas extends BaseComponent {
	  constructor(element, config) {
	    super(element, config);
	    this._isShown = false;
	    this._backdrop = this._initializeBackDrop();
	    this._focustrap = this._initializeFocusTrap();
	    this._addEventListeners();
	  }
	  static get Default() {
	    return Default$5;
	  }
	  static get DefaultType() {
	    return DefaultType$5;
	  }
	  static get NAME() {
	    return NAME$6;
	  }
	  toggle(relatedTarget) {
	    return this._isShown ? this.hide() : this.show(relatedTarget);
	  }
	  show(relatedTarget) {
	    if (this._isShown) {
	      return;
	    }
	    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$3, {
	      relatedTarget
	    });
	    if (showEvent.defaultPrevented) {
	      return;
	    }
	    this._isShown = true;
	    this._backdrop.show();
	    if (!this._config.scroll) {
	      new ScrollBarHelper().hide();
	    }
	    this._element.setAttribute('aria-modal', true);
	    this._element.setAttribute('role', 'dialog');
	    this._element.classList.add(CLASS_NAME_SHOWING$1);
	    const completeCallBack = () => {
	      if (!this._config.scroll || this._config.backdrop) {
	        this._focustrap.activate();
	      }
	      this._element.classList.add(CLASS_NAME_SHOW$3);
	      this._element.classList.remove(CLASS_NAME_SHOWING$1);
	      EventHandler.trigger(this._element, EVENT_SHOWN$3, {
	        relatedTarget
	      });
	    };
	    this._queueCallback(completeCallBack, this._element, true);
	  }
	  hide() {
	    if (!this._isShown) {
	      return;
	    }
	    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$3);
	    if (hideEvent.defaultPrevented) {
	      return;
	    }
	    this._focustrap.deactivate();
	    this._element.blur();
	    this._isShown = false;
	    this._element.classList.add(CLASS_NAME_HIDING);
	    this._backdrop.hide();
	    const completeCallback = () => {
	      this._element.classList.remove(CLASS_NAME_SHOW$3, CLASS_NAME_HIDING);
	      this._element.removeAttribute('aria-modal');
	      this._element.removeAttribute('role');
	      if (!this._config.scroll) {
	        new ScrollBarHelper().reset();
	      }
	      EventHandler.trigger(this._element, EVENT_HIDDEN$3);
	    };
	    this._queueCallback(completeCallback, this._element, true);
	  }
	  dispose() {
	    this._backdrop.dispose();
	    this._focustrap.deactivate();
	    super.dispose();
	  }
	  _initializeBackDrop() {
	    const clickCallback = () => {
	      if (this._config.backdrop === 'static') {
	        EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED);
	        return;
	      }
	      this.hide();
	    };
	    const isVisible = Boolean(this._config.backdrop);
	    return new Backdrop({
	      className: CLASS_NAME_BACKDROP,
	      isVisible,
	      isAnimated: true,
	      rootElement: this._element.parentNode,
	      clickCallback: isVisible ? clickCallback : null
	    });
	  }
	  _initializeFocusTrap() {
	    return new FocusTrap({
	      trapElement: this._element
	    });
	  }
	  _addEventListeners() {
	    EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {
	      if (event.key !== ESCAPE_KEY) {
	        return;
	      }
	      if (!this._config.keyboard) {
	        EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED);
	        return;
	      }
	      this.hide();
	    });
	  }
	  static jQueryInterface(config) {
	    return this.each(function () {
	      const data = Offcanvas.getOrCreateInstance(this, config);
	      if (typeof config !== 'string') {
	        return;
	      }
	      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {
	        throw new TypeError(`No method named "${config}"`);
	      }
	      data[config](this);
	    });
	  }
	}
	EventHandler.on(document, EVENT_CLICK_DATA_API$1, SELECTOR_DATA_TOGGLE$1, function (event) {
	  const target = getElementFromSelector(this);
	  if (['A', 'AREA'].includes(this.tagName)) {
	    event.preventDefault();
	  }
	  if (isDisabled(this)) {
	    return;
	  }
	  EventHandler.one(target, EVENT_HIDDEN$3, () => {
	    if (isVisible(this)) {
	      this.focus();
	    }
	  });
	  const alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR);
	  if (alreadyOpen && alreadyOpen !== target) {
	    Offcanvas.getInstance(alreadyOpen).hide();
	  }
	  const data = Offcanvas.getOrCreateInstance(target);
	  data.toggle(this);
	});
	EventHandler.on(window, EVENT_LOAD_DATA_API$2, () => {
	  for (const selector of SelectorEngine.find(OPEN_SELECTOR)) {
	    Offcanvas.getOrCreateInstance(selector).show();
	  }
	});
	EventHandler.on(window, EVENT_RESIZE, () => {
	  for (const element of SelectorEngine.find('[aria-modal][class*=show][class*=offcanvas-]')) {
	    if (getComputedStyle(element).position !== 'fixed') {
	      Offcanvas.getOrCreateInstance(element).hide();
	    }
	  }
	});
	enableDismissTrigger(Offcanvas);
	defineJQueryPlugin(Offcanvas);
	const uriAttributes = new Set(['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href']);
	const ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i;
	const SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i;
	const DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;
	const allowedAttribute = (attribute, allowedAttributeList) => {
	  const attributeName = attribute.nodeName.toLowerCase();
	  if (allowedAttributeList.includes(attributeName)) {
	    if (uriAttributes.has(attributeName)) {
	      return Boolean(SAFE_URL_PATTERN.test(attribute.nodeValue) || DATA_URL_PATTERN.test(attribute.nodeValue));
	    }
	    return true;
	  }
	  return allowedAttributeList.filter(attributeRegex => attributeRegex instanceof RegExp).some(regex => regex.test(attributeName));
	};
	const DefaultAllowlist = {
	  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],
	  a: ['target', 'href', 'title', 'rel'],
	  area: [],
	  b: [],
	  br: [],
	  col: [],
	  code: [],
	  div: [],
	  em: [],
	  hr: [],
	  h1: [],
	  h2: [],
	  h3: [],
	  h4: [],
	  h5: [],
	  h6: [],
	  i: [],
	  img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],
	  li: [],
	  ol: [],
	  p: [],
	  pre: [],
	  s: [],
	  small: [],
	  span: [],
	  sub: [],
	  sup: [],
	  strong: [],
	  u: [],
	  ul: []
	};
	function sanitizeHtml(unsafeHtml, allowList, sanitizeFunction) {
	  if (!unsafeHtml.length) {
	    return unsafeHtml;
	  }
	  if (sanitizeFunction && typeof sanitizeFunction === 'function') {
	    return sanitizeFunction(unsafeHtml);
	  }
	  const domParser = new window.DOMParser();
	  const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');
	  const elements = [].concat(...createdDocument.body.querySelectorAll('*'));
	  for (const element of elements) {
	    const elementName = element.nodeName.toLowerCase();
	    if (!Object.keys(allowList).includes(elementName)) {
	      element.remove();
	      continue;
	    }
	    const attributeList = [].concat(...element.attributes);
	    const allowedAttributes = [].concat(allowList['*'] || [], allowList[elementName] || []);
	    for (const attribute of attributeList) {
	      if (!allowedAttribute(attribute, allowedAttributes)) {
	        element.removeAttribute(attribute.nodeName);
	      }
	    }
	  }
	  return createdDocument.body.innerHTML;
	}
	const NAME$5 = 'TemplateFactory';
	const Default$4 = {
	  allowList: DefaultAllowlist,
	  content: {},
	  extraClass: '',
	  html: false,
	  sanitize: true,
	  sanitizeFn: null,
	  template: '<div></div>'
	};
	const DefaultType$4 = {
	  allowList: 'object',
	  content: 'object',
	  extraClass: '(string|function)',
	  html: 'boolean',
	  sanitize: 'boolean',
	  sanitizeFn: '(null|function)',
	  template: 'string'
	};
	const DefaultContentType = {
	  entry: '(string|element|function|null)',
	  selector: '(string|element)'
	};
	class TemplateFactory extends Config {
	  constructor(config) {
	    super();
	    this._config = this._getConfig(config);
	  }
	  static get Default() {
	    return Default$4;
	  }
	  static get DefaultType() {
	    return DefaultType$4;
	  }
	  static get NAME() {
	    return NAME$5;
	  }
	  getContent() {
	    return Object.values(this._config.content).map(config => this._resolvePossibleFunction(config)).filter(Boolean);
	  }
	  hasContent() {
	    return this.getContent().length > 0;
	  }
	  changeContent(content) {
	    this._checkContent(content);
	    this._config.content = { ...this._config.content,
	      ...content
	    };
	    return this;
	  }
	  toHtml() {
	    const templateWrapper = document.createElement('div');
	    templateWrapper.innerHTML = this._maybeSanitize(this._config.template);
	    for (const [selector, text] of Object.entries(this._config.content)) {
	      this._setContent(templateWrapper, text, selector);
	    }
	    const template = templateWrapper.children[0];
	    const extraClass = this._resolvePossibleFunction(this._config.extraClass);
	    if (extraClass) {
	      template.classList.add(...extraClass.split(' '));
	    }
	    return template;
	  }
	  _typeCheckConfig(config) {
	    super._typeCheckConfig(config);
	    this._checkContent(config.content);
	  }
	  _checkContent(arg) {
	    for (const [selector, content] of Object.entries(arg)) {
	      super._typeCheckConfig({
	        selector,
	        entry: content
	      }, DefaultContentType);
	    }
	  }
	  _setContent(template, content, selector) {
	    const templateElement = SelectorEngine.findOne(selector, template);
	    if (!templateElement) {
	      return;
	    }
	    content = this._resolvePossibleFunction(content);
	    if (!content) {
	      templateElement.remove();
	      return;
	    }
	    if (isElement(content)) {
	      this._putElementInTemplate(getElement(content), templateElement);
	      return;
	    }
	    if (this._config.html) {
	      templateElement.innerHTML = this._maybeSanitize(content);
	      return;
	    }
	    templateElement.textContent = content;
	  }
	  _maybeSanitize(arg) {
	    return this._config.sanitize ? sanitizeHtml(arg, this._config.allowList, this._config.sanitizeFn) : arg;
	  }
	  _resolvePossibleFunction(arg) {
	    return typeof arg === 'function' ? arg(this) : arg;
	  }
	  _putElementInTemplate(element, templateElement) {
	    if (this._config.html) {
	      templateElement.innerHTML = '';
	      templateElement.append(element);
	      return;
	    }
	    templateElement.textContent = element.textContent;
	  }
	}
	const NAME$4 = 'tooltip';
	const DISALLOWED_ATTRIBUTES = new Set(['sanitize', 'allowList', 'sanitizeFn']);
	const CLASS_NAME_FADE$2 = 'fade';
	const CLASS_NAME_MODAL = 'modal';
	const CLASS_NAME_SHOW$2 = 'show';
	const SELECTOR_TOOLTIP_INNER = '.tooltip-inner';
	const SELECTOR_MODAL = `.${CLASS_NAME_MODAL}`;
	const EVENT_MODAL_HIDE = 'hide.bs.modal';
	const TRIGGER_HOVER = 'hover';
	const TRIGGER_FOCUS = 'focus';
	const TRIGGER_CLICK = 'click';
	const TRIGGER_MANUAL = 'manual';
	const EVENT_HIDE$2 = 'hide';
	const EVENT_HIDDEN$2 = 'hidden';
	const EVENT_SHOW$2 = 'show';
	const EVENT_SHOWN$2 = 'shown';
	const EVENT_INSERTED = 'inserted';
	const EVENT_CLICK$1 = 'click';
	const EVENT_FOCUSIN$1 = 'focusin';
	const EVENT_FOCUSOUT$1 = 'focusout';
	const EVENT_MOUSEENTER = 'mouseenter';
	const EVENT_MOUSELEAVE = 'mouseleave';
	const AttachmentMap = {
	  AUTO: 'auto',
	  TOP: 'top',
	  RIGHT: isRTL() ? 'left' : 'right',
	  BOTTOM: 'bottom',
	  LEFT: isRTL() ? 'right' : 'left'
	};
	const Default$3 = {
	  allowList: DefaultAllowlist,
	  animation: true,
	  boundary: 'clippingParents',
	  container: false,
	  customClass: '',
	  delay: 0,
	  fallbackPlacements: ['top', 'right', 'bottom', 'left'],
	  html: false,
	  offset: [0, 0],
	  placement: 'top',
	  popperConfig: null,
	  sanitize: true,
	  sanitizeFn: null,
	  selector: false,
	  template: '<div class="tooltip" role="tooltip">' + '<div class="tooltip-arrow"></div>' + '<div class="tooltip-inner"></div>' + '</div>',
	  title: '',
	  trigger: 'hover focus'
	};
	const DefaultType$3 = {
	  allowList: 'object',
	  animation: 'boolean',
	  boundary: '(string|element)',
	  container: '(string|element|boolean)',
	  customClass: '(string|function)',
	  delay: '(number|object)',
	  fallbackPlacements: 'array',
	  html: 'boolean',
	  offset: '(array|string|function)',
	  placement: '(string|function)',
	  popperConfig: '(null|object|function)',
	  sanitize: 'boolean',
	  sanitizeFn: '(null|function)',
	  selector: '(string|boolean)',
	  template: 'string',
	  title: '(string|element|function)',
	  trigger: 'string'
	};
	class Tooltip extends BaseComponent {
	  constructor(element, config) {
	    if (typeof Popper === 'undefined') {
	      throw new TypeError('Bootstrap\'s tooltips require Popper (https://popper.js.org)');
	    }
	    super(element, config);
	    this._isEnabled = true;
	    this._timeout = 0;
	    this._isHovered = false;
	    this._activeTrigger = {};
	    this._popper = null;
	    this._templateFactory = null;
	    this._newContent = null;
	    this.tip = null;
	    this._setListeners();
	  }
	  static get Default() {
	    return Default$3;
	  }
	  static get DefaultType() {
	    return DefaultType$3;
	  }
	  static get NAME() {
	    return NAME$4;
	  }
	  enable() {
	    this._isEnabled = true;
	  }
	  disable() {
	    this._isEnabled = false;
	  }
	  toggleEnabled() {
	    this._isEnabled = !this._isEnabled;
	  }
	  toggle(event) {
	    if (!this._isEnabled) {
	      return;
	    }
	    if (event) {
	      const context = this._initializeOnDelegatedTarget(event);
	      context._activeTrigger.click = !context._activeTrigger.click;
	      if (context._isWithActiveTrigger()) {
	        context._enter();
	      } else {
	        context._leave();
	      }
	      return;
	    }
	    if (this._isShown()) {
	      this._leave();
	      return;
	    }
	    this._enter();
	  }
	  dispose() {
	    clearTimeout(this._timeout);
	    EventHandler.off(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);
	    if (this.tip) {
	      this.tip.remove();
	    }
	    this._disposePopper();
	    super.dispose();
	  }
	  show() {
	    if (this._element.style.display === 'none') {
	      throw new Error('Please use show on visible elements');
	    }
	    if (!(this._isWithContent() && this._isEnabled)) {
	      return;
	    }
	    const showEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOW$2));
	    const shadowRoot = findShadowRoot(this._element);
	    const isInTheDom = (shadowRoot || this._element.ownerDocument.documentElement).contains(this._element);
	    if (showEvent.defaultPrevented || !isInTheDom) {
	      return;
	    }
	    if (this.tip) {
	      this.tip.remove();
	      this.tip = null;
	    }
	    const tip = this._getTipElement();
	    this._element.setAttribute('aria-describedby', tip.getAttribute('id'));
	    const {
	      container
	    } = this._config;
	    if (!this._element.ownerDocument.documentElement.contains(this.tip)) {
	      container.append(tip);
	      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_INSERTED));
	    }
	    if (this._popper) {
	      this._popper.update();
	    } else {
	      this._popper = this._createPopper(tip);
	    }
	    tip.classList.add(CLASS_NAME_SHOW$2);
	    if ('ontouchstart' in document.documentElement) {
	      for (const element of [].concat(...document.body.children)) {
	        EventHandler.on(element, 'mouseover', noop);
	      }
	    }
	    const complete = () => {
	      const previousHoverState = this._isHovered;
	      this._isHovered = false;
	      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOWN$2));
	      if (previousHoverState) {
	        this._leave();
	      }
	    };
	    this._queueCallback(complete, this.tip, this._isAnimated());
	  }
	  hide() {
	    if (!this._isShown()) {
	      return;
	    }
	    const hideEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDE$2));
	    if (hideEvent.defaultPrevented) {
	      return;
	    }
	    const tip = this._getTipElement();
	    tip.classList.remove(CLASS_NAME_SHOW$2);
	    if ('ontouchstart' in document.documentElement) {
	      for (const element of [].concat(...document.body.children)) {
	        EventHandler.off(element, 'mouseover', noop);
	      }
	    }
	    this._activeTrigger[TRIGGER_CLICK] = false;
	    this._activeTrigger[TRIGGER_FOCUS] = false;
	    this._activeTrigger[TRIGGER_HOVER] = false;
	    this._isHovered = false;
	    const complete = () => {
	      if (this._isWithActiveTrigger()) {
	        return;
	      }
	      if (!this._isHovered) {
	        tip.remove();
	      }
	      this._element.removeAttribute('aria-describedby');
	      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDDEN$2));
	      this._disposePopper();
	    };
	    this._queueCallback(complete, this.tip, this._isAnimated());
	  }
	  update() {
	    if (this._popper) {
	      this._popper.update();
	    }
	  }
	  _isWithContent() {
	    return Boolean(this._getTitle());
	  }
	  _getTipElement() {
	    if (!this.tip) {
	      this.tip = this._createTipElement(this._newContent || this._getContentForTemplate());
	    }
	    return this.tip;
	  }
	  _createTipElement(content) {
	    const tip = this._getTemplateFactory(content).toHtml();
	    if (!tip) {
	      return null;
	    }
	    tip.classList.remove(CLASS_NAME_FADE$2, CLASS_NAME_SHOW$2);
	    tip.classList.add(`bs-${this.constructor.NAME}-auto`);
	    const tipId = getUID(this.constructor.NAME).toString();
	    tip.setAttribute('id', tipId);
	    if (this._isAnimated()) {
	      tip.classList.add(CLASS_NAME_FADE$2);
	    }
	    return tip;
	  }
	  setContent(content) {
	    this._newContent = content;
	    if (this._isShown()) {
	      this._disposePopper();
	      this.show();
	    }
	  }
	  _getTemplateFactory(content) {
	    if (this._templateFactory) {
	      this._templateFactory.changeContent(content);
	    } else {
	      this._templateFactory = new TemplateFactory({ ...this._config,
	        content,
	        extraClass: this._resolvePossibleFunction(this._config.customClass)
	      });
	    }
	    return this._templateFactory;
	  }
	  _getContentForTemplate() {
	    return {
	      [SELECTOR_TOOLTIP_INNER]: this._getTitle()
	    };
	  }
	  _getTitle() {
	    return this._resolvePossibleFunction(this._config.title) || this._config.originalTitle;
	  }
	  _initializeOnDelegatedTarget(event) {
	    return this.constructor.getOrCreateInstance(event.delegateTarget, this._getDelegateConfig());
	  }
	  _isAnimated() {
	    return this._config.animation || this.tip && this.tip.classList.contains(CLASS_NAME_FADE$2);
	  }
	  _isShown() {
	    return this.tip && this.tip.classList.contains(CLASS_NAME_SHOW$2);
	  }
	  _createPopper(tip) {
	    const placement = typeof this._config.placement === 'function' ? this._config.placement.call(this, tip, this._element) : this._config.placement;
	    const attachment = AttachmentMap[placement.toUpperCase()];
	    return createPopper(this._element, tip, this._getPopperConfig(attachment));
	  }
	  _getOffset() {
	    const {
	      offset
	    } = this._config;
	    if (typeof offset === 'string') {
	      return offset.split(',').map(value => Number.parseInt(value, 10));
	    }
	    if (typeof offset === 'function') {
	      return popperData => offset(popperData, this._element);
	    }
	    return offset;
	  }
	  _resolvePossibleFunction(arg) {
	    return typeof arg === 'function' ? arg.call(this._element) : arg;
	  }
	  _getPopperConfig(attachment) {
	    const defaultBsPopperConfig = {
	      placement: attachment,
	      modifiers: [{
	        name: 'flip',
	        options: {
	          fallbackPlacements: this._config.fallbackPlacements
	        }
	      }, {
	        name: 'offset',
	        options: {
	          offset: this._getOffset()
	        }
	      }, {
	        name: 'preventOverflow',
	        options: {
	          boundary: this._config.boundary
	        }
	      }, {
	        name: 'arrow',
	        options: {
	          element: `.${this.constructor.NAME}-arrow`
	        }
	      }, {
	        name: 'preSetPlacement',
	        enabled: true,
	        phase: 'beforeMain',
	        fn: data => {
	          this._getTipElement().setAttribute('data-popper-placement', data.state.placement);
	        }
	      }]
	    };
	    return { ...defaultBsPopperConfig,
	      ...(typeof this._config.popperConfig === 'function' ? this._config.popperConfig(defaultBsPopperConfig) : this._config.popperConfig)
	    };
	  }
	  _setListeners() {
	    const triggers = this._config.trigger.split(' ');
	    for (const trigger of triggers) {
	      if (trigger === 'click') {
	        EventHandler.on(this._element, this.constructor.eventName(EVENT_CLICK$1), this._config.selector, event => this.toggle(event));
	      } else if (trigger !== TRIGGER_MANUAL) {
	        const eventIn = trigger === TRIGGER_HOVER ? this.constructor.eventName(EVENT_MOUSEENTER) : this.constructor.eventName(EVENT_FOCUSIN$1);
	        const eventOut = trigger === TRIGGER_HOVER ? this.constructor.eventName(EVENT_MOUSELEAVE) : this.constructor.eventName(EVENT_FOCUSOUT$1);
	        EventHandler.on(this._element, eventIn, this._config.selector, event => {
	          const context = this._initializeOnDelegatedTarget(event);
	          context._activeTrigger[event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER] = true;
	          context._enter();
	        });
	        EventHandler.on(this._element, eventOut, this._config.selector, event => {
	          const context = this._initializeOnDelegatedTarget(event);
	          context._activeTrigger[event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER] = context._element.contains(event.relatedTarget);
	          context._leave();
	        });
	      }
	    }
	    this._hideModalHandler = () => {
	      if (this._element) {
	        this.hide();
	      }
	    };
	    EventHandler.on(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);
	    if (this._config.selector) {
	      this._config = { ...this._config,
	        trigger: 'manual',
	        selector: ''
	      };
	    } else {
	      this._fixTitle();
	    }
	  }
	  _fixTitle() {
	    const title = this._config.originalTitle;
	    if (!title) {
	      return;
	    }
	    if (!this._element.getAttribute('aria-label') && !this._element.textContent.trim()) {
	      this._element.setAttribute('aria-label', title);
	    }
	    this._element.removeAttribute('title');
	  }
	  _enter() {
	    if (this._isShown() || this._isHovered) {
	      this._isHovered = true;
	      return;
	    }
	    this._isHovered = true;
	    this._setTimeout(() => {
	      if (this._isHovered) {
	        this.show();
	      }
	    }, this._config.delay.show);
	  }
	  _leave() {
	    if (this._isWithActiveTrigger()) {
	      return;
	    }
	    this._isHovered = false;
	    this._setTimeout(() => {
	      if (!this._isHovered) {
	        this.hide();
	      }
	    }, this._config.delay.hide);
	  }
	  _setTimeout(handler, timeout) {
	    clearTimeout(this._timeout);
	    this._timeout = setTimeout(handler, timeout);
	  }
	  _isWithActiveTrigger() {
	    return Object.values(this._activeTrigger).includes(true);
	  }
	  _getConfig(config) {
	    const dataAttributes = Manipulator.getDataAttributes(this._element);
	    for (const dataAttribute of Object.keys(dataAttributes)) {
	      if (DISALLOWED_ATTRIBUTES.has(dataAttribute)) {
	        delete dataAttributes[dataAttribute];
	      }
	    }
	    config = { ...dataAttributes,
	      ...(typeof config === 'object' && config ? config : {})
	    };
	    config = this._mergeConfigObj(config);
	    config = this._configAfterMerge(config);
	    this._typeCheckConfig(config);
	    return config;
	  }
	  _configAfterMerge(config) {
	    config.container = config.container === false ? document.body : getElement(config.container);
	    if (typeof config.delay === 'number') {
	      config.delay = {
	        show: config.delay,
	        hide: config.delay
	      };
	    }
	    config.originalTitle = this._element.getAttribute('title') || '';
	    if (typeof config.title === 'number') {
	      config.title = config.title.toString();
	    }
	    if (typeof config.content === 'number') {
	      config.content = config.content.toString();
	    }
	    return config;
	  }
	  _getDelegateConfig() {
	    const config = {};
	    for (const key in this._config) {
	      if (this.constructor.Default[key] !== this._config[key]) {
	        config[key] = this._config[key];
	      }
	    }
	    return config;
	  }
	  _disposePopper() {
	    if (this._popper) {
	      this._popper.destroy();
	      this._popper = null;
	    }
	  }
	  static jQueryInterface(config) {
	    return this.each(function () {
	      const data = Tooltip.getOrCreateInstance(this, config);
	      if (typeof config !== 'string') {
	        return;
	      }
	      if (typeof data[config] === 'undefined') {
	        throw new TypeError(`No method named "${config}"`);
	      }
	      data[config]();
	    });
	  }
	}
	defineJQueryPlugin(Tooltip);
	const NAME$3 = 'popover';
	const SELECTOR_TITLE = '.popover-header';
	const SELECTOR_CONTENT = '.popover-body';
	const Default$2 = { ...Tooltip.Default,
	  content: '',
	  offset: [0, 8],
	  placement: 'right',
	  template: '<div class="popover" role="tooltip">' + '<div class="popover-arrow"></div>' + '<h3 class="popover-header"></h3>' + '<div class="popover-body"></div>' + '</div>',
	  trigger: 'click'
	};
	const DefaultType$2 = { ...Tooltip.DefaultType,
	  content: '(null|string|element|function)'
	};
	class Popover extends Tooltip {
	  static get Default() {
	    return Default$2;
	  }
	  static get DefaultType() {
	    return DefaultType$2;
	  }
	  static get NAME() {
	    return NAME$3;
	  }
	  _isWithContent() {
	    return this._getTitle() || this._getContent();
	  }
	  _getContentForTemplate() {
	    return {
	      [SELECTOR_TITLE]: this._getTitle(),
	      [SELECTOR_CONTENT]: this._getContent()
	    };
	  }
	  _getContent() {
	    return this._resolvePossibleFunction(this._config.content);
	  }
	  static jQueryInterface(config) {
	    return this.each(function () {
	      const data = Popover.getOrCreateInstance(this, config);
	      if (typeof config !== 'string') {
	        return;
	      }
	      if (typeof data[config] === 'undefined') {
	        throw new TypeError(`No method named "${config}"`);
	      }
	      data[config]();
	    });
	  }
	}
	defineJQueryPlugin(Popover);
	const NAME$2 = 'scrollspy';
	const DATA_KEY$2 = 'bs.scrollspy';
	const EVENT_KEY$2 = `.${DATA_KEY$2}`;
	const DATA_API_KEY = '.data-api';
	const EVENT_ACTIVATE = `activate${EVENT_KEY$2}`;
	const EVENT_CLICK = `click${EVENT_KEY$2}`;
	const EVENT_LOAD_DATA_API$1 = `load${EVENT_KEY$2}${DATA_API_KEY}`;
	const CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';
	const CLASS_NAME_ACTIVE$1 = 'active';
	const SELECTOR_DATA_SPY = '[data-bs-spy="scroll"]';
	const SELECTOR_TARGET_LINKS = '[href]';
	const SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';
	const SELECTOR_NAV_LINKS = '.nav-link';
	const SELECTOR_NAV_ITEMS = '.nav-item';
	const SELECTOR_LIST_ITEMS = '.list-group-item';
	const SELECTOR_LINK_ITEMS = `${SELECTOR_NAV_LINKS}, ${SELECTOR_NAV_ITEMS} > ${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}`;
	const SELECTOR_DROPDOWN = '.dropdown';
	const SELECTOR_DROPDOWN_TOGGLE$1 = '.dropdown-toggle';
	const Default$1 = {
	  offset: null,
	  rootMargin: '0px 0px -25%',
	  smoothScroll: false,
	  target: null
	};
	const DefaultType$1 = {
	  offset: '(number|null)',
	  rootMargin: 'string',
	  smoothScroll: 'boolean',
	  target: 'element'
	};
	class ScrollSpy extends BaseComponent {
	  constructor(element, config) {
	    super(element, config);
	    this._targetLinks = new Map();
	    this._observableSections = new Map();
	    this._rootElement = getComputedStyle(this._element).overflowY === 'visible' ? null : this._element;
	    this._activeTarget = null;
	    this._observer = null;
	    this._previousScrollData = {
	      visibleEntryTop: 0,
	      parentScrollTop: 0
	    };
	    this.refresh();
	  }
	  static get Default() {
	    return Default$1;
	  }
	  static get DefaultType() {
	    return DefaultType$1;
	  }
	  static get NAME() {
	    return NAME$2;
	  }
	  refresh() {
	    this._initializeTargetsAndObservables();
	    this._maybeEnableSmoothScroll();
	    if (this._observer) {
	      this._observer.disconnect();
	    } else {
	      this._observer = this._getNewObserver();
	    }
	    for (const section of this._observableSections.values()) {
	      this._observer.observe(section);
	    }
	  }
	  dispose() {
	    this._observer.disconnect();
	    super.dispose();
	  }
	  _configAfterMerge(config) {
	    config.target = getElement(config.target) || document.body;
	    return config;
	  }
	  _maybeEnableSmoothScroll() {
	    if (!this._config.smoothScroll) {
	      return;
	    }
	    EventHandler.off(this._config.target, EVENT_CLICK);
	    EventHandler.on(this._config.target, EVENT_CLICK, SELECTOR_TARGET_LINKS, event => {
	      const observableSection = this._observableSections.get(event.target.hash);
	      if (observableSection) {
	        event.preventDefault();
	        const root = this._rootElement || window;
	        const height = observableSection.offsetTop - this._element.offsetTop;
	        if (root.scrollTo) {
	          root.scrollTo({
	            top: height,
	            behavior: 'smooth'
	          });
	          return;
	        }
	        root.scrollTop = height;
	      }
	    });
	  }
	  _getNewObserver() {
	    const options = {
	      root: this._rootElement,
	      threshold: [0.1, 0.5, 1],
	      rootMargin: this._getRootMargin()
	    };
	    return new IntersectionObserver(entries => this._observerCallback(entries), options);
	  }
	  _observerCallback(entries) {
	    const targetElement = entry => this._targetLinks.get(`#${entry.target.id}`);
	    const activate = entry => {
	      this._previousScrollData.visibleEntryTop = entry.target.offsetTop;
	      this._process(targetElement(entry));
	    };
	    const parentScrollTop = (this._rootElement || document.documentElement).scrollTop;
	    const userScrollsDown = parentScrollTop >= this._previousScrollData.parentScrollTop;
	    this._previousScrollData.parentScrollTop = parentScrollTop;
	    for (const entry of entries) {
	      if (!entry.isIntersecting) {
	        this._activeTarget = null;
	        this._clearActiveClass(targetElement(entry));
	        continue;
	      }
	      const entryIsLowerThanPrevious = entry.target.offsetTop >= this._previousScrollData.visibleEntryTop;
	      if (userScrollsDown && entryIsLowerThanPrevious) {
	        activate(entry);
	        if (!parentScrollTop) {
	          return;
	        }
	        continue;
	      }
	      if (!userScrollsDown && !entryIsLowerThanPrevious) {
	        activate(entry);
	      }
	    }
	  }
	  _getRootMargin() {
	    return this._config.offset ? `${this._config.offset}px 0px -30%` : this._config.rootMargin;
	  }
	  _initializeTargetsAndObservables() {
	    this._targetLinks = new Map();
	    this._observableSections = new Map();
	    const targetLinks = SelectorEngine.find(SELECTOR_TARGET_LINKS, this._config.target);
	    for (const anchor of targetLinks) {
	      if (!anchor.hash || isDisabled(anchor)) {
	        continue;
	      }
	      const observableSection = SelectorEngine.findOne(anchor.hash, this._element);
	      if (isVisible(observableSection)) {
	        this._targetLinks.set(anchor.hash, anchor);
	        this._observableSections.set(anchor.hash, observableSection);
	      }
	    }
	  }
	  _process(target) {
	    if (this._activeTarget === target) {
	      return;
	    }
	    this._clearActiveClass(this._config.target);
	    this._activeTarget = target;
	    target.classList.add(CLASS_NAME_ACTIVE$1);
	    this._activateParents(target);
	    EventHandler.trigger(this._element, EVENT_ACTIVATE, {
	      relatedTarget: target
	    });
	  }
	  _activateParents(target) {
	    if (target.classList.contains(CLASS_NAME_DROPDOWN_ITEM)) {
	      SelectorEngine.findOne(SELECTOR_DROPDOWN_TOGGLE$1, target.closest(SELECTOR_DROPDOWN)).classList.add(CLASS_NAME_ACTIVE$1);
	      return;
	    }
	    for (const listGroup of SelectorEngine.parents(target, SELECTOR_NAV_LIST_GROUP)) {
	      for (const item of SelectorEngine.prev(listGroup, SELECTOR_LINK_ITEMS)) {
	        item.classList.add(CLASS_NAME_ACTIVE$1);
	      }
	    }
	  }
	  _clearActiveClass(parent) {
	    parent.classList.remove(CLASS_NAME_ACTIVE$1);
	    const activeNodes = SelectorEngine.find(`${SELECTOR_TARGET_LINKS}.${CLASS_NAME_ACTIVE$1}`, parent);
	    for (const node of activeNodes) {
	      node.classList.remove(CLASS_NAME_ACTIVE$1);
	    }
	  }
	  static jQueryInterface(config) {
	    return this.each(function () {
	      const data = ScrollSpy.getOrCreateInstance(this, config);
	      if (typeof config !== 'string') {
	        return;
	      }
	      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {
	        throw new TypeError(`No method named "${config}"`);
	      }
	      data[config]();
	    });
	  }
	}
	EventHandler.on(window, EVENT_LOAD_DATA_API$1, () => {
	  for (const spy of SelectorEngine.find(SELECTOR_DATA_SPY)) {
	    ScrollSpy.getOrCreateInstance(spy);
	  }
	});
	defineJQueryPlugin(ScrollSpy);
	const NAME$1 = 'tab';
	const DATA_KEY$1 = 'bs.tab';
	const EVENT_KEY$1 = `.${DATA_KEY$1}`;
	const EVENT_HIDE$1 = `hide${EVENT_KEY$1}`;
	const EVENT_HIDDEN$1 = `hidden${EVENT_KEY$1}`;
	const EVENT_SHOW$1 = `show${EVENT_KEY$1}`;
	const EVENT_SHOWN$1 = `shown${EVENT_KEY$1}`;
	const EVENT_CLICK_DATA_API = `click${EVENT_KEY$1}`;
	const EVENT_KEYDOWN = `keydown${EVENT_KEY$1}`;
	const EVENT_LOAD_DATA_API = `load${EVENT_KEY$1}`;
	const ARROW_LEFT_KEY = 'ArrowLeft';
	const ARROW_RIGHT_KEY = 'ArrowRight';
	const ARROW_UP_KEY = 'ArrowUp';
	const ARROW_DOWN_KEY = 'ArrowDown';
	const CLASS_NAME_ACTIVE = 'active';
	const CLASS_NAME_FADE$1 = 'fade';
	const CLASS_NAME_SHOW$1 = 'show';
	const CLASS_DROPDOWN = 'dropdown';
	const SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';
	const SELECTOR_DROPDOWN_MENU = '.dropdown-menu';
	const SELECTOR_DROPDOWN_ITEM = '.dropdown-item';
	const NOT_SELECTOR_DROPDOWN_TOGGLE = ':not(.dropdown-toggle)';
	const SELECTOR_TAB_PANEL = '.list-group, .nav, [role="tablist"]';
	const SELECTOR_OUTER = '.nav-item, .list-group-item';
	const SELECTOR_INNER = `.nav-link${NOT_SELECTOR_DROPDOWN_TOGGLE}, .list-group-item${NOT_SELECTOR_DROPDOWN_TOGGLE}, [role="tab"]${NOT_SELECTOR_DROPDOWN_TOGGLE}`;
	const SELECTOR_DATA_TOGGLE = '[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]';
	const SELECTOR_INNER_ELEM = `${SELECTOR_INNER}, ${SELECTOR_DATA_TOGGLE}`;
	const SELECTOR_DATA_TOGGLE_ACTIVE = `.${CLASS_NAME_ACTIVE}[data-bs-toggle="tab"], .${CLASS_NAME_ACTIVE}[data-bs-toggle="pill"], .${CLASS_NAME_ACTIVE}[data-bs-toggle="list"]`;
	class Tab extends BaseComponent {
	  constructor(element) {
	    super(element);
	    this._parent = this._element.closest(SELECTOR_TAB_PANEL);
	    if (!this._parent) {
	      return;
	    }
	    this._setInitialAttributes(this._parent, this._getChildren());
	    EventHandler.on(this._element, EVENT_KEYDOWN, event => this._keydown(event));
	  }
	  static get NAME() {
	    return NAME$1;
	  }
	  show() {
	    const innerElem = this._element;
	    if (this._elemIsActive(innerElem)) {
	      return;
	    }
	    const active = this._getActiveElem();
	    const hideEvent = active ? EventHandler.trigger(active, EVENT_HIDE$1, {
	      relatedTarget: innerElem
	    }) : null;
	    const showEvent = EventHandler.trigger(innerElem, EVENT_SHOW$1, {
	      relatedTarget: active
	    });
	    if (showEvent.defaultPrevented || hideEvent && hideEvent.defaultPrevented) {
	      return;
	    }
	    this._deactivate(active, innerElem);
	    this._activate(innerElem, active);
	  }
	  _activate(element, relatedElem) {
	    if (!element) {
	      return;
	    }
	    element.classList.add(CLASS_NAME_ACTIVE);
	    this._activate(getElementFromSelector(element));
	    const complete = () => {
	      if (element.getAttribute('role') !== 'tab') {
	        element.classList.add(CLASS_NAME_SHOW$1);
	        return;
	      }
	      element.focus();
	      element.removeAttribute('tabindex');
	      element.setAttribute('aria-selected', true);
	      this._toggleDropDown(element, true);
	      EventHandler.trigger(element, EVENT_SHOWN$1, {
	        relatedTarget: relatedElem
	      });
	    };
	    this._queueCallback(complete, element, element.classList.contains(CLASS_NAME_FADE$1));
	  }
	  _deactivate(element, relatedElem) {
	    if (!element) {
	      return;
	    }
	    element.classList.remove(CLASS_NAME_ACTIVE);
	    element.blur();
	    this._deactivate(getElementFromSelector(element));
	    const complete = () => {
	      if (element.getAttribute('role') !== 'tab') {
	        element.classList.remove(CLASS_NAME_SHOW$1);
	        return;
	      }
	      element.setAttribute('aria-selected', false);
	      element.setAttribute('tabindex', '-1');
	      this._toggleDropDown(element, false);
	      EventHandler.trigger(element, EVENT_HIDDEN$1, {
	        relatedTarget: relatedElem
	      });
	    };
	    this._queueCallback(complete, element, element.classList.contains(CLASS_NAME_FADE$1));
	  }
	  _keydown(event) {
	    if (![ARROW_LEFT_KEY, ARROW_RIGHT_KEY, ARROW_UP_KEY, ARROW_DOWN_KEY].includes(event.key)) {
	      return;
	    }
	    event.stopPropagation();
	    event.preventDefault();
	    const isNext = [ARROW_RIGHT_KEY, ARROW_DOWN_KEY].includes(event.key);
	    const nextActiveElement = getNextActiveElement(this._getChildren().filter(element => !isDisabled(element)), event.target, isNext, true);
	    if (nextActiveElement) {
	      Tab.getOrCreateInstance(nextActiveElement).show();
	    }
	  }
	  _getChildren() {
	    return SelectorEngine.find(SELECTOR_INNER_ELEM, this._parent);
	  }
	  _getActiveElem() {
	    return this._getChildren().find(child => this._elemIsActive(child)) || null;
	  }
	  _setInitialAttributes(parent, children) {
	    this._setAttributeIfNotExists(parent, 'role', 'tablist');
	    for (const child of children) {
	      this._setInitialAttributesOnChild(child);
	    }
	  }
	  _setInitialAttributesOnChild(child) {
	    child = this._getInnerElement(child);
	    const isActive = this._elemIsActive(child);
	    const outerElem = this._getOuterElement(child);
	    child.setAttribute('aria-selected', isActive);
	    if (outerElem !== child) {
	      this._setAttributeIfNotExists(outerElem, 'role', 'presentation');
	    }
	    if (!isActive) {
	      child.setAttribute('tabindex', '-1');
	    }
	    this._setAttributeIfNotExists(child, 'role', 'tab');
	    this._setInitialAttributesOnTargetPanel(child);
	  }
	  _setInitialAttributesOnTargetPanel(child) {
	    const target = getElementFromSelector(child);
	    if (!target) {
	      return;
	    }
	    this._setAttributeIfNotExists(target, 'role', 'tabpanel');
	    if (child.id) {
	      this._setAttributeIfNotExists(target, 'aria-labelledby', `#${child.id}`);
	    }
	  }
	  _toggleDropDown(element, open) {
	    const outerElem = this._getOuterElement(element);
	    if (!outerElem.classList.contains(CLASS_DROPDOWN)) {
	      return;
	    }
	    const toggle = (selector, className) => {
	      const element = SelectorEngine.findOne(selector, outerElem);
	      if (element) {
	        element.classList.toggle(className, open);
	      }
	    };
	    toggle(SELECTOR_DROPDOWN_TOGGLE, CLASS_NAME_ACTIVE);
	    toggle(SELECTOR_DROPDOWN_MENU, CLASS_NAME_SHOW$1);
	    toggle(SELECTOR_DROPDOWN_ITEM, CLASS_NAME_ACTIVE);
	    outerElem.setAttribute('aria-expanded', open);
	  }
	  _setAttributeIfNotExists(element, attribute, value) {
	    if (!element.hasAttribute(attribute)) {
	      element.setAttribute(attribute, value);
	    }
	  }
	  _elemIsActive(elem) {
	    return elem.classList.contains(CLASS_NAME_ACTIVE);
	  }
	  _getInnerElement(elem) {
	    return elem.matches(SELECTOR_INNER_ELEM) ? elem : SelectorEngine.findOne(SELECTOR_INNER_ELEM, elem);
	  }
	  _getOuterElement(elem) {
	    return elem.closest(SELECTOR_OUTER) || elem;
	  }
	  static jQueryInterface(config) {
	    return this.each(function () {
	      const data = Tab.getOrCreateInstance(this);
	      if (typeof config !== 'string') {
	        return;
	      }
	      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {
	        throw new TypeError(`No method named "${config}"`);
	      }
	      data[config]();
	    });
	  }
	}
	EventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {
	  if (['A', 'AREA'].includes(this.tagName)) {
	    event.preventDefault();
	  }
	  if (isDisabled(this)) {
	    return;
	  }
	  Tab.getOrCreateInstance(this).show();
	});
	EventHandler.on(window, EVENT_LOAD_DATA_API, () => {
	  for (const element of SelectorEngine.find(SELECTOR_DATA_TOGGLE_ACTIVE)) {
	    Tab.getOrCreateInstance(element);
	  }
	});
	defineJQueryPlugin(Tab);
	const NAME = 'toast';
	const DATA_KEY = 'bs.toast';
	const EVENT_KEY = `.${DATA_KEY}`;
	const EVENT_MOUSEOVER = `mouseover${EVENT_KEY}`;
	const EVENT_MOUSEOUT = `mouseout${EVENT_KEY}`;
	const EVENT_FOCUSIN = `focusin${EVENT_KEY}`;
	const EVENT_FOCUSOUT = `focusout${EVENT_KEY}`;
	const EVENT_HIDE = `hide${EVENT_KEY}`;
	const EVENT_HIDDEN = `hidden${EVENT_KEY}`;
	const EVENT_SHOW = `show${EVENT_KEY}`;
	const EVENT_SHOWN = `shown${EVENT_KEY}`;
	const CLASS_NAME_FADE = 'fade';
	const CLASS_NAME_HIDE = 'hide';
	const CLASS_NAME_SHOW = 'show';
	const CLASS_NAME_SHOWING = 'showing';
	const DefaultType = {
	  animation: 'boolean',
	  autohide: 'boolean',
	  delay: 'number'
	};
	const Default = {
	  animation: true,
	  autohide: true,
	  delay: 5000
	};
	class Toast extends BaseComponent {
	  constructor(element, config) {
	    super(element, config);
	    this._timeout = null;
	    this._hasMouseInteraction = false;
	    this._hasKeyboardInteraction = false;
	    this._setListeners();
	  }
	  static get Default() {
	    return Default;
	  }
	  static get DefaultType() {
	    return DefaultType;
	  }
	  static get NAME() {
	    return NAME;
	  }
	  show() {
	    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW);
	    if (showEvent.defaultPrevented) {
	      return;
	    }
	    this._clearTimeout();
	    if (this._config.animation) {
	      this._element.classList.add(CLASS_NAME_FADE);
	    }
	    const complete = () => {
	      this._element.classList.remove(CLASS_NAME_SHOWING);
	      EventHandler.trigger(this._element, EVENT_SHOWN);
	      this._maybeScheduleHide();
	    };
	    this._element.classList.remove(CLASS_NAME_HIDE);
	    reflow(this._element);
	    this._element.classList.add(CLASS_NAME_SHOW, CLASS_NAME_SHOWING);
	    this._queueCallback(complete, this._element, this._config.animation);
	  }
	  hide() {
	    if (!this.isShown()) {
	      return;
	    }
	    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE);
	    if (hideEvent.defaultPrevented) {
	      return;
	    }
	    const complete = () => {
	      this._element.classList.add(CLASS_NAME_HIDE);
	      this._element.classList.remove(CLASS_NAME_SHOWING, CLASS_NAME_SHOW);
	      EventHandler.trigger(this._element, EVENT_HIDDEN);
	    };
	    this._element.classList.add(CLASS_NAME_SHOWING);
	    this._queueCallback(complete, this._element, this._config.animation);
	  }
	  dispose() {
	    this._clearTimeout();
	    if (this.isShown()) {
	      this._element.classList.remove(CLASS_NAME_SHOW);
	    }
	    super.dispose();
	  }
	  isShown() {
	    return this._element.classList.contains(CLASS_NAME_SHOW);
	  }
	  _maybeScheduleHide() {
	    if (!this._config.autohide) {
	      return;
	    }
	    if (this._hasMouseInteraction || this._hasKeyboardInteraction) {
	      return;
	    }
	    this._timeout = setTimeout(() => {
	      this.hide();
	    }, this._config.delay);
	  }
	  _onInteraction(event, isInteracting) {
	    switch (event.type) {
	      case 'mouseover':
	      case 'mouseout':
	        this._hasMouseInteraction = isInteracting;
	        break;
	      case 'focusin':
	      case 'focusout':
	        this._hasKeyboardInteraction = isInteracting;
	        break;
	    }
	    if (isInteracting) {
	      this._clearTimeout();
	      return;
	    }
	    const nextElement = event.relatedTarget;
	    if (this._element === nextElement || this._element.contains(nextElement)) {
	      return;
	    }
	    this._maybeScheduleHide();
	  }
	  _setListeners() {
	    EventHandler.on(this._element, EVENT_MOUSEOVER, event => this._onInteraction(event, true));
	    EventHandler.on(this._element, EVENT_MOUSEOUT, event => this._onInteraction(event, false));
	    EventHandler.on(this._element, EVENT_FOCUSIN, event => this._onInteraction(event, true));
	    EventHandler.on(this._element, EVENT_FOCUSOUT, event => this._onInteraction(event, false));
	  }
	  _clearTimeout() {
	    clearTimeout(this._timeout);
	    this._timeout = null;
	  }
	  static jQueryInterface(config) {
	    return this.each(function () {
	      const data = Toast.getOrCreateInstance(this, config);
	      if (typeof config === 'string') {
	        if (typeof data[config] === 'undefined') {
	          throw new TypeError(`No method named "${config}"`);
	        }
	        data[config](this);
	      }
	    });
	  }
	}
	enableDismissTrigger(Toast);
	defineJQueryPlugin(Toast);

	var bootstrap = /*#__PURE__*/Object.freeze({
		__proto__: null,
		Alert: Alert,
		Button: Button,
		Carousel: Carousel,
		Collapse: Collapse,
		Dropdown: Dropdown,
		Modal: Modal,
		Offcanvas: Offcanvas,
		Popover: Popover,
		ScrollSpy: ScrollSpy,
		Tab: Tab,
		Toast: Toast,
		Tooltip: Tooltip
	});

	var dropdownTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="dropdown"]'));
	dropdownTriggerList.map(function (dropdownTriggerEl) {
	  return new Dropdown(dropdownTriggerEl);
	});

	var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
	tooltipTriggerList.map(function (tooltipTriggerEl) {
	  var _ref, _tooltipTriggerEl$get;
	  var options = {
	    delay: {
	      show: 50,
	      hide: 50
	    },
	    html: (_ref = tooltipTriggerEl.getAttribute("data-bs-html") === "true") !== null && _ref !== void 0 ? _ref : false,
	    placement: (_tooltipTriggerEl$get = tooltipTriggerEl.getAttribute('data-bs-placement')) !== null && _tooltipTriggerEl$get !== void 0 ? _tooltipTriggerEl$get : 'auto'
	  };
	  return new Tooltip(tooltipTriggerEl, options);
	});

	var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));
	popoverTriggerList.map(function (popoverTriggerEl) {
	  var _ref, _popoverTriggerEl$get;
	  var options = {
	    delay: {
	      show: 50,
	      hide: 50
	    },
	    html: (_ref = popoverTriggerEl.getAttribute('data-bs-html') === "true") !== null && _ref !== void 0 ? _ref : false,
	    placement: (_popoverTriggerEl$get = popoverTriggerEl.getAttribute('data-bs-placement')) !== null && _popoverTriggerEl$get !== void 0 ? _popoverTriggerEl$get : 'auto'
	  };
	  return new Popover(popoverTriggerEl, options);
	});

	var switchesTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="switch-icon"]'));
	switchesTriggerList.map(function (switchTriggerEl) {
	  switchTriggerEl.addEventListener('click', function (e) {
	    e.stopPropagation();
	    switchTriggerEl.classList.toggle('active');
	  });
	});

	var EnableActivationTabsFromLocationHash = function EnableActivationTabsFromLocationHash() {
	  var locationHash = window.location.hash;
	  if (locationHash) {
	    var tabsList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tab"]'));
	    var matchedTabs = tabsList.filter(function (tab) {
	      return tab.hash === locationHash;
	    });
	    matchedTabs.map(function (tab) {
	      new Tab(tab).show();
	    });
	  }
	};
	EnableActivationTabsFromLocationHash();

	var toastsTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="toast"]'));
	toastsTriggerList.map(function (toastTriggerEl) {
	  return new Toast(toastTriggerEl);
	});

	window.bootstrap = bootstrap;

}));


/***/ }),

/***/ "./Resources/assets/js/app.js":
/*!************************************!*\
  !*** ./Resources/assets/js/app.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var ractive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ractive */ "./node_modules/ractive/ractive.mjs");
/* harmony import */ var routerjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! routerjs */ "./node_modules/routerjs/dist/router.esm.js");
/* harmony import */ var _appView_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./appView.html */ "./Resources/assets/js/appView.html");
/* harmony import */ var _appView_html__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_appView_html__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tabler_core_dist_js_tabler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tabler/core/dist/js/tabler */ "./node_modules/@tabler/core/dist/js/tabler.js");
/* harmony import */ var _tabler_core_dist_js_tabler__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tabler_core_dist_js_tabler__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _tabler_core_dist_css_tabler_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tabler/core/dist/css/tabler.css */ "./node_modules/@tabler/core/dist/css/tabler.css");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }






var App = ractive__WEBPACK_IMPORTED_MODULE_0__["default"].extend({
  target: "#app",
  template: (_appView_html__WEBPACK_IMPORTED_MODULE_1___default()),
  oncomplete: function oncomplete() {
    this.router = (0,routerjs__WEBPACK_IMPORTED_MODULE_4__.createRouter)({
      engine: (0,routerjs__WEBPACK_IMPORTED_MODULE_4__.BrowserHistoryEngine)({
        bindClick: false
      }),
      basePath: "/auth"
    }) // Define the route matching a path with a callback
    .get('/login', /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, context) {
        var Dashboard;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return __webpack_require__.e(/*! import() */ "Resources_assets_js_login_Login_js").then(__webpack_require__.bind(__webpack_require__, /*! ./login/Login */ "./Resources/assets/js/login/Login.js"));

              case 2:
                Dashboard = _context.sent["default"];
                new Dashboard({
                  target: "#app"
                });

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x, _x2) {
        return _ref.apply(this, arguments);
      };
    }()).get("/register", /*#__PURE__*/function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, context) {
        var Dashboard;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return __webpack_require__.e(/*! import() */ "Resources_assets_js_register_Register_js").then(__webpack_require__.bind(__webpack_require__, /*! ./register/Register */ "./Resources/assets/js/register/Register.js"));

              case 2:
                Dashboard = _context2.sent["default"];
                new Dashboard({
                  target: "#app"
                });

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      return function (_x3, _x4) {
        return _ref2.apply(this, arguments);
      };
    }()).get("/forgot-password", /*#__PURE__*/function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, context) {
        var Dashboard;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return __webpack_require__.e(/*! import() */ "Resources_assets_js_register_Register_js").then(__webpack_require__.bind(__webpack_require__, /*! ./register/Register */ "./Resources/assets/js/register/Register.js"));

              case 2:
                Dashboard = _context3.sent["default"];
                new Dashboard({
                  target: "#app"
                });

              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      return function (_x5, _x6) {
        return _ref3.apply(this, arguments);
      };
    }()).get("/logout", /*#__PURE__*/function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, context) {
        var Dashboard;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return __webpack_require__.e(/*! import() */ "Resources_assets_js_register_Register_js").then(__webpack_require__.bind(__webpack_require__, /*! ./register/Register */ "./Resources/assets/js/register/Register.js"));

              case 2:
                Dashboard = _context4.sent["default"];
                new Dashboard({
                  target: "#app"
                });

              case 4:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      return function (_x7, _x8) {
        return _ref4.apply(this, arguments);
      };
    }()).run();
  }
});
new App();

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./node_modules/@tabler/core/dist/css/tabler.css":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./node_modules/@tabler/core/dist/css/tabler.css ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/*!\n* Tabler v1.0.0-beta11 (https://tabler.io)\n* @version 1.0.0-beta11\n* @link https://tabler.io\n* Copyright 2018-2022 The Tabler Authors\n* Copyright 2018-2022 codecalm.net PaweÅ‚ Kuna\n* Licensed under MIT (https://github.com/tabler/tabler/blob/master/LICENSE)\n*/\n@charset \"UTF-8\";\n:root {\n  --tblr-blue: #206bc4;\n  --tblr-indigo: #4263eb;\n  --tblr-purple: #ae3ec9;\n  --tblr-pink: #d6336c;\n  --tblr-red: #d63939;\n  --tblr-orange: #f76707;\n  --tblr-yellow: #f59f00;\n  --tblr-green: #2fb344;\n  --tblr-teal: #0ca678;\n  --tblr-cyan: #17a2b8;\n  --tblr-black: #000000;\n  --tblr-white: #ffffff;\n  --tblr-gray: #475569;\n  --tblr-gray-dark: #1e293b;\n  --tblr-gray-100: #f1f5f9;\n  --tblr-gray-200: #e2e8f0;\n  --tblr-gray-300: #cbd5e1;\n  --tblr-gray-400: #94a3b8;\n  --tblr-gray-500: #64748b;\n  --tblr-gray-600: #475569;\n  --tblr-gray-700: #334155;\n  --tblr-gray-800: #1e293b;\n  --tblr-gray-900: #0f172a;\n  --tblr-primary: #206bc4;\n  --tblr-secondary: #626976;\n  --tblr-success: #2fb344;\n  --tblr-info: #4299e1;\n  --tblr-warning: #f76707;\n  --tblr-danger: #d63939;\n  --tblr-light: #fafbfc;\n  --tblr-dark: #1e293b;\n  --tblr-muted: #626976;\n  --tblr-blue: #206bc4;\n  --tblr-azure: #4299e1;\n  --tblr-indigo: #4263eb;\n  --tblr-purple: #ae3ec9;\n  --tblr-pink: #d6336c;\n  --tblr-red: #d63939;\n  --tblr-orange: #f76707;\n  --tblr-yellow: #f59f00;\n  --tblr-lime: #74b816;\n  --tblr-green: #2fb344;\n  --tblr-teal: #0ca678;\n  --tblr-cyan: #17a2b8;\n  --tblr-facebook: #3b5998;\n  --tblr-twitter: #1da1f2;\n  --tblr-linkedin: #0a66c2;\n  --tblr-google: #dc4e41;\n  --tblr-youtube: #ff0000;\n  --tblr-vimeo: #1ab7ea;\n  --tblr-dribbble: #ea4c89;\n  --tblr-github: #181717;\n  --tblr-instagram: #e4405f;\n  --tblr-pinterest: #bd081c;\n  --tblr-vk: #6383a8;\n  --tblr-rss: #ffa500;\n  --tblr-flickr: #0063dc;\n  --tblr-bitbucket: #0052cc;\n  --tblr-tabler: #206bc4;\n  --tblr-primary-rgb: 32, 107, 196;\n  --tblr-secondary-rgb: 98, 105, 118;\n  --tblr-success-rgb: 47, 179, 68;\n  --tblr-info-rgb: 66, 153, 225;\n  --tblr-warning-rgb: 247, 103, 7;\n  --tblr-danger-rgb: 214, 57, 57;\n  --tblr-light-rgb: 250, 251, 252;\n  --tblr-dark-rgb: 30, 41, 59;\n  --tblr-muted-rgb: 98, 105, 118;\n  --tblr-blue-rgb: 32, 107, 196;\n  --tblr-azure-rgb: 66, 153, 225;\n  --tblr-indigo-rgb: 66, 99, 235;\n  --tblr-purple-rgb: 174, 62, 201;\n  --tblr-pink-rgb: 214, 51, 108;\n  --tblr-red-rgb: 214, 57, 57;\n  --tblr-orange-rgb: 247, 103, 7;\n  --tblr-yellow-rgb: 245, 159, 0;\n  --tblr-lime-rgb: 116, 184, 22;\n  --tblr-green-rgb: 47, 179, 68;\n  --tblr-teal-rgb: 12, 166, 120;\n  --tblr-cyan-rgb: 23, 162, 184;\n  --tblr-facebook-rgb: 59, 89, 152;\n  --tblr-twitter-rgb: 29, 161, 242;\n  --tblr-linkedin-rgb: 10, 102, 194;\n  --tblr-google-rgb: 220, 78, 65;\n  --tblr-youtube-rgb: 255, 0, 0;\n  --tblr-vimeo-rgb: 26, 183, 234;\n  --tblr-dribbble-rgb: 234, 76, 137;\n  --tblr-github-rgb: 24, 23, 23;\n  --tblr-instagram-rgb: 228, 64, 95;\n  --tblr-pinterest-rgb: 189, 8, 28;\n  --tblr-vk-rgb: 99, 131, 168;\n  --tblr-rss-rgb: 255, 165, 0;\n  --tblr-flickr-rgb: 0, 99, 220;\n  --tblr-bitbucket-rgb: 0, 82, 204;\n  --tblr-tabler-rgb: 32, 107, 196;\n  --tblr-white-rgb: 255, 255, 255;\n  --tblr-black-rgb: 0, 0, 0;\n  --tblr-body-color-rgb: 30, 41, 59;\n  --tblr-body-bg-rgb: 245, 247, 251;\n  --tblr-font-sans-serif:    -apple-system, BlinkMacSystemFont, San Francisco, Segoe UI, Roboto, Helvetica Neue, sans-serif;\n  --tblr-font-monospace:  Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;\n  --tblr-gradient: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));\n  --tblr-body-font-family: var(--tblr-font-sans-serif);\n  --tblr-body-font-size: 0.875rem;\n  --tblr-body-font-weight: 400;\n  --tblr-body-line-height: 1.4285714286;\n  --tblr-body-color: #1e293b;\n  --tblr-body-bg: #f5f7fb;\n  --tblr-border-width: 1px;\n  --tblr-border-style: solid;\n  --tblr-border-color: #e6e7e9;\n  --tblr-border-color-translucent: rgba(0, 0, 0, 0.175);\n  --tblr-border-radius: 4px;\n  --tblr-border-radius-sm: 2px;\n  --tblr-border-radius-lg: 8px;\n  --tblr-border-radius-xl: 1rem;\n  --tblr-border-radius-2xl: 2rem;\n  --tblr-border-radius-pill: 100rem;\n  --tblr-link-color: #206bc4;\n  --tblr-link-hover-color: #1a569d;\n  --tblr-code-color: #4b5462;\n  --tblr-highlight-bg: #fdeccc;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  :root {\n    scroll-behavior: smooth;\n  }\n}\n\nbody {\n  margin: 0;\n  font-family: var(--tblr-body-font-family);\n  font-size: var(--tblr-body-font-size);\n  font-weight: var(--tblr-body-font-weight);\n  line-height: var(--tblr-body-line-height);\n  color: var(--tblr-body-color);\n  text-align: var(--tblr-body-text-align);\n  background-color: var(--tblr-body-bg);\n  -webkit-text-size-adjust: 100%;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\nhr, .hr {\n  margin: 2rem 0;\n  color: inherit;\n  border: 0;\n  border-top: 1px solid;\n  opacity: 0.16;\n}\n\nh6, .h6, h5, .h5, h4, .h4, h3, .h3, h2, .h2, h1, .h1 {\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n  line-height: 1.2;\n}\n\nh1, .h1 {\n  font-size: 1.5rem;\n}\n\nh2, .h2 {\n  font-size: 1.25rem;\n}\n\nh3, .h3 {\n  font-size: 1rem;\n}\n\nh4, .h4 {\n  font-size: 0.875rem;\n}\n\nh5, .h5 {\n  font-size: 0.75rem;\n}\n\nh6, .h6 {\n  font-size: 0.625rem;\n}\n\np {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\nabbr[title] {\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n  cursor: help;\n  -webkit-text-decoration-skip-ink: none;\n          text-decoration-skip-ink: none;\n}\n\naddress {\n  margin-bottom: 1rem;\n  font-style: normal;\n  line-height: inherit;\n}\n\nol,\nul {\n  padding-left: 2rem;\n}\n\nol,\nul,\ndl {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\nol ol,\nul ul,\nol ul,\nul ol {\n  margin-bottom: 0;\n}\n\ndt {\n  font-weight: 600;\n}\n\ndd {\n  margin-bottom: 0.5rem;\n  margin-left: 0;\n}\n\nblockquote {\n  margin: 0 0 1rem;\n}\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\nsmall, .small {\n  font-size: 85.71428571%;\n}\n\nmark, .mark {\n  padding: 0.1875em;\n  background-color: var(--tblr-highlight-bg);\n}\n\nsub,\nsup {\n  position: relative;\n  font-size: 0.75em;\n  line-height: 0;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\na {\n  color: var(--tblr-link-color);\n  text-decoration: none;\n}\na:hover {\n  color: var(--tblr-link-hover-color);\n  text-decoration: underline;\n}\n\na:not([href]):not([class]), a:not([href]):not([class]):hover {\n  color: inherit;\n  text-decoration: none;\n}\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: var(--tblr-font-monospace);\n  font-size: 1em;\n}\n\npre {\n  display: block;\n  margin-top: 0;\n  margin-bottom: 1rem;\n  overflow: auto;\n  font-size: 85.71428571%;\n}\npre code {\n  font-size: inherit;\n  color: inherit;\n  word-break: normal;\n}\n\ncode {\n  font-size: 85.71428571%;\n  color: var(--tblr-code-color);\n  word-wrap: break-word;\n}\na > code {\n  color: inherit;\n}\n\nkbd {\n  padding: 0.1875rem 0.375rem;\n  font-size: 85.71428571%;\n  color: var(--tblr-body-bg);\n  background-color: var(--tblr-body-color);\n  border-radius: 2px;\n}\nkbd kbd {\n  padding: 0;\n  font-size: 1em;\n}\n\nfigure {\n  margin: 0 0 1rem;\n}\n\nimg,\nsvg {\n  vertical-align: middle;\n}\n\ntable {\n  caption-side: bottom;\n  border-collapse: collapse;\n}\n\ncaption {\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n  color: #626976;\n  text-align: left;\n}\n\nth {\n  text-align: inherit;\n  text-align: -webkit-match-parent;\n}\n\nthead,\ntbody,\ntfoot,\ntr,\ntd,\nth {\n  border-color: inherit;\n  border-style: solid;\n  border-width: 0;\n}\n\nlabel {\n  display: inline-block;\n}\n\nbutton {\n  border-radius: 0;\n}\n\nbutton:focus:not(:focus-visible) {\n  outline: 0;\n}\n\ninput,\nbutton,\nselect,\noptgroup,\ntextarea {\n  margin: 0;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n[role=button] {\n  cursor: pointer;\n}\n\nselect {\n  word-wrap: normal;\n}\nselect:disabled {\n  opacity: 1;\n}\n\n[list]:not([type=date]):not([type=datetime-local]):not([type=month]):not([type=week]):not([type=time])::-webkit-calendar-picker-indicator {\n  display: none !important;\n}\n\nbutton,\n[type=button],\n[type=reset],\n[type=submit] {\n  -webkit-appearance: button;\n}\nbutton:not(:disabled),\n[type=button]:not(:disabled),\n[type=reset]:not(:disabled),\n[type=submit]:not(:disabled) {\n  cursor: pointer;\n}\n\n::-moz-focus-inner {\n  padding: 0;\n  border-style: none;\n}\n\ntextarea {\n  resize: vertical;\n}\n\nfieldset {\n  min-width: 0;\n  padding: 0;\n  margin: 0;\n  border: 0;\n}\n\nlegend {\n  float: left;\n  width: 100%;\n  padding: 0;\n  margin-bottom: 0.5rem;\n  font-size: 1.5rem;\n  line-height: inherit;\n}\nlegend + * {\n  clear: left;\n}\n\n::-webkit-datetime-edit-fields-wrapper,\n::-webkit-datetime-edit-text,\n::-webkit-datetime-edit-minute,\n::-webkit-datetime-edit-hour-field,\n::-webkit-datetime-edit-day-field,\n::-webkit-datetime-edit-month-field,\n::-webkit-datetime-edit-year-field {\n  padding: 0;\n}\n\n::-webkit-inner-spin-button {\n  height: auto;\n}\n\n[type=search] {\n  outline-offset: -2px;\n  -webkit-appearance: textfield;\n}\n\n/* rtl:raw:\n[type=\"tel\"],\n[type=\"url\"],\n[type=\"email\"],\n[type=\"number\"] {\n  direction: ltr;\n}\n*/\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n::-webkit-color-swatch-wrapper {\n  padding: 0;\n}\n\n::-webkit-file-upload-button {\n  font: inherit;\n  -webkit-appearance: button;\n}\n\n::file-selector-button {\n  font: inherit;\n  -webkit-appearance: button;\n}\n\noutput {\n  display: inline-block;\n}\n\niframe {\n  border: 0;\n}\n\nsummary {\n  display: list-item;\n  cursor: pointer;\n}\n\nprogress {\n  vertical-align: baseline;\n}\n\n[hidden] {\n  display: none !important;\n}\n\n.lead {\n  font-size: 0.875rem;\n  font-weight: 400;\n}\n\n.display-1 {\n  font-size: 5rem;\n  font-weight: 300;\n  line-height: 1.2;\n}\n\n.display-2 {\n  font-size: 4.5rem;\n  font-weight: 300;\n  line-height: 1.2;\n}\n\n.display-3 {\n  font-size: 4rem;\n  font-weight: 300;\n  line-height: 1.2;\n}\n\n.display-4 {\n  font-size: 3.5rem;\n  font-weight: 300;\n  line-height: 1.2;\n}\n\n.display-5 {\n  font-size: 3rem;\n  font-weight: 300;\n  line-height: 1.2;\n}\n\n.display-6 {\n  font-size: 2rem;\n  font-weight: 300;\n  line-height: 1.2;\n}\n\n.list-unstyled {\n  padding-left: 0;\n  list-style: none;\n}\n\n.list-inline {\n  padding-left: 0;\n  list-style: none;\n}\n\n.list-inline-item {\n  display: inline-block;\n}\n.list-inline-item:not(:last-child) {\n  margin-right: 0.5rem;\n}\n\n.initialism {\n  font-size: 85.71428571%;\n  text-transform: uppercase;\n}\n\n.blockquote {\n  margin-bottom: 1rem;\n  font-size: 0.875rem;\n}\n.blockquote > :last-child {\n  margin-bottom: 0;\n}\n\n.blockquote-footer {\n  margin-top: -1rem;\n  margin-bottom: 1rem;\n  font-size: 85.71428571%;\n  color: #475569;\n}\n.blockquote-footer::before {\n  content: \"â€”Â \";\n}\n\n.img-fluid {\n  max-width: 100%;\n  height: auto;\n}\n\n.img-thumbnail {\n  padding: 0.25rem;\n  background-color: #f5f7fb;\n  border: 1px solid var(--tblr-border-color);\n  border-radius: 4px;\n  max-width: 100%;\n  height: auto;\n}\n\n.figure {\n  display: inline-block;\n}\n\n.figure-img {\n  margin-bottom: 0.5rem;\n  line-height: 1;\n}\n\n.figure-caption {\n  font-size: 85.71428571%;\n  color: #475569;\n}\n\n.container,\n.container-fluid,\n.container-xxl,\n.container-xl,\n.container-lg,\n.container-md,\n.container-sm {\n  --tblr-gutter-x: 1.5rem;\n  --tblr-gutter-y: 0;\n  width: 100%;\n  padding-right: calc(var(--tblr-gutter-x) * 0.5);\n  padding-left: calc(var(--tblr-gutter-x) * 0.5);\n  margin-right: auto;\n  margin-left: auto;\n}\n\n@media (min-width: 576px) {\n  .container-sm, .container {\n    max-width: 540px;\n  }\n}\n@media (min-width: 768px) {\n  .container-md, .container-sm, .container {\n    max-width: 720px;\n  }\n}\n@media (min-width: 992px) {\n  .container-lg, .container-md, .container-sm, .container {\n    max-width: 960px;\n  }\n}\n@media (min-width: 1200px) {\n  .container-xl, .container-lg, .container-md, .container-sm, .container {\n    max-width: 1140px;\n  }\n}\n@media (min-width: 1400px) {\n  .container-xxl, .container-xl, .container-lg, .container-md, .container-sm, .container {\n    max-width: 1320px;\n  }\n}\n.row {\n  --tblr-gutter-x: 1rem;\n  --tblr-gutter-y: 0;\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: calc(-1 * var(--tblr-gutter-y));\n  margin-right: calc(-0.5 * var(--tblr-gutter-x));\n  margin-left: calc(-0.5 * var(--tblr-gutter-x));\n}\n.row > * {\n  flex-shrink: 0;\n  width: 100%;\n  max-width: 100%;\n  padding-right: calc(var(--tblr-gutter-x) * 0.5);\n  padding-left: calc(var(--tblr-gutter-x) * 0.5);\n  margin-top: var(--tblr-gutter-y);\n}\n\n.col {\n  flex: 1 0 0%;\n}\n\n.row-cols-auto > * {\n  flex: 0 0 auto;\n  width: auto;\n}\n\n.row-cols-1 > * {\n  flex: 0 0 auto;\n  width: 100%;\n}\n\n.row-cols-2 > * {\n  flex: 0 0 auto;\n  width: 50%;\n}\n\n.row-cols-3 > * {\n  flex: 0 0 auto;\n  width: 33.3333333333%;\n}\n\n.row-cols-4 > * {\n  flex: 0 0 auto;\n  width: 25%;\n}\n\n.row-cols-5 > * {\n  flex: 0 0 auto;\n  width: 20%;\n}\n\n.row-cols-6 > * {\n  flex: 0 0 auto;\n  width: 16.6666666667%;\n}\n\n.col-auto {\n  flex: 0 0 auto;\n  width: auto;\n}\n\n.col-1 {\n  flex: 0 0 auto;\n  width: 8.33333333%;\n}\n\n.col-2 {\n  flex: 0 0 auto;\n  width: 16.66666667%;\n}\n\n.col-3 {\n  flex: 0 0 auto;\n  width: 25%;\n}\n\n.col-4 {\n  flex: 0 0 auto;\n  width: 33.33333333%;\n}\n\n.col-5 {\n  flex: 0 0 auto;\n  width: 41.66666667%;\n}\n\n.col-6 {\n  flex: 0 0 auto;\n  width: 50%;\n}\n\n.col-7 {\n  flex: 0 0 auto;\n  width: 58.33333333%;\n}\n\n.col-8 {\n  flex: 0 0 auto;\n  width: 66.66666667%;\n}\n\n.col-9 {\n  flex: 0 0 auto;\n  width: 75%;\n}\n\n.col-10 {\n  flex: 0 0 auto;\n  width: 83.33333333%;\n}\n\n.col-11 {\n  flex: 0 0 auto;\n  width: 91.66666667%;\n}\n\n.col-12 {\n  flex: 0 0 auto;\n  width: 100%;\n}\n\n.offset-1 {\n  margin-left: 8.33333333%;\n}\n\n.offset-2 {\n  margin-left: 16.66666667%;\n}\n\n.offset-3 {\n  margin-left: 25%;\n}\n\n.offset-4 {\n  margin-left: 33.33333333%;\n}\n\n.offset-5 {\n  margin-left: 41.66666667%;\n}\n\n.offset-6 {\n  margin-left: 50%;\n}\n\n.offset-7 {\n  margin-left: 58.33333333%;\n}\n\n.offset-8 {\n  margin-left: 66.66666667%;\n}\n\n.offset-9 {\n  margin-left: 75%;\n}\n\n.offset-10 {\n  margin-left: 83.33333333%;\n}\n\n.offset-11 {\n  margin-left: 91.66666667%;\n}\n\n.g-0,\n.gx-0 {\n  --tblr-gutter-x: 0;\n}\n\n.g-0,\n.gy-0 {\n  --tblr-gutter-y: 0;\n}\n\n.g-1,\n.gx-1 {\n  --tblr-gutter-x: 0.25rem;\n}\n\n.g-1,\n.gy-1 {\n  --tblr-gutter-y: 0.25rem;\n}\n\n.g-2,\n.gx-2 {\n  --tblr-gutter-x: 0.5rem;\n}\n\n.g-2,\n.gy-2 {\n  --tblr-gutter-y: 0.5rem;\n}\n\n.g-3,\n.gx-3 {\n  --tblr-gutter-x: 1rem;\n}\n\n.g-3,\n.gy-3 {\n  --tblr-gutter-y: 1rem;\n}\n\n.g-4,\n.gx-4 {\n  --tblr-gutter-x: 2rem;\n}\n\n.g-4,\n.gy-4 {\n  --tblr-gutter-y: 2rem;\n}\n\n.g-5,\n.gx-5 {\n  --tblr-gutter-x: 4rem;\n}\n\n.g-5,\n.gy-5 {\n  --tblr-gutter-y: 4rem;\n}\n\n@media (min-width: 576px) {\n  .col-sm {\n    flex: 1 0 0%;\n  }\n  .row-cols-sm-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-sm-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-sm-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-sm-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-sm-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-sm-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-sm-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-sm-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-sm-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-sm-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-sm-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-sm-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-sm-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-sm-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-sm-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-sm-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-sm-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-sm-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-sm-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-sm-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-sm-0 {\n    margin-left: 0;\n  }\n  .offset-sm-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-sm-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-sm-3 {\n    margin-left: 25%;\n  }\n  .offset-sm-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-sm-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-sm-6 {\n    margin-left: 50%;\n  }\n  .offset-sm-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-sm-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-sm-9 {\n    margin-left: 75%;\n  }\n  .offset-sm-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-sm-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-sm-0,\n.gx-sm-0 {\n    --tblr-gutter-x: 0;\n  }\n  .g-sm-0,\n.gy-sm-0 {\n    --tblr-gutter-y: 0;\n  }\n  .g-sm-1,\n.gx-sm-1 {\n    --tblr-gutter-x: 0.25rem;\n  }\n  .g-sm-1,\n.gy-sm-1 {\n    --tblr-gutter-y: 0.25rem;\n  }\n  .g-sm-2,\n.gx-sm-2 {\n    --tblr-gutter-x: 0.5rem;\n  }\n  .g-sm-2,\n.gy-sm-2 {\n    --tblr-gutter-y: 0.5rem;\n  }\n  .g-sm-3,\n.gx-sm-3 {\n    --tblr-gutter-x: 1rem;\n  }\n  .g-sm-3,\n.gy-sm-3 {\n    --tblr-gutter-y: 1rem;\n  }\n  .g-sm-4,\n.gx-sm-4 {\n    --tblr-gutter-x: 2rem;\n  }\n  .g-sm-4,\n.gy-sm-4 {\n    --tblr-gutter-y: 2rem;\n  }\n  .g-sm-5,\n.gx-sm-5 {\n    --tblr-gutter-x: 4rem;\n  }\n  .g-sm-5,\n.gy-sm-5 {\n    --tblr-gutter-y: 4rem;\n  }\n}\n@media (min-width: 768px) {\n  .col-md {\n    flex: 1 0 0%;\n  }\n  .row-cols-md-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-md-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-md-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-md-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-md-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-md-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-md-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-md-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-md-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-md-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-md-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-md-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-md-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-md-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-md-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-md-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-md-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-md-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-md-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-md-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-md-0 {\n    margin-left: 0;\n  }\n  .offset-md-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-md-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-md-3 {\n    margin-left: 25%;\n  }\n  .offset-md-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-md-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-md-6 {\n    margin-left: 50%;\n  }\n  .offset-md-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-md-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-md-9 {\n    margin-left: 75%;\n  }\n  .offset-md-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-md-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-md-0,\n.gx-md-0 {\n    --tblr-gutter-x: 0;\n  }\n  .g-md-0,\n.gy-md-0 {\n    --tblr-gutter-y: 0;\n  }\n  .g-md-1,\n.gx-md-1 {\n    --tblr-gutter-x: 0.25rem;\n  }\n  .g-md-1,\n.gy-md-1 {\n    --tblr-gutter-y: 0.25rem;\n  }\n  .g-md-2,\n.gx-md-2 {\n    --tblr-gutter-x: 0.5rem;\n  }\n  .g-md-2,\n.gy-md-2 {\n    --tblr-gutter-y: 0.5rem;\n  }\n  .g-md-3,\n.gx-md-3 {\n    --tblr-gutter-x: 1rem;\n  }\n  .g-md-3,\n.gy-md-3 {\n    --tblr-gutter-y: 1rem;\n  }\n  .g-md-4,\n.gx-md-4 {\n    --tblr-gutter-x: 2rem;\n  }\n  .g-md-4,\n.gy-md-4 {\n    --tblr-gutter-y: 2rem;\n  }\n  .g-md-5,\n.gx-md-5 {\n    --tblr-gutter-x: 4rem;\n  }\n  .g-md-5,\n.gy-md-5 {\n    --tblr-gutter-y: 4rem;\n  }\n}\n@media (min-width: 992px) {\n  .col-lg {\n    flex: 1 0 0%;\n  }\n  .row-cols-lg-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-lg-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-lg-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-lg-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-lg-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-lg-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-lg-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-lg-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-lg-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-lg-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-lg-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-lg-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-lg-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-lg-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-lg-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-lg-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-lg-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-lg-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-lg-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-lg-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-lg-0 {\n    margin-left: 0;\n  }\n  .offset-lg-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-lg-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-lg-3 {\n    margin-left: 25%;\n  }\n  .offset-lg-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-lg-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-lg-6 {\n    margin-left: 50%;\n  }\n  .offset-lg-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-lg-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-lg-9 {\n    margin-left: 75%;\n  }\n  .offset-lg-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-lg-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-lg-0,\n.gx-lg-0 {\n    --tblr-gutter-x: 0;\n  }\n  .g-lg-0,\n.gy-lg-0 {\n    --tblr-gutter-y: 0;\n  }\n  .g-lg-1,\n.gx-lg-1 {\n    --tblr-gutter-x: 0.25rem;\n  }\n  .g-lg-1,\n.gy-lg-1 {\n    --tblr-gutter-y: 0.25rem;\n  }\n  .g-lg-2,\n.gx-lg-2 {\n    --tblr-gutter-x: 0.5rem;\n  }\n  .g-lg-2,\n.gy-lg-2 {\n    --tblr-gutter-y: 0.5rem;\n  }\n  .g-lg-3,\n.gx-lg-3 {\n    --tblr-gutter-x: 1rem;\n  }\n  .g-lg-3,\n.gy-lg-3 {\n    --tblr-gutter-y: 1rem;\n  }\n  .g-lg-4,\n.gx-lg-4 {\n    --tblr-gutter-x: 2rem;\n  }\n  .g-lg-4,\n.gy-lg-4 {\n    --tblr-gutter-y: 2rem;\n  }\n  .g-lg-5,\n.gx-lg-5 {\n    --tblr-gutter-x: 4rem;\n  }\n  .g-lg-5,\n.gy-lg-5 {\n    --tblr-gutter-y: 4rem;\n  }\n}\n@media (min-width: 1200px) {\n  .col-xl {\n    flex: 1 0 0%;\n  }\n  .row-cols-xl-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-xl-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-xl-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-xl-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-xl-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-xl-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-xl-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-xl-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-xl-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-xl-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-xl-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-xl-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-xl-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-xl-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-xl-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-xl-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-xl-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-xl-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-xl-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-xl-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-xl-0 {\n    margin-left: 0;\n  }\n  .offset-xl-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-xl-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-xl-3 {\n    margin-left: 25%;\n  }\n  .offset-xl-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-xl-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-xl-6 {\n    margin-left: 50%;\n  }\n  .offset-xl-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-xl-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-xl-9 {\n    margin-left: 75%;\n  }\n  .offset-xl-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-xl-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-xl-0,\n.gx-xl-0 {\n    --tblr-gutter-x: 0;\n  }\n  .g-xl-0,\n.gy-xl-0 {\n    --tblr-gutter-y: 0;\n  }\n  .g-xl-1,\n.gx-xl-1 {\n    --tblr-gutter-x: 0.25rem;\n  }\n  .g-xl-1,\n.gy-xl-1 {\n    --tblr-gutter-y: 0.25rem;\n  }\n  .g-xl-2,\n.gx-xl-2 {\n    --tblr-gutter-x: 0.5rem;\n  }\n  .g-xl-2,\n.gy-xl-2 {\n    --tblr-gutter-y: 0.5rem;\n  }\n  .g-xl-3,\n.gx-xl-3 {\n    --tblr-gutter-x: 1rem;\n  }\n  .g-xl-3,\n.gy-xl-3 {\n    --tblr-gutter-y: 1rem;\n  }\n  .g-xl-4,\n.gx-xl-4 {\n    --tblr-gutter-x: 2rem;\n  }\n  .g-xl-4,\n.gy-xl-4 {\n    --tblr-gutter-y: 2rem;\n  }\n  .g-xl-5,\n.gx-xl-5 {\n    --tblr-gutter-x: 4rem;\n  }\n  .g-xl-5,\n.gy-xl-5 {\n    --tblr-gutter-y: 4rem;\n  }\n}\n@media (min-width: 1400px) {\n  .col-xxl {\n    flex: 1 0 0%;\n  }\n  .row-cols-xxl-auto > * {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .row-cols-xxl-1 > * {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .row-cols-xxl-2 > * {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .row-cols-xxl-3 > * {\n    flex: 0 0 auto;\n    width: 33.3333333333%;\n  }\n  .row-cols-xxl-4 > * {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .row-cols-xxl-5 > * {\n    flex: 0 0 auto;\n    width: 20%;\n  }\n  .row-cols-xxl-6 > * {\n    flex: 0 0 auto;\n    width: 16.6666666667%;\n  }\n  .col-xxl-auto {\n    flex: 0 0 auto;\n    width: auto;\n  }\n  .col-xxl-1 {\n    flex: 0 0 auto;\n    width: 8.33333333%;\n  }\n  .col-xxl-2 {\n    flex: 0 0 auto;\n    width: 16.66666667%;\n  }\n  .col-xxl-3 {\n    flex: 0 0 auto;\n    width: 25%;\n  }\n  .col-xxl-4 {\n    flex: 0 0 auto;\n    width: 33.33333333%;\n  }\n  .col-xxl-5 {\n    flex: 0 0 auto;\n    width: 41.66666667%;\n  }\n  .col-xxl-6 {\n    flex: 0 0 auto;\n    width: 50%;\n  }\n  .col-xxl-7 {\n    flex: 0 0 auto;\n    width: 58.33333333%;\n  }\n  .col-xxl-8 {\n    flex: 0 0 auto;\n    width: 66.66666667%;\n  }\n  .col-xxl-9 {\n    flex: 0 0 auto;\n    width: 75%;\n  }\n  .col-xxl-10 {\n    flex: 0 0 auto;\n    width: 83.33333333%;\n  }\n  .col-xxl-11 {\n    flex: 0 0 auto;\n    width: 91.66666667%;\n  }\n  .col-xxl-12 {\n    flex: 0 0 auto;\n    width: 100%;\n  }\n  .offset-xxl-0 {\n    margin-left: 0;\n  }\n  .offset-xxl-1 {\n    margin-left: 8.33333333%;\n  }\n  .offset-xxl-2 {\n    margin-left: 16.66666667%;\n  }\n  .offset-xxl-3 {\n    margin-left: 25%;\n  }\n  .offset-xxl-4 {\n    margin-left: 33.33333333%;\n  }\n  .offset-xxl-5 {\n    margin-left: 41.66666667%;\n  }\n  .offset-xxl-6 {\n    margin-left: 50%;\n  }\n  .offset-xxl-7 {\n    margin-left: 58.33333333%;\n  }\n  .offset-xxl-8 {\n    margin-left: 66.66666667%;\n  }\n  .offset-xxl-9 {\n    margin-left: 75%;\n  }\n  .offset-xxl-10 {\n    margin-left: 83.33333333%;\n  }\n  .offset-xxl-11 {\n    margin-left: 91.66666667%;\n  }\n  .g-xxl-0,\n.gx-xxl-0 {\n    --tblr-gutter-x: 0;\n  }\n  .g-xxl-0,\n.gy-xxl-0 {\n    --tblr-gutter-y: 0;\n  }\n  .g-xxl-1,\n.gx-xxl-1 {\n    --tblr-gutter-x: 0.25rem;\n  }\n  .g-xxl-1,\n.gy-xxl-1 {\n    --tblr-gutter-y: 0.25rem;\n  }\n  .g-xxl-2,\n.gx-xxl-2 {\n    --tblr-gutter-x: 0.5rem;\n  }\n  .g-xxl-2,\n.gy-xxl-2 {\n    --tblr-gutter-y: 0.5rem;\n  }\n  .g-xxl-3,\n.gx-xxl-3 {\n    --tblr-gutter-x: 1rem;\n  }\n  .g-xxl-3,\n.gy-xxl-3 {\n    --tblr-gutter-y: 1rem;\n  }\n  .g-xxl-4,\n.gx-xxl-4 {\n    --tblr-gutter-x: 2rem;\n  }\n  .g-xxl-4,\n.gy-xxl-4 {\n    --tblr-gutter-y: 2rem;\n  }\n  .g-xxl-5,\n.gx-xxl-5 {\n    --tblr-gutter-x: 4rem;\n  }\n  .g-xxl-5,\n.gy-xxl-5 {\n    --tblr-gutter-y: 4rem;\n  }\n}\n.table, .markdown > table {\n  --tblr-table-color: inherit;\n  --tblr-table-bg: transparent;\n  --tblr-table-border-color: rgba(98, 105, 118, 0.16);\n  --tblr-table-accent-bg: transparent;\n  --tblr-table-striped-color: inherit;\n  --tblr-table-striped-bg: var(--tblr-border-color-light);\n  --tblr-table-active-color: inherit;\n  --tblr-table-active-bg: rgba(0, 0, 0, 0.1);\n  --tblr-table-hover-color: inherit;\n  --tblr-table-hover-bg: rgba(0, 0, 0, 0.075);\n  width: 100%;\n  margin-bottom: 1rem;\n  color: var(--tblr-table-color);\n  vertical-align: top;\n  border-color: var(--tblr-table-border-color);\n}\n.table > :not(caption) > * > *, .markdown > table > :not(caption) > * > * {\n  padding: 0.75rem 0.75rem;\n  background-color: var(--tblr-table-bg);\n  border-bottom-width: 1px;\n  box-shadow: inset 0 0 0 9999px var(--tblr-table-accent-bg);\n}\n.table > tbody, .markdown > table > tbody {\n  vertical-align: inherit;\n}\n.table > thead, .markdown > table > thead {\n  vertical-align: bottom;\n}\n\n.table-group-divider {\n  border-top: 2px solid rgba(98, 105, 118, 0.16);\n}\n\n.caption-top {\n  caption-side: top;\n}\n\n.table-sm > :not(caption) > * > * {\n  padding: 0.25rem 0.25rem;\n}\n\n.table-bordered > :not(caption) > *, .markdown > table > :not(caption) > * {\n  border-width: 1px 0;\n}\n.table-bordered > :not(caption) > * > *, .markdown > table > :not(caption) > * > * {\n  border-width: 0 1px;\n}\n\n.table-borderless > :not(caption) > * > * {\n  border-bottom-width: 0;\n}\n.table-borderless > :not(:first-child) {\n  border-top-width: 0;\n}\n\n.table-striped > tbody > tr:nth-of-type(even) > * {\n  --tblr-table-accent-bg: var(--tblr-table-striped-bg);\n  color: var(--tblr-table-striped-color);\n}\n\n.table-striped-columns > :not(caption) > tr > :nth-child(even) {\n  --tblr-table-accent-bg: var(--tblr-table-striped-bg);\n  color: var(--tblr-table-striped-color);\n}\n\n.table-active {\n  --tblr-table-accent-bg: var(--tblr-table-active-bg);\n  color: var(--tblr-table-active-color);\n}\n\n.table-hover > tbody > tr:hover > * {\n  --tblr-table-accent-bg: var(--tblr-table-hover-bg);\n  color: var(--tblr-table-hover-color);\n}\n\n.table-primary {\n  --tblr-table-color: #1e293b;\n  --tblr-table-bg: #d2e1f3;\n  --tblr-table-border-color: #c0cfe1;\n  --tblr-table-striped-bg: #c9d8ea;\n  --tblr-table-striped-color: #1e293b;\n  --tblr-table-active-bg: #c0cfe1;\n  --tblr-table-active-color: #fafbfc;\n  --tblr-table-hover-bg: #c5d3e5;\n  --tblr-table-hover-color: #1e293b;\n  color: var(--tblr-table-color);\n  border-color: var(--tblr-table-border-color);\n}\n\n.table-secondary {\n  --tblr-table-color: #1e293b;\n  --tblr-table-bg: #e0e1e4;\n  --tblr-table-border-color: #cdcfd3;\n  --tblr-table-striped-bg: #d6d8dc;\n  --tblr-table-striped-color: #1e293b;\n  --tblr-table-active-bg: #cdcfd3;\n  --tblr-table-active-color: #fafbfc;\n  --tblr-table-hover-bg: #d1d3d7;\n  --tblr-table-hover-color: #1e293b;\n  color: var(--tblr-table-color);\n  border-color: var(--tblr-table-border-color);\n}\n\n.table-success {\n  --tblr-table-color: #1e293b;\n  --tblr-table-bg: #d5f0da;\n  --tblr-table-border-color: #c3dcca;\n  --tblr-table-striped-bg: #cce6d2;\n  --tblr-table-striped-color: #1e293b;\n  --tblr-table-active-bg: #c3dcca;\n  --tblr-table-active-color: #1e293b;\n  --tblr-table-hover-bg: #c7e1ce;\n  --tblr-table-hover-color: #1e293b;\n  color: var(--tblr-table-color);\n  border-color: var(--tblr-table-border-color);\n}\n\n.table-info {\n  --tblr-table-color: #1e293b;\n  --tblr-table-bg: #d9ebf9;\n  --tblr-table-border-color: #c6d8e6;\n  --tblr-table-striped-bg: #d0e1f0;\n  --tblr-table-striped-color: #1e293b;\n  --tblr-table-active-bg: #c6d8e6;\n  --tblr-table-active-color: #1e293b;\n  --tblr-table-hover-bg: #cbdceb;\n  --tblr-table-hover-color: #1e293b;\n  color: var(--tblr-table-color);\n  border-color: var(--tblr-table-border-color);\n}\n\n.table-warning {\n  --tblr-table-color: #1e293b;\n  --tblr-table-bg: #fde1cd;\n  --tblr-table-border-color: #e7cfbe;\n  --tblr-table-striped-bg: #f2d8c6;\n  --tblr-table-striped-color: #1e293b;\n  --tblr-table-active-bg: #e7cfbe;\n  --tblr-table-active-color: #1e293b;\n  --tblr-table-hover-bg: #ecd3c2;\n  --tblr-table-hover-color: #1e293b;\n  color: var(--tblr-table-color);\n  border-color: var(--tblr-table-border-color);\n}\n\n.table-danger {\n  --tblr-table-color: #1e293b;\n  --tblr-table-bg: #f7d7d7;\n  --tblr-table-border-color: #e1c6c7;\n  --tblr-table-striped-bg: #eccecf;\n  --tblr-table-striped-color: #1e293b;\n  --tblr-table-active-bg: #e1c6c7;\n  --tblr-table-active-color: #fafbfc;\n  --tblr-table-hover-bg: #e7cacb;\n  --tblr-table-hover-color: #1e293b;\n  color: var(--tblr-table-color);\n  border-color: var(--tblr-table-border-color);\n}\n\n.table-light {\n  --tblr-table-color: #1e293b;\n  --tblr-table-bg: #fafbfc;\n  --tblr-table-border-color: #e4e6e9;\n  --tblr-table-striped-bg: #eff1f2;\n  --tblr-table-striped-color: #1e293b;\n  --tblr-table-active-bg: #e4e6e9;\n  --tblr-table-active-color: #1e293b;\n  --tblr-table-hover-bg: #eaebee;\n  --tblr-table-hover-color: #1e293b;\n  color: var(--tblr-table-color);\n  border-color: var(--tblr-table-border-color);\n}\n\n.table-dark {\n  --tblr-table-color: #fafbfc;\n  --tblr-table-bg: #1e293b;\n  --tblr-table-border-color: #343e4e;\n  --tblr-table-striped-bg: #293445;\n  --tblr-table-striped-color: #fafbfc;\n  --tblr-table-active-bg: #343e4e;\n  --tblr-table-active-color: #fafbfc;\n  --tblr-table-hover-bg: #2f3949;\n  --tblr-table-hover-color: #fafbfc;\n  color: var(--tblr-table-color);\n  border-color: var(--tblr-table-border-color);\n}\n\n.table-responsive {\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n}\n\n@media (max-width: 575.98px) {\n  .table-responsive-sm {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n@media (max-width: 767.98px) {\n  .table-responsive-md {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n@media (max-width: 991.98px) {\n  .table-responsive-lg {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n@media (max-width: 1199.98px) {\n  .table-responsive-xl {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n@media (max-width: 1399.98px) {\n  .table-responsive-xxl {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n.form-label {\n  margin-bottom: 0.5rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.col-form-label {\n  padding-top: calc(0.4375rem + 1px);\n  padding-bottom: calc(0.4375rem + 1px);\n  margin-bottom: 0;\n  font-size: inherit;\n  font-weight: 500;\n  line-height: 1.4285714286;\n}\n\n.col-form-label-lg {\n  padding-top: calc(0.5rem + 1px);\n  padding-bottom: calc(0.5rem + 1px);\n  font-size: 1.25rem;\n}\n\n.col-form-label-sm {\n  padding-top: calc(0.125rem + 1px);\n  padding-bottom: calc(0.125rem + 1px);\n  font-size: 0.75rem;\n}\n\n.form-text {\n  margin-top: 0.25rem;\n  font-size: 85.71428571%;\n  color: #626976;\n}\n\n.form-control {\n  display: block;\n  width: 100%;\n  padding: 0.4375rem 0.75rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.4285714286;\n  color: inherit;\n  background-color: #ffffff;\n  background-clip: padding-box;\n  border: 1px solid #d9dbde;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  border-radius: 4px;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .form-control {\n    transition: none;\n  }\n}\n.form-control[type=file] {\n  overflow: hidden;\n}\n.form-control[type=file]:not(:disabled):not([readonly]) {\n  cursor: pointer;\n}\n.form-control:focus {\n  color: inherit;\n  background-color: #ffffff;\n  border-color: #90b5e2;\n  outline: 0;\n  box-shadow: 0 0 0 0.25rem rgba(32, 107, 196, 0.25);\n}\n.form-control::-webkit-date-and-time-value {\n  height: 1.4285714286em;\n}\n.form-control::-moz-placeholder {\n  color: #a5a9b1;\n  opacity: 1;\n}\n.form-control::placeholder {\n  color: #a5a9b1;\n  opacity: 1;\n}\n.form-control:disabled {\n  background-color: #fafbfc;\n  opacity: 1;\n}\n.form-control::-webkit-file-upload-button {\n  padding: 0.4375rem 0.75rem;\n  margin: -0.4375rem -0.75rem;\n  -webkit-margin-end: 0.75rem;\n          margin-inline-end: 0.75rem;\n  color: inherit;\n  background-color: #fafbfc;\n  pointer-events: none;\n  border-color: inherit;\n  border-style: solid;\n  border-width: 0;\n  border-inline-end-width: 1px;\n  border-radius: 0;\n  -webkit-transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n.form-control::file-selector-button {\n  padding: 0.4375rem 0.75rem;\n  margin: -0.4375rem -0.75rem;\n  -webkit-margin-end: 0.75rem;\n          margin-inline-end: 0.75rem;\n  color: inherit;\n  background-color: #fafbfc;\n  pointer-events: none;\n  border-color: inherit;\n  border-style: solid;\n  border-width: 0;\n  border-inline-end-width: 1px;\n  border-radius: 0;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .form-control::-webkit-file-upload-button {\n    -webkit-transition: none;\n    transition: none;\n  }\n  .form-control::file-selector-button {\n    transition: none;\n  }\n}\n.form-control:hover:not(:disabled):not([readonly])::-webkit-file-upload-button {\n  background-color: #eeeeef;\n}\n.form-control:hover:not(:disabled):not([readonly])::file-selector-button {\n  background-color: #eeeeef;\n}\n\n.form-control-plaintext {\n  display: block;\n  width: 100%;\n  padding: 0.4375rem 0;\n  margin-bottom: 0;\n  line-height: 1.4285714286;\n  color: #1e293b;\n  background-color: transparent;\n  border: solid transparent;\n  border-width: 1px 0;\n}\n.form-control-plaintext:focus {\n  outline: 0;\n}\n.form-control-plaintext.form-control-sm, .form-control-plaintext.form-control-lg {\n  padding-right: 0;\n  padding-left: 0;\n}\n\n.form-control-sm {\n  min-height: calc(1.4285714286em + 0.25rem + 2px);\n  padding: 0.125rem 0.5rem;\n  font-size: 0.75rem;\n  border-radius: 2px;\n}\n.form-control-sm::-webkit-file-upload-button {\n  padding: 0.125rem 0.5rem;\n  margin: -0.125rem -0.5rem;\n  -webkit-margin-end: 0.5rem;\n          margin-inline-end: 0.5rem;\n}\n.form-control-sm::file-selector-button {\n  padding: 0.125rem 0.5rem;\n  margin: -0.125rem -0.5rem;\n  -webkit-margin-end: 0.5rem;\n          margin-inline-end: 0.5rem;\n}\n\n.form-control-lg {\n  min-height: calc(1.4285714286em + 1rem + 2px);\n  padding: 0.5rem 1.5rem;\n  font-size: 1.25rem;\n  border-radius: 8px;\n}\n.form-control-lg::-webkit-file-upload-button {\n  padding: 0.5rem 1.5rem;\n  margin: -0.5rem -1.5rem;\n  -webkit-margin-end: 1.5rem;\n          margin-inline-end: 1.5rem;\n}\n.form-control-lg::file-selector-button {\n  padding: 0.5rem 1.5rem;\n  margin: -0.5rem -1.5rem;\n  -webkit-margin-end: 1.5rem;\n          margin-inline-end: 1.5rem;\n}\n\ntextarea.form-control {\n  min-height: calc(1.4285714286em + 0.875rem + 2px);\n}\ntextarea.form-control-sm {\n  min-height: calc(1.4285714286em + 0.25rem + 2px);\n}\ntextarea.form-control-lg {\n  min-height: calc(1.4285714286em + 1rem + 2px);\n}\n\n.form-control-color {\n  width: 3rem;\n  height: calc(1.4285714286em + 0.875rem + 2px);\n  padding: 0.4375rem;\n}\n.form-control-color:not(:disabled):not([readonly]) {\n  cursor: pointer;\n}\n.form-control-color::-moz-color-swatch {\n  border: 0 !important;\n  border-radius: 4px;\n}\n.form-control-color::-webkit-color-swatch {\n  border-radius: 4px;\n}\n.form-control-color.form-control-sm {\n  height: calc(1.4285714286em + 0.25rem + 2px);\n}\n.form-control-color.form-control-lg {\n  height: calc(1.4285714286em + 1rem + 2px);\n}\n\n.form-select {\n  display: block;\n  width: 100%;\n  padding: 0.4375rem 2.25rem 0.4375rem 0.75rem;\n  -moz-padding-start: calc(0.75rem - 3px);\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.4285714286;\n  color: inherit;\n  background-color: #ffffff;\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23a5a9b1' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e\");\n  background-repeat: no-repeat;\n  background-position: right 0.75rem center;\n  background-size: 16px 12px;\n  border: 1px solid #d9dbde;\n  border-radius: 4px;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n}\n@media (prefers-reduced-motion: reduce) {\n  .form-select {\n    transition: none;\n  }\n}\n.form-select:focus {\n  border-color: #90b5e2;\n  outline: 0;\n  box-shadow: 0 0 0 0.25rem rgba(32, 107, 196, 0.25);\n}\n.form-select[multiple], .form-select[size]:not([size=\"1\"]) {\n  padding-right: 0.75rem;\n  background-image: none;\n}\n.form-select:disabled {\n  background-color: #e2e8f0;\n}\n.form-select:-moz-focusring {\n  color: transparent;\n  text-shadow: 0 0 0 inherit;\n}\n\n.form-select-sm {\n  padding-top: 0.125rem;\n  padding-bottom: 0.125rem;\n  padding-left: 0.5rem;\n  font-size: 0.75rem;\n  border-radius: 2px;\n}\n\n.form-select-lg {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  padding-left: 1.5rem;\n  font-size: 1.25rem;\n  border-radius: 8px;\n}\n\n.form-check {\n  display: block;\n  min-height: 1.25rem;\n  padding-left: 1.5rem;\n  margin-bottom: 0.5rem;\n}\n.form-check .form-check-input {\n  float: left;\n  margin-left: -1.5rem;\n}\n\n.form-check-reverse {\n  padding-right: 1.5rem;\n  padding-left: 0;\n  text-align: right;\n}\n.form-check-reverse .form-check-input {\n  float: right;\n  margin-right: -1.5rem;\n  margin-left: 0;\n}\n\n.form-check-input {\n  width: 1rem;\n  height: 1rem;\n  margin-top: 0.2142857143rem;\n  vertical-align: top;\n  background-color: #ffffff;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  border: 1px solid rgba(98, 105, 118, 0.24);\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  -webkit-print-color-adjust: exact;\n     color-adjust: exact;\n          print-color-adjust: exact;\n}\n.form-check-input[type=checkbox] {\n  border-radius: 4px;\n}\n.form-check-input[type=radio] {\n  border-radius: 50%;\n}\n.form-check-input:active {\n  filter: brightness(90%);\n}\n.form-check-input:focus {\n  border-color: #90b5e2;\n  outline: 0;\n  box-shadow: 0 0 0 0.25rem rgba(32, 107, 196, 0.25);\n}\n.form-check-input:checked {\n  background-color: #206bc4;\n  border-color: rgba(98, 105, 118, 0.24);\n}\n.form-check-input:checked[type=checkbox] {\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='16' height='16'%3e%3cpath fill='none' stroke='%23ffffff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8.5l2.5 2.5l5.5 -5.5'/%3e%3c/svg%3e\");\n}\n.form-check-input:checked[type=radio] {\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3ccircle r='3' fill='%23ffffff' cx='8' cy='8' /%3e%3c/svg%3e\");\n}\n.form-check-input[type=checkbox]:indeterminate {\n  background-color: #206bc4;\n  border-color: #206bc4;\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23ffffff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/%3e%3c/svg%3e\");\n}\n.form-check-input:disabled {\n  pointer-events: none;\n  filter: none;\n  opacity: 0.5;\n}\n.form-check-input[disabled] ~ .form-check-label, .form-check-input:disabled ~ .form-check-label {\n  cursor: default;\n  opacity: 0.7;\n}\n\n.form-switch {\n  padding-left: 2.5rem;\n}\n.form-switch .form-check-input {\n  width: 2rem;\n  margin-left: -2.5rem;\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23e6e7e9'/%3e%3c/svg%3e\");\n  background-position: left center;\n  border-radius: 2rem;\n  transition: background-position 0.15s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .form-switch .form-check-input {\n    transition: none;\n  }\n}\n.form-switch .form-check-input:focus {\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%2390b5e2'/%3e%3c/svg%3e\");\n}\n.form-switch .form-check-input:checked {\n  background-position: right center;\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23ffffff'/%3e%3c/svg%3e\");\n}\n.form-switch.form-check-reverse {\n  padding-right: 2.5rem;\n  padding-left: 0;\n}\n.form-switch.form-check-reverse .form-check-input {\n  margin-right: -2.5rem;\n  margin-left: 0;\n}\n\n.form-check-inline {\n  display: inline-block;\n  margin-right: 1rem;\n}\n\n.btn-check {\n  position: absolute;\n  clip: rect(0, 0, 0, 0);\n  pointer-events: none;\n}\n.btn-check[disabled] + .btn, .btn-check:disabled + .btn {\n  pointer-events: none;\n  filter: none;\n  opacity: 0.65;\n}\n\n.form-range {\n  width: 100%;\n  height: 1.25rem;\n  padding: 0;\n  background-color: transparent;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n}\n.form-range:focus {\n  outline: 0;\n}\n.form-range:focus::-webkit-slider-thumb {\n  box-shadow: 0 0 0 1px #f5f7fb, 0 0 0 0.25rem rgba(32, 107, 196, 0.25);\n}\n.form-range:focus::-moz-range-thumb {\n  box-shadow: 0 0 0 1px #f5f7fb, 0 0 0 0.25rem rgba(32, 107, 196, 0.25);\n}\n.form-range::-moz-focus-outer {\n  border: 0;\n}\n.form-range::-webkit-slider-thumb {\n  width: 1rem;\n  height: 1rem;\n  margin-top: -0.375rem;\n  background-color: #206bc4;\n  border: 2px solid var(--tblr-border-color-light);\n  border-radius: 1rem;\n  -webkit-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  -webkit-appearance: none;\n          appearance: none;\n}\n@media (prefers-reduced-motion: reduce) {\n  .form-range::-webkit-slider-thumb {\n    -webkit-transition: none;\n    transition: none;\n  }\n}\n.form-range::-webkit-slider-thumb:active {\n  background-color: #bcd3ed;\n}\n.form-range::-webkit-slider-runnable-track {\n  width: 100%;\n  height: 0.25rem;\n  color: transparent;\n  cursor: pointer;\n  background-color: var(--tblr-border-color-light);\n  border-color: transparent;\n  border-radius: 1rem;\n}\n.form-range::-moz-range-thumb {\n  width: 1rem;\n  height: 1rem;\n  background-color: #206bc4;\n  border: 2px solid var(--tblr-border-color-light);\n  border-radius: 1rem;\n  -moz-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  -moz-appearance: none;\n       appearance: none;\n}\n@media (prefers-reduced-motion: reduce) {\n  .form-range::-moz-range-thumb {\n    -moz-transition: none;\n    transition: none;\n  }\n}\n.form-range::-moz-range-thumb:active {\n  background-color: #bcd3ed;\n}\n.form-range::-moz-range-track {\n  width: 100%;\n  height: 0.25rem;\n  color: transparent;\n  cursor: pointer;\n  background-color: var(--tblr-border-color-light);\n  border-color: transparent;\n  border-radius: 1rem;\n}\n.form-range:disabled {\n  pointer-events: none;\n}\n.form-range:disabled::-webkit-slider-thumb {\n  background-color: #64748b;\n}\n.form-range:disabled::-moz-range-thumb {\n  background-color: #64748b;\n}\n\n.form-floating {\n  position: relative;\n}\n.form-floating > .form-control,\n.form-floating > .form-control-plaintext,\n.form-floating > .form-select {\n  height: calc(3.5rem + 2px);\n  line-height: 1.25;\n}\n.form-floating > label {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding: 1rem 0.75rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  pointer-events: none;\n  border: 1px solid transparent;\n  transform-origin: 0 0;\n  transition: opacity 0.1s ease-in-out, transform 0.1s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .form-floating > label {\n    transition: none;\n  }\n}\n.form-floating > .form-control,\n.form-floating > .form-control-plaintext {\n  padding: 1rem 0.75rem;\n}\n.form-floating > .form-control::-moz-placeholder, .form-floating > .form-control-plaintext::-moz-placeholder {\n  color: transparent;\n}\n.form-floating > .form-control::placeholder,\n.form-floating > .form-control-plaintext::placeholder {\n  color: transparent;\n}\n.form-floating > .form-control:not(:-moz-placeholder-shown), .form-floating > .form-control-plaintext:not(:-moz-placeholder-shown) {\n  padding-top: 1.625rem;\n  padding-bottom: 0.625rem;\n}\n.form-floating > .form-control:focus, .form-floating > .form-control:not(:placeholder-shown),\n.form-floating > .form-control-plaintext:focus,\n.form-floating > .form-control-plaintext:not(:placeholder-shown) {\n  padding-top: 1.625rem;\n  padding-bottom: 0.625rem;\n}\n.form-floating > .form-control:-webkit-autofill,\n.form-floating > .form-control-plaintext:-webkit-autofill {\n  padding-top: 1.625rem;\n  padding-bottom: 0.625rem;\n}\n.form-floating > .form-select {\n  padding-top: 1.625rem;\n  padding-bottom: 0.625rem;\n}\n.form-floating > .form-control:not(:-moz-placeholder-shown) ~ label {\n  opacity: 0.65;\n  transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);\n}\n.form-floating > .form-control:focus ~ label,\n.form-floating > .form-control:not(:placeholder-shown) ~ label,\n.form-floating > .form-control-plaintext ~ label,\n.form-floating > .form-select ~ label {\n  opacity: 0.65;\n  transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);\n}\n.form-floating > .form-control:-webkit-autofill ~ label {\n  opacity: 0.65;\n  transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);\n}\n.form-floating > .form-control-plaintext ~ label {\n  border-width: 1px 0;\n}\n\n.input-group {\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  width: 100%;\n}\n.input-group > .form-control,\n.input-group > .form-select,\n.input-group > .form-floating {\n  position: relative;\n  flex: 1 1 auto;\n  width: 1%;\n  min-width: 0;\n}\n.input-group > .form-control:focus,\n.input-group > .form-select:focus,\n.input-group > .form-floating:focus-within {\n  z-index: 3;\n}\n.input-group .btn {\n  position: relative;\n  z-index: 2;\n}\n.input-group .btn:focus {\n  z-index: 3;\n}\n\n.input-group-text {\n  display: flex;\n  align-items: center;\n  padding: 0.4375rem 0.75rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.4285714286;\n  color: #626976;\n  text-align: center;\n  white-space: nowrap;\n  background-color: #fafbfc;\n  border: 1px solid #d9dbde;\n  border-radius: 4px;\n}\n\n.input-group-lg > .form-control,\n.input-group-lg > .form-select,\n.input-group-lg > .input-group-text,\n.input-group-lg > .btn {\n  padding: 0.5rem 1.5rem;\n  font-size: 1.25rem;\n  border-radius: 8px;\n}\n\n.input-group-sm > .form-control,\n.input-group-sm > .form-select,\n.input-group-sm > .input-group-text,\n.input-group-sm > .btn {\n  padding: 0.125rem 0.5rem;\n  font-size: 0.75rem;\n  border-radius: 2px;\n}\n\n.input-group-lg > .form-select,\n.input-group-sm > .form-select {\n  padding-right: 3rem;\n}\n\n.input-group:not(.has-validation) > :not(:last-child):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),\n.input-group:not(.has-validation) > .dropdown-toggle:nth-last-child(n+3),\n.input-group:not(.has-validation) > .form-floating:not(:last-child) > .form-control,\n.input-group:not(.has-validation) > .form-floating:not(:last-child) > .form-select {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n.input-group.has-validation > :nth-last-child(n+3):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),\n.input-group.has-validation > .dropdown-toggle:nth-last-child(n+4),\n.input-group.has-validation > .form-floating:nth-last-child(n+3) > .form-control,\n.input-group.has-validation > .form-floating:nth-last-child(n+3) > .form-select {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n.input-group > :not(:first-child):not(.dropdown-menu):not(.form-floating):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback),\n.input-group > .form-floating:not(:first-child) > .form-control,\n.input-group > .form-floating:not(:first-child) > .form-select {\n  margin-left: -1px;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.valid-feedback {\n  display: none;\n  width: 100%;\n  margin-top: 0.25rem;\n  font-size: 85.71428571%;\n  color: #2fb344;\n}\n\n.valid-tooltip {\n  position: absolute;\n  top: 100%;\n  z-index: 5;\n  display: none;\n  max-width: 100%;\n  padding: 0.25rem 0.5rem;\n  margin-top: 0.1rem;\n  font-size: 0.765625rem;\n  color: #fafbfc;\n  background-color: rgba(47, 179, 68, 0.9);\n  border-radius: 4px;\n}\n\n.was-validated :valid ~ .valid-feedback,\n.was-validated :valid ~ .valid-tooltip,\n.is-valid ~ .valid-feedback,\n.is-valid ~ .valid-tooltip {\n  display: block;\n}\n\n.was-validated .form-control:valid, .form-control.is-valid {\n  border-color: #2fb344;\n  padding-right: calc(1.4285714286em + 0.875rem);\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%232fb344' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='20 6 9 17 4 12'%3e%3c/polyline%3e%3c/svg%3e\");\n  background-repeat: no-repeat;\n  background-position: right calc(0.3571428572em + 0.21875rem) center;\n  background-size: calc(0.7142857143em + 0.4375rem) calc(0.7142857143em + 0.4375rem);\n}\n.was-validated .form-control:valid:focus, .form-control.is-valid:focus {\n  border-color: #2fb344;\n  box-shadow: 0 0 0 0.25rem rgba(47, 179, 68, 0.25);\n}\n\n.was-validated textarea.form-control:valid, textarea.form-control.is-valid {\n  padding-right: calc(1.4285714286em + 0.875rem);\n  background-position: top calc(0.3571428572em + 0.21875rem) right calc(0.3571428572em + 0.21875rem);\n}\n\n.was-validated .form-select:valid, .form-select.is-valid {\n  border-color: #2fb344;\n}\n.was-validated .form-select:valid:not([multiple]):not([size]), .was-validated .form-select:valid:not([multiple])[size=\"1\"], .form-select.is-valid:not([multiple]):not([size]), .form-select.is-valid:not([multiple])[size=\"1\"] {\n  padding-right: 4.125rem;\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23a5a9b1' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e\"), url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%232fb344' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='20 6 9 17 4 12'%3e%3c/polyline%3e%3c/svg%3e\");\n  background-position: right 0.75rem center, center right 2.25rem;\n  background-size: 16px 12px, calc(0.7142857143em + 0.4375rem) calc(0.7142857143em + 0.4375rem);\n}\n.was-validated .form-select:valid:focus, .form-select.is-valid:focus {\n  border-color: #2fb344;\n  box-shadow: 0 0 0 0.25rem rgba(47, 179, 68, 0.25);\n}\n\n.was-validated .form-control-color:valid, .form-control-color.is-valid {\n  width: calc(3rem + calc(1.4285714286em + 0.875rem));\n}\n\n.was-validated .form-check-input:valid, .form-check-input.is-valid {\n  border-color: #2fb344;\n}\n.was-validated .form-check-input:valid:checked, .form-check-input.is-valid:checked {\n  background-color: #2fb344;\n}\n.was-validated .form-check-input:valid:focus, .form-check-input.is-valid:focus {\n  box-shadow: 0 0 0 0.25rem rgba(47, 179, 68, 0.25);\n}\n.was-validated .form-check-input:valid ~ .form-check-label, .form-check-input.is-valid ~ .form-check-label {\n  color: #2fb344;\n}\n\n.form-check-inline .form-check-input ~ .valid-feedback {\n  margin-left: 0.5em;\n}\n\n.was-validated .input-group .form-control:valid, .input-group .form-control.is-valid,\n.was-validated .input-group .form-select:valid,\n.input-group .form-select.is-valid {\n  z-index: 1;\n}\n.was-validated .input-group .form-control:valid:focus, .input-group .form-control.is-valid:focus,\n.was-validated .input-group .form-select:valid:focus,\n.input-group .form-select.is-valid:focus {\n  z-index: 3;\n}\n\n.invalid-feedback {\n  display: none;\n  width: 100%;\n  margin-top: 0.25rem;\n  font-size: 85.71428571%;\n  color: #d63939;\n}\n\n.invalid-tooltip {\n  position: absolute;\n  top: 100%;\n  z-index: 5;\n  display: none;\n  max-width: 100%;\n  padding: 0.25rem 0.5rem;\n  margin-top: 0.1rem;\n  font-size: 0.765625rem;\n  color: #fafbfc;\n  background-color: rgba(214, 57, 57, 0.9);\n  border-radius: 4px;\n}\n\n.was-validated :invalid ~ .invalid-feedback,\n.was-validated :invalid ~ .invalid-tooltip,\n.is-invalid ~ .invalid-feedback,\n.is-invalid ~ .invalid-tooltip {\n  display: block;\n}\n\n.was-validated .form-control:invalid, .form-control.is-invalid {\n  border-color: #d63939;\n  padding-right: calc(1.4285714286em + 0.875rem);\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23d63939' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cline x1='18' y1='6' x2='6' y2='18'%3e%3c/line%3e%3cline x1='6' y1='6' x2='18' y2='18'%3e%3c/line%3e%3c/svg%3e\");\n  background-repeat: no-repeat;\n  background-position: right calc(0.3571428572em + 0.21875rem) center;\n  background-size: calc(0.7142857143em + 0.4375rem) calc(0.7142857143em + 0.4375rem);\n}\n.was-validated .form-control:invalid:focus, .form-control.is-invalid:focus {\n  border-color: #d63939;\n  box-shadow: 0 0 0 0.25rem rgba(214, 57, 57, 0.25);\n}\n\n.was-validated textarea.form-control:invalid, textarea.form-control.is-invalid {\n  padding-right: calc(1.4285714286em + 0.875rem);\n  background-position: top calc(0.3571428572em + 0.21875rem) right calc(0.3571428572em + 0.21875rem);\n}\n\n.was-validated .form-select:invalid, .form-select.is-invalid {\n  border-color: #d63939;\n}\n.was-validated .form-select:invalid:not([multiple]):not([size]), .was-validated .form-select:invalid:not([multiple])[size=\"1\"], .form-select.is-invalid:not([multiple]):not([size]), .form-select.is-invalid:not([multiple])[size=\"1\"] {\n  padding-right: 4.125rem;\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23a5a9b1' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e\"), url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23d63939' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cline x1='18' y1='6' x2='6' y2='18'%3e%3c/line%3e%3cline x1='6' y1='6' x2='18' y2='18'%3e%3c/line%3e%3c/svg%3e\");\n  background-position: right 0.75rem center, center right 2.25rem;\n  background-size: 16px 12px, calc(0.7142857143em + 0.4375rem) calc(0.7142857143em + 0.4375rem);\n}\n.was-validated .form-select:invalid:focus, .form-select.is-invalid:focus {\n  border-color: #d63939;\n  box-shadow: 0 0 0 0.25rem rgba(214, 57, 57, 0.25);\n}\n\n.was-validated .form-control-color:invalid, .form-control-color.is-invalid {\n  width: calc(3rem + calc(1.4285714286em + 0.875rem));\n}\n\n.was-validated .form-check-input:invalid, .form-check-input.is-invalid {\n  border-color: #d63939;\n}\n.was-validated .form-check-input:invalid:checked, .form-check-input.is-invalid:checked {\n  background-color: #d63939;\n}\n.was-validated .form-check-input:invalid:focus, .form-check-input.is-invalid:focus {\n  box-shadow: 0 0 0 0.25rem rgba(214, 57, 57, 0.25);\n}\n.was-validated .form-check-input:invalid ~ .form-check-label, .form-check-input.is-invalid ~ .form-check-label {\n  color: #d63939;\n}\n\n.form-check-inline .form-check-input ~ .invalid-feedback {\n  margin-left: 0.5em;\n}\n\n.was-validated .input-group .form-control:invalid, .input-group .form-control.is-invalid,\n.was-validated .input-group .form-select:invalid,\n.input-group .form-select.is-invalid {\n  z-index: 2;\n}\n.was-validated .input-group .form-control:invalid:focus, .input-group .form-control.is-invalid:focus,\n.was-validated .input-group .form-select:invalid:focus,\n.input-group .form-select.is-invalid:focus {\n  z-index: 3;\n}\n\n.btn {\n  --tblr-btn-padding-x: 1rem;\n  --tblr-btn-padding-y: 0.4375rem;\n  --tblr-btn-font-family: ;\n  --tblr-btn-font-size: 0.875rem;\n  --tblr-btn-font-weight: 500;\n  --tblr-btn-line-height: 1.4285714286;\n  --tblr-btn-color: #1e293b;\n  --tblr-btn-bg: transparent;\n  --tblr-btn-border-width: 1px;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-border-radius: 4px;\n  --tblr-btn-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075);\n  --tblr-btn-disabled-opacity: 0.65;\n  --tblr-btn-focus-box-shadow: 0 0 0 0.25rem rgba(var(--tblr-btn-focus-shadow-rgb), .5);\n  display: inline-block;\n  padding: var(--tblr-btn-padding-y) var(--tblr-btn-padding-x);\n  font-family: var(--tblr-btn-font-family);\n  font-size: var(--tblr-btn-font-size);\n  font-weight: var(--tblr-btn-font-weight);\n  line-height: var(--tblr-btn-line-height);\n  color: var(--tblr-btn-color);\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  border: var(--tblr-btn-border-width) solid var(--tblr-btn-border-color);\n  border-radius: var(--tblr-btn-border-radius);\n  background-color: var(--tblr-btn-bg);\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .btn {\n    transition: none;\n  }\n}\n.btn:hover {\n  color: var(--tblr-btn-hover-color);\n  text-decoration: none;\n  background-color: var(--tblr-btn-hover-bg);\n  border-color: var(--tblr-btn-hover-border-color);\n}\n.btn-check:focus + .btn, .btn:focus {\n  color: var(--tblr-btn-hover-color);\n  background-color: var(--tblr-btn-hover-bg);\n  border-color: var(--tblr-btn-hover-border-color);\n  outline: 0;\n  box-shadow: var(--tblr-btn-focus-box-shadow);\n}\n.btn-check:checked + .btn, .btn-check:active + .btn, .btn:active, .btn.active, .btn.show {\n  color: var(--tblr-btn-active-color);\n  background-color: var(--tblr-btn-active-bg);\n  border-color: var(--tblr-btn-active-border-color);\n}\n.btn-check:checked + .btn:focus, .btn-check:active + .btn:focus, .btn:active:focus, .btn.active:focus, .btn.show:focus {\n  box-shadow: var(--tblr-btn-focus-box-shadow);\n}\n.btn:disabled, .btn.disabled, fieldset:disabled .btn {\n  color: var(--tblr-btn-disabled-color);\n  pointer-events: none;\n  background-color: var(--tblr-btn-disabled-bg);\n  border-color: var(--tblr-btn-disabled-border-color);\n  opacity: var(--tblr-btn-disabled-opacity);\n}\n\n.btn-primary {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #206bc4;\n  --tblr-btn-border-color: #206bc4;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #1b5ba7;\n  --tblr-btn-hover-border-color: #1a569d;\n  --tblr-btn-focus-shadow-rgb: 65, 129, 204;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #1a569d;\n  --tblr-btn-active-border-color: #185093;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #206bc4;\n  --tblr-btn-disabled-border-color: #206bc4;\n}\n\n.btn-secondary {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #626976;\n  --tblr-btn-border-color: #626976;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #535964;\n  --tblr-btn-hover-border-color: #4e545e;\n  --tblr-btn-focus-shadow-rgb: 121, 127, 138;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #4e545e;\n  --tblr-btn-active-border-color: #4a4f59;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #626976;\n  --tblr-btn-disabled-border-color: #626976;\n}\n\n.btn-success {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #2fb344;\n  --tblr-btn-border-color: #2fb344;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #28983a;\n  --tblr-btn-hover-border-color: #268f36;\n  --tblr-btn-focus-shadow-rgb: 77, 190, 96;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #268f36;\n  --tblr-btn-active-border-color: #238633;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #2fb344;\n  --tblr-btn-disabled-border-color: #2fb344;\n}\n\n.btn-info {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #4299e1;\n  --tblr-btn-border-color: #4299e1;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #3882bf;\n  --tblr-btn-hover-border-color: #357ab4;\n  --tblr-btn-focus-shadow-rgb: 94, 168, 229;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #357ab4;\n  --tblr-btn-active-border-color: #3273a9;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #4299e1;\n  --tblr-btn-disabled-border-color: #4299e1;\n}\n\n.btn-warning {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #f76707;\n  --tblr-btn-border-color: #f76707;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #d25806;\n  --tblr-btn-hover-border-color: #c65206;\n  --tblr-btn-focus-shadow-rgb: 247, 125, 44;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #c65206;\n  --tblr-btn-active-border-color: #b94d05;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #f76707;\n  --tblr-btn-disabled-border-color: #f76707;\n}\n\n.btn-danger {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #d63939;\n  --tblr-btn-border-color: #d63939;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #b63030;\n  --tblr-btn-hover-border-color: #ab2e2e;\n  --tblr-btn-focus-shadow-rgb: 219, 86, 86;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #ab2e2e;\n  --tblr-btn-active-border-color: #a12b2b;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #d63939;\n  --tblr-btn-disabled-border-color: #d63939;\n}\n\n.btn-light {\n  --tblr-btn-color: #1e293b;\n  --tblr-btn-bg: #fafbfc;\n  --tblr-btn-border-color: #fafbfc;\n  --tblr-btn-hover-color: #1e293b;\n  --tblr-btn-hover-bg: #d5d5d6;\n  --tblr-btn-hover-border-color: #c8c9ca;\n  --tblr-btn-focus-shadow-rgb: 217, 220, 223;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #c8c9ca;\n  --tblr-btn-active-border-color: #bcbcbd;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #1e293b;\n  --tblr-btn-disabled-bg: #fafbfc;\n  --tblr-btn-disabled-border-color: #fafbfc;\n}\n\n.btn-dark {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #1e293b;\n  --tblr-btn-border-color: #1e293b;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #404958;\n  --tblr-btn-hover-border-color: #353e4f;\n  --tblr-btn-focus-shadow-rgb: 63, 73, 88;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #4b5462;\n  --tblr-btn-active-border-color: #353e4f;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #1e293b;\n  --tblr-btn-disabled-border-color: #1e293b;\n}\n\n.btn-muted {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #626976;\n  --tblr-btn-border-color: #626976;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #535964;\n  --tblr-btn-hover-border-color: #4e545e;\n  --tblr-btn-focus-shadow-rgb: 121, 127, 138;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #4e545e;\n  --tblr-btn-active-border-color: #4a4f59;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #626976;\n  --tblr-btn-disabled-border-color: #626976;\n}\n\n.btn-blue {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #206bc4;\n  --tblr-btn-border-color: #206bc4;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #1b5ba7;\n  --tblr-btn-hover-border-color: #1a569d;\n  --tblr-btn-focus-shadow-rgb: 65, 129, 204;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #1a569d;\n  --tblr-btn-active-border-color: #185093;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #206bc4;\n  --tblr-btn-disabled-border-color: #206bc4;\n}\n\n.btn-azure {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #4299e1;\n  --tblr-btn-border-color: #4299e1;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #3882bf;\n  --tblr-btn-hover-border-color: #357ab4;\n  --tblr-btn-focus-shadow-rgb: 94, 168, 229;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #357ab4;\n  --tblr-btn-active-border-color: #3273a9;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #4299e1;\n  --tblr-btn-disabled-border-color: #4299e1;\n}\n\n.btn-indigo {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #4263eb;\n  --tblr-btn-border-color: #4263eb;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #3854c8;\n  --tblr-btn-hover-border-color: #354fbc;\n  --tblr-btn-focus-shadow-rgb: 94, 122, 238;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #354fbc;\n  --tblr-btn-active-border-color: #324ab0;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #4263eb;\n  --tblr-btn-disabled-border-color: #4263eb;\n}\n\n.btn-purple {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #ae3ec9;\n  --tblr-btn-border-color: #ae3ec9;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #9435ab;\n  --tblr-btn-hover-border-color: #8b32a1;\n  --tblr-btn-focus-shadow-rgb: 185, 90, 209;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #8b32a1;\n  --tblr-btn-active-border-color: #832f97;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #ae3ec9;\n  --tblr-btn-disabled-border-color: #ae3ec9;\n}\n\n.btn-pink {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #d6336c;\n  --tblr-btn-border-color: #d6336c;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #b62b5c;\n  --tblr-btn-hover-border-color: #ab2956;\n  --tblr-btn-focus-shadow-rgb: 219, 81, 130;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #ab2956;\n  --tblr-btn-active-border-color: #a12651;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #d6336c;\n  --tblr-btn-disabled-border-color: #d6336c;\n}\n\n.btn-red {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #d63939;\n  --tblr-btn-border-color: #d63939;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #b63030;\n  --tblr-btn-hover-border-color: #ab2e2e;\n  --tblr-btn-focus-shadow-rgb: 219, 86, 86;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #ab2e2e;\n  --tblr-btn-active-border-color: #a12b2b;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #d63939;\n  --tblr-btn-disabled-border-color: #d63939;\n}\n\n.btn-orange {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #f76707;\n  --tblr-btn-border-color: #f76707;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #d25806;\n  --tblr-btn-hover-border-color: #c65206;\n  --tblr-btn-focus-shadow-rgb: 247, 125, 44;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #c65206;\n  --tblr-btn-active-border-color: #b94d05;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #f76707;\n  --tblr-btn-disabled-border-color: #f76707;\n}\n\n.btn-yellow {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #f59f00;\n  --tblr-btn-border-color: #f59f00;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #d08700;\n  --tblr-btn-hover-border-color: #c47f00;\n  --tblr-btn-focus-shadow-rgb: 246, 173, 38;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #c47f00;\n  --tblr-btn-active-border-color: #b87700;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #f59f00;\n  --tblr-btn-disabled-border-color: #f59f00;\n}\n\n.btn-lime {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #74b816;\n  --tblr-btn-border-color: #74b816;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #639c13;\n  --tblr-btn-hover-border-color: #5d9312;\n  --tblr-btn-focus-shadow-rgb: 136, 194, 57;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #5d9312;\n  --tblr-btn-active-border-color: #578a11;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #74b816;\n  --tblr-btn-disabled-border-color: #74b816;\n}\n\n.btn-green {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #2fb344;\n  --tblr-btn-border-color: #2fb344;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #28983a;\n  --tblr-btn-hover-border-color: #268f36;\n  --tblr-btn-focus-shadow-rgb: 77, 190, 96;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #268f36;\n  --tblr-btn-active-border-color: #238633;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #2fb344;\n  --tblr-btn-disabled-border-color: #2fb344;\n}\n\n.btn-teal {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #0ca678;\n  --tblr-btn-border-color: #0ca678;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #0a8d66;\n  --tblr-btn-hover-border-color: #0a8560;\n  --tblr-btn-focus-shadow-rgb: 48, 179, 140;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #0a8560;\n  --tblr-btn-active-border-color: #097d5a;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #0ca678;\n  --tblr-btn-disabled-border-color: #0ca678;\n}\n\n.btn-cyan {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #17a2b8;\n  --tblr-btn-border-color: #17a2b8;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #148a9c;\n  --tblr-btn-hover-border-color: #128293;\n  --tblr-btn-focus-shadow-rgb: 57, 175, 194;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #128293;\n  --tblr-btn-active-border-color: #117a8a;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #17a2b8;\n  --tblr-btn-disabled-border-color: #17a2b8;\n}\n\n.btn-facebook {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #3b5998;\n  --tblr-btn-border-color: #3b5998;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #324c81;\n  --tblr-btn-hover-border-color: #2f477a;\n  --tblr-btn-focus-shadow-rgb: 88, 113, 167;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #2f477a;\n  --tblr-btn-active-border-color: #2c4372;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #3b5998;\n  --tblr-btn-disabled-border-color: #3b5998;\n}\n\n.btn-twitter {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #1da1f2;\n  --tblr-btn-border-color: #1da1f2;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #1989ce;\n  --tblr-btn-hover-border-color: #1781c2;\n  --tblr-btn-focus-shadow-rgb: 62, 175, 244;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #1781c2;\n  --tblr-btn-active-border-color: #1679b6;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #1da1f2;\n  --tblr-btn-disabled-border-color: #1da1f2;\n}\n\n.btn-linkedin {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #0a66c2;\n  --tblr-btn-border-color: #0a66c2;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #0957a5;\n  --tblr-btn-hover-border-color: #08529b;\n  --tblr-btn-focus-shadow-rgb: 46, 124, 203;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #08529b;\n  --tblr-btn-active-border-color: #084d92;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #0a66c2;\n  --tblr-btn-disabled-border-color: #0a66c2;\n}\n\n.btn-google {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #dc4e41;\n  --tblr-btn-border-color: #dc4e41;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #bb4237;\n  --tblr-btn-hover-border-color: #b03e34;\n  --tblr-btn-focus-shadow-rgb: 225, 104, 93;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #b03e34;\n  --tblr-btn-active-border-color: #a53b31;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #dc4e41;\n  --tblr-btn-disabled-border-color: #dc4e41;\n}\n\n.btn-youtube {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #ff0000;\n  --tblr-btn-border-color: #ff0000;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #d90000;\n  --tblr-btn-hover-border-color: #cc0000;\n  --tblr-btn-focus-shadow-rgb: 254, 38, 38;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #cc0000;\n  --tblr-btn-active-border-color: #bf0000;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #ff0000;\n  --tblr-btn-disabled-border-color: #ff0000;\n}\n\n.btn-vimeo {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #1ab7ea;\n  --tblr-btn-border-color: #1ab7ea;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #169cc7;\n  --tblr-btn-hover-border-color: #1592bb;\n  --tblr-btn-focus-shadow-rgb: 60, 193, 237;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #1592bb;\n  --tblr-btn-active-border-color: #1489b0;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #1ab7ea;\n  --tblr-btn-disabled-border-color: #1ab7ea;\n}\n\n.btn-dribbble {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #ea4c89;\n  --tblr-btn-border-color: #ea4c89;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #c74174;\n  --tblr-btn-hover-border-color: #bb3d6e;\n  --tblr-btn-focus-shadow-rgb: 236, 102, 154;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #bb3d6e;\n  --tblr-btn-active-border-color: #b03967;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #ea4c89;\n  --tblr-btn-disabled-border-color: #ea4c89;\n}\n\n.btn-github {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #181717;\n  --tblr-btn-border-color: #181717;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #141414;\n  --tblr-btn-hover-border-color: #131212;\n  --tblr-btn-focus-shadow-rgb: 58, 57, 57;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #131212;\n  --tblr-btn-active-border-color: #121111;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #181717;\n  --tblr-btn-disabled-border-color: #181717;\n}\n\n.btn-instagram {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #e4405f;\n  --tblr-btn-border-color: #e4405f;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #c23651;\n  --tblr-btn-hover-border-color: #b6334c;\n  --tblr-btn-focus-shadow-rgb: 231, 92, 119;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #b6334c;\n  --tblr-btn-active-border-color: #ab3047;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #e4405f;\n  --tblr-btn-disabled-border-color: #e4405f;\n}\n\n.btn-pinterest {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #bd081c;\n  --tblr-btn-border-color: #bd081c;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #a10718;\n  --tblr-btn-hover-border-color: #970616;\n  --tblr-btn-focus-shadow-rgb: 198, 44, 62;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #970616;\n  --tblr-btn-active-border-color: #8e0615;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #bd081c;\n  --tblr-btn-disabled-border-color: #bd081c;\n}\n\n.btn-vk {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #6383a8;\n  --tblr-btn-border-color: #6383a8;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #546f8f;\n  --tblr-btn-hover-border-color: #4f6986;\n  --tblr-btn-focus-shadow-rgb: 122, 149, 181;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #4f6986;\n  --tblr-btn-active-border-color: #4a627e;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #6383a8;\n  --tblr-btn-disabled-border-color: #6383a8;\n}\n\n.btn-rss {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #ffa500;\n  --tblr-btn-border-color: #ffa500;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #d98c00;\n  --tblr-btn-hover-border-color: #cc8400;\n  --tblr-btn-focus-shadow-rgb: 254, 178, 38;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #cc8400;\n  --tblr-btn-active-border-color: #bf7c00;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #ffa500;\n  --tblr-btn-disabled-border-color: #ffa500;\n}\n\n.btn-flickr {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #0063dc;\n  --tblr-btn-border-color: #0063dc;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #0054bb;\n  --tblr-btn-hover-border-color: #004fb0;\n  --tblr-btn-focus-shadow-rgb: 38, 122, 225;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #004fb0;\n  --tblr-btn-active-border-color: #004aa5;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #0063dc;\n  --tblr-btn-disabled-border-color: #0063dc;\n}\n\n.btn-bitbucket {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #0052cc;\n  --tblr-btn-border-color: #0052cc;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #0046ad;\n  --tblr-btn-hover-border-color: #0042a3;\n  --tblr-btn-focus-shadow-rgb: 38, 107, 211;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #0042a3;\n  --tblr-btn-active-border-color: #003e99;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #0052cc;\n  --tblr-btn-disabled-border-color: #0052cc;\n}\n\n.btn-tabler {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-bg: #206bc4;\n  --tblr-btn-border-color: #206bc4;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #1b5ba7;\n  --tblr-btn-hover-border-color: #1a569d;\n  --tblr-btn-focus-shadow-rgb: 65, 129, 204;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #1a569d;\n  --tblr-btn-active-border-color: #185093;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: #206bc4;\n  --tblr-btn-disabled-border-color: #206bc4;\n}\n\n.btn-outline-primary {\n  --tblr-btn-color: #206bc4;\n  --tblr-btn-border-color: #206bc4;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #206bc4;\n  --tblr-btn-hover-border-color: #206bc4;\n  --tblr-btn-focus-shadow-rgb: 32, 107, 196;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #206bc4;\n  --tblr-btn-active-border-color: #206bc4;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #206bc4;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #206bc4;\n  --tblr-gradient: none;\n}\n\n.btn-outline-secondary {\n  --tblr-btn-color: #626976;\n  --tblr-btn-border-color: #626976;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #626976;\n  --tblr-btn-hover-border-color: #626976;\n  --tblr-btn-focus-shadow-rgb: 98, 105, 118;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #626976;\n  --tblr-btn-active-border-color: #626976;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #626976;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #626976;\n  --tblr-gradient: none;\n}\n\n.btn-outline-success {\n  --tblr-btn-color: #2fb344;\n  --tblr-btn-border-color: #2fb344;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #2fb344;\n  --tblr-btn-hover-border-color: #2fb344;\n  --tblr-btn-focus-shadow-rgb: 47, 179, 68;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #2fb344;\n  --tblr-btn-active-border-color: #2fb344;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #2fb344;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #2fb344;\n  --tblr-gradient: none;\n}\n\n.btn-outline-info {\n  --tblr-btn-color: #4299e1;\n  --tblr-btn-border-color: #4299e1;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #4299e1;\n  --tblr-btn-hover-border-color: #4299e1;\n  --tblr-btn-focus-shadow-rgb: 66, 153, 225;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #4299e1;\n  --tblr-btn-active-border-color: #4299e1;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #4299e1;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #4299e1;\n  --tblr-gradient: none;\n}\n\n.btn-outline-warning {\n  --tblr-btn-color: #f76707;\n  --tblr-btn-border-color: #f76707;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #f76707;\n  --tblr-btn-hover-border-color: #f76707;\n  --tblr-btn-focus-shadow-rgb: 247, 103, 7;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #f76707;\n  --tblr-btn-active-border-color: #f76707;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #f76707;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #f76707;\n  --tblr-gradient: none;\n}\n\n.btn-outline-danger {\n  --tblr-btn-color: #d63939;\n  --tblr-btn-border-color: #d63939;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #d63939;\n  --tblr-btn-hover-border-color: #d63939;\n  --tblr-btn-focus-shadow-rgb: 214, 57, 57;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #d63939;\n  --tblr-btn-active-border-color: #d63939;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #d63939;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #d63939;\n  --tblr-gradient: none;\n}\n\n.btn-outline-light {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-border-color: #fafbfc;\n  --tblr-btn-hover-color: #1e293b;\n  --tblr-btn-hover-bg: #fafbfc;\n  --tblr-btn-hover-border-color: #fafbfc;\n  --tblr-btn-focus-shadow-rgb: 250, 251, 252;\n  --tblr-btn-active-color: #1e293b;\n  --tblr-btn-active-bg: #fafbfc;\n  --tblr-btn-active-border-color: #fafbfc;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #fafbfc;\n  --tblr-gradient: none;\n}\n\n.btn-outline-dark {\n  --tblr-btn-color: #1e293b;\n  --tblr-btn-border-color: #1e293b;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #1e293b;\n  --tblr-btn-hover-border-color: #1e293b;\n  --tblr-btn-focus-shadow-rgb: 30, 41, 59;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #1e293b;\n  --tblr-btn-active-border-color: #1e293b;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #1e293b;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #1e293b;\n  --tblr-gradient: none;\n}\n\n.btn-outline-muted {\n  --tblr-btn-color: #626976;\n  --tblr-btn-border-color: #626976;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #626976;\n  --tblr-btn-hover-border-color: #626976;\n  --tblr-btn-focus-shadow-rgb: 98, 105, 118;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #626976;\n  --tblr-btn-active-border-color: #626976;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #626976;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #626976;\n  --tblr-gradient: none;\n}\n\n.btn-outline-blue {\n  --tblr-btn-color: #206bc4;\n  --tblr-btn-border-color: #206bc4;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #206bc4;\n  --tblr-btn-hover-border-color: #206bc4;\n  --tblr-btn-focus-shadow-rgb: 32, 107, 196;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #206bc4;\n  --tblr-btn-active-border-color: #206bc4;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #206bc4;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #206bc4;\n  --tblr-gradient: none;\n}\n\n.btn-outline-azure {\n  --tblr-btn-color: #4299e1;\n  --tblr-btn-border-color: #4299e1;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #4299e1;\n  --tblr-btn-hover-border-color: #4299e1;\n  --tblr-btn-focus-shadow-rgb: 66, 153, 225;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #4299e1;\n  --tblr-btn-active-border-color: #4299e1;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #4299e1;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #4299e1;\n  --tblr-gradient: none;\n}\n\n.btn-outline-indigo {\n  --tblr-btn-color: #4263eb;\n  --tblr-btn-border-color: #4263eb;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #4263eb;\n  --tblr-btn-hover-border-color: #4263eb;\n  --tblr-btn-focus-shadow-rgb: 66, 99, 235;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #4263eb;\n  --tblr-btn-active-border-color: #4263eb;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #4263eb;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #4263eb;\n  --tblr-gradient: none;\n}\n\n.btn-outline-purple {\n  --tblr-btn-color: #ae3ec9;\n  --tblr-btn-border-color: #ae3ec9;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #ae3ec9;\n  --tblr-btn-hover-border-color: #ae3ec9;\n  --tblr-btn-focus-shadow-rgb: 174, 62, 201;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #ae3ec9;\n  --tblr-btn-active-border-color: #ae3ec9;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #ae3ec9;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #ae3ec9;\n  --tblr-gradient: none;\n}\n\n.btn-outline-pink {\n  --tblr-btn-color: #d6336c;\n  --tblr-btn-border-color: #d6336c;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #d6336c;\n  --tblr-btn-hover-border-color: #d6336c;\n  --tblr-btn-focus-shadow-rgb: 214, 51, 108;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #d6336c;\n  --tblr-btn-active-border-color: #d6336c;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #d6336c;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #d6336c;\n  --tblr-gradient: none;\n}\n\n.btn-outline-red {\n  --tblr-btn-color: #d63939;\n  --tblr-btn-border-color: #d63939;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #d63939;\n  --tblr-btn-hover-border-color: #d63939;\n  --tblr-btn-focus-shadow-rgb: 214, 57, 57;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #d63939;\n  --tblr-btn-active-border-color: #d63939;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #d63939;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #d63939;\n  --tblr-gradient: none;\n}\n\n.btn-outline-orange {\n  --tblr-btn-color: #f76707;\n  --tblr-btn-border-color: #f76707;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #f76707;\n  --tblr-btn-hover-border-color: #f76707;\n  --tblr-btn-focus-shadow-rgb: 247, 103, 7;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #f76707;\n  --tblr-btn-active-border-color: #f76707;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #f76707;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #f76707;\n  --tblr-gradient: none;\n}\n\n.btn-outline-yellow {\n  --tblr-btn-color: #f59f00;\n  --tblr-btn-border-color: #f59f00;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #f59f00;\n  --tblr-btn-hover-border-color: #f59f00;\n  --tblr-btn-focus-shadow-rgb: 245, 159, 0;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #f59f00;\n  --tblr-btn-active-border-color: #f59f00;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #f59f00;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #f59f00;\n  --tblr-gradient: none;\n}\n\n.btn-outline-lime {\n  --tblr-btn-color: #74b816;\n  --tblr-btn-border-color: #74b816;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #74b816;\n  --tblr-btn-hover-border-color: #74b816;\n  --tblr-btn-focus-shadow-rgb: 116, 184, 22;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #74b816;\n  --tblr-btn-active-border-color: #74b816;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #74b816;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #74b816;\n  --tblr-gradient: none;\n}\n\n.btn-outline-green {\n  --tblr-btn-color: #2fb344;\n  --tblr-btn-border-color: #2fb344;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #2fb344;\n  --tblr-btn-hover-border-color: #2fb344;\n  --tblr-btn-focus-shadow-rgb: 47, 179, 68;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #2fb344;\n  --tblr-btn-active-border-color: #2fb344;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #2fb344;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #2fb344;\n  --tblr-gradient: none;\n}\n\n.btn-outline-teal {\n  --tblr-btn-color: #0ca678;\n  --tblr-btn-border-color: #0ca678;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #0ca678;\n  --tblr-btn-hover-border-color: #0ca678;\n  --tblr-btn-focus-shadow-rgb: 12, 166, 120;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #0ca678;\n  --tblr-btn-active-border-color: #0ca678;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #0ca678;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #0ca678;\n  --tblr-gradient: none;\n}\n\n.btn-outline-cyan {\n  --tblr-btn-color: #17a2b8;\n  --tblr-btn-border-color: #17a2b8;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #17a2b8;\n  --tblr-btn-hover-border-color: #17a2b8;\n  --tblr-btn-focus-shadow-rgb: 23, 162, 184;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #17a2b8;\n  --tblr-btn-active-border-color: #17a2b8;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #17a2b8;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #17a2b8;\n  --tblr-gradient: none;\n}\n\n.btn-outline-facebook {\n  --tblr-btn-color: #3b5998;\n  --tblr-btn-border-color: #3b5998;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #3b5998;\n  --tblr-btn-hover-border-color: #3b5998;\n  --tblr-btn-focus-shadow-rgb: 59, 89, 152;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #3b5998;\n  --tblr-btn-active-border-color: #3b5998;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #3b5998;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #3b5998;\n  --tblr-gradient: none;\n}\n\n.btn-outline-twitter {\n  --tblr-btn-color: #1da1f2;\n  --tblr-btn-border-color: #1da1f2;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #1da1f2;\n  --tblr-btn-hover-border-color: #1da1f2;\n  --tblr-btn-focus-shadow-rgb: 29, 161, 242;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #1da1f2;\n  --tblr-btn-active-border-color: #1da1f2;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #1da1f2;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #1da1f2;\n  --tblr-gradient: none;\n}\n\n.btn-outline-linkedin {\n  --tblr-btn-color: #0a66c2;\n  --tblr-btn-border-color: #0a66c2;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #0a66c2;\n  --tblr-btn-hover-border-color: #0a66c2;\n  --tblr-btn-focus-shadow-rgb: 10, 102, 194;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #0a66c2;\n  --tblr-btn-active-border-color: #0a66c2;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #0a66c2;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #0a66c2;\n  --tblr-gradient: none;\n}\n\n.btn-outline-google {\n  --tblr-btn-color: #dc4e41;\n  --tblr-btn-border-color: #dc4e41;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #dc4e41;\n  --tblr-btn-hover-border-color: #dc4e41;\n  --tblr-btn-focus-shadow-rgb: 220, 78, 65;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #dc4e41;\n  --tblr-btn-active-border-color: #dc4e41;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #dc4e41;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #dc4e41;\n  --tblr-gradient: none;\n}\n\n.btn-outline-youtube {\n  --tblr-btn-color: #ff0000;\n  --tblr-btn-border-color: #ff0000;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #ff0000;\n  --tblr-btn-hover-border-color: #ff0000;\n  --tblr-btn-focus-shadow-rgb: 255, 0, 0;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #ff0000;\n  --tblr-btn-active-border-color: #ff0000;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #ff0000;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #ff0000;\n  --tblr-gradient: none;\n}\n\n.btn-outline-vimeo {\n  --tblr-btn-color: #1ab7ea;\n  --tblr-btn-border-color: #1ab7ea;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #1ab7ea;\n  --tblr-btn-hover-border-color: #1ab7ea;\n  --tblr-btn-focus-shadow-rgb: 26, 183, 234;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #1ab7ea;\n  --tblr-btn-active-border-color: #1ab7ea;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #1ab7ea;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #1ab7ea;\n  --tblr-gradient: none;\n}\n\n.btn-outline-dribbble {\n  --tblr-btn-color: #ea4c89;\n  --tblr-btn-border-color: #ea4c89;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #ea4c89;\n  --tblr-btn-hover-border-color: #ea4c89;\n  --tblr-btn-focus-shadow-rgb: 234, 76, 137;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #ea4c89;\n  --tblr-btn-active-border-color: #ea4c89;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #ea4c89;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #ea4c89;\n  --tblr-gradient: none;\n}\n\n.btn-outline-github {\n  --tblr-btn-color: #181717;\n  --tblr-btn-border-color: #181717;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #181717;\n  --tblr-btn-hover-border-color: #181717;\n  --tblr-btn-focus-shadow-rgb: 24, 23, 23;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #181717;\n  --tblr-btn-active-border-color: #181717;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #181717;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #181717;\n  --tblr-gradient: none;\n}\n\n.btn-outline-instagram {\n  --tblr-btn-color: #e4405f;\n  --tblr-btn-border-color: #e4405f;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #e4405f;\n  --tblr-btn-hover-border-color: #e4405f;\n  --tblr-btn-focus-shadow-rgb: 228, 64, 95;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #e4405f;\n  --tblr-btn-active-border-color: #e4405f;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #e4405f;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #e4405f;\n  --tblr-gradient: none;\n}\n\n.btn-outline-pinterest {\n  --tblr-btn-color: #bd081c;\n  --tblr-btn-border-color: #bd081c;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #bd081c;\n  --tblr-btn-hover-border-color: #bd081c;\n  --tblr-btn-focus-shadow-rgb: 189, 8, 28;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #bd081c;\n  --tblr-btn-active-border-color: #bd081c;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #bd081c;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #bd081c;\n  --tblr-gradient: none;\n}\n\n.btn-outline-vk {\n  --tblr-btn-color: #6383a8;\n  --tblr-btn-border-color: #6383a8;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #6383a8;\n  --tblr-btn-hover-border-color: #6383a8;\n  --tblr-btn-focus-shadow-rgb: 99, 131, 168;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #6383a8;\n  --tblr-btn-active-border-color: #6383a8;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #6383a8;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #6383a8;\n  --tblr-gradient: none;\n}\n\n.btn-outline-rss {\n  --tblr-btn-color: #ffa500;\n  --tblr-btn-border-color: #ffa500;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #ffa500;\n  --tblr-btn-hover-border-color: #ffa500;\n  --tblr-btn-focus-shadow-rgb: 255, 165, 0;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #ffa500;\n  --tblr-btn-active-border-color: #ffa500;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #ffa500;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #ffa500;\n  --tblr-gradient: none;\n}\n\n.btn-outline-flickr {\n  --tblr-btn-color: #0063dc;\n  --tblr-btn-border-color: #0063dc;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #0063dc;\n  --tblr-btn-hover-border-color: #0063dc;\n  --tblr-btn-focus-shadow-rgb: 0, 99, 220;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #0063dc;\n  --tblr-btn-active-border-color: #0063dc;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #0063dc;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #0063dc;\n  --tblr-gradient: none;\n}\n\n.btn-outline-bitbucket {\n  --tblr-btn-color: #0052cc;\n  --tblr-btn-border-color: #0052cc;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #0052cc;\n  --tblr-btn-hover-border-color: #0052cc;\n  --tblr-btn-focus-shadow-rgb: 0, 82, 204;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #0052cc;\n  --tblr-btn-active-border-color: #0052cc;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #0052cc;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #0052cc;\n  --tblr-gradient: none;\n}\n\n.btn-outline-tabler {\n  --tblr-btn-color: #206bc4;\n  --tblr-btn-border-color: #206bc4;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #206bc4;\n  --tblr-btn-hover-border-color: #206bc4;\n  --tblr-btn-focus-shadow-rgb: 32, 107, 196;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #206bc4;\n  --tblr-btn-active-border-color: #206bc4;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #206bc4;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: #206bc4;\n  --tblr-gradient: none;\n}\n\n.btn-link {\n  --tblr-btn-font-weight: 400;\n  --tblr-btn-color: var(--tblr-link-color);\n  --tblr-btn-bg: transparent;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: var(--tblr-link-hover-color);\n  --tblr-btn-hover-border-color: transparent;\n  --tblr-btn-active-color: var(--tblr-link-hover-color);\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-disabled-color: #475569;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-btn-box-shadow: none;\n  --tblr-btn-focus-shadow-rgb: 65, 129, 204;\n  text-decoration: none;\n}\n.btn-link:hover, .btn-link:focus {\n  text-decoration: underline;\n}\n.btn-link:focus {\n  color: var(--tblr-btn-color);\n}\n.btn-link:hover {\n  color: var(--tblr-btn-hover-color);\n}\n\n.btn-lg, .btn-group-lg > .btn {\n  --tblr-btn-padding-y: 0.5rem;\n  --tblr-btn-padding-x: 1.5rem;\n  --tblr-btn-font-size: 1.25rem;\n  --tblr-btn-border-radius: 8px;\n}\n\n.btn-sm, .btn-group-sm > .btn {\n  --tblr-btn-padding-y: 0.125rem;\n  --tblr-btn-padding-x: 0.5rem;\n  --tblr-btn-font-size: 0.75rem;\n  --tblr-btn-border-radius: 2px;\n}\n\n.fade {\n  transition: opacity 0.15s linear;\n}\n@media (prefers-reduced-motion: reduce) {\n  .fade {\n    transition: none;\n  }\n}\n.fade:not(.show) {\n  opacity: 0;\n}\n\n.collapse:not(.show) {\n  display: none;\n}\n\n.collapsing {\n  height: 0;\n  overflow: hidden;\n  transition: height 0.35s ease;\n}\n@media (prefers-reduced-motion: reduce) {\n  .collapsing {\n    transition: none;\n  }\n}\n.collapsing.collapse-horizontal {\n  width: 0;\n  height: auto;\n  transition: width 0.35s ease;\n}\n@media (prefers-reduced-motion: reduce) {\n  .collapsing.collapse-horizontal {\n    transition: none;\n  }\n}\n\n.dropup,\n.dropend,\n.dropdown,\n.dropstart,\n.dropup-center,\n.dropdown-center {\n  position: relative;\n}\n\n.dropdown-toggle {\n  white-space: nowrap;\n}\n.dropdown-toggle:after {\n  content: \"\";\n  display: inline-block;\n  vertical-align: 0.306em;\n  width: 0.36em;\n  height: 0.36em;\n  border-bottom: 1px solid;\n  border-left: 1px solid;\n  margin-right: 0.1em;\n  margin-left: 0.4em;\n  transform: rotate(-45deg);\n}\n\n.dropdown-menu {\n  --tblr-dropdown-min-width: 11rem;\n  --tblr-dropdown-padding-x: 0;\n  --tblr-dropdown-padding-y: 0.25rem;\n  --tblr-dropdown-spacer: 1px;\n  --tblr-dropdown-font-size: 0.875rem;\n  --tblr-dropdown-color: #1e293b;\n  --tblr-dropdown-bg: #ffffff;\n  --tblr-dropdown-border-color: rgba(98, 105, 118, 0.16);\n  --tblr-dropdown-border-radius: 4px;\n  --tblr-dropdown-border-width: 1px;\n  --tblr-dropdown-inner-border-radius: 3px;\n  --tblr-dropdown-divider-bg: rgba(98, 105, 118, 0.16);\n  --tblr-dropdown-divider-margin-y: 0.5rem;\n  --tblr-dropdown-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n  --tblr-dropdown-link-color: inherit;\n  --tblr-dropdown-link-hover-color: inherit;\n  --tblr-dropdown-link-hover-bg: rgba(98, 105, 118, 0.04);\n  --tblr-dropdown-link-active-color: #206bc4;\n  --tblr-dropdown-link-active-bg: rgba(32, 107, 196, 0.04);\n  --tblr-dropdown-link-disabled-color: #64748b;\n  --tblr-dropdown-item-padding-x: 0.75rem;\n  --tblr-dropdown-item-padding-y: 0.5rem;\n  --tblr-dropdown-header-color: #475569;\n  --tblr-dropdown-header-padding-x: 0.75rem;\n  --tblr-dropdown-header-padding-y: 0.25rem;\n  position: absolute;\n  z-index: 1000;\n  display: none;\n  min-width: var(--tblr-dropdown-min-width);\n  padding: var(--tblr-dropdown-padding-y) var(--tblr-dropdown-padding-x);\n  margin: 0;\n  font-size: var(--tblr-dropdown-font-size);\n  color: var(--tblr-dropdown-color);\n  text-align: left;\n  list-style: none;\n  background-color: var(--tblr-dropdown-bg);\n  background-clip: padding-box;\n  border: var(--tblr-dropdown-border-width) solid var(--tblr-dropdown-border-color);\n  border-radius: var(--tblr-dropdown-border-radius);\n}\n.dropdown-menu[data-bs-popper] {\n  top: 100%;\n  left: 0;\n  margin-top: var(--tblr-dropdown-spacer);\n}\n\n.dropdown-menu-start {\n  --bs-position: start;\n}\n.dropdown-menu-start[data-bs-popper] {\n  right: auto;\n  left: 0;\n}\n\n.dropdown-menu-end {\n  --bs-position: end;\n}\n.dropdown-menu-end[data-bs-popper] {\n  right: 0;\n  left: auto;\n}\n\n@media (min-width: 576px) {\n  .dropdown-menu-sm-start {\n    --bs-position: start;\n  }\n  .dropdown-menu-sm-start[data-bs-popper] {\n    right: auto;\n    left: 0;\n  }\n  .dropdown-menu-sm-end {\n    --bs-position: end;\n  }\n  .dropdown-menu-sm-end[data-bs-popper] {\n    right: 0;\n    left: auto;\n  }\n}\n@media (min-width: 768px) {\n  .dropdown-menu-md-start {\n    --bs-position: start;\n  }\n  .dropdown-menu-md-start[data-bs-popper] {\n    right: auto;\n    left: 0;\n  }\n  .dropdown-menu-md-end {\n    --bs-position: end;\n  }\n  .dropdown-menu-md-end[data-bs-popper] {\n    right: 0;\n    left: auto;\n  }\n}\n@media (min-width: 992px) {\n  .dropdown-menu-lg-start {\n    --bs-position: start;\n  }\n  .dropdown-menu-lg-start[data-bs-popper] {\n    right: auto;\n    left: 0;\n  }\n  .dropdown-menu-lg-end {\n    --bs-position: end;\n  }\n  .dropdown-menu-lg-end[data-bs-popper] {\n    right: 0;\n    left: auto;\n  }\n}\n@media (min-width: 1200px) {\n  .dropdown-menu-xl-start {\n    --bs-position: start;\n  }\n  .dropdown-menu-xl-start[data-bs-popper] {\n    right: auto;\n    left: 0;\n  }\n  .dropdown-menu-xl-end {\n    --bs-position: end;\n  }\n  .dropdown-menu-xl-end[data-bs-popper] {\n    right: 0;\n    left: auto;\n  }\n}\n@media (min-width: 1400px) {\n  .dropdown-menu-xxl-start {\n    --bs-position: start;\n  }\n  .dropdown-menu-xxl-start[data-bs-popper] {\n    right: auto;\n    left: 0;\n  }\n  .dropdown-menu-xxl-end {\n    --bs-position: end;\n  }\n  .dropdown-menu-xxl-end[data-bs-popper] {\n    right: 0;\n    left: auto;\n  }\n}\n.dropup .dropdown-menu[data-bs-popper] {\n  top: auto;\n  bottom: 100%;\n  margin-top: 0;\n  margin-bottom: var(--tblr-dropdown-spacer);\n}\n.dropup .dropdown-toggle:after {\n  content: \"\";\n  display: inline-block;\n  vertical-align: 0.306em;\n  width: 0.36em;\n  height: 0.36em;\n  border-bottom: 1px solid;\n  border-left: 1px solid;\n  margin-right: 0.1em;\n  margin-left: 0.4em;\n  transform: rotate(135deg);\n}\n\n.dropend .dropdown-menu[data-bs-popper] {\n  top: 0;\n  right: auto;\n  left: 100%;\n  margin-top: 0;\n  margin-left: var(--tblr-dropdown-spacer);\n}\n.dropend .dropdown-toggle:after {\n  content: \"\";\n  display: inline-block;\n  vertical-align: 0.306em;\n  width: 0.36em;\n  height: 0.36em;\n  border-bottom: 1px solid;\n  border-left: 1px solid;\n  margin-right: 0.1em;\n  margin-left: 0.4em;\n  transform: rotate(-135deg);\n}\n.dropend .dropdown-toggle::after {\n  vertical-align: 0;\n}\n\n.dropstart .dropdown-menu[data-bs-popper] {\n  top: 0;\n  right: 100%;\n  left: auto;\n  margin-top: 0;\n  margin-right: var(--tblr-dropdown-spacer);\n}\n.dropstart .dropdown-toggle:after {\n  content: \"\";\n  display: inline-block;\n  vertical-align: 0.306em;\n  width: 0.36em;\n  height: 0.36em;\n  border-bottom: 1px solid;\n  border-left: 1px solid;\n  margin-right: 0.1em;\n  margin-left: 0.4em;\n  transform: rotate(45deg);\n}\n.dropstart .dropdown-toggle::before {\n  vertical-align: 0;\n}\n\n.dropdown-divider {\n  height: 0;\n  margin: var(--tblr-dropdown-divider-margin-y) 0;\n  overflow: hidden;\n  border-top: 1px solid var(--tblr-dropdown-divider-bg);\n  opacity: 1;\n}\n\n.dropdown-item {\n  display: block;\n  width: 100%;\n  padding: var(--tblr-dropdown-item-padding-y) var(--tblr-dropdown-item-padding-x);\n  clear: both;\n  font-weight: 400;\n  color: var(--tblr-dropdown-link-color);\n  text-align: inherit;\n  white-space: nowrap;\n  background-color: transparent;\n  border: 0;\n}\n.dropdown-item:hover, .dropdown-item:focus {\n  color: var(--tblr-dropdown-link-hover-color);\n  text-decoration: none;\n  background-color: var(--tblr-dropdown-link-hover-bg);\n}\n.dropdown-item.active, .dropdown-item:active {\n  color: var(--tblr-dropdown-link-active-color);\n  text-decoration: none;\n  background-color: var(--tblr-dropdown-link-active-bg);\n}\n.dropdown-item.disabled, .dropdown-item:disabled {\n  color: var(--tblr-dropdown-link-disabled-color);\n  pointer-events: none;\n  background-color: transparent;\n}\n\n.dropdown-menu.show {\n  display: block;\n}\n\n.dropdown-header {\n  display: block;\n  padding: var(--tblr-dropdown-header-padding-y) var(--tblr-dropdown-header-padding-x);\n  margin-bottom: 0;\n  font-size: 0.765625rem;\n  color: var(--tblr-dropdown-header-color);\n  white-space: nowrap;\n}\n\n.dropdown-item-text {\n  display: block;\n  padding: var(--tblr-dropdown-item-padding-y) var(--tblr-dropdown-item-padding-x);\n  color: var(--tblr-dropdown-link-color);\n}\n\n.dropdown-menu-dark {\n  --tblr-dropdown-color: #cbd5e1;\n  --tblr-dropdown-bg: #1e293b;\n  --tblr-dropdown-border-color: rgba(98, 105, 118, 0.16);\n  --tblr-dropdown-box-shadow: ;\n  --tblr-dropdown-link-color: #cbd5e1;\n  --tblr-dropdown-link-hover-color: #ffffff;\n  --tblr-dropdown-divider-bg: rgba(98, 105, 118, 0.16);\n  --tblr-dropdown-link-hover-bg: rgba(255, 255, 255, 0.15);\n  --tblr-dropdown-link-active-color: #206bc4;\n  --tblr-dropdown-link-active-bg: rgba(32, 107, 196, 0.04);\n  --tblr-dropdown-link-disabled-color: #64748b;\n  --tblr-dropdown-header-color: #64748b;\n}\n\n.btn-group,\n.btn-group-vertical {\n  position: relative;\n  display: inline-flex;\n  vertical-align: middle;\n}\n.btn-group > .btn,\n.btn-group-vertical > .btn {\n  position: relative;\n  flex: 1 1 auto;\n}\n.btn-group > .btn-check:checked + .btn,\n.btn-group > .btn-check:focus + .btn,\n.btn-group > .btn:hover,\n.btn-group > .btn:focus,\n.btn-group > .btn:active,\n.btn-group > .btn.active,\n.btn-group-vertical > .btn-check:checked + .btn,\n.btn-group-vertical > .btn-check:focus + .btn,\n.btn-group-vertical > .btn:hover,\n.btn-group-vertical > .btn:focus,\n.btn-group-vertical > .btn:active,\n.btn-group-vertical > .btn.active {\n  z-index: 1;\n}\n\n.btn-toolbar {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n}\n.btn-toolbar .input-group {\n  width: auto;\n}\n\n.btn-group {\n  border-radius: 4px;\n}\n.btn-group > .btn:not(:first-child),\n.btn-group > .btn-group:not(:first-child) {\n  margin-left: -1px;\n}\n.btn-group > .btn:not(:last-child):not(.dropdown-toggle),\n.btn-group > .btn.dropdown-toggle-split:first-child,\n.btn-group > .btn-group:not(:last-child) > .btn {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n.btn-group > .btn:nth-child(n+3),\n.btn-group > :not(.btn-check) + .btn,\n.btn-group > .btn-group:not(:first-child) > .btn {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.dropdown-toggle-split {\n  padding-right: 0.75rem;\n  padding-left: 0.75rem;\n}\n.dropdown-toggle-split::after, .dropup .dropdown-toggle-split::after, .dropend .dropdown-toggle-split::after {\n  margin-left: 0;\n}\n.dropstart .dropdown-toggle-split::before {\n  margin-right: 0;\n}\n\n.btn-sm + .dropdown-toggle-split, .btn-group-sm > .btn + .dropdown-toggle-split {\n  padding-right: 0.375rem;\n  padding-left: 0.375rem;\n}\n\n.btn-lg + .dropdown-toggle-split, .btn-group-lg > .btn + .dropdown-toggle-split {\n  padding-right: 1.125rem;\n  padding-left: 1.125rem;\n}\n\n.btn-group-vertical {\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n}\n.btn-group-vertical > .btn,\n.btn-group-vertical > .btn-group {\n  width: 100%;\n}\n.btn-group-vertical > .btn:not(:first-child),\n.btn-group-vertical > .btn-group:not(:first-child) {\n  margin-top: -1px;\n}\n.btn-group-vertical > .btn:not(:last-child):not(.dropdown-toggle),\n.btn-group-vertical > .btn-group:not(:last-child) > .btn {\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n.btn-group-vertical > .btn ~ .btn,\n.btn-group-vertical > .btn-group:not(:first-child) > .btn {\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\n\n.nav {\n  --tblr-nav-link-padding-x: 0.75rem;\n  --tblr-nav-link-padding-y: 0.5rem;\n  --tblr-nav-link-font-weight: ;\n  --tblr-nav-link-color: inherit;\n  --tblr-nav-link-hover-color: var(--tblr-link-hover-color);\n  --tblr-nav-link-disabled-color: #475569;\n  display: flex;\n  flex-wrap: wrap;\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style: none;\n}\n\n.nav-link {\n  display: block;\n  padding: var(--tblr-nav-link-padding-y) var(--tblr-nav-link-padding-x);\n  font-size: var(--tblr-nav-link-font-size);\n  font-weight: var(--tblr-nav-link-font-weight);\n  color: var(--tblr-nav-link-color);\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .nav-link {\n    transition: none;\n  }\n}\n.nav-link:hover, .nav-link:focus {\n  color: var(--tblr-nav-link-hover-color);\n  text-decoration: none;\n}\n.nav-link.disabled {\n  color: var(--tblr-nav-link-disabled-color);\n  pointer-events: none;\n  cursor: default;\n}\n\n.nav-tabs {\n  --tblr-nav-tabs-border-width: 1px;\n  --tblr-nav-tabs-border-color: #cbd5e1;\n  --tblr-nav-tabs-border-radius: 4px;\n  --tblr-nav-tabs-link-hover-border-color: #e2e8f0 #e2e8f0 #cbd5e1;\n  --tblr-nav-tabs-link-active-color: #334155;\n  --tblr-nav-tabs-link-active-bg: #f5f7fb;\n  --tblr-nav-tabs-link-active-border-color: #cbd5e1 #cbd5e1 #f5f7fb;\n  border-bottom: var(--tblr-nav-tabs-border-width) solid var(--tblr-nav-tabs-border-color);\n}\n.nav-tabs .nav-link {\n  margin-bottom: calc(var(--tblr-nav-tabs-border-width) * -1);\n  background: none;\n  border: var(--tblr-nav-tabs-border-width) solid transparent;\n  border-top-left-radius: var(--tblr-nav-tabs-border-radius);\n  border-top-right-radius: var(--tblr-nav-tabs-border-radius);\n}\n.nav-tabs .nav-link:hover, .nav-tabs .nav-link:focus {\n  isolation: isolate;\n  border-color: var(--tblr-nav-tabs-link-hover-border-color);\n}\n.nav-tabs .nav-link.disabled, .nav-tabs .nav-link:disabled {\n  color: var(--tblr-nav-link-disabled-color);\n  background-color: transparent;\n  border-color: transparent;\n}\n.nav-tabs .nav-link.active,\n.nav-tabs .nav-item.show .nav-link {\n  color: var(--tblr-nav-tabs-link-active-color);\n  background-color: var(--tblr-nav-tabs-link-active-bg);\n  border-color: var(--tblr-nav-tabs-link-active-border-color);\n}\n.nav-tabs .dropdown-menu {\n  margin-top: calc(var(--tblr-nav-tabs-border-width) * -1);\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\n\n.nav-pills {\n  --tblr-nav-pills-border-radius: 4px;\n  --tblr-nav-pills-link-active-color: #206bc4;\n  --tblr-nav-pills-link-active-bg: rgba(32, 107, 196, 0.04);\n}\n.nav-pills .nav-link {\n  background: none;\n  border: 0;\n  border-radius: var(--tblr-nav-pills-border-radius);\n}\n.nav-pills .nav-link:disabled {\n  color: var(--tblr-nav-link-disabled-color);\n  background-color: transparent;\n  border-color: transparent;\n}\n.nav-pills .nav-link.active,\n.nav-pills .show > .nav-link {\n  color: var(--tblr-nav-pills-link-active-color);\n  background-color: var(--tblr-nav-pills-link-active-bg);\n}\n\n.nav-fill > .nav-link,\n.nav-fill .nav-item {\n  flex: 1 1 auto;\n  text-align: center;\n}\n\n.nav-justified > .nav-link,\n.nav-justified .nav-item {\n  flex-basis: 0;\n  flex-grow: 1;\n  text-align: center;\n}\n\n.nav-fill .nav-item .nav-link,\n.nav-justified .nav-item .nav-link {\n  width: 100%;\n}\n\n.tab-content > .tab-pane {\n  display: none;\n}\n.tab-content > .active {\n  display: block;\n}\n\n.navbar {\n  --tblr-navbar-padding-x: 0;\n  --tblr-navbar-padding-y: 0.25rem;\n  --tblr-navbar-color: #1e293b;\n  --tblr-navbar-hover-color: rgba(0, 0, 0, 0.7);\n  --tblr-navbar-disabled-color: rgba(30, 41, 59, 0.3);\n  --tblr-navbar-active-color: #1e293b;\n  --tblr-navbar-brand-padding-y: 0.5rem;\n  --tblr-navbar-brand-margin-end: 1rem;\n  --tblr-navbar-brand-font-size: 1rem;\n  --tblr-navbar-brand-color: #1e293b;\n  --tblr-navbar-brand-hover-color: #1e293b;\n  --tblr-navbar-nav-link-padding-x: 0.75rem;\n  --tblr-navbar-toggler-padding-y: 0;\n  --tblr-navbar-toggler-padding-x: 0;\n  --tblr-navbar-toggler-font-size: 1rem;\n  --tblr-navbar-toggler-icon-bg: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='%231e293b' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\");\n  --tblr-navbar-toggler-border-color: rgba(0, 0, 0, 0.1);\n  --tblr-navbar-toggler-border-radius: 4px;\n  --tblr-navbar-toggler-focus-width: 0;\n  --tblr-navbar-toggler-transition: box-shadow 0.15s ease-in-out;\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--tblr-navbar-padding-y) var(--tblr-navbar-padding-x);\n}\n.navbar > .container,\n.navbar > .container-fluid,\n.navbar > .container-sm,\n.navbar > .container-md,\n.navbar > .container-lg,\n.navbar > .container-xl,\n.navbar > .container-xxl {\n  display: flex;\n  flex-wrap: inherit;\n  align-items: center;\n  justify-content: space-between;\n}\n.navbar-brand {\n  padding-top: var(--tblr-navbar-brand-padding-y);\n  padding-bottom: var(--tblr-navbar-brand-padding-y);\n  margin-right: var(--tblr-navbar-brand-margin-end);\n  font-size: var(--tblr-navbar-brand-font-size);\n  color: var(--tblr-navbar-brand-color);\n  white-space: nowrap;\n}\n.navbar-brand:hover, .navbar-brand:focus {\n  color: var(--tblr-navbar-brand-hover-color);\n  text-decoration: none;\n}\n\n.navbar-nav {\n  --tblr-nav-link-padding-x: 0;\n  --tblr-nav-link-padding-y: 0.5rem;\n  --tblr-nav-link-font-weight: ;\n  --tblr-nav-link-color: var(--tblr-navbar-color);\n  --tblr-nav-link-hover-color: var(--tblr-navbar-hover-color);\n  --tblr-nav-link-disabled-color: var(--tblr-navbar-disabled-color);\n  display: flex;\n  flex-direction: column;\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style: none;\n}\n.navbar-nav .show > .nav-link,\n.navbar-nav .nav-link.active {\n  color: var(--tblr-navbar-active-color);\n}\n.navbar-nav .dropdown-menu {\n  position: static;\n}\n\n.navbar-text {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  color: var(--tblr-navbar-color);\n}\n.navbar-text a,\n.navbar-text a:hover,\n.navbar-text a:focus {\n  color: var(--tblr-navbar-active-color);\n}\n\n.navbar-collapse {\n  flex-basis: 100%;\n  flex-grow: 1;\n  align-items: center;\n}\n\n.navbar-toggler {\n  padding: var(--tblr-navbar-toggler-padding-y) var(--tblr-navbar-toggler-padding-x);\n  font-size: var(--tblr-navbar-toggler-font-size);\n  line-height: 1;\n  color: var(--tblr-navbar-color);\n  background-color: transparent;\n  border: var(--tblr-border-width) solid var(--tblr-navbar-toggler-border-color);\n  border-radius: var(--tblr-navbar-toggler-border-radius);\n  transition: var(--tblr-navbar-toggler-transition);\n}\n@media (prefers-reduced-motion: reduce) {\n  .navbar-toggler {\n    transition: none;\n  }\n}\n.navbar-toggler:hover {\n  text-decoration: none;\n}\n.navbar-toggler:focus {\n  text-decoration: none;\n  outline: 0;\n  box-shadow: 0 0 0 var(--tblr-navbar-toggler-focus-width);\n}\n\n.navbar-toggler-icon {\n  display: inline-block;\n  width: 1.5em;\n  height: 1.5em;\n  vertical-align: middle;\n  background-image: var(--tblr-navbar-toggler-icon-bg);\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: 100%;\n}\n\n.navbar-nav-scroll {\n  max-height: var(--tblr-scroll-height, 75vh);\n  overflow-y: auto;\n}\n\n@media (min-width: 576px) {\n  .navbar-expand-sm {\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n  }\n  .navbar-expand-sm .navbar-nav {\n    flex-direction: row;\n  }\n  .navbar-expand-sm .navbar-nav .dropdown-menu {\n    position: absolute;\n  }\n  .navbar-expand-sm .navbar-nav .nav-link {\n    padding-right: var(--tblr-navbar-nav-link-padding-x);\n    padding-left: var(--tblr-navbar-nav-link-padding-x);\n  }\n  .navbar-expand-sm .navbar-nav-scroll {\n    overflow: visible;\n  }\n  .navbar-expand-sm .navbar-collapse {\n    display: flex !important;\n    flex-basis: auto;\n  }\n  .navbar-expand-sm .navbar-toggler {\n    display: none;\n  }\n  .navbar-expand-sm .offcanvas {\n    position: static;\n    z-index: auto;\n    flex-grow: 1;\n    width: auto !important;\n    height: auto !important;\n    visibility: visible !important;\n    background-color: transparent !important;\n    border: 0 !important;\n    transform: none !important;\n    transition: none;\n  }\n  .navbar-expand-sm .offcanvas .offcanvas-header {\n    display: none;\n  }\n  .navbar-expand-sm .offcanvas .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-expand-md {\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n  }\n  .navbar-expand-md .navbar-nav {\n    flex-direction: row;\n  }\n  .navbar-expand-md .navbar-nav .dropdown-menu {\n    position: absolute;\n  }\n  .navbar-expand-md .navbar-nav .nav-link {\n    padding-right: var(--tblr-navbar-nav-link-padding-x);\n    padding-left: var(--tblr-navbar-nav-link-padding-x);\n  }\n  .navbar-expand-md .navbar-nav-scroll {\n    overflow: visible;\n  }\n  .navbar-expand-md .navbar-collapse {\n    display: flex !important;\n    flex-basis: auto;\n  }\n  .navbar-expand-md .navbar-toggler {\n    display: none;\n  }\n  .navbar-expand-md .offcanvas {\n    position: static;\n    z-index: auto;\n    flex-grow: 1;\n    width: auto !important;\n    height: auto !important;\n    visibility: visible !important;\n    background-color: transparent !important;\n    border: 0 !important;\n    transform: none !important;\n    transition: none;\n  }\n  .navbar-expand-md .offcanvas .offcanvas-header {\n    display: none;\n  }\n  .navbar-expand-md .offcanvas .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n  }\n}\n@media (min-width: 992px) {\n  .navbar-expand-lg {\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n  }\n  .navbar-expand-lg .navbar-nav {\n    flex-direction: row;\n  }\n  .navbar-expand-lg .navbar-nav .dropdown-menu {\n    position: absolute;\n  }\n  .navbar-expand-lg .navbar-nav .nav-link {\n    padding-right: var(--tblr-navbar-nav-link-padding-x);\n    padding-left: var(--tblr-navbar-nav-link-padding-x);\n  }\n  .navbar-expand-lg .navbar-nav-scroll {\n    overflow: visible;\n  }\n  .navbar-expand-lg .navbar-collapse {\n    display: flex !important;\n    flex-basis: auto;\n  }\n  .navbar-expand-lg .navbar-toggler {\n    display: none;\n  }\n  .navbar-expand-lg .offcanvas {\n    position: static;\n    z-index: auto;\n    flex-grow: 1;\n    width: auto !important;\n    height: auto !important;\n    visibility: visible !important;\n    background-color: transparent !important;\n    border: 0 !important;\n    transform: none !important;\n    transition: none;\n  }\n  .navbar-expand-lg .offcanvas .offcanvas-header {\n    display: none;\n  }\n  .navbar-expand-lg .offcanvas .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n  }\n}\n@media (min-width: 1200px) {\n  .navbar-expand-xl {\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n  }\n  .navbar-expand-xl .navbar-nav {\n    flex-direction: row;\n  }\n  .navbar-expand-xl .navbar-nav .dropdown-menu {\n    position: absolute;\n  }\n  .navbar-expand-xl .navbar-nav .nav-link {\n    padding-right: var(--tblr-navbar-nav-link-padding-x);\n    padding-left: var(--tblr-navbar-nav-link-padding-x);\n  }\n  .navbar-expand-xl .navbar-nav-scroll {\n    overflow: visible;\n  }\n  .navbar-expand-xl .navbar-collapse {\n    display: flex !important;\n    flex-basis: auto;\n  }\n  .navbar-expand-xl .navbar-toggler {\n    display: none;\n  }\n  .navbar-expand-xl .offcanvas {\n    position: static;\n    z-index: auto;\n    flex-grow: 1;\n    width: auto !important;\n    height: auto !important;\n    visibility: visible !important;\n    background-color: transparent !important;\n    border: 0 !important;\n    transform: none !important;\n    transition: none;\n  }\n  .navbar-expand-xl .offcanvas .offcanvas-header {\n    display: none;\n  }\n  .navbar-expand-xl .offcanvas .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n  }\n}\n@media (min-width: 1400px) {\n  .navbar-expand-xxl {\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n  }\n  .navbar-expand-xxl .navbar-nav {\n    flex-direction: row;\n  }\n  .navbar-expand-xxl .navbar-nav .dropdown-menu {\n    position: absolute;\n  }\n  .navbar-expand-xxl .navbar-nav .nav-link {\n    padding-right: var(--tblr-navbar-nav-link-padding-x);\n    padding-left: var(--tblr-navbar-nav-link-padding-x);\n  }\n  .navbar-expand-xxl .navbar-nav-scroll {\n    overflow: visible;\n  }\n  .navbar-expand-xxl .navbar-collapse {\n    display: flex !important;\n    flex-basis: auto;\n  }\n  .navbar-expand-xxl .navbar-toggler {\n    display: none;\n  }\n  .navbar-expand-xxl .offcanvas {\n    position: static;\n    z-index: auto;\n    flex-grow: 1;\n    width: auto !important;\n    height: auto !important;\n    visibility: visible !important;\n    background-color: transparent !important;\n    border: 0 !important;\n    transform: none !important;\n    transition: none;\n  }\n  .navbar-expand-xxl .offcanvas .offcanvas-header {\n    display: none;\n  }\n  .navbar-expand-xxl .offcanvas .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n  }\n}\n.navbar-expand {\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n}\n.navbar-expand .navbar-nav {\n  flex-direction: row;\n}\n.navbar-expand .navbar-nav .dropdown-menu {\n  position: absolute;\n}\n.navbar-expand .navbar-nav .nav-link {\n  padding-right: var(--tblr-navbar-nav-link-padding-x);\n  padding-left: var(--tblr-navbar-nav-link-padding-x);\n}\n.navbar-expand .navbar-nav-scroll {\n  overflow: visible;\n}\n.navbar-expand .navbar-collapse {\n  display: flex !important;\n  flex-basis: auto;\n}\n.navbar-expand .navbar-toggler {\n  display: none;\n}\n.navbar-expand .offcanvas {\n  position: static;\n  z-index: auto;\n  flex-grow: 1;\n  width: auto !important;\n  height: auto !important;\n  visibility: visible !important;\n  background-color: transparent !important;\n  border: 0 !important;\n  transform: none !important;\n  transition: none;\n}\n.navbar-expand .offcanvas .offcanvas-header {\n  display: none;\n}\n.navbar-expand .offcanvas .offcanvas-body {\n  display: flex;\n  flex-grow: 0;\n  padding: 0;\n  overflow-y: visible;\n}\n\n.navbar-dark {\n  --tblr-navbar-color: rgba(255, 255, 255, 0.7);\n  --tblr-navbar-hover-color: rgba(255, 255, 255, 0.75);\n  --tblr-navbar-disabled-color: rgba(255, 255, 255, 0.3);\n  --tblr-navbar-active-color: #ffffff;\n  --tblr-navbar-brand-color: #ffffff;\n  --tblr-navbar-brand-hover-color: #ffffff;\n  --tblr-navbar-toggler-border-color: rgba(255, 255, 255, 0.1);\n  --tblr-navbar-toggler-icon-bg: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.7%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\");\n}\n\n.card {\n  --tblr-card-spacer-y: 1rem;\n  --tblr-card-spacer-x: 1.25rem;\n  --tblr-card-title-spacer-y: 1.25rem;\n  --tblr-card-border-width: 1px;\n  --tblr-card-border-color: rgba(98, 105, 118, 0.16);\n  --tblr-card-border-radius: 4px;\n  --tblr-card-box-shadow: ;\n  --tblr-card-inner-border-radius: 3px;\n  --tblr-card-cap-padding-y: 1rem;\n  --tblr-card-cap-padding-x: 1.25rem;\n  --tblr-card-cap-bg: #fafbfc;\n  --tblr-card-cap-color: #626976;\n  --tblr-card-height: ;\n  --tblr-card-color: ;\n  --tblr-card-bg: #ffffff;\n  --tblr-card-img-overlay-padding: 1rem;\n  --tblr-card-group-margin: 1.5rem;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  min-width: 0;\n  height: var(--tblr-card-height);\n  word-wrap: break-word;\n  background-color: var(--tblr-card-bg);\n  background-clip: border-box;\n  border: var(--tblr-card-border-width) solid var(--tblr-card-border-color);\n  border-radius: var(--tblr-card-border-radius);\n}\n.card > hr, .card > .hr {\n  margin-right: 0;\n  margin-left: 0;\n}\n.card > .list-group {\n  border-top: inherit;\n  border-bottom: inherit;\n}\n.card > .list-group:first-child {\n  border-top-width: 0;\n  border-top-left-radius: var(--tblr-card-inner-border-radius);\n  border-top-right-radius: var(--tblr-card-inner-border-radius);\n}\n.card > .list-group:last-child {\n  border-bottom-width: 0;\n  border-bottom-right-radius: var(--tblr-card-inner-border-radius);\n  border-bottom-left-radius: var(--tblr-card-inner-border-radius);\n}\n.card > .card-header + .list-group,\n.card > .list-group + .card-footer {\n  border-top: 0;\n}\n\n.card-body {\n  flex: 1 1 auto;\n  padding: var(--tblr-card-spacer-y) var(--tblr-card-spacer-x);\n  color: var(--tblr-card-color);\n}\n\n.card-title {\n  margin-bottom: var(--tblr-card-title-spacer-y);\n}\n\n.card-subtitle {\n  margin-top: calc(-0.5 * var(--tblr-card-title-spacer-y));\n  margin-bottom: 0;\n}\n\n.card-text:last-child {\n  margin-bottom: 0;\n}\n\n.card-link:hover {\n  text-decoration: none;\n}\n.card-link + .card-link {\n  margin-left: var(--tblr-card-spacer-x);\n}\n\n.card-header {\n  padding: var(--tblr-card-cap-padding-y) var(--tblr-card-cap-padding-x);\n  margin-bottom: 0;\n  color: var(--tblr-card-cap-color);\n  background-color: var(--tblr-card-cap-bg);\n  border-bottom: var(--tblr-card-border-width) solid var(--tblr-card-border-color);\n}\n.card-header:first-child {\n  border-radius: var(--tblr-card-inner-border-radius) var(--tblr-card-inner-border-radius) 0 0;\n}\n\n.card-footer {\n  padding: var(--tblr-card-cap-padding-y) var(--tblr-card-cap-padding-x);\n  color: var(--tblr-card-cap-color);\n  background-color: var(--tblr-card-cap-bg);\n  border-top: var(--tblr-card-border-width) solid var(--tblr-card-border-color);\n}\n.card-footer:last-child {\n  border-radius: 0 0 var(--tblr-card-inner-border-radius) var(--tblr-card-inner-border-radius);\n}\n\n.card-header-tabs {\n  margin-right: calc(-0.5 * var(--tblr-card-cap-padding-x));\n  margin-bottom: calc(-1 * var(--tblr-card-cap-padding-y));\n  margin-left: calc(-0.5 * var(--tblr-card-cap-padding-x));\n  border-bottom: 0;\n}\n.card-header-tabs .nav-link.active {\n  background-color: var(--tblr-card-bg);\n  border-bottom-color: var(--tblr-card-bg);\n}\n\n.card-header-pills {\n  margin-right: calc(-0.5 * var(--tblr-card-cap-padding-x));\n  margin-left: calc(-0.5 * var(--tblr-card-cap-padding-x));\n}\n\n.card-img-overlay {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  padding: var(--tblr-card-img-overlay-padding);\n  border-radius: var(--tblr-card-inner-border-radius);\n}\n\n.card-img,\n.card-img-top,\n.card-img-bottom {\n  width: 100%;\n}\n\n.card-img,\n.card-img-top {\n  border-top-left-radius: var(--tblr-card-inner-border-radius);\n  border-top-right-radius: var(--tblr-card-inner-border-radius);\n}\n\n.card-img,\n.card-img-bottom {\n  border-bottom-right-radius: var(--tblr-card-inner-border-radius);\n  border-bottom-left-radius: var(--tblr-card-inner-border-radius);\n}\n\n.card-group > .card {\n  margin-bottom: var(--tblr-card-group-margin);\n}\n@media (min-width: 576px) {\n  .card-group {\n    display: flex;\n    flex-flow: row wrap;\n  }\n  .card-group > .card {\n    flex: 1 0 0%;\n    margin-bottom: 0;\n  }\n  .card-group > .card + .card {\n    margin-left: 0;\n    border-left: 0;\n  }\n  .card-group > .card:not(:last-child) {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n  .card-group > .card:not(:last-child) .card-img-top,\n.card-group > .card:not(:last-child) .card-header {\n    border-top-right-radius: 0;\n  }\n  .card-group > .card:not(:last-child) .card-img-bottom,\n.card-group > .card:not(:last-child) .card-footer {\n    border-bottom-right-radius: 0;\n  }\n  .card-group > .card:not(:first-child) {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n  .card-group > .card:not(:first-child) .card-img-top,\n.card-group > .card:not(:first-child) .card-header {\n    border-top-left-radius: 0;\n  }\n  .card-group > .card:not(:first-child) .card-img-bottom,\n.card-group > .card:not(:first-child) .card-footer {\n    border-bottom-left-radius: 0;\n  }\n}\n\n.accordion {\n  --tblr-accordion-color: #fafbfc;\n  --tblr-accordion-bg: transparent;\n  --tblr-accordion-transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, border-radius 0.15s ease;\n  --tblr-accordion-border-color: rgba(98, 105, 118, 0.16);\n  --tblr-accordion-border-width: 1px;\n  --tblr-accordion-border-radius: 4px;\n  --tblr-accordion-inner-border-radius: 3px;\n  --tblr-accordion-btn-padding-x: 1.25rem;\n  --tblr-accordion-btn-padding-y: 1rem;\n  --tblr-accordion-btn-color: var(--tblr-body-color);\n  --tblr-accordion-btn-bg: transparent;\n  --tblr-accordion-btn-icon: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='var%28--tblr-body-color%29'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\n  --tblr-accordion-btn-icon-width: 1rem;\n  --tblr-accordion-btn-icon-transform: rotate(-180deg);\n  --tblr-accordion-btn-icon-transition: transform 0.2s ease-in-out;\n  --tblr-accordion-btn-active-icon: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='inherit'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\n  --tblr-accordion-btn-focus-border-color: rgba(98, 105, 118, 0.16);\n  --tblr-accordion-btn-focus-box-shadow: 0 0 0 0.25rem rgba(32, 107, 196, 0.25);\n  --tblr-accordion-body-padding-x: 1.25rem;\n  --tblr-accordion-body-padding-y: 1rem;\n  --tblr-accordion-active-color: inherit;\n  --tblr-accordion-active-bg: transparent;\n}\n\n.accordion-button {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: var(--tblr-accordion-btn-padding-y) var(--tblr-accordion-btn-padding-x);\n  font-size: 0.875rem;\n  color: var(--tblr-accordion-btn-color);\n  text-align: left;\n  background-color: var(--tblr-accordion-btn-bg);\n  border: 0;\n  border-radius: 0;\n  overflow-anchor: none;\n  transition: var(--tblr-accordion-transition);\n}\n@media (prefers-reduced-motion: reduce) {\n  .accordion-button {\n    transition: none;\n  }\n}\n.accordion-button:not(.collapsed) {\n  color: var(--tblr-accordion-active-color);\n  background-color: var(--tblr-accordion-active-bg);\n  box-shadow: inset 0 calc(var(--tblr-accordion-border-width) * -1) 0 var(--tblr-accordion-border-color);\n}\n.accordion-button:not(.collapsed)::after {\n  background-image: var(--tblr-accordion-btn-active-icon);\n  transform: var(--tblr-accordion-btn-icon-transform);\n}\n.accordion-button::after {\n  flex-shrink: 0;\n  width: var(--tblr-accordion-btn-icon-width);\n  height: var(--tblr-accordion-btn-icon-width);\n  margin-left: auto;\n  content: \"\";\n  background-image: var(--tblr-accordion-btn-icon);\n  background-repeat: no-repeat;\n  background-size: var(--tblr-accordion-btn-icon-width);\n  transition: var(--tblr-accordion-btn-icon-transition);\n}\n@media (prefers-reduced-motion: reduce) {\n  .accordion-button::after {\n    transition: none;\n  }\n}\n.accordion-button:hover {\n  z-index: 2;\n}\n.accordion-button:focus {\n  z-index: 3;\n  border-color: var(--tblr-accordion-btn-focus-border-color);\n  outline: 0;\n  box-shadow: var(--tblr-accordion-btn-focus-box-shadow);\n}\n\n.accordion-header {\n  margin-bottom: 0;\n}\n\n.accordion-item {\n  color: var(--tblr-accordion-color);\n  background-color: var(--tblr-accordion-bg);\n  border: var(--tblr-accordion-border-width) solid var(--tblr-accordion-border-color);\n}\n.accordion-item:first-of-type {\n  border-top-left-radius: var(--tblr-accordion-border-radius);\n  border-top-right-radius: var(--tblr-accordion-border-radius);\n}\n.accordion-item:first-of-type .accordion-button {\n  border-top-left-radius: var(--tblr-accordion-inner-border-radius);\n  border-top-right-radius: var(--tblr-accordion-inner-border-radius);\n}\n.accordion-item:not(:first-of-type) {\n  border-top: 0;\n}\n.accordion-item:last-of-type {\n  border-bottom-right-radius: var(--tblr-accordion-border-radius);\n  border-bottom-left-radius: var(--tblr-accordion-border-radius);\n}\n.accordion-item:last-of-type .accordion-button.collapsed {\n  border-bottom-right-radius: var(--tblr-accordion-inner-border-radius);\n  border-bottom-left-radius: var(--tblr-accordion-inner-border-radius);\n}\n.accordion-item:last-of-type .accordion-collapse {\n  border-bottom-right-radius: var(--tblr-accordion-border-radius);\n  border-bottom-left-radius: var(--tblr-accordion-border-radius);\n}\n\n.accordion-body {\n  padding: var(--tblr-accordion-body-padding-y) var(--tblr-accordion-body-padding-x);\n}\n\n.accordion-flush .accordion-collapse {\n  border-width: 0;\n}\n.accordion-flush .accordion-item {\n  border-right: 0;\n  border-left: 0;\n  border-radius: 0;\n}\n.accordion-flush .accordion-item:first-child {\n  border-top: 0;\n}\n.accordion-flush .accordion-item:last-child {\n  border-bottom: 0;\n}\n.accordion-flush .accordion-item .accordion-button {\n  border-radius: 0;\n}\n\n.breadcrumb {\n  --tblr-breadcrumb-padding-x: 0;\n  --tblr-breadcrumb-padding-y: 0;\n  --tblr-breadcrumb-margin-bottom: 1rem;\n  --tblr-breadcrumb-bg: ;\n  --tblr-breadcrumb-border-radius: ;\n  --tblr-breadcrumb-divider-color: #626976;\n  --tblr-breadcrumb-item-padding-x: 0.5rem;\n  --tblr-breadcrumb-item-active-color: inherit;\n  display: flex;\n  flex-wrap: wrap;\n  padding: var(--tblr-breadcrumb-padding-y) var(--tblr-breadcrumb-padding-x);\n  margin-bottom: var(--tblr-breadcrumb-margin-bottom);\n  font-size: var(--tblr-breadcrumb-font-size);\n  list-style: none;\n  background-color: var(--tblr-breadcrumb-bg);\n  border-radius: var(--tblr-breadcrumb-border-radius);\n}\n\n.breadcrumb-item + .breadcrumb-item {\n  padding-left: var(--tblr-breadcrumb-item-padding-x);\n}\n.breadcrumb-item + .breadcrumb-item::before {\n  float: left;\n  padding-right: var(--tblr-breadcrumb-item-padding-x);\n  color: var(--tblr-breadcrumb-divider-color);\n  content: var(--tblr-breadcrumb-divider, \"/\") /* rtl: var(--tblr-breadcrumb-divider, \"/\") */;\n}\n.breadcrumb-item.active {\n  color: var(--tblr-breadcrumb-item-active-color);\n}\n\n.pagination {\n  --tblr-pagination-padding-x: 0.25rem;\n  --tblr-pagination-padding-y: 0.25rem;\n  --tblr-pagination-font-size: 0.875rem;\n  --tblr-pagination-color: #626976;\n  --tblr-pagination-bg: transparent;\n  --tblr-pagination-border-width: 0;\n  --tblr-pagination-border-color: #cbd5e1;\n  --tblr-pagination-border-radius: 4px;\n  --tblr-pagination-hover-color: var(--tblr-link-hover-color);\n  --tblr-pagination-hover-bg: #e2e8f0;\n  --tblr-pagination-hover-border-color: #cbd5e1;\n  --tblr-pagination-focus-color: var(--tblr-link-hover-color);\n  --tblr-pagination-focus-bg: #e2e8f0;\n  --tblr-pagination-focus-box-shadow: 0 0 0 0.25rem rgba(32, 107, 196, 0.25);\n  --tblr-pagination-active-color: #ffffff;\n  --tblr-pagination-active-bg: #206bc4;\n  --tblr-pagination-active-border-color: #206bc4;\n  --tblr-pagination-disabled-color: rgba(98, 105, 118, 0.5);\n  --tblr-pagination-disabled-bg: transparent;\n  --tblr-pagination-disabled-border-color: #cbd5e1;\n  display: flex;\n  padding-left: 0;\n  list-style: none;\n}\n\n.page-link {\n  position: relative;\n  display: block;\n  padding: var(--tblr-pagination-padding-y) var(--tblr-pagination-padding-x);\n  font-size: var(--tblr-pagination-font-size);\n  color: var(--tblr-pagination-color);\n  background-color: var(--tblr-pagination-bg);\n  border: var(--tblr-pagination-border-width) solid var(--tblr-pagination-border-color);\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .page-link {\n    transition: none;\n  }\n}\n.page-link:hover {\n  z-index: 2;\n  color: var(--tblr-pagination-hover-color);\n  text-decoration: none;\n  background-color: var(--tblr-pagination-hover-bg);\n  border-color: var(--tblr-pagination-hover-border-color);\n}\n.page-link:focus {\n  z-index: 3;\n  color: var(--tblr-pagination-focus-color);\n  background-color: var(--tblr-pagination-focus-bg);\n  outline: 0;\n  box-shadow: var(--tblr-pagination-focus-box-shadow);\n}\n.page-link.active, .active > .page-link {\n  z-index: 3;\n  color: var(--tblr-pagination-active-color);\n  background-color: var(--tblr-pagination-active-bg);\n  border-color: var(--tblr-pagination-active-border-color);\n}\n.page-link.disabled, .disabled > .page-link {\n  color: var(--tblr-pagination-disabled-color);\n  pointer-events: none;\n  background-color: var(--tblr-pagination-disabled-bg);\n  border-color: var(--tblr-pagination-disabled-border-color);\n}\n\n.page-item:not(:first-child) .page-link {\n  margin-left: 0;\n}\n.page-item:first-child .page-link {\n  border-top-left-radius: var(--tblr-pagination-border-radius);\n  border-bottom-left-radius: var(--tblr-pagination-border-radius);\n}\n.page-item:last-child .page-link {\n  border-top-right-radius: var(--tblr-pagination-border-radius);\n  border-bottom-right-radius: var(--tblr-pagination-border-radius);\n}\n\n.pagination-lg {\n  --tblr-pagination-padding-x: 1.5rem;\n  --tblr-pagination-padding-y: 0.75rem;\n  --tblr-pagination-font-size: 1.09375rem;\n  --tblr-pagination-border-radius: 8px;\n}\n\n.pagination-sm {\n  --tblr-pagination-padding-x: 0.5rem;\n  --tblr-pagination-padding-y: 0.25rem;\n  --tblr-pagination-font-size: 0.765625rem;\n  --tblr-pagination-border-radius: 2px;\n}\n\n.badge {\n  --tblr-badge-padding-x: 0.5em;\n  --tblr-badge-padding-y: 0.25em;\n  --tblr-badge-font-size: 85.71428571%;\n  --tblr-badge-font-weight: 500;\n  --tblr-badge-color: #ffffff;\n  --tblr-badge-border-radius: 4px;\n  display: inline-block;\n  padding: var(--tblr-badge-padding-y) var(--tblr-badge-padding-x);\n  font-size: var(--tblr-badge-font-size);\n  font-weight: var(--tblr-badge-font-weight);\n  line-height: 1;\n  color: var(--tblr-badge-color);\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: baseline;\n  border-radius: var(--tblr-badge-border-radius);\n}\n.badge:empty {\n  display: none;\n}\n\n.btn .badge {\n  position: relative;\n  top: -1px;\n}\n\n.alert {\n  --tblr-alert-bg: transparent;\n  --tblr-alert-padding-x: 1rem;\n  --tblr-alert-padding-y: 1rem;\n  --tblr-alert-margin-bottom: 1rem;\n  --tblr-alert-color: inherit;\n  --tblr-alert-border-color: transparent;\n  --tblr-alert-border: 1px solid var(--tblr-alert-border-color);\n  --tblr-alert-border-radius: 4px;\n  position: relative;\n  padding: var(--tblr-alert-padding-y) var(--tblr-alert-padding-x);\n  margin-bottom: var(--tblr-alert-margin-bottom);\n  color: var(--tblr-alert-color);\n  background-color: var(--tblr-alert-bg);\n  border: var(--tblr-alert-border);\n  border-radius: var(--tblr-alert-border-radius);\n}\n\n.alert-heading {\n  color: inherit;\n}\n\n.alert-link {\n  font-weight: 600;\n}\n\n.alert-dismissible {\n  padding-right: 3rem;\n}\n.alert-dismissible .btn-close {\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 2;\n  padding: 1.25rem 1rem;\n}\n\n@-webkit-keyframes progress-bar-stripes {\n  0% {\n    background-position-x: 0.5rem;\n  }\n}\n\n@keyframes progress-bar-stripes {\n  0% {\n    background-position-x: 0.5rem;\n  }\n}\n.progress {\n  --tblr-progress-height: 0.5rem;\n  --tblr-progress-font-size: 0.65625rem;\n  --tblr-progress-bg: #e6e7e9;\n  --tblr-progress-border-radius: 4px;\n  --tblr-progress-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.075);\n  --tblr-progress-bar-color: #ffffff;\n  --tblr-progress-bar-bg: #206bc4;\n  --tblr-progress-bar-transition: width 0.6s ease;\n  display: flex;\n  height: var(--tblr-progress-height);\n  overflow: hidden;\n  font-size: var(--tblr-progress-font-size);\n  background-color: var(--tblr-progress-bg);\n  border-radius: var(--tblr-progress-border-radius);\n}\n\n.progress-bar {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  overflow: hidden;\n  color: var(--tblr-progress-bar-color);\n  text-align: center;\n  white-space: nowrap;\n  background-color: var(--tblr-progress-bar-bg);\n  transition: var(--tblr-progress-bar-transition);\n}\n@media (prefers-reduced-motion: reduce) {\n  .progress-bar {\n    transition: none;\n  }\n}\n\n.progress-bar-striped {\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-size: var(--tblr-progress-height) var(--tblr-progress-height);\n}\n\n.progress-bar-animated {\n  -webkit-animation: 1s linear infinite progress-bar-stripes;\n          animation: 1s linear infinite progress-bar-stripes;\n}\n@media (prefers-reduced-motion: reduce) {\n  .progress-bar-animated {\n    -webkit-animation: none;\n            animation: none;\n  }\n}\n\n.list-group {\n  --tblr-list-group-color: #0f172a;\n  --tblr-list-group-bg: inherit;\n  --tblr-list-group-border-color: #e6e7e9;\n  --tblr-list-group-border-width: 1px;\n  --tblr-list-group-border-radius: 4px;\n  --tblr-list-group-item-padding-x: 1.25rem;\n  --tblr-list-group-item-padding-y: 1rem;\n  --tblr-list-group-action-color: inherit;\n  --tblr-list-group-action-hover-color: inherit;\n  --tblr-list-group-action-hover-bg: rgba(98, 105, 118, 0.04);\n  --tblr-list-group-action-active-color: #1e293b;\n  --tblr-list-group-action-active-bg: #e2e8f0;\n  --tblr-list-group-disabled-color: #475569;\n  --tblr-list-group-disabled-bg: inherit;\n  --tblr-list-group-active-color: inherit;\n  --tblr-list-group-active-bg: rgba(32, 107, 196, 0.04);\n  --tblr-list-group-active-border-color: #e6e7e9;\n  display: flex;\n  flex-direction: column;\n  padding-left: 0;\n  margin-bottom: 0;\n  border-radius: var(--tblr-list-group-border-radius);\n}\n\n.list-group-numbered {\n  list-style-type: none;\n  counter-reset: section;\n}\n.list-group-numbered > .list-group-item::before {\n  content: counters(section, \".\") \". \";\n  counter-increment: section;\n}\n\n.list-group-item-action {\n  width: 100%;\n  color: var(--tblr-list-group-action-color);\n  text-align: inherit;\n}\n.list-group-item-action:hover, .list-group-item-action:focus {\n  z-index: 1;\n  color: var(--tblr-list-group-action-hover-color);\n  text-decoration: none;\n  background-color: var(--tblr-list-group-action-hover-bg);\n}\n.list-group-item-action:active {\n  color: var(--tblr-list-group-action-active-color);\n  background-color: var(--tblr-list-group-action-active-bg);\n}\n\n.list-group-item {\n  position: relative;\n  display: block;\n  padding: var(--tblr-list-group-item-padding-y) var(--tblr-list-group-item-padding-x);\n  color: var(--tblr-list-group-color);\n  background-color: var(--tblr-list-group-bg);\n  border: var(--tblr-list-group-border-width) solid var(--tblr-list-group-border-color);\n}\n.list-group-item:first-child {\n  border-top-left-radius: inherit;\n  border-top-right-radius: inherit;\n}\n.list-group-item:last-child {\n  border-bottom-right-radius: inherit;\n  border-bottom-left-radius: inherit;\n}\n.list-group-item.disabled, .list-group-item:disabled {\n  color: var(--tblr-list-group-disabled-color);\n  pointer-events: none;\n  background-color: var(--tblr-list-group-disabled-bg);\n}\n.list-group-item.active {\n  z-index: 2;\n  color: var(--tblr-list-group-active-color);\n  background-color: var(--tblr-list-group-active-bg);\n  border-color: var(--tblr-list-group-active-border-color);\n}\n.list-group-item + .list-group-item {\n  border-top-width: 0;\n}\n.list-group-item + .list-group-item.active {\n  margin-top: calc(var(--tblr-list-group-border-width) * -1);\n  border-top-width: var(--tblr-list-group-border-width);\n}\n\n.list-group-horizontal {\n  flex-direction: row;\n}\n.list-group-horizontal > .list-group-item:first-child {\n  border-bottom-left-radius: var(--tblr-list-group-border-radius);\n  border-top-right-radius: 0;\n}\n.list-group-horizontal > .list-group-item:last-child {\n  border-top-right-radius: var(--tblr-list-group-border-radius);\n  border-bottom-left-radius: 0;\n}\n.list-group-horizontal > .list-group-item.active {\n  margin-top: 0;\n}\n.list-group-horizontal > .list-group-item + .list-group-item {\n  border-top-width: var(--tblr-list-group-border-width);\n  border-left-width: 0;\n}\n.list-group-horizontal > .list-group-item + .list-group-item.active {\n  margin-left: calc(var(--tblr-list-group-border-width) * -1);\n  border-left-width: var(--tblr-list-group-border-width);\n}\n\n@media (min-width: 576px) {\n  .list-group-horizontal-sm {\n    flex-direction: row;\n  }\n  .list-group-horizontal-sm > .list-group-item:first-child {\n    border-bottom-left-radius: var(--tblr-list-group-border-radius);\n    border-top-right-radius: 0;\n  }\n  .list-group-horizontal-sm > .list-group-item:last-child {\n    border-top-right-radius: var(--tblr-list-group-border-radius);\n    border-bottom-left-radius: 0;\n  }\n  .list-group-horizontal-sm > .list-group-item.active {\n    margin-top: 0;\n  }\n  .list-group-horizontal-sm > .list-group-item + .list-group-item {\n    border-top-width: var(--tblr-list-group-border-width);\n    border-left-width: 0;\n  }\n  .list-group-horizontal-sm > .list-group-item + .list-group-item.active {\n    margin-left: calc(var(--tblr-list-group-border-width) * -1);\n    border-left-width: var(--tblr-list-group-border-width);\n  }\n}\n@media (min-width: 768px) {\n  .list-group-horizontal-md {\n    flex-direction: row;\n  }\n  .list-group-horizontal-md > .list-group-item:first-child {\n    border-bottom-left-radius: var(--tblr-list-group-border-radius);\n    border-top-right-radius: 0;\n  }\n  .list-group-horizontal-md > .list-group-item:last-child {\n    border-top-right-radius: var(--tblr-list-group-border-radius);\n    border-bottom-left-radius: 0;\n  }\n  .list-group-horizontal-md > .list-group-item.active {\n    margin-top: 0;\n  }\n  .list-group-horizontal-md > .list-group-item + .list-group-item {\n    border-top-width: var(--tblr-list-group-border-width);\n    border-left-width: 0;\n  }\n  .list-group-horizontal-md > .list-group-item + .list-group-item.active {\n    margin-left: calc(var(--tblr-list-group-border-width) * -1);\n    border-left-width: var(--tblr-list-group-border-width);\n  }\n}\n@media (min-width: 992px) {\n  .list-group-horizontal-lg {\n    flex-direction: row;\n  }\n  .list-group-horizontal-lg > .list-group-item:first-child {\n    border-bottom-left-radius: var(--tblr-list-group-border-radius);\n    border-top-right-radius: 0;\n  }\n  .list-group-horizontal-lg > .list-group-item:last-child {\n    border-top-right-radius: var(--tblr-list-group-border-radius);\n    border-bottom-left-radius: 0;\n  }\n  .list-group-horizontal-lg > .list-group-item.active {\n    margin-top: 0;\n  }\n  .list-group-horizontal-lg > .list-group-item + .list-group-item {\n    border-top-width: var(--tblr-list-group-border-width);\n    border-left-width: 0;\n  }\n  .list-group-horizontal-lg > .list-group-item + .list-group-item.active {\n    margin-left: calc(var(--tblr-list-group-border-width) * -1);\n    border-left-width: var(--tblr-list-group-border-width);\n  }\n}\n@media (min-width: 1200px) {\n  .list-group-horizontal-xl {\n    flex-direction: row;\n  }\n  .list-group-horizontal-xl > .list-group-item:first-child {\n    border-bottom-left-radius: var(--tblr-list-group-border-radius);\n    border-top-right-radius: 0;\n  }\n  .list-group-horizontal-xl > .list-group-item:last-child {\n    border-top-right-radius: var(--tblr-list-group-border-radius);\n    border-bottom-left-radius: 0;\n  }\n  .list-group-horizontal-xl > .list-group-item.active {\n    margin-top: 0;\n  }\n  .list-group-horizontal-xl > .list-group-item + .list-group-item {\n    border-top-width: var(--tblr-list-group-border-width);\n    border-left-width: 0;\n  }\n  .list-group-horizontal-xl > .list-group-item + .list-group-item.active {\n    margin-left: calc(var(--tblr-list-group-border-width) * -1);\n    border-left-width: var(--tblr-list-group-border-width);\n  }\n}\n@media (min-width: 1400px) {\n  .list-group-horizontal-xxl {\n    flex-direction: row;\n  }\n  .list-group-horizontal-xxl > .list-group-item:first-child {\n    border-bottom-left-radius: var(--tblr-list-group-border-radius);\n    border-top-right-radius: 0;\n  }\n  .list-group-horizontal-xxl > .list-group-item:last-child {\n    border-top-right-radius: var(--tblr-list-group-border-radius);\n    border-bottom-left-radius: 0;\n  }\n  .list-group-horizontal-xxl > .list-group-item.active {\n    margin-top: 0;\n  }\n  .list-group-horizontal-xxl > .list-group-item + .list-group-item {\n    border-top-width: var(--tblr-list-group-border-width);\n    border-left-width: 0;\n  }\n  .list-group-horizontal-xxl > .list-group-item + .list-group-item.active {\n    margin-left: calc(var(--tblr-list-group-border-width) * -1);\n    border-left-width: var(--tblr-list-group-border-width);\n  }\n}\n.list-group-flush {\n  border-radius: 0;\n}\n.list-group-flush > .list-group-item {\n  border-width: 0 0 var(--tblr-list-group-border-width);\n}\n.list-group-flush > .list-group-item:last-child {\n  border-bottom-width: 0;\n}\n\n.list-group-item-primary {\n  color: #134076;\n  background-color: #d2e1f3;\n}\n.list-group-item-primary.list-group-item-action:hover, .list-group-item-primary.list-group-item-action:focus {\n  color: #134076;\n  background-color: #bdcbdb;\n}\n.list-group-item-primary.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #134076;\n  border-color: #134076;\n}\n\n.list-group-item-secondary {\n  color: #3b3f47;\n  background-color: #e0e1e4;\n}\n.list-group-item-secondary.list-group-item-action:hover, .list-group-item-secondary.list-group-item-action:focus {\n  color: #3b3f47;\n  background-color: #cacbcd;\n}\n.list-group-item-secondary.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #3b3f47;\n  border-color: #3b3f47;\n}\n\n.list-group-item-success {\n  color: #1c6b29;\n  background-color: #d5f0da;\n}\n.list-group-item-success.list-group-item-action:hover, .list-group-item-success.list-group-item-action:focus {\n  color: #1c6b29;\n  background-color: #c0d8c4;\n}\n.list-group-item-success.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #1c6b29;\n  border-color: #1c6b29;\n}\n\n.list-group-item-info {\n  color: #285c87;\n  background-color: #d9ebf9;\n}\n.list-group-item-info.list-group-item-action:hover, .list-group-item-info.list-group-item-action:focus {\n  color: #285c87;\n  background-color: #c3d4e0;\n}\n.list-group-item-info.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #285c87;\n  border-color: #285c87;\n}\n\n.list-group-item-warning {\n  color: #943e04;\n  background-color: #fde1cd;\n}\n.list-group-item-warning.list-group-item-action:hover, .list-group-item-warning.list-group-item-action:focus {\n  color: #943e04;\n  background-color: #e4cbb9;\n}\n.list-group-item-warning.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #943e04;\n  border-color: #943e04;\n}\n\n.list-group-item-danger {\n  color: #802222;\n  background-color: #f7d7d7;\n}\n.list-group-item-danger.list-group-item-action:hover, .list-group-item-danger.list-group-item-action:focus {\n  color: #802222;\n  background-color: #dec2c2;\n}\n.list-group-item-danger.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #802222;\n  border-color: #802222;\n}\n\n.list-group-item-light {\n  color: #969797;\n  background-color: #fefefe;\n}\n.list-group-item-light.list-group-item-action:hover, .list-group-item-light.list-group-item-action:focus {\n  color: #969797;\n  background-color: #e5e5e5;\n}\n.list-group-item-light.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #969797;\n  border-color: #969797;\n}\n\n.list-group-item-dark {\n  color: #121923;\n  background-color: #d2d4d8;\n}\n.list-group-item-dark.list-group-item-action:hover, .list-group-item-dark.list-group-item-action:focus {\n  color: #121923;\n  background-color: #bdbfc2;\n}\n.list-group-item-dark.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #121923;\n  border-color: #121923;\n}\n\n.list-group-item-muted {\n  color: #3b3f47;\n  background-color: #e0e1e4;\n}\n.list-group-item-muted.list-group-item-action:hover, .list-group-item-muted.list-group-item-action:focus {\n  color: #3b3f47;\n  background-color: #cacbcd;\n}\n.list-group-item-muted.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #3b3f47;\n  border-color: #3b3f47;\n}\n\n.list-group-item-blue {\n  color: #134076;\n  background-color: #d2e1f3;\n}\n.list-group-item-blue.list-group-item-action:hover, .list-group-item-blue.list-group-item-action:focus {\n  color: #134076;\n  background-color: #bdcbdb;\n}\n.list-group-item-blue.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #134076;\n  border-color: #134076;\n}\n\n.list-group-item-azure {\n  color: #285c87;\n  background-color: #d9ebf9;\n}\n.list-group-item-azure.list-group-item-action:hover, .list-group-item-azure.list-group-item-action:focus {\n  color: #285c87;\n  background-color: #c3d4e0;\n}\n.list-group-item-azure.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #285c87;\n  border-color: #285c87;\n}\n\n.list-group-item-indigo {\n  color: #283b8d;\n  background-color: #d9e0fb;\n}\n.list-group-item-indigo.list-group-item-action:hover, .list-group-item-indigo.list-group-item-action:focus {\n  color: #283b8d;\n  background-color: #c3cae2;\n}\n.list-group-item-indigo.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #283b8d;\n  border-color: #283b8d;\n}\n\n.list-group-item-purple {\n  color: #682579;\n  background-color: #efd8f4;\n}\n.list-group-item-purple.list-group-item-action:hover, .list-group-item-purple.list-group-item-action:focus {\n  color: #682579;\n  background-color: #d7c2dc;\n}\n.list-group-item-purple.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #682579;\n  border-color: #682579;\n}\n\n.list-group-item-pink {\n  color: #801f41;\n  background-color: #f7d6e2;\n}\n.list-group-item-pink.list-group-item-action:hover, .list-group-item-pink.list-group-item-action:focus {\n  color: #801f41;\n  background-color: #dec1cb;\n}\n.list-group-item-pink.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #801f41;\n  border-color: #801f41;\n}\n\n.list-group-item-red {\n  color: #802222;\n  background-color: #f7d7d7;\n}\n.list-group-item-red.list-group-item-action:hover, .list-group-item-red.list-group-item-action:focus {\n  color: #802222;\n  background-color: #dec2c2;\n}\n.list-group-item-red.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #802222;\n  border-color: #802222;\n}\n\n.list-group-item-orange {\n  color: #943e04;\n  background-color: #fde1cd;\n}\n.list-group-item-orange.list-group-item-action:hover, .list-group-item-orange.list-group-item-action:focus {\n  color: #943e04;\n  background-color: #e4cbb9;\n}\n.list-group-item-orange.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #943e04;\n  border-color: #943e04;\n}\n\n.list-group-item-yellow {\n  color: #935f00;\n  background-color: #fdeccc;\n}\n.list-group-item-yellow.list-group-item-action:hover, .list-group-item-yellow.list-group-item-action:focus {\n  color: #935f00;\n  background-color: #e4d4b8;\n}\n.list-group-item-yellow.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #935f00;\n  border-color: #935f00;\n}\n\n.list-group-item-lime {\n  color: #466e0d;\n  background-color: #e3f1d0;\n}\n.list-group-item-lime.list-group-item-action:hover, .list-group-item-lime.list-group-item-action:focus {\n  color: #466e0d;\n  background-color: #ccd9bb;\n}\n.list-group-item-lime.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #466e0d;\n  border-color: #466e0d;\n}\n\n.list-group-item-green {\n  color: #1c6b29;\n  background-color: #d5f0da;\n}\n.list-group-item-green.list-group-item-action:hover, .list-group-item-green.list-group-item-action:focus {\n  color: #1c6b29;\n  background-color: #c0d8c4;\n}\n.list-group-item-green.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #1c6b29;\n  border-color: #1c6b29;\n}\n\n.list-group-item-teal {\n  color: #076448;\n  background-color: #ceede4;\n}\n.list-group-item-teal.list-group-item-action:hover, .list-group-item-teal.list-group-item-action:focus {\n  color: #076448;\n  background-color: #b9d5cd;\n}\n.list-group-item-teal.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #076448;\n  border-color: #076448;\n}\n\n.list-group-item-cyan {\n  color: #0e616e;\n  background-color: #d1ecf1;\n}\n.list-group-item-cyan.list-group-item-action:hover, .list-group-item-cyan.list-group-item-action:focus {\n  color: #0e616e;\n  background-color: #bcd4d9;\n}\n.list-group-item-cyan.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #0e616e;\n  border-color: #0e616e;\n}\n\n.list-group-item-facebook {\n  color: #23355b;\n  background-color: #d8deea;\n}\n.list-group-item-facebook.list-group-item-action:hover, .list-group-item-facebook.list-group-item-action:focus {\n  color: #23355b;\n  background-color: #c2c8d3;\n}\n.list-group-item-facebook.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #23355b;\n  border-color: #23355b;\n}\n\n.list-group-item-twitter {\n  color: #116191;\n  background-color: #d2ecfc;\n}\n.list-group-item-twitter.list-group-item-action:hover, .list-group-item-twitter.list-group-item-action:focus {\n  color: #116191;\n  background-color: #bdd4e3;\n}\n.list-group-item-twitter.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #116191;\n  border-color: #116191;\n}\n\n.list-group-item-linkedin {\n  color: #063d74;\n  background-color: #cee0f3;\n}\n.list-group-item-linkedin.list-group-item-action:hover, .list-group-item-linkedin.list-group-item-action:focus {\n  color: #063d74;\n  background-color: #b9cadb;\n}\n.list-group-item-linkedin.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #063d74;\n  border-color: #063d74;\n}\n\n.list-group-item-google {\n  color: #842f27;\n  background-color: #f8dcd9;\n}\n.list-group-item-google.list-group-item-action:hover, .list-group-item-google.list-group-item-action:focus {\n  color: #842f27;\n  background-color: #dfc6c3;\n}\n.list-group-item-google.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #842f27;\n  border-color: #842f27;\n}\n\n.list-group-item-youtube {\n  color: #990000;\n  background-color: #ffcccc;\n}\n.list-group-item-youtube.list-group-item-action:hover, .list-group-item-youtube.list-group-item-action:focus {\n  color: #990000;\n  background-color: #e6b8b8;\n}\n.list-group-item-youtube.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #990000;\n  border-color: #990000;\n}\n\n.list-group-item-vimeo {\n  color: #106e8c;\n  background-color: #d1f1fb;\n}\n.list-group-item-vimeo.list-group-item-action:hover, .list-group-item-vimeo.list-group-item-action:focus {\n  color: #106e8c;\n  background-color: #bcd9e2;\n}\n.list-group-item-vimeo.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #106e8c;\n  border-color: #106e8c;\n}\n\n.list-group-item-dribbble {\n  color: #8c2e52;\n  background-color: #fbdbe7;\n}\n.list-group-item-dribbble.list-group-item-action:hover, .list-group-item-dribbble.list-group-item-action:focus {\n  color: #8c2e52;\n  background-color: #e2c5d0;\n}\n.list-group-item-dribbble.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #8c2e52;\n  border-color: #8c2e52;\n}\n\n.list-group-item-github {\n  color: #0e0e0e;\n  background-color: #d1d1d1;\n}\n.list-group-item-github.list-group-item-action:hover, .list-group-item-github.list-group-item-action:focus {\n  color: #0e0e0e;\n  background-color: #bcbcbc;\n}\n.list-group-item-github.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #0e0e0e;\n  border-color: #0e0e0e;\n}\n\n.list-group-item-instagram {\n  color: #892639;\n  background-color: #fad9df;\n}\n.list-group-item-instagram.list-group-item-action:hover, .list-group-item-instagram.list-group-item-action:focus {\n  color: #892639;\n  background-color: #e1c3c9;\n}\n.list-group-item-instagram.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #892639;\n  border-color: #892639;\n}\n\n.list-group-item-pinterest {\n  color: #710511;\n  background-color: #f2ced2;\n}\n.list-group-item-pinterest.list-group-item-action:hover, .list-group-item-pinterest.list-group-item-action:focus {\n  color: #710511;\n  background-color: #dab9bd;\n}\n.list-group-item-pinterest.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #710511;\n  border-color: #710511;\n}\n\n.list-group-item-vk {\n  color: #3b4f65;\n  background-color: #e0e6ee;\n}\n.list-group-item-vk.list-group-item-action:hover, .list-group-item-vk.list-group-item-action:focus {\n  color: #3b4f65;\n  background-color: #cacfd6;\n}\n.list-group-item-vk.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #3b4f65;\n  border-color: #3b4f65;\n}\n\n.list-group-item-rss {\n  color: #996300;\n  background-color: #ffedcc;\n}\n.list-group-item-rss.list-group-item-action:hover, .list-group-item-rss.list-group-item-action:focus {\n  color: #996300;\n  background-color: #e6d5b8;\n}\n.list-group-item-rss.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #996300;\n  border-color: #996300;\n}\n\n.list-group-item-flickr {\n  color: #003b84;\n  background-color: #cce0f8;\n}\n.list-group-item-flickr.list-group-item-action:hover, .list-group-item-flickr.list-group-item-action:focus {\n  color: #003b84;\n  background-color: #b8cadf;\n}\n.list-group-item-flickr.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #003b84;\n  border-color: #003b84;\n}\n\n.list-group-item-bitbucket {\n  color: #00317a;\n  background-color: #ccdcf5;\n}\n.list-group-item-bitbucket.list-group-item-action:hover, .list-group-item-bitbucket.list-group-item-action:focus {\n  color: #00317a;\n  background-color: #b8c6dd;\n}\n.list-group-item-bitbucket.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #00317a;\n  border-color: #00317a;\n}\n\n.list-group-item-tabler {\n  color: #134076;\n  background-color: #d2e1f3;\n}\n.list-group-item-tabler.list-group-item-action:hover, .list-group-item-tabler.list-group-item-action:focus {\n  color: #134076;\n  background-color: #bdcbdb;\n}\n.list-group-item-tabler.list-group-item-action.active {\n  color: #ffffff;\n  background-color: #134076;\n  border-color: #134076;\n}\n\n.btn-close {\n  box-sizing: content-box;\n  width: 0.75rem;\n  height: 0.75rem;\n  padding: 0.25em 0.25em;\n  color: #000000;\n  background: transparent url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23000000'%3e%3cpath d='M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z'/%3e%3c/svg%3e\") center/0.75rem auto no-repeat;\n  border: 0;\n  border-radius: 4px;\n  opacity: 0.3;\n}\n.btn-close:hover {\n  color: #000000;\n  text-decoration: none;\n  opacity: 0.75;\n}\n.btn-close:focus {\n  outline: 0;\n  box-shadow: 0 0 0 0.25rem rgba(32, 107, 196, 0.25);\n  opacity: 1;\n}\n.btn-close:disabled, .btn-close.disabled {\n  pointer-events: none;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  opacity: 0.25;\n}\n\n.btn-close-white {\n  filter: invert(1) grayscale(100%) brightness(200%);\n}\n\n.toast {\n  --tblr-toast-padding-x: 0.75rem;\n  --tblr-toast-padding-y: 0.5rem;\n  --tblr-toast-spacing: 1.5rem;\n  --tblr-toast-max-width: 350px;\n  --tblr-toast-font-size: 0.875rem;\n  --tblr-toast-color: ;\n  --tblr-toast-bg: rgba(255, 255, 255, 0.85);\n  --tblr-toast-border-width: 1px;\n  --tblr-toast-border-color: #e6e7e9;\n  --tblr-toast-border-radius: 4px;\n  --tblr-toast-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n  --tblr-toast-header-color: #626976;\n  --tblr-toast-header-bg: rgba(255, 255, 255, 0.85);\n  --tblr-toast-header-border-color: rgba(0, 0, 0, 0.05);\n  width: var(--tblr-toast-max-width);\n  max-width: 100%;\n  font-size: var(--tblr-toast-font-size);\n  color: var(--tblr-toast-color);\n  pointer-events: auto;\n  background-color: var(--tblr-toast-bg);\n  background-clip: padding-box;\n  border: var(--tblr-toast-border-width) solid var(--tblr-toast-border-color);\n  box-shadow: var(--tblr-toast-box-shadow);\n  border-radius: var(--tblr-toast-border-radius);\n}\n.toast.showing {\n  opacity: 0;\n}\n.toast:not(.show) {\n  display: none;\n}\n\n.toast-container {\n  position: absolute;\n  z-index: 1090;\n  width: -webkit-max-content;\n  width: -moz-max-content;\n  width: max-content;\n  max-width: 100%;\n  pointer-events: none;\n}\n.toast-container > :not(:last-child) {\n  margin-bottom: var(--tblr-toast-spacing);\n}\n\n.toast-header {\n  display: flex;\n  align-items: center;\n  padding: var(--tblr-toast-padding-y) var(--tblr-toast-padding-x);\n  color: var(--tblr-toast-header-color);\n  background-color: var(--tblr-toast-header-bg);\n  background-clip: padding-box;\n  border-bottom: var(--tblr-toast-border-width) solid var(--tblr-toast-header-border-color);\n  border-top-left-radius: calc(var(--tblr-toast-border-radius) - var(--tblr-toast-border-width));\n  border-top-right-radius: calc(var(--tblr-toast-border-radius) - var(--tblr-toast-border-width));\n}\n.toast-header .btn-close {\n  margin-right: calc(var(--tblr-toast-padding-x) * -0.5);\n  margin-left: var(--tblr-toast-padding-x);\n}\n\n.toast-body {\n  padding: var(--tblr-toast-padding-x);\n  word-wrap: break-word;\n}\n\n.modal {\n  --tblr-modal-zindex: 1055;\n  --tblr-modal-width: 540px;\n  --tblr-modal-padding: 1.5rem;\n  --tblr-modal-margin: 0.5rem;\n  --tblr-modal-color: ;\n  --tblr-modal-bg: #fafbfc;\n  --tblr-modal-border-color: transparent;\n  --tblr-modal-border-width: 1px;\n  --tblr-modal-border-radius: 4px;\n  --tblr-modal-box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n  --tblr-modal-inner-border-radius: 3px;\n  --tblr-modal-header-padding-x: 1.5rem;\n  --tblr-modal-header-padding-y: 1.5rem;\n  --tblr-modal-header-padding: 1.5rem;\n  --tblr-modal-header-border-color: #e6e7e9;\n  --tblr-modal-header-border-width: 1px;\n  --tblr-modal-title-line-height: 1.4285714286;\n  --tblr-modal-footer-gap: 0.75rem;\n  --tblr-modal-footer-bg: ;\n  --tblr-modal-footer-border-color: #e6e7e9;\n  --tblr-modal-footer-border-width: 0;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: var(--tblr-modal-zindex);\n  display: none;\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n  outline: 0;\n}\n\n.modal-dialog {\n  position: relative;\n  width: auto;\n  margin: var(--tblr-modal-margin);\n  pointer-events: none;\n}\n.modal.fade .modal-dialog {\n  transition: transform 0.3s ease-out;\n  transform: translate(0, -1rem);\n}\n@media (prefers-reduced-motion: reduce) {\n  .modal.fade .modal-dialog {\n    transition: none;\n  }\n}\n.modal.show .modal-dialog {\n  transform: none;\n}\n.modal.modal-static .modal-dialog {\n  transform: scale(1.02);\n}\n\n.modal-dialog-scrollable {\n  height: calc(100% - var(--tblr-modal-margin) * 2);\n}\n.modal-dialog-scrollable .modal-content {\n  max-height: 100%;\n  overflow: hidden;\n}\n.modal-dialog-scrollable .modal-body {\n  overflow-y: auto;\n}\n\n.modal-dialog-centered {\n  display: flex;\n  align-items: center;\n  min-height: calc(100% - var(--tblr-modal-margin) * 2);\n}\n\n.modal-content {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  color: var(--tblr-modal-color);\n  pointer-events: auto;\n  background-color: var(--tblr-modal-bg);\n  background-clip: padding-box;\n  border: var(--tblr-modal-border-width) solid var(--tblr-modal-border-color);\n  border-radius: var(--tblr-modal-border-radius);\n  outline: 0;\n}\n\n.modal-backdrop {\n  --tblr-backdrop-zindex: 1050;\n  --tblr-backdrop-bg: #1e293b;\n  --tblr-backdrop-opacity: 0.24;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: var(--tblr-backdrop-zindex);\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--tblr-backdrop-bg);\n}\n.modal-backdrop.fade {\n  opacity: 0;\n}\n.modal-backdrop.show {\n  opacity: var(--tblr-backdrop-opacity);\n}\n\n.modal-header {\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--tblr-modal-header-padding);\n  border-bottom: var(--tblr-modal-header-border-width) solid var(--tblr-modal-header-border-color);\n  border-top-left-radius: var(--tblr-modal-inner-border-radius);\n  border-top-right-radius: var(--tblr-modal-inner-border-radius);\n}\n.modal-header .btn-close {\n  padding: calc(var(--tblr-modal-header-padding-y) * 0.5) calc(var(--tblr-modal-header-padding-x) * 0.5);\n  margin: calc(var(--tblr-modal-header-padding-y) * -0.5) calc(var(--tblr-modal-header-padding-x) * -0.5) calc(var(--tblr-modal-header-padding-y) * -0.5) auto;\n}\n\n.modal-title {\n  margin-bottom: 0;\n  line-height: var(--tblr-modal-title-line-height);\n}\n\n.modal-body {\n  position: relative;\n  flex: 1 1 auto;\n  padding: var(--tblr-modal-padding);\n}\n\n.modal-footer {\n  display: flex;\n  flex-shrink: 0;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: flex-end;\n  padding: calc(var(--tblr-modal-padding) - var(--tblr-modal-footer-gap) * 0.5);\n  background-color: var(--tblr-modal-footer-bg);\n  border-top: var(--tblr-modal-footer-border-width) solid var(--tblr-modal-footer-border-color);\n  border-bottom-right-radius: var(--tblr-modal-inner-border-radius);\n  border-bottom-left-radius: var(--tblr-modal-inner-border-radius);\n}\n.modal-footer > * {\n  margin: calc(var(--tblr-modal-footer-gap) * 0.5);\n}\n\n@media (min-width: 576px) {\n  .modal {\n    --tblr-modal-margin: 1.75rem;\n    --tblr-modal-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n  }\n  .modal-dialog {\n    max-width: var(--tblr-modal-width);\n    margin-right: auto;\n    margin-left: auto;\n  }\n  .modal-sm {\n    --tblr-modal-width: 380px;\n  }\n}\n@media (min-width: 992px) {\n  .modal-lg,\n.modal-xl {\n    --tblr-modal-width: 720px;\n  }\n}\n@media (min-width: 1200px) {\n  .modal-xl {\n    --tblr-modal-width: 1140px;\n  }\n}\n.modal-fullscreen {\n  width: 100vw;\n  max-width: none;\n  height: 100%;\n  margin: 0;\n}\n.modal-fullscreen .modal-content {\n  height: 100%;\n  border: 0;\n  border-radius: 0;\n}\n.modal-fullscreen .modal-header,\n.modal-fullscreen .modal-footer {\n  border-radius: 0;\n}\n.modal-fullscreen .modal-body {\n  overflow-y: auto;\n}\n\n@media (max-width: 575.98px) {\n  .modal-fullscreen-sm-down {\n    width: 100vw;\n    max-width: none;\n    height: 100%;\n    margin: 0;\n  }\n  .modal-fullscreen-sm-down .modal-content {\n    height: 100%;\n    border: 0;\n    border-radius: 0;\n  }\n  .modal-fullscreen-sm-down .modal-header,\n.modal-fullscreen-sm-down .modal-footer {\n    border-radius: 0;\n  }\n  .modal-fullscreen-sm-down .modal-body {\n    overflow-y: auto;\n  }\n}\n@media (max-width: 767.98px) {\n  .modal-fullscreen-md-down {\n    width: 100vw;\n    max-width: none;\n    height: 100%;\n    margin: 0;\n  }\n  .modal-fullscreen-md-down .modal-content {\n    height: 100%;\n    border: 0;\n    border-radius: 0;\n  }\n  .modal-fullscreen-md-down .modal-header,\n.modal-fullscreen-md-down .modal-footer {\n    border-radius: 0;\n  }\n  .modal-fullscreen-md-down .modal-body {\n    overflow-y: auto;\n  }\n}\n@media (max-width: 991.98px) {\n  .modal-fullscreen-lg-down {\n    width: 100vw;\n    max-width: none;\n    height: 100%;\n    margin: 0;\n  }\n  .modal-fullscreen-lg-down .modal-content {\n    height: 100%;\n    border: 0;\n    border-radius: 0;\n  }\n  .modal-fullscreen-lg-down .modal-header,\n.modal-fullscreen-lg-down .modal-footer {\n    border-radius: 0;\n  }\n  .modal-fullscreen-lg-down .modal-body {\n    overflow-y: auto;\n  }\n}\n@media (max-width: 1199.98px) {\n  .modal-fullscreen-xl-down {\n    width: 100vw;\n    max-width: none;\n    height: 100%;\n    margin: 0;\n  }\n  .modal-fullscreen-xl-down .modal-content {\n    height: 100%;\n    border: 0;\n    border-radius: 0;\n  }\n  .modal-fullscreen-xl-down .modal-header,\n.modal-fullscreen-xl-down .modal-footer {\n    border-radius: 0;\n  }\n  .modal-fullscreen-xl-down .modal-body {\n    overflow-y: auto;\n  }\n}\n@media (max-width: 1399.98px) {\n  .modal-fullscreen-xxl-down {\n    width: 100vw;\n    max-width: none;\n    height: 100%;\n    margin: 0;\n  }\n  .modal-fullscreen-xxl-down .modal-content {\n    height: 100%;\n    border: 0;\n    border-radius: 0;\n  }\n  .modal-fullscreen-xxl-down .modal-header,\n.modal-fullscreen-xxl-down .modal-footer {\n    border-radius: 0;\n  }\n  .modal-fullscreen-xxl-down .modal-body {\n    overflow-y: auto;\n  }\n}\n.tooltip {\n  --tblr-tooltip-zindex: 1080;\n  --tblr-tooltip-max-width: 200px;\n  --tblr-tooltip-padding-x: 0.5rem;\n  --tblr-tooltip-padding-y: 0.25rem;\n  --tblr-tooltip-margin: ;\n  --tblr-tooltip-font-size: 0.765625rem;\n  --tblr-tooltip-color: #ffffff;\n  --tblr-tooltip-bg: #000000;\n  --tblr-tooltip-border-radius: 4px;\n  --tblr-tooltip-opacity: 0.9;\n  --tblr-tooltip-arrow-width: 0.8rem;\n  --tblr-tooltip-arrow-height: 0.4rem;\n  z-index: var(--tblr-tooltip-zindex);\n  display: block;\n  padding: var(--tblr-tooltip-arrow-height);\n  margin: var(--tblr-tooltip-margin);\n  font-family: var(--tblr-font-sans-serif);\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.4285714286;\n  text-align: left;\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  letter-spacing: normal;\n  word-break: normal;\n  white-space: normal;\n  word-spacing: normal;\n  line-break: auto;\n  font-size: var(--tblr-tooltip-font-size);\n  word-wrap: break-word;\n  opacity: 0;\n}\n.tooltip.show {\n  opacity: var(--tblr-tooltip-opacity);\n}\n.tooltip .tooltip-arrow {\n  display: block;\n  width: var(--tblr-tooltip-arrow-width);\n  height: var(--tblr-tooltip-arrow-height);\n}\n.tooltip .tooltip-arrow::before {\n  position: absolute;\n  content: \"\";\n  border-color: transparent;\n  border-style: solid;\n}\n\n.bs-tooltip-top .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow {\n  bottom: 0;\n}\n.bs-tooltip-top .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow::before {\n  top: -1px;\n  border-width: var(--tblr-tooltip-arrow-height) calc(var(--tblr-tooltip-arrow-width) * 0.5) 0;\n  border-top-color: var(--tblr-tooltip-bg);\n}\n\n/* rtl:begin:ignore */\n.bs-tooltip-end .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow {\n  left: 0;\n  width: var(--tblr-tooltip-arrow-height);\n  height: var(--tblr-tooltip-arrow-width);\n}\n.bs-tooltip-end .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow::before {\n  right: -1px;\n  border-width: calc(var(--tblr-tooltip-arrow-width) * 0.5) var(--tblr-tooltip-arrow-height) calc(var(--tblr-tooltip-arrow-width) * 0.5) 0;\n  border-right-color: var(--tblr-tooltip-bg);\n}\n\n/* rtl:end:ignore */\n.bs-tooltip-bottom .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow {\n  top: 0;\n}\n.bs-tooltip-bottom .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow::before {\n  bottom: -1px;\n  border-width: 0 calc(var(--tblr-tooltip-arrow-width) * 0.5) var(--tblr-tooltip-arrow-height);\n  border-bottom-color: var(--tblr-tooltip-bg);\n}\n\n/* rtl:begin:ignore */\n.bs-tooltip-start .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow {\n  right: 0;\n  width: var(--tblr-tooltip-arrow-height);\n  height: var(--tblr-tooltip-arrow-width);\n}\n.bs-tooltip-start .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow::before {\n  left: -1px;\n  border-width: calc(var(--tblr-tooltip-arrow-width) * 0.5) 0 calc(var(--tblr-tooltip-arrow-width) * 0.5) var(--tblr-tooltip-arrow-height);\n  border-left-color: var(--tblr-tooltip-bg);\n}\n\n/* rtl:end:ignore */\n.tooltip-inner {\n  max-width: var(--tblr-tooltip-max-width);\n  padding: var(--tblr-tooltip-padding-y) var(--tblr-tooltip-padding-x);\n  color: var(--tblr-tooltip-color);\n  text-align: center;\n  background-color: var(--tblr-tooltip-bg);\n  border-radius: var(--tblr-tooltip-border-radius);\n}\n\n.popover {\n  --tblr-popover-zindex: 1070;\n  --tblr-popover-max-width: 276px;\n  --tblr-popover-font-size: 0.765625rem;\n  --tblr-popover-bg: #ffffff;\n  --tblr-popover-border-width: 1px;\n  --tblr-popover-border-color: #e6e7e9;\n  --tblr-popover-border-radius: 8px;\n  --tblr-popover-inner-border-radius: 7px;\n  --tblr-popover-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n  --tblr-popover-header-padding-x: 1rem;\n  --tblr-popover-header-padding-y: 0.5rem;\n  --tblr-popover-header-font-size: 0.875rem;\n  --tblr-popover-header-color: var(--tblr-heading-color);\n  --tblr-popover-header-bg: #f0f0f0;\n  --tblr-popover-body-padding-x: 1rem;\n  --tblr-popover-body-padding-y: 1rem;\n  --tblr-popover-body-color: #1e293b;\n  --tblr-popover-arrow-width: 1rem;\n  --tblr-popover-arrow-height: 0.5rem;\n  --tblr-popover-arrow-border: var(--tblr-popover-border-color);\n  z-index: var(--tblr-popover-zindex);\n  display: block;\n  max-width: var(--tblr-popover-max-width);\n  font-family: var(--tblr-font-sans-serif);\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.4285714286;\n  text-align: left;\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  letter-spacing: normal;\n  word-break: normal;\n  white-space: normal;\n  word-spacing: normal;\n  line-break: auto;\n  font-size: var(--tblr-popover-font-size);\n  word-wrap: break-word;\n  background-color: var(--tblr-popover-bg);\n  background-clip: padding-box;\n  border: var(--tblr-popover-border-width) solid var(--tblr-popover-border-color);\n  border-radius: var(--tblr-popover-border-radius);\n}\n.popover .popover-arrow {\n  display: block;\n  width: var(--tblr-popover-arrow-width);\n  height: var(--tblr-popover-arrow-height);\n}\n.popover .popover-arrow::before, .popover .popover-arrow::after {\n  position: absolute;\n  display: block;\n  content: \"\";\n  border-color: transparent;\n  border-style: solid;\n  border-width: 0;\n}\n\n.bs-popover-top > .popover-arrow, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow {\n  bottom: calc(var(--tblr-popover-arrow-height) * -1 - var(--tblr-popover-border-width));\n}\n.bs-popover-top > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::before, .bs-popover-top > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::after {\n  border-width: var(--tblr-popover-arrow-height) calc(var(--tblr-popover-arrow-width) * 0.5) 0;\n}\n.bs-popover-top > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::before {\n  bottom: 0;\n  border-top-color: var(--tblr-popover-arrow-border);\n}\n.bs-popover-top > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::after {\n  bottom: var(--tblr-popover-border-width);\n  border-top-color: var(--tblr-popover-bg);\n}\n\n/* rtl:begin:ignore */\n.bs-popover-end > .popover-arrow, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow {\n  left: calc(var(--tblr-popover-arrow-height) * -1 - var(--tblr-popover-border-width));\n  width: var(--tblr-popover-arrow-height);\n  height: var(--tblr-popover-arrow-width);\n}\n.bs-popover-end > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::before, .bs-popover-end > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::after {\n  border-width: calc(var(--tblr-popover-arrow-width) * 0.5) var(--tblr-popover-arrow-height) calc(var(--tblr-popover-arrow-width) * 0.5) 0;\n}\n.bs-popover-end > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::before {\n  left: 0;\n  border-right-color: var(--tblr-popover-arrow-border);\n}\n.bs-popover-end > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::after {\n  left: var(--tblr-popover-border-width);\n  border-right-color: var(--tblr-popover-bg);\n}\n\n/* rtl:end:ignore */\n.bs-popover-bottom > .popover-arrow, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow {\n  top: calc(var(--tblr-popover-arrow-height) * -1 - var(--tblr-popover-border-width));\n}\n.bs-popover-bottom > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::before, .bs-popover-bottom > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::after {\n  border-width: 0 calc(var(--tblr-popover-arrow-width) * 0.5) var(--tblr-popover-arrow-height);\n}\n.bs-popover-bottom > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::before {\n  top: 0;\n  border-bottom-color: var(--tblr-popover-arrow-border);\n}\n.bs-popover-bottom > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::after {\n  top: var(--tblr-popover-border-width);\n  border-bottom-color: var(--tblr-popover-bg);\n}\n.bs-popover-bottom .popover-header::before, .bs-popover-auto[data-popper-placement^=bottom] .popover-header::before {\n  position: absolute;\n  top: 0;\n  left: 50%;\n  display: block;\n  width: var(--tblr-popover-arrow-width);\n  margin-left: calc(var(--tblr-popover-arrow-width) * -0.5);\n  content: \"\";\n  border-bottom: var(--tblr-popover-border-width) solid var(--tblr-popover-header-bg);\n}\n\n/* rtl:begin:ignore */\n.bs-popover-start > .popover-arrow, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow {\n  right: calc(var(--tblr-popover-arrow-height) * -1 - var(--tblr-popover-border-width));\n  width: var(--tblr-popover-arrow-height);\n  height: var(--tblr-popover-arrow-width);\n}\n.bs-popover-start > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::before, .bs-popover-start > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::after {\n  border-width: calc(var(--tblr-popover-arrow-width) * 0.5) 0 calc(var(--tblr-popover-arrow-width) * 0.5) var(--tblr-popover-arrow-height);\n}\n.bs-popover-start > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::before {\n  right: 0;\n  border-left-color: var(--tblr-popover-arrow-border);\n}\n.bs-popover-start > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::after {\n  right: var(--tblr-popover-border-width);\n  border-left-color: var(--tblr-popover-bg);\n}\n\n/* rtl:end:ignore */\n.popover-header {\n  padding: var(--tblr-popover-header-padding-y) var(--tblr-popover-header-padding-x);\n  margin-bottom: 0;\n  font-size: var(--tblr-popover-header-font-size);\n  color: var(--tblr-popover-header-color);\n  background-color: var(--tblr-popover-header-bg);\n  border-bottom: var(--tblr-popover-border-width) solid var(--tblr-popover-border-color);\n  border-top-left-radius: var(--tblr-popover-inner-border-radius);\n  border-top-right-radius: var(--tblr-popover-inner-border-radius);\n}\n.popover-header:empty {\n  display: none;\n}\n\n.popover-body {\n  padding: var(--tblr-popover-body-padding-y) var(--tblr-popover-body-padding-x);\n  color: var(--tblr-popover-body-color);\n}\n\n.carousel {\n  position: relative;\n}\n\n.carousel.pointer-event {\n  touch-action: pan-y;\n}\n\n.carousel-inner {\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n}\n.carousel-inner::after {\n  display: block;\n  clear: both;\n  content: \"\";\n}\n\n.carousel-item {\n  position: relative;\n  display: none;\n  float: left;\n  width: 100%;\n  margin-right: -100%;\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n  transition: transform 0.6s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .carousel-item {\n    transition: none;\n  }\n}\n\n.carousel-item.active,\n.carousel-item-next,\n.carousel-item-prev {\n  display: block;\n}\n\n/* rtl:begin:ignore */\n.carousel-item-next:not(.carousel-item-start),\n.active.carousel-item-end {\n  transform: translateX(100%);\n}\n\n.carousel-item-prev:not(.carousel-item-end),\n.active.carousel-item-start {\n  transform: translateX(-100%);\n}\n\n/* rtl:end:ignore */\n.carousel-fade .carousel-item {\n  opacity: 0;\n  transition-property: opacity;\n  transform: none;\n}\n.carousel-fade .carousel-item.active,\n.carousel-fade .carousel-item-next.carousel-item-start,\n.carousel-fade .carousel-item-prev.carousel-item-end {\n  z-index: 1;\n  opacity: 1;\n}\n.carousel-fade .active.carousel-item-start,\n.carousel-fade .active.carousel-item-end {\n  z-index: 0;\n  opacity: 0;\n  transition: opacity 0s 0.6s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .carousel-fade .active.carousel-item-start,\n.carousel-fade .active.carousel-item-end {\n    transition: none;\n  }\n}\n\n.carousel-control-prev,\n.carousel-control-next {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 15%;\n  padding: 0;\n  color: #ffffff;\n  text-align: center;\n  background: none;\n  border: 0;\n  opacity: 0.5;\n  transition: opacity 0.15s ease;\n}\n@media (prefers-reduced-motion: reduce) {\n  .carousel-control-prev,\n.carousel-control-next {\n    transition: none;\n  }\n}\n.carousel-control-prev:hover, .carousel-control-prev:focus,\n.carousel-control-next:hover,\n.carousel-control-next:focus {\n  color: #ffffff;\n  text-decoration: none;\n  outline: 0;\n  opacity: 0.9;\n}\n\n.carousel-control-prev {\n  left: 0;\n}\n\n.carousel-control-next {\n  right: 0;\n}\n\n.carousel-control-prev-icon,\n.carousel-control-next-icon {\n  display: inline-block;\n  width: 1.5rem;\n  height: 1.5rem;\n  background-repeat: no-repeat;\n  background-position: 50%;\n  background-size: 100% 100%;\n}\n\n/* rtl:options: {\n  \"autoRename\": true,\n  \"stringMap\":[ {\n    \"name\"    : \"prev-next\",\n    \"search\"  : \"prev\",\n    \"replace\" : \"next\"\n  } ]\n} */\n.carousel-control-prev-icon {\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23ffffff' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='15 18 9 12 15 6'%3e%3c/polyline%3e%3c/svg%3e\");\n}\n\n.carousel-control-next-icon {\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23ffffff' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='9 18 15 12 9 6'%3e%3c/polyline%3e%3c/svg%3e\");\n}\n\n.carousel-indicators {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 2;\n  display: flex;\n  justify-content: center;\n  padding: 0;\n  margin-right: 15%;\n  margin-bottom: 1rem;\n  margin-left: 15%;\n  list-style: none;\n}\n.carousel-indicators [data-bs-target] {\n  box-sizing: content-box;\n  flex: 0 1 auto;\n  width: 30px;\n  height: 3px;\n  padding: 0;\n  margin-right: 3px;\n  margin-left: 3px;\n  text-indent: -999px;\n  cursor: pointer;\n  background-color: #ffffff;\n  background-clip: padding-box;\n  border: 0;\n  border-top: 10px solid transparent;\n  border-bottom: 10px solid transparent;\n  opacity: 0.5;\n  transition: opacity 0.6s ease;\n}\n@media (prefers-reduced-motion: reduce) {\n  .carousel-indicators [data-bs-target] {\n    transition: none;\n  }\n}\n.carousel-indicators .active {\n  opacity: 1;\n}\n\n.carousel-caption {\n  position: absolute;\n  right: 15%;\n  bottom: 1.25rem;\n  left: 15%;\n  padding-top: 1.25rem;\n  padding-bottom: 1.25rem;\n  color: #ffffff;\n  text-align: center;\n}\n\n.carousel-dark .carousel-control-prev-icon,\n.carousel-dark .carousel-control-next-icon {\n  filter: invert(1) grayscale(100);\n}\n.carousel-dark .carousel-indicators [data-bs-target] {\n  background-color: #000000;\n}\n.carousel-dark .carousel-caption {\n  color: #000000;\n}\n\n.spinner-grow,\n.spinner-border {\n  display: inline-block;\n  width: var(--tblr-spinner-width);\n  height: var(--tblr-spinner-height);\n  vertical-align: var(--tblr-spinner-vertical-align);\n  border-radius: 50%;\n  -webkit-animation: var(--tblr-spinner-animation-speed) linear infinite var(--tblr-spinner-animation-name);\n          animation: var(--tblr-spinner-animation-speed) linear infinite var(--tblr-spinner-animation-name);\n}\n\n@-webkit-keyframes spinner-border {\n  to {\n    transform: rotate(360deg) /* rtl:ignore */;\n  }\n}\n\n@keyframes spinner-border {\n  to {\n    transform: rotate(360deg) /* rtl:ignore */;\n  }\n}\n.spinner-border {\n  --tblr-spinner-width: 1.5rem;\n  --tblr-spinner-height: 1.5rem;\n  --tblr-spinner-vertical-align: -0.125em;\n  --tblr-spinner-border-width: 2px;\n  --tblr-spinner-animation-speed: 0.75s;\n  --tblr-spinner-animation-name: spinner-border;\n  border: var(--tblr-spinner-border-width) solid currentcolor;\n  border-right-color: transparent;\n}\n\n.spinner-border-sm {\n  --tblr-spinner-width: 1rem;\n  --tblr-spinner-height: 1rem;\n  --tblr-spinner-border-width: 0.2em;\n}\n\n@-webkit-keyframes spinner-grow {\n  0% {\n    transform: scale(0);\n  }\n  50% {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes spinner-grow {\n  0% {\n    transform: scale(0);\n  }\n  50% {\n    opacity: 1;\n    transform: none;\n  }\n}\n.spinner-grow {\n  --tblr-spinner-width: 1.5rem;\n  --tblr-spinner-height: 1.5rem;\n  --tblr-spinner-vertical-align: -0.125em;\n  --tblr-spinner-animation-speed: 0.75s;\n  --tblr-spinner-animation-name: spinner-grow;\n  background-color: currentcolor;\n  opacity: 0;\n}\n\n.spinner-grow-sm {\n  --tblr-spinner-width: 1rem;\n  --tblr-spinner-height: 1rem;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .spinner-border,\n.spinner-grow {\n    --tblr-spinner-animation-speed: 1.5s;\n  }\n}\n.offcanvas, .offcanvas-xxl, .offcanvas-xl, .offcanvas-lg, .offcanvas-md, .offcanvas-sm {\n  --tblr-offcanvas-width: 400px;\n  --tblr-offcanvas-height: 30vh;\n  --tblr-offcanvas-padding-x: 1.5rem;\n  --tblr-offcanvas-padding-y: 1.5rem;\n  --tblr-offcanvas-color: ;\n  --tblr-offcanvas-bg: #fafbfc;\n  --tblr-offcanvas-border-width: 1px;\n  --tblr-offcanvas-border-color: rgba(98, 105, 118, 0.16);\n  --tblr-offcanvas-box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n}\n\n@media (max-width: 575.98px) {\n  .offcanvas-sm {\n    position: fixed;\n    bottom: 0;\n    z-index: 1045;\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--tblr-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--tblr-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 575.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-sm {\n    transition: none;\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--tblr-offcanvas-width);\n    border-right: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--tblr-offcanvas-width);\n    border-left: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--tblr-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--tblr-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.showing, .offcanvas-sm.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 575.98px) {\n  .offcanvas-sm.showing, .offcanvas-sm.hiding, .offcanvas-sm.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 576px) {\n  .offcanvas-sm {\n    --tblr-offcanvas-height: auto;\n    --tblr-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-sm .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-sm .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n@media (max-width: 767.98px) {\n  .offcanvas-md {\n    position: fixed;\n    bottom: 0;\n    z-index: 1045;\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--tblr-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--tblr-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 767.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-md {\n    transition: none;\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--tblr-offcanvas-width);\n    border-right: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--tblr-offcanvas-width);\n    border-left: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--tblr-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--tblr-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.showing, .offcanvas-md.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 767.98px) {\n  .offcanvas-md.showing, .offcanvas-md.hiding, .offcanvas-md.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 768px) {\n  .offcanvas-md {\n    --tblr-offcanvas-height: auto;\n    --tblr-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-md .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-md .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n@media (max-width: 991.98px) {\n  .offcanvas-lg {\n    position: fixed;\n    bottom: 0;\n    z-index: 1045;\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--tblr-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--tblr-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 991.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-lg {\n    transition: none;\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--tblr-offcanvas-width);\n    border-right: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--tblr-offcanvas-width);\n    border-left: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--tblr-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--tblr-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.showing, .offcanvas-lg.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 991.98px) {\n  .offcanvas-lg.showing, .offcanvas-lg.hiding, .offcanvas-lg.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 992px) {\n  .offcanvas-lg {\n    --tblr-offcanvas-height: auto;\n    --tblr-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-lg .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-lg .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n@media (max-width: 1199.98px) {\n  .offcanvas-xl {\n    position: fixed;\n    bottom: 0;\n    z-index: 1045;\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--tblr-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--tblr-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 1199.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-xl {\n    transition: none;\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--tblr-offcanvas-width);\n    border-right: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--tblr-offcanvas-width);\n    border-left: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--tblr-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--tblr-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.showing, .offcanvas-xl.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 1199.98px) {\n  .offcanvas-xl.showing, .offcanvas-xl.hiding, .offcanvas-xl.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 1200px) {\n  .offcanvas-xl {\n    --tblr-offcanvas-height: auto;\n    --tblr-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-xl .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-xl .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl {\n    position: fixed;\n    bottom: 0;\n    z-index: 1045;\n    display: flex;\n    flex-direction: column;\n    max-width: 100%;\n    color: var(--tblr-offcanvas-color);\n    visibility: hidden;\n    background-color: var(--tblr-offcanvas-bg);\n    background-clip: padding-box;\n    outline: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n}\n@media (max-width: 1399.98px) and (prefers-reduced-motion: reduce) {\n  .offcanvas-xxl {\n    transition: none;\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.offcanvas-start {\n    top: 0;\n    left: 0;\n    width: var(--tblr-offcanvas-width);\n    border-right: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateX(-100%);\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.offcanvas-end {\n    top: 0;\n    right: 0;\n    width: var(--tblr-offcanvas-width);\n    border-left: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateX(100%);\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.offcanvas-top {\n    top: 0;\n    right: 0;\n    left: 0;\n    height: var(--tblr-offcanvas-height);\n    max-height: 100%;\n    border-bottom: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateY(-100%);\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.offcanvas-bottom {\n    right: 0;\n    left: 0;\n    height: var(--tblr-offcanvas-height);\n    max-height: 100%;\n    border-top: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n    transform: translateY(100%);\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.showing, .offcanvas-xxl.show:not(.hiding) {\n    transform: none;\n  }\n}\n@media (max-width: 1399.98px) {\n  .offcanvas-xxl.showing, .offcanvas-xxl.hiding, .offcanvas-xxl.show {\n    visibility: visible;\n  }\n}\n@media (min-width: 1400px) {\n  .offcanvas-xxl {\n    --tblr-offcanvas-height: auto;\n    --tblr-offcanvas-border-width: 0;\n    background-color: transparent !important;\n  }\n  .offcanvas-xxl .offcanvas-header {\n    display: none;\n  }\n  .offcanvas-xxl .offcanvas-body {\n    display: flex;\n    flex-grow: 0;\n    padding: 0;\n    overflow-y: visible;\n    background-color: transparent !important;\n  }\n}\n\n.offcanvas {\n  position: fixed;\n  bottom: 0;\n  z-index: 1045;\n  display: flex;\n  flex-direction: column;\n  max-width: 100%;\n  color: var(--tblr-offcanvas-color);\n  visibility: hidden;\n  background-color: var(--tblr-offcanvas-bg);\n  background-clip: padding-box;\n  outline: 0;\n  transition: transform 0.3s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .offcanvas {\n    transition: none;\n  }\n}\n.offcanvas.offcanvas-start {\n  top: 0;\n  left: 0;\n  width: var(--tblr-offcanvas-width);\n  border-right: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n  transform: translateX(-100%);\n}\n.offcanvas.offcanvas-end {\n  top: 0;\n  right: 0;\n  width: var(--tblr-offcanvas-width);\n  border-left: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n  transform: translateX(100%);\n}\n.offcanvas.offcanvas-top {\n  top: 0;\n  right: 0;\n  left: 0;\n  height: var(--tblr-offcanvas-height);\n  max-height: 100%;\n  border-bottom: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n  transform: translateY(-100%);\n}\n.offcanvas.offcanvas-bottom {\n  right: 0;\n  left: 0;\n  height: var(--tblr-offcanvas-height);\n  max-height: 100%;\n  border-top: var(--tblr-offcanvas-border-width) solid var(--tblr-offcanvas-border-color);\n  transform: translateY(100%);\n}\n.offcanvas.showing, .offcanvas.show:not(.hiding) {\n  transform: none;\n}\n.offcanvas.showing, .offcanvas.hiding, .offcanvas.show {\n  visibility: visible;\n}\n\n.offcanvas-backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1040;\n  width: 100vw;\n  height: 100vh;\n  background-color: #1e293b;\n}\n.offcanvas-backdrop.fade {\n  opacity: 0;\n}\n.offcanvas-backdrop.show {\n  opacity: 0.24;\n}\n\n.offcanvas-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--tblr-offcanvas-padding-y) var(--tblr-offcanvas-padding-x);\n}\n.offcanvas-header .btn-close {\n  padding: calc(var(--tblr-offcanvas-padding-y) * 0.5) calc(var(--tblr-offcanvas-padding-x) * 0.5);\n  margin-top: calc(var(--tblr-offcanvas-padding-y) * -0.5);\n  margin-right: calc(var(--tblr-offcanvas-padding-x) * -0.5);\n  margin-bottom: calc(var(--tblr-offcanvas-padding-y) * -0.5);\n}\n\n.offcanvas-title {\n  margin-bottom: 0;\n  line-height: 1.4285714286;\n}\n\n.offcanvas-body {\n  flex-grow: 1;\n  padding: var(--tblr-offcanvas-padding-y) var(--tblr-offcanvas-padding-x);\n  overflow-y: auto;\n}\n\n.placeholder {\n  display: inline-block;\n  min-height: 1em;\n  vertical-align: middle;\n  cursor: wait;\n  background-color: currentcolor;\n  opacity: 0.2;\n}\n.placeholder.btn::before {\n  display: inline-block;\n  content: \"\";\n}\n\n.placeholder-xs {\n  min-height: 0.6em;\n}\n\n.placeholder-sm {\n  min-height: 0.8em;\n}\n\n.placeholder-lg {\n  min-height: 1.2em;\n}\n\n.placeholder-glow .placeholder {\n  -webkit-animation: placeholder-glow 2s ease-in-out infinite;\n          animation: placeholder-glow 2s ease-in-out infinite;\n}\n\n@-webkit-keyframes placeholder-glow {\n  50% {\n    opacity: 0.1;\n  }\n}\n\n@keyframes placeholder-glow {\n  50% {\n    opacity: 0.1;\n  }\n}\n.placeholder-wave {\n  -webkit-mask-image: linear-gradient(130deg, #000000 55%, rgba(0, 0, 0, 0.9) 75%, #000000 95%);\n          mask-image: linear-gradient(130deg, #000000 55%, rgba(0, 0, 0, 0.9) 75%, #000000 95%);\n  -webkit-mask-size: 200% 100%;\n          mask-size: 200% 100%;\n  -webkit-animation: placeholder-wave 2s linear infinite;\n          animation: placeholder-wave 2s linear infinite;\n}\n\n@-webkit-keyframes placeholder-wave {\n  100% {\n    -webkit-mask-position: -200% 0%;\n            mask-position: -200% 0%;\n  }\n}\n\n@keyframes placeholder-wave {\n  100% {\n    -webkit-mask-position: -200% 0%;\n            mask-position: -200% 0%;\n  }\n}\n.clearfix::after {\n  display: block;\n  clear: both;\n  content: \"\";\n}\n\n.text-bg-primary {\n  color: #fafbfc !important;\n  background-color: RGBA(32, 107, 196, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-secondary {\n  color: #fafbfc !important;\n  background-color: RGBA(98, 105, 118, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-success {\n  color: #fafbfc !important;\n  background-color: RGBA(47, 179, 68, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-info {\n  color: #fafbfc !important;\n  background-color: RGBA(66, 153, 225, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-warning {\n  color: #fafbfc !important;\n  background-color: RGBA(247, 103, 7, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-danger {\n  color: #fafbfc !important;\n  background-color: RGBA(214, 57, 57, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-light {\n  color: #1e293b !important;\n  background-color: RGBA(250, 251, 252, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-dark {\n  color: #fafbfc !important;\n  background-color: RGBA(30, 41, 59, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-muted {\n  color: #fafbfc !important;\n  background-color: RGBA(98, 105, 118, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-blue {\n  color: #fafbfc !important;\n  background-color: RGBA(32, 107, 196, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-azure {\n  color: #fafbfc !important;\n  background-color: RGBA(66, 153, 225, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-indigo {\n  color: #fafbfc !important;\n  background-color: RGBA(66, 99, 235, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-purple {\n  color: #fafbfc !important;\n  background-color: RGBA(174, 62, 201, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-pink {\n  color: #fafbfc !important;\n  background-color: RGBA(214, 51, 108, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-red {\n  color: #fafbfc !important;\n  background-color: RGBA(214, 57, 57, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-orange {\n  color: #fafbfc !important;\n  background-color: RGBA(247, 103, 7, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-yellow {\n  color: #fafbfc !important;\n  background-color: RGBA(245, 159, 0, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-lime {\n  color: #fafbfc !important;\n  background-color: RGBA(116, 184, 22, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-green {\n  color: #fafbfc !important;\n  background-color: RGBA(47, 179, 68, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-teal {\n  color: #fafbfc !important;\n  background-color: RGBA(12, 166, 120, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-cyan {\n  color: #fafbfc !important;\n  background-color: RGBA(23, 162, 184, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-facebook {\n  color: #fafbfc !important;\n  background-color: RGBA(59, 89, 152, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-twitter {\n  color: #fafbfc !important;\n  background-color: RGBA(29, 161, 242, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-linkedin {\n  color: #fafbfc !important;\n  background-color: RGBA(10, 102, 194, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-google {\n  color: #fafbfc !important;\n  background-color: RGBA(220, 78, 65, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-youtube {\n  color: #fafbfc !important;\n  background-color: RGBA(255, 0, 0, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-vimeo {\n  color: #fafbfc !important;\n  background-color: RGBA(26, 183, 234, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-dribbble {\n  color: #fafbfc !important;\n  background-color: RGBA(234, 76, 137, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-github {\n  color: #fafbfc !important;\n  background-color: RGBA(24, 23, 23, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-instagram {\n  color: #fafbfc !important;\n  background-color: RGBA(228, 64, 95, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-pinterest {\n  color: #fafbfc !important;\n  background-color: RGBA(189, 8, 28, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-vk {\n  color: #fafbfc !important;\n  background-color: RGBA(99, 131, 168, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-rss {\n  color: #fafbfc !important;\n  background-color: RGBA(255, 165, 0, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-flickr {\n  color: #fafbfc !important;\n  background-color: RGBA(0, 99, 220, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-bitbucket {\n  color: #fafbfc !important;\n  background-color: RGBA(0, 82, 204, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.text-bg-tabler {\n  color: #fafbfc !important;\n  background-color: RGBA(32, 107, 196, var(--tblr-bg-opacity, 1)) !important;\n}\n\n.link-primary {\n  color: #206bc4 !important;\n}\n.link-primary:hover, .link-primary:focus {\n  color: #1a569d !important;\n}\n\n.link-secondary {\n  color: #626976 !important;\n}\n.link-secondary:hover, .link-secondary:focus {\n  color: #4e545e !important;\n}\n\n.link-success {\n  color: #2fb344 !important;\n}\n.link-success:hover, .link-success:focus {\n  color: #268f36 !important;\n}\n\n.link-info {\n  color: #4299e1 !important;\n}\n.link-info:hover, .link-info:focus {\n  color: #357ab4 !important;\n}\n\n.link-warning {\n  color: #f76707 !important;\n}\n.link-warning:hover, .link-warning:focus {\n  color: #c65206 !important;\n}\n\n.link-danger {\n  color: #d63939 !important;\n}\n.link-danger:hover, .link-danger:focus {\n  color: #ab2e2e !important;\n}\n\n.link-light {\n  color: #fafbfc !important;\n}\n.link-light:hover, .link-light:focus {\n  color: #fbfcfd !important;\n}\n\n.link-dark {\n  color: #1e293b !important;\n}\n.link-dark:hover, .link-dark:focus {\n  color: #18212f !important;\n}\n\n.link-muted {\n  color: #626976 !important;\n}\n.link-muted:hover, .link-muted:focus {\n  color: #4e545e !important;\n}\n\n.link-blue {\n  color: #206bc4 !important;\n}\n.link-blue:hover, .link-blue:focus {\n  color: #1a569d !important;\n}\n\n.link-azure {\n  color: #4299e1 !important;\n}\n.link-azure:hover, .link-azure:focus {\n  color: #357ab4 !important;\n}\n\n.link-indigo {\n  color: #4263eb !important;\n}\n.link-indigo:hover, .link-indigo:focus {\n  color: #354fbc !important;\n}\n\n.link-purple {\n  color: #ae3ec9 !important;\n}\n.link-purple:hover, .link-purple:focus {\n  color: #8b32a1 !important;\n}\n\n.link-pink {\n  color: #d6336c !important;\n}\n.link-pink:hover, .link-pink:focus {\n  color: #ab2956 !important;\n}\n\n.link-red {\n  color: #d63939 !important;\n}\n.link-red:hover, .link-red:focus {\n  color: #ab2e2e !important;\n}\n\n.link-orange {\n  color: #f76707 !important;\n}\n.link-orange:hover, .link-orange:focus {\n  color: #c65206 !important;\n}\n\n.link-yellow {\n  color: #f59f00 !important;\n}\n.link-yellow:hover, .link-yellow:focus {\n  color: #c47f00 !important;\n}\n\n.link-lime {\n  color: #74b816 !important;\n}\n.link-lime:hover, .link-lime:focus {\n  color: #5d9312 !important;\n}\n\n.link-green {\n  color: #2fb344 !important;\n}\n.link-green:hover, .link-green:focus {\n  color: #268f36 !important;\n}\n\n.link-teal {\n  color: #0ca678 !important;\n}\n.link-teal:hover, .link-teal:focus {\n  color: #0a8560 !important;\n}\n\n.link-cyan {\n  color: #17a2b8 !important;\n}\n.link-cyan:hover, .link-cyan:focus {\n  color: #128293 !important;\n}\n\n.link-facebook {\n  color: #3b5998 !important;\n}\n.link-facebook:hover, .link-facebook:focus {\n  color: #2f477a !important;\n}\n\n.link-twitter {\n  color: #1da1f2 !important;\n}\n.link-twitter:hover, .link-twitter:focus {\n  color: #1781c2 !important;\n}\n\n.link-linkedin {\n  color: #0a66c2 !important;\n}\n.link-linkedin:hover, .link-linkedin:focus {\n  color: #08529b !important;\n}\n\n.link-google {\n  color: #dc4e41 !important;\n}\n.link-google:hover, .link-google:focus {\n  color: #b03e34 !important;\n}\n\n.link-youtube {\n  color: #ff0000 !important;\n}\n.link-youtube:hover, .link-youtube:focus {\n  color: #cc0000 !important;\n}\n\n.link-vimeo {\n  color: #1ab7ea !important;\n}\n.link-vimeo:hover, .link-vimeo:focus {\n  color: #1592bb !important;\n}\n\n.link-dribbble {\n  color: #ea4c89 !important;\n}\n.link-dribbble:hover, .link-dribbble:focus {\n  color: #bb3d6e !important;\n}\n\n.link-github {\n  color: #181717 !important;\n}\n.link-github:hover, .link-github:focus {\n  color: #131212 !important;\n}\n\n.link-instagram {\n  color: #e4405f !important;\n}\n.link-instagram:hover, .link-instagram:focus {\n  color: #b6334c !important;\n}\n\n.link-pinterest {\n  color: #bd081c !important;\n}\n.link-pinterest:hover, .link-pinterest:focus {\n  color: #970616 !important;\n}\n\n.link-vk {\n  color: #6383a8 !important;\n}\n.link-vk:hover, .link-vk:focus {\n  color: #4f6986 !important;\n}\n\n.link-rss {\n  color: #ffa500 !important;\n}\n.link-rss:hover, .link-rss:focus {\n  color: #cc8400 !important;\n}\n\n.link-flickr {\n  color: #0063dc !important;\n}\n.link-flickr:hover, .link-flickr:focus {\n  color: #004fb0 !important;\n}\n\n.link-bitbucket {\n  color: #0052cc !important;\n}\n.link-bitbucket:hover, .link-bitbucket:focus {\n  color: #0042a3 !important;\n}\n\n.link-tabler {\n  color: #206bc4 !important;\n}\n.link-tabler:hover, .link-tabler:focus {\n  color: #1a569d !important;\n}\n\n.ratio {\n  position: relative;\n  width: 100%;\n}\n.ratio::before {\n  display: block;\n  padding-top: var(--tblr-aspect-ratio);\n  content: \"\";\n}\n.ratio > * {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.ratio-1x1 {\n  --tblr-aspect-ratio: 100%;\n}\n\n.ratio-4x3 {\n  --tblr-aspect-ratio: 75%;\n}\n\n.ratio-3x4 {\n  --tblr-aspect-ratio: 133.3333333333%;\n}\n\n.ratio-16x9 {\n  --tblr-aspect-ratio: 56.25%;\n}\n\n.ratio-9x16 {\n  --tblr-aspect-ratio: 177.7777777778%;\n}\n\n.ratio-21x9 {\n  --tblr-aspect-ratio: 42.8571428571%;\n}\n\n.ratio-9x21 {\n  --tblr-aspect-ratio: 233.3333333333%;\n}\n\n.fixed-top {\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  z-index: 1030;\n}\n\n.fixed-bottom {\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1030;\n}\n\n.sticky-top {\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0;\n  z-index: 1020;\n}\n\n.sticky-bottom {\n  position: -webkit-sticky;\n  position: sticky;\n  bottom: 0;\n  z-index: 1020;\n}\n\n@media (min-width: 576px) {\n  .sticky-sm-top {\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-sm-bottom {\n    position: -webkit-sticky;\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n@media (min-width: 768px) {\n  .sticky-md-top {\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-md-bottom {\n    position: -webkit-sticky;\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n@media (min-width: 992px) {\n  .sticky-lg-top {\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-lg-bottom {\n    position: -webkit-sticky;\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n@media (min-width: 1200px) {\n  .sticky-xl-top {\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-xl-bottom {\n    position: -webkit-sticky;\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n@media (min-width: 1400px) {\n  .sticky-xxl-top {\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n    z-index: 1020;\n  }\n  .sticky-xxl-bottom {\n    position: -webkit-sticky;\n    position: sticky;\n    bottom: 0;\n    z-index: 1020;\n  }\n}\n.hstack {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  align-self: stretch;\n}\n\n.vstack {\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  align-self: stretch;\n}\n\n.visually-hidden,\n.visually-hidden-focusable:not(:focus):not(:focus-within) {\n  position: absolute !important;\n  width: 1px !important;\n  height: 1px !important;\n  padding: 0 !important;\n  margin: -1px !important;\n  overflow: hidden !important;\n  clip: rect(0, 0, 0, 0) !important;\n  white-space: nowrap !important;\n  border: 0 !important;\n}\n\n.stretched-link::after {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1;\n  content: \"\";\n}\n\n.text-truncate {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.vr {\n  display: inline-block;\n  align-self: stretch;\n  width: 1px;\n  min-height: 1em;\n  background-color: currentcolor;\n  opacity: 0.16;\n}\n\n.align-baseline {\n  vertical-align: baseline !important;\n}\n\n.align-top {\n  vertical-align: top !important;\n}\n\n.align-middle {\n  vertical-align: middle !important;\n}\n\n.align-bottom {\n  vertical-align: bottom !important;\n}\n\n.align-text-bottom {\n  vertical-align: text-bottom !important;\n}\n\n.align-text-top {\n  vertical-align: text-top !important;\n}\n\n.float-start {\n  float: left !important;\n}\n\n.float-end {\n  float: right !important;\n}\n\n.float-none {\n  float: none !important;\n}\n\n.opacity-0 {\n  opacity: 0 !important;\n}\n\n.opacity-25 {\n  opacity: 0.25 !important;\n}\n\n.opacity-50 {\n  opacity: 0.5 !important;\n}\n\n.opacity-75 {\n  opacity: 0.75 !important;\n}\n\n.opacity-100 {\n  opacity: 1 !important;\n}\n\n.overflow-auto {\n  overflow: auto !important;\n}\n\n.overflow-hidden {\n  overflow: hidden !important;\n}\n\n.overflow-visible {\n  overflow: visible !important;\n}\n\n.overflow-scroll {\n  overflow: scroll !important;\n}\n\n.d-inline {\n  display: inline !important;\n}\n\n.d-inline-block {\n  display: inline-block !important;\n}\n\n.d-block {\n  display: block !important;\n}\n\n.d-grid {\n  display: grid !important;\n}\n\n.d-table {\n  display: table !important;\n}\n\n.d-table-row {\n  display: table-row !important;\n}\n\n.d-table-cell {\n  display: table-cell !important;\n}\n\n.d-flex {\n  display: flex !important;\n}\n\n.d-inline-flex {\n  display: inline-flex !important;\n}\n\n.d-none {\n  display: none !important;\n}\n\n.shadow {\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n}\n\n.shadow-sm {\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n}\n\n.shadow-lg {\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175) !important;\n}\n\n.shadow-none {\n  box-shadow: none !important;\n}\n\n.position-static {\n  position: static !important;\n}\n\n.position-relative {\n  position: relative !important;\n}\n\n.position-absolute {\n  position: absolute !important;\n}\n\n.position-fixed {\n  position: fixed !important;\n}\n\n.position-sticky {\n  position: -webkit-sticky !important;\n  position: sticky !important;\n}\n\n.top-0 {\n  top: 0 !important;\n}\n\n.top-50 {\n  top: 50% !important;\n}\n\n.top-100 {\n  top: 100% !important;\n}\n\n.bottom-0 {\n  bottom: 0 !important;\n}\n\n.bottom-50 {\n  bottom: 50% !important;\n}\n\n.bottom-100 {\n  bottom: 100% !important;\n}\n\n.start-0 {\n  left: 0 !important;\n}\n\n.start-50 {\n  left: 50% !important;\n}\n\n.start-100 {\n  left: 100% !important;\n}\n\n.end-0 {\n  right: 0 !important;\n}\n\n.end-50 {\n  right: 50% !important;\n}\n\n.end-100 {\n  right: 100% !important;\n}\n\n.translate-middle {\n  transform: translate(-50%, -50%) !important;\n}\n\n.translate-middle-x {\n  transform: translateX(-50%) !important;\n}\n\n.translate-middle-y {\n  transform: translateY(-50%) !important;\n}\n\n.border {\n  border: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n\n.border-wide {\n  border: 2px solid rgba(98, 105, 118, 0.16) !important;\n}\n\n.border-0 {\n  border: 0 !important;\n}\n\n.border-top {\n  border-top: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n\n.border-top-wide {\n  border-top: 2px solid rgba(98, 105, 118, 0.16) !important;\n}\n\n.border-top-0 {\n  border-top: 0 !important;\n}\n\n.border-end {\n  border-right: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n\n.border-end-wide {\n  border-right: 2px solid rgba(98, 105, 118, 0.16) !important;\n}\n\n.border-end-0 {\n  border-right: 0 !important;\n}\n\n.border-bottom {\n  border-bottom: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n\n.border-bottom-wide {\n  border-bottom: 2px solid rgba(98, 105, 118, 0.16) !important;\n}\n\n.border-bottom-0 {\n  border-bottom: 0 !important;\n}\n\n.border-start {\n  border-left: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n\n.border-start-wide {\n  border-left: 2px solid rgba(98, 105, 118, 0.16) !important;\n}\n\n.border-start-0 {\n  border-left: 0 !important;\n}\n\n.border-primary {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-primary-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-secondary {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-secondary-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-success {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-success-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-info {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-info-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-warning {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-warning-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-danger {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-danger-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-light {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-light-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-dark {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-dark-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-muted {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-muted-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-blue {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-blue-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-azure {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-azure-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-indigo {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-indigo-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-purple {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-purple-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-pink {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-pink-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-red {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-red-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-orange {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-orange-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-yellow {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-yellow-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-lime {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-lime-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-green {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-green-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-teal {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-teal-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-cyan {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-cyan-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-facebook {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-facebook-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-twitter {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-twitter-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-linkedin {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-linkedin-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-google {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-google-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-youtube {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-youtube-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-vimeo {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-vimeo-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-dribbble {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-dribbble-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-github {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-github-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-instagram {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-instagram-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-pinterest {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-pinterest-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-vk {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-vk-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-rss {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-rss-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-flickr {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-flickr-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-bitbucket {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-bitbucket-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-tabler {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-tabler-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-white {\n  --tblr-border-opacity: 1;\n  border-color: rgba(var(--tblr-white-rgb), var(--tblr-border-opacity)) !important;\n}\n\n.border-1 {\n  --tblr-border-width: 1px;\n}\n\n.border-2 {\n  --tblr-border-width: 2px;\n}\n\n.border-3 {\n  --tblr-border-width: 3px;\n}\n\n.border-4 {\n  --tblr-border-width: 4px;\n}\n\n.border-5 {\n  --tblr-border-width: 5px;\n}\n\n.border-opacity-10 {\n  --tblr-border-opacity: 0.1;\n}\n\n.border-opacity-25 {\n  --tblr-border-opacity: 0.25;\n}\n\n.border-opacity-50 {\n  --tblr-border-opacity: 0.5;\n}\n\n.border-opacity-75 {\n  --tblr-border-opacity: 0.75;\n}\n\n.border-opacity-100 {\n  --tblr-border-opacity: 1;\n}\n\n.w-0 {\n  width: 0 !important;\n}\n\n.w-1 {\n  width: 0.25rem !important;\n}\n\n.w-2 {\n  width: 0.5rem !important;\n}\n\n.w-3 {\n  width: 1rem !important;\n}\n\n.w-4 {\n  width: 2rem !important;\n}\n\n.w-5 {\n  width: 4rem !important;\n}\n\n.w-25 {\n  width: 25% !important;\n}\n\n.w-33 {\n  width: 33.33333% !important;\n}\n\n.w-50 {\n  width: 50% !important;\n}\n\n.w-66 {\n  width: 66.66666% !important;\n}\n\n.w-75 {\n  width: 75% !important;\n}\n\n.w-100 {\n  width: 100% !important;\n}\n\n.w-auto {\n  width: auto !important;\n}\n\n.mw-100 {\n  max-width: 100% !important;\n}\n\n.vw-100 {\n  width: 100vw !important;\n}\n\n.min-vw-100 {\n  min-width: 100vw !important;\n}\n\n.h-0 {\n  height: 0 !important;\n}\n\n.h-1 {\n  height: 0.25rem !important;\n}\n\n.h-2 {\n  height: 0.5rem !important;\n}\n\n.h-3 {\n  height: 1rem !important;\n}\n\n.h-4 {\n  height: 2rem !important;\n}\n\n.h-5 {\n  height: 4rem !important;\n}\n\n.h-25 {\n  height: 25% !important;\n}\n\n.h-33 {\n  height: 33.33333% !important;\n}\n\n.h-50 {\n  height: 50% !important;\n}\n\n.h-66 {\n  height: 66.66666% !important;\n}\n\n.h-75 {\n  height: 75% !important;\n}\n\n.h-100 {\n  height: 100% !important;\n}\n\n.h-auto {\n  height: auto !important;\n}\n\n.mh-100 {\n  max-height: 100% !important;\n}\n\n.vh-100 {\n  height: 100vh !important;\n}\n\n.min-vh-100 {\n  min-height: 100vh !important;\n}\n\n.flex-fill {\n  flex: 1 1 auto !important;\n}\n\n.flex-row {\n  flex-direction: row !important;\n}\n\n.flex-column {\n  flex-direction: column !important;\n}\n\n.flex-row-reverse {\n  flex-direction: row-reverse !important;\n}\n\n.flex-column-reverse {\n  flex-direction: column-reverse !important;\n}\n\n.flex-grow-0 {\n  flex-grow: 0 !important;\n}\n\n.flex-grow-1 {\n  flex-grow: 1 !important;\n}\n\n.flex-shrink-0 {\n  flex-shrink: 0 !important;\n}\n\n.flex-shrink-1 {\n  flex-shrink: 1 !important;\n}\n\n.flex-wrap {\n  flex-wrap: wrap !important;\n}\n\n.flex-nowrap {\n  flex-wrap: nowrap !important;\n}\n\n.flex-wrap-reverse {\n  flex-wrap: wrap-reverse !important;\n}\n\n.justify-content-start {\n  justify-content: flex-start !important;\n}\n\n.justify-content-end {\n  justify-content: flex-end !important;\n}\n\n.justify-content-center {\n  justify-content: center !important;\n}\n\n.justify-content-between {\n  justify-content: space-between !important;\n}\n\n.justify-content-around {\n  justify-content: space-around !important;\n}\n\n.justify-content-evenly {\n  justify-content: space-evenly !important;\n}\n\n.align-items-start {\n  align-items: flex-start !important;\n}\n\n.align-items-end {\n  align-items: flex-end !important;\n}\n\n.align-items-center {\n  align-items: center !important;\n}\n\n.align-items-baseline {\n  align-items: baseline !important;\n}\n\n.align-items-stretch {\n  align-items: stretch !important;\n}\n\n.align-content-start {\n  align-content: flex-start !important;\n}\n\n.align-content-end {\n  align-content: flex-end !important;\n}\n\n.align-content-center {\n  align-content: center !important;\n}\n\n.align-content-between {\n  align-content: space-between !important;\n}\n\n.align-content-around {\n  align-content: space-around !important;\n}\n\n.align-content-stretch {\n  align-content: stretch !important;\n}\n\n.align-self-auto {\n  align-self: auto !important;\n}\n\n.align-self-start {\n  align-self: flex-start !important;\n}\n\n.align-self-end {\n  align-self: flex-end !important;\n}\n\n.align-self-center {\n  align-self: center !important;\n}\n\n.align-self-baseline {\n  align-self: baseline !important;\n}\n\n.align-self-stretch {\n  align-self: stretch !important;\n}\n\n.order-first {\n  order: -1 !important;\n}\n\n.order-0 {\n  order: 0 !important;\n}\n\n.order-1 {\n  order: 1 !important;\n}\n\n.order-2 {\n  order: 2 !important;\n}\n\n.order-3 {\n  order: 3 !important;\n}\n\n.order-4 {\n  order: 4 !important;\n}\n\n.order-5 {\n  order: 5 !important;\n}\n\n.order-last {\n  order: 6 !important;\n}\n\n.m-0 {\n  margin: 0 !important;\n}\n\n.m-1 {\n  margin: 0.25rem !important;\n}\n\n.m-2 {\n  margin: 0.5rem !important;\n}\n\n.m-3 {\n  margin: 1rem !important;\n}\n\n.m-4 {\n  margin: 2rem !important;\n}\n\n.m-5 {\n  margin: 4rem !important;\n}\n\n.m-auto {\n  margin: auto !important;\n}\n\n.mx-0 {\n  margin-right: 0 !important;\n  margin-left: 0 !important;\n}\n\n.mx-1 {\n  margin-right: 0.25rem !important;\n  margin-left: 0.25rem !important;\n}\n\n.mx-2 {\n  margin-right: 0.5rem !important;\n  margin-left: 0.5rem !important;\n}\n\n.mx-3 {\n  margin-right: 1rem !important;\n  margin-left: 1rem !important;\n}\n\n.mx-4 {\n  margin-right: 2rem !important;\n  margin-left: 2rem !important;\n}\n\n.mx-5 {\n  margin-right: 4rem !important;\n  margin-left: 4rem !important;\n}\n\n.mx-auto {\n  margin-right: auto !important;\n  margin-left: auto !important;\n}\n\n.my-0 {\n  margin-top: 0 !important;\n  margin-bottom: 0 !important;\n}\n\n.my-1 {\n  margin-top: 0.25rem !important;\n  margin-bottom: 0.25rem !important;\n}\n\n.my-2 {\n  margin-top: 0.5rem !important;\n  margin-bottom: 0.5rem !important;\n}\n\n.my-3 {\n  margin-top: 1rem !important;\n  margin-bottom: 1rem !important;\n}\n\n.my-4 {\n  margin-top: 2rem !important;\n  margin-bottom: 2rem !important;\n}\n\n.my-5 {\n  margin-top: 4rem !important;\n  margin-bottom: 4rem !important;\n}\n\n.my-auto {\n  margin-top: auto !important;\n  margin-bottom: auto !important;\n}\n\n.mt-0 {\n  margin-top: 0 !important;\n}\n\n.mt-1 {\n  margin-top: 0.25rem !important;\n}\n\n.mt-2 {\n  margin-top: 0.5rem !important;\n}\n\n.mt-3 {\n  margin-top: 1rem !important;\n}\n\n.mt-4 {\n  margin-top: 2rem !important;\n}\n\n.mt-5 {\n  margin-top: 4rem !important;\n}\n\n.mt-auto {\n  margin-top: auto !important;\n}\n\n.me-0 {\n  margin-right: 0 !important;\n}\n\n.me-1 {\n  margin-right: 0.25rem !important;\n}\n\n.me-2 {\n  margin-right: 0.5rem !important;\n}\n\n.me-3 {\n  margin-right: 1rem !important;\n}\n\n.me-4 {\n  margin-right: 2rem !important;\n}\n\n.me-5 {\n  margin-right: 4rem !important;\n}\n\n.me-auto {\n  margin-right: auto !important;\n}\n\n.mb-0 {\n  margin-bottom: 0 !important;\n}\n\n.mb-1 {\n  margin-bottom: 0.25rem !important;\n}\n\n.mb-2 {\n  margin-bottom: 0.5rem !important;\n}\n\n.mb-3 {\n  margin-bottom: 1rem !important;\n}\n\n.mb-4 {\n  margin-bottom: 2rem !important;\n}\n\n.mb-5 {\n  margin-bottom: 4rem !important;\n}\n\n.mb-auto {\n  margin-bottom: auto !important;\n}\n\n.ms-0 {\n  margin-left: 0 !important;\n}\n\n.ms-1 {\n  margin-left: 0.25rem !important;\n}\n\n.ms-2 {\n  margin-left: 0.5rem !important;\n}\n\n.ms-3 {\n  margin-left: 1rem !important;\n}\n\n.ms-4 {\n  margin-left: 2rem !important;\n}\n\n.ms-5 {\n  margin-left: 4rem !important;\n}\n\n.ms-auto {\n  margin-left: auto !important;\n}\n\n.p-0 {\n  padding: 0 !important;\n}\n\n.p-1 {\n  padding: 0.25rem !important;\n}\n\n.p-2 {\n  padding: 0.5rem !important;\n}\n\n.p-3 {\n  padding: 1rem !important;\n}\n\n.p-4 {\n  padding: 2rem !important;\n}\n\n.p-5 {\n  padding: 4rem !important;\n}\n\n.px-0 {\n  padding-right: 0 !important;\n  padding-left: 0 !important;\n}\n\n.px-1 {\n  padding-right: 0.25rem !important;\n  padding-left: 0.25rem !important;\n}\n\n.px-2 {\n  padding-right: 0.5rem !important;\n  padding-left: 0.5rem !important;\n}\n\n.px-3 {\n  padding-right: 1rem !important;\n  padding-left: 1rem !important;\n}\n\n.px-4 {\n  padding-right: 2rem !important;\n  padding-left: 2rem !important;\n}\n\n.px-5 {\n  padding-right: 4rem !important;\n  padding-left: 4rem !important;\n}\n\n.py-0 {\n  padding-top: 0 !important;\n  padding-bottom: 0 !important;\n}\n\n.py-1 {\n  padding-top: 0.25rem !important;\n  padding-bottom: 0.25rem !important;\n}\n\n.py-2 {\n  padding-top: 0.5rem !important;\n  padding-bottom: 0.5rem !important;\n}\n\n.py-3 {\n  padding-top: 1rem !important;\n  padding-bottom: 1rem !important;\n}\n\n.py-4 {\n  padding-top: 2rem !important;\n  padding-bottom: 2rem !important;\n}\n\n.py-5 {\n  padding-top: 4rem !important;\n  padding-bottom: 4rem !important;\n}\n\n.pt-0 {\n  padding-top: 0 !important;\n}\n\n.pt-1 {\n  padding-top: 0.25rem !important;\n}\n\n.pt-2 {\n  padding-top: 0.5rem !important;\n}\n\n.pt-3 {\n  padding-top: 1rem !important;\n}\n\n.pt-4 {\n  padding-top: 2rem !important;\n}\n\n.pt-5 {\n  padding-top: 4rem !important;\n}\n\n.pe-0 {\n  padding-right: 0 !important;\n}\n\n.pe-1 {\n  padding-right: 0.25rem !important;\n}\n\n.pe-2 {\n  padding-right: 0.5rem !important;\n}\n\n.pe-3 {\n  padding-right: 1rem !important;\n}\n\n.pe-4 {\n  padding-right: 2rem !important;\n}\n\n.pe-5 {\n  padding-right: 4rem !important;\n}\n\n.pb-0 {\n  padding-bottom: 0 !important;\n}\n\n.pb-1 {\n  padding-bottom: 0.25rem !important;\n}\n\n.pb-2 {\n  padding-bottom: 0.5rem !important;\n}\n\n.pb-3 {\n  padding-bottom: 1rem !important;\n}\n\n.pb-4 {\n  padding-bottom: 2rem !important;\n}\n\n.pb-5 {\n  padding-bottom: 4rem !important;\n}\n\n.ps-0 {\n  padding-left: 0 !important;\n}\n\n.ps-1 {\n  padding-left: 0.25rem !important;\n}\n\n.ps-2 {\n  padding-left: 0.5rem !important;\n}\n\n.ps-3 {\n  padding-left: 1rem !important;\n}\n\n.ps-4 {\n  padding-left: 2rem !important;\n}\n\n.ps-5 {\n  padding-left: 4rem !important;\n}\n\n.gap-0 {\n  gap: 0 !important;\n}\n\n.gap-1 {\n  gap: 0.25rem !important;\n}\n\n.gap-2 {\n  gap: 0.5rem !important;\n}\n\n.gap-3 {\n  gap: 1rem !important;\n}\n\n.gap-4 {\n  gap: 2rem !important;\n}\n\n.gap-5 {\n  gap: 4rem !important;\n}\n\n.font-monospace {\n  font-family: var(--tblr-font-monospace) !important;\n}\n\n.fs-1 {\n  font-size: 1.5rem !important;\n}\n\n.fs-2 {\n  font-size: 1.25rem !important;\n}\n\n.fs-3 {\n  font-size: 1rem !important;\n}\n\n.fs-4 {\n  font-size: 0.875rem !important;\n}\n\n.fs-5 {\n  font-size: 0.75rem !important;\n}\n\n.fs-6 {\n  font-size: 0.625rem !important;\n}\n\n.fst-italic {\n  font-style: italic !important;\n}\n\n.fst-normal {\n  font-style: normal !important;\n}\n\n.fw-light {\n  font-weight: 300 !important;\n}\n\n.fw-lighter {\n  font-weight: lighter !important;\n}\n\n.fw-normal {\n  font-weight: 400 !important;\n}\n\n.fw-bold {\n  font-weight: 600 !important;\n}\n\n.fw-semibold {\n  font-weight: 600 !important;\n}\n\n.fw-bolder {\n  font-weight: bolder !important;\n}\n\n.lh-1 {\n  line-height: 1 !important;\n}\n\n.lh-sm {\n  line-height: 1.1428571429 !important;\n}\n\n.lh-base {\n  line-height: 1.4285714286 !important;\n}\n\n.lh-lg {\n  line-height: 1.7142857143 !important;\n}\n\n.text-start {\n  text-align: left !important;\n}\n\n.text-end {\n  text-align: right !important;\n}\n\n.text-center {\n  text-align: center !important;\n}\n\n.text-decoration-none {\n  text-decoration: none !important;\n}\n\n.text-decoration-underline {\n  text-decoration: underline !important;\n}\n\n.text-decoration-line-through {\n  text-decoration: line-through !important;\n}\n\n.text-lowercase {\n  text-transform: lowercase !important;\n}\n\n.text-uppercase {\n  text-transform: uppercase !important;\n}\n\n.text-capitalize {\n  text-transform: capitalize !important;\n}\n\n.text-wrap {\n  white-space: normal !important;\n}\n\n.text-nowrap {\n  white-space: nowrap !important;\n}\n\n/* rtl:begin:remove */\n.text-break {\n  word-wrap: break-word !important;\n  word-break: break-word !important;\n}\n\n/* rtl:end:remove */\n.text-primary {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-primary-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-secondary {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-secondary-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-success {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-success-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-info {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-info-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-warning {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-warning-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-danger {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-danger-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-light {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-light-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-dark {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-dark-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-muted {\n  --tblr-text-opacity: 1;\n  color: #626976 !important;\n}\n\n.text-blue {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-blue-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-azure {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-azure-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-indigo {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-indigo-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-purple {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-purple-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-pink {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-pink-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-red {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-red-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-orange {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-orange-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-yellow {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-yellow-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-lime {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-lime-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-green {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-green-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-teal {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-teal-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-cyan {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-cyan-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-facebook {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-facebook-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-twitter {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-twitter-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-linkedin {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-linkedin-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-google {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-google-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-youtube {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-youtube-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-vimeo {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-vimeo-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-dribbble {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-dribbble-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-github {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-github-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-instagram {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-instagram-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-pinterest {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-pinterest-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-vk {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-vk-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-rss {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-rss-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-flickr {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-flickr-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-bitbucket {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-bitbucket-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-tabler {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-tabler-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-black {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-black-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-white {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-white-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-body {\n  --tblr-text-opacity: 1;\n  color: rgba(var(--tblr-body-color-rgb), var(--tblr-text-opacity)) !important;\n}\n\n.text-black-50 {\n  --tblr-text-opacity: 1;\n  color: rgba(0, 0, 0, 0.5) !important;\n}\n\n.text-white-50 {\n  --tblr-text-opacity: 1;\n  color: rgba(255, 255, 255, 0.5) !important;\n}\n\n.text-reset {\n  --tblr-text-opacity: 1;\n  color: inherit !important;\n}\n\n.text-opacity-25 {\n  --tblr-text-opacity: 0.25;\n}\n\n.text-opacity-50 {\n  --tblr-text-opacity: 0.5;\n}\n\n.text-opacity-75 {\n  --tblr-text-opacity: 0.75;\n}\n\n.text-opacity-100 {\n  --tblr-text-opacity: 1;\n}\n\n.bg-primary {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-primary-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-secondary {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-secondary-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-success {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-success-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-info {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-info-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-warning {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-warning-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-danger {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-danger-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-light {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-light-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-dark {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-dark-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-muted {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-muted-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-blue {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-blue-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-azure {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-azure-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-indigo {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-indigo-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-purple {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-purple-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-pink {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-pink-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-red {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-red-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-orange {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-orange-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-yellow {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-yellow-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-lime {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-lime-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-green {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-green-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-teal {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-teal-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-cyan {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-cyan-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-facebook {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-facebook-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-twitter {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-twitter-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-linkedin {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-linkedin-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-google {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-google-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-youtube {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-youtube-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-vimeo {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-vimeo-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-dribbble {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-dribbble-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-github {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-github-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-instagram {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-instagram-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-pinterest {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-pinterest-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-vk {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-vk-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-rss {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-rss-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-flickr {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-flickr-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-bitbucket {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-bitbucket-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-tabler {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-tabler-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-black {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-black-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-white {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-white-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-body {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-body-bg-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-transparent {\n  --tblr-bg-opacity: 1;\n  background-color: transparent !important;\n}\n\n.bg-opacity-10 {\n  --tblr-bg-opacity: 0.1;\n}\n\n.bg-opacity-25 {\n  --tblr-bg-opacity: 0.25;\n}\n\n.bg-opacity-50 {\n  --tblr-bg-opacity: 0.5;\n}\n\n.bg-opacity-75 {\n  --tblr-bg-opacity: 0.75;\n}\n\n.bg-opacity-100 {\n  --tblr-bg-opacity: 1;\n}\n\n.bg-gradient {\n  background-image: var(--tblr-gradient) !important;\n}\n\n.user-select-all {\n  -webkit-user-select: all !important;\n     -moz-user-select: all !important;\n          user-select: all !important;\n}\n\n.user-select-auto {\n  -webkit-user-select: auto !important;\n     -moz-user-select: auto !important;\n          user-select: auto !important;\n}\n\n.user-select-none {\n  -webkit-user-select: none !important;\n     -moz-user-select: none !important;\n          user-select: none !important;\n}\n\n.pe-none {\n  pointer-events: none !important;\n}\n\n.pe-auto {\n  pointer-events: auto !important;\n}\n\n.rounded {\n  border-radius: var(--tblr-border-radius) !important;\n}\n\n.rounded-0 {\n  border-radius: 0 !important;\n}\n\n.rounded-1 {\n  border-radius: var(--tblr-border-radius-sm) !important;\n}\n\n.rounded-2 {\n  border-radius: var(--tblr-border-radius) !important;\n}\n\n.rounded-3 {\n  border-radius: var(--tblr-border-radius-lg) !important;\n}\n\n.rounded-4 {\n  border-radius: var(--tblr-border-radius-xl) !important;\n}\n\n.rounded-5 {\n  border-radius: var(--tblr-border-radius-2xl) !important;\n}\n\n.rounded-circle {\n  border-radius: 50% !important;\n}\n\n.rounded-pill {\n  border-radius: var(--tblr-border-radius-pill) !important;\n}\n\n.rounded-top {\n  border-top-left-radius: var(--tblr-border-radius) !important;\n  border-top-right-radius: var(--tblr-border-radius) !important;\n}\n\n.rounded-end {\n  border-top-right-radius: var(--tblr-border-radius) !important;\n  border-bottom-right-radius: var(--tblr-border-radius) !important;\n}\n\n.rounded-bottom {\n  border-bottom-right-radius: var(--tblr-border-radius) !important;\n  border-bottom-left-radius: var(--tblr-border-radius) !important;\n}\n\n.rounded-start {\n  border-bottom-left-radius: var(--tblr-border-radius) !important;\n  border-top-left-radius: var(--tblr-border-radius) !important;\n}\n\n.visible {\n  visibility: visible !important;\n}\n\n.invisible {\n  visibility: hidden !important;\n}\n\n.object-contain {\n  -o-object-fit: contain !important;\n     object-fit: contain !important;\n}\n\n.object-cover {\n  -o-object-fit: cover !important;\n     object-fit: cover !important;\n}\n\n.object-fill {\n  -o-object-fit: fill !important;\n     object-fit: fill !important;\n}\n\n.object-scale-down {\n  -o-object-fit: scale-down !important;\n     object-fit: scale-down !important;\n}\n\n.object-none {\n  -o-object-fit: none !important;\n     object-fit: none !important;\n}\n\n.tracking-tight {\n  letter-spacing: -0.05em !important;\n}\n\n.tracking-normal {\n  letter-spacing: 0 !important;\n}\n\n.tracking-wide {\n  letter-spacing: 0.05em !important;\n}\n\n.cursor-auto {\n  cursor: auto !important;\n}\n\n.cursor-pointer {\n  cursor: pointer !important;\n}\n\n.cursor-move {\n  cursor: move !important;\n}\n\n.cursor-not-allowed {\n  cursor: not-allowed !important;\n}\n\n.cursor-zoom-in {\n  cursor: zoom-in !important;\n}\n\n.cursor-zoom-out {\n  cursor: zoom-out !important;\n}\n\n.cursor-default {\n  cursor: default !important;\n}\n\n.cursor-none {\n  cursor: none !important;\n}\n\n.cursor-help {\n  cursor: help !important;\n}\n\n.cursor-progress {\n  cursor: progress !important;\n}\n\n.cursor-wait {\n  cursor: wait !important;\n}\n\n.cursor-text {\n  cursor: text !important;\n}\n\n.cursor-v-text {\n  cursor: vertical-text !important;\n}\n\n.cursor-grab {\n  cursor: -webkit-grab !important;\n  cursor: grab !important;\n}\n\n.cursor-grabbing {\n  cursor: -webkit-grabbing !important;\n  cursor: grabbing !important;\n}\n\n.border-x {\n  border-left: 1px solid rgba(98, 105, 118, 0.16) !important;\n  border-right: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n\n.border-x-wide {\n  border-left: 2px solid rgba(98, 105, 118, 0.16) !important;\n  border-right: 2px solid rgba(98, 105, 118, 0.16) !important;\n}\n\n.border-x-0 {\n  border-left: 0 !important;\n  border-right: 0 !important;\n}\n\n.border-y {\n  border-top: 1px solid rgba(98, 105, 118, 0.16) !important;\n  border-bottom: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n\n.border-y-wide {\n  border-top: 2px solid rgba(98, 105, 118, 0.16) !important;\n  border-bottom: 2px solid rgba(98, 105, 118, 0.16) !important;\n}\n\n.border-y-0 {\n  border-top: 0 !important;\n  border-bottom: 0 !important;\n}\n\n.columns-2 {\n  -moz-columns: 2 !important;\n       columns: 2 !important;\n}\n\n.columns-3 {\n  -moz-columns: 3 !important;\n       columns: 3 !important;\n}\n\n.columns-4 {\n  -moz-columns: 4 !important;\n       columns: 4 !important;\n}\n\n@media (min-width: 576px) {\n  .float-sm-start {\n    float: left !important;\n  }\n  .float-sm-end {\n    float: right !important;\n  }\n  .float-sm-none {\n    float: none !important;\n  }\n  .d-sm-inline {\n    display: inline !important;\n  }\n  .d-sm-inline-block {\n    display: inline-block !important;\n  }\n  .d-sm-block {\n    display: block !important;\n  }\n  .d-sm-grid {\n    display: grid !important;\n  }\n  .d-sm-table {\n    display: table !important;\n  }\n  .d-sm-table-row {\n    display: table-row !important;\n  }\n  .d-sm-table-cell {\n    display: table-cell !important;\n  }\n  .d-sm-flex {\n    display: flex !important;\n  }\n  .d-sm-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-sm-none {\n    display: none !important;\n  }\n  .flex-sm-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-sm-row {\n    flex-direction: row !important;\n  }\n  .flex-sm-column {\n    flex-direction: column !important;\n  }\n  .flex-sm-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-sm-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-sm-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-sm-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-sm-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-sm-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-sm-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-sm-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-sm-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-sm-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-sm-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-sm-center {\n    justify-content: center !important;\n  }\n  .justify-content-sm-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-sm-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-sm-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-sm-start {\n    align-items: flex-start !important;\n  }\n  .align-items-sm-end {\n    align-items: flex-end !important;\n  }\n  .align-items-sm-center {\n    align-items: center !important;\n  }\n  .align-items-sm-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-sm-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-sm-start {\n    align-content: flex-start !important;\n  }\n  .align-content-sm-end {\n    align-content: flex-end !important;\n  }\n  .align-content-sm-center {\n    align-content: center !important;\n  }\n  .align-content-sm-between {\n    align-content: space-between !important;\n  }\n  .align-content-sm-around {\n    align-content: space-around !important;\n  }\n  .align-content-sm-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-sm-auto {\n    align-self: auto !important;\n  }\n  .align-self-sm-start {\n    align-self: flex-start !important;\n  }\n  .align-self-sm-end {\n    align-self: flex-end !important;\n  }\n  .align-self-sm-center {\n    align-self: center !important;\n  }\n  .align-self-sm-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-sm-stretch {\n    align-self: stretch !important;\n  }\n  .order-sm-first {\n    order: -1 !important;\n  }\n  .order-sm-0 {\n    order: 0 !important;\n  }\n  .order-sm-1 {\n    order: 1 !important;\n  }\n  .order-sm-2 {\n    order: 2 !important;\n  }\n  .order-sm-3 {\n    order: 3 !important;\n  }\n  .order-sm-4 {\n    order: 4 !important;\n  }\n  .order-sm-5 {\n    order: 5 !important;\n  }\n  .order-sm-last {\n    order: 6 !important;\n  }\n  .m-sm-0 {\n    margin: 0 !important;\n  }\n  .m-sm-1 {\n    margin: 0.25rem !important;\n  }\n  .m-sm-2 {\n    margin: 0.5rem !important;\n  }\n  .m-sm-3 {\n    margin: 1rem !important;\n  }\n  .m-sm-4 {\n    margin: 2rem !important;\n  }\n  .m-sm-5 {\n    margin: 4rem !important;\n  }\n  .m-sm-auto {\n    margin: auto !important;\n  }\n  .mx-sm-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-sm-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-sm-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-sm-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-sm-4 {\n    margin-right: 2rem !important;\n    margin-left: 2rem !important;\n  }\n  .mx-sm-5 {\n    margin-right: 4rem !important;\n    margin-left: 4rem !important;\n  }\n  .mx-sm-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-sm-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-sm-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-sm-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-sm-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-sm-4 {\n    margin-top: 2rem !important;\n    margin-bottom: 2rem !important;\n  }\n  .my-sm-5 {\n    margin-top: 4rem !important;\n    margin-bottom: 4rem !important;\n  }\n  .my-sm-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-sm-0 {\n    margin-top: 0 !important;\n  }\n  .mt-sm-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-sm-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-sm-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-sm-4 {\n    margin-top: 2rem !important;\n  }\n  .mt-sm-5 {\n    margin-top: 4rem !important;\n  }\n  .mt-sm-auto {\n    margin-top: auto !important;\n  }\n  .me-sm-0 {\n    margin-right: 0 !important;\n  }\n  .me-sm-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-sm-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-sm-3 {\n    margin-right: 1rem !important;\n  }\n  .me-sm-4 {\n    margin-right: 2rem !important;\n  }\n  .me-sm-5 {\n    margin-right: 4rem !important;\n  }\n  .me-sm-auto {\n    margin-right: auto !important;\n  }\n  .mb-sm-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-sm-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-sm-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-sm-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-sm-4 {\n    margin-bottom: 2rem !important;\n  }\n  .mb-sm-5 {\n    margin-bottom: 4rem !important;\n  }\n  .mb-sm-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-sm-0 {\n    margin-left: 0 !important;\n  }\n  .ms-sm-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-sm-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-sm-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-sm-4 {\n    margin-left: 2rem !important;\n  }\n  .ms-sm-5 {\n    margin-left: 4rem !important;\n  }\n  .ms-sm-auto {\n    margin-left: auto !important;\n  }\n  .p-sm-0 {\n    padding: 0 !important;\n  }\n  .p-sm-1 {\n    padding: 0.25rem !important;\n  }\n  .p-sm-2 {\n    padding: 0.5rem !important;\n  }\n  .p-sm-3 {\n    padding: 1rem !important;\n  }\n  .p-sm-4 {\n    padding: 2rem !important;\n  }\n  .p-sm-5 {\n    padding: 4rem !important;\n  }\n  .px-sm-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-sm-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-sm-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-sm-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-sm-4 {\n    padding-right: 2rem !important;\n    padding-left: 2rem !important;\n  }\n  .px-sm-5 {\n    padding-right: 4rem !important;\n    padding-left: 4rem !important;\n  }\n  .py-sm-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-sm-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-sm-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-sm-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-sm-4 {\n    padding-top: 2rem !important;\n    padding-bottom: 2rem !important;\n  }\n  .py-sm-5 {\n    padding-top: 4rem !important;\n    padding-bottom: 4rem !important;\n  }\n  .pt-sm-0 {\n    padding-top: 0 !important;\n  }\n  .pt-sm-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-sm-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-sm-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-sm-4 {\n    padding-top: 2rem !important;\n  }\n  .pt-sm-5 {\n    padding-top: 4rem !important;\n  }\n  .pe-sm-0 {\n    padding-right: 0 !important;\n  }\n  .pe-sm-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-sm-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-sm-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-sm-4 {\n    padding-right: 2rem !important;\n  }\n  .pe-sm-5 {\n    padding-right: 4rem !important;\n  }\n  .pb-sm-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-sm-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-sm-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-sm-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-sm-4 {\n    padding-bottom: 2rem !important;\n  }\n  .pb-sm-5 {\n    padding-bottom: 4rem !important;\n  }\n  .ps-sm-0 {\n    padding-left: 0 !important;\n  }\n  .ps-sm-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-sm-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-sm-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-sm-4 {\n    padding-left: 2rem !important;\n  }\n  .ps-sm-5 {\n    padding-left: 4rem !important;\n  }\n  .gap-sm-0 {\n    gap: 0 !important;\n  }\n  .gap-sm-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-sm-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-sm-3 {\n    gap: 1rem !important;\n  }\n  .gap-sm-4 {\n    gap: 2rem !important;\n  }\n  .gap-sm-5 {\n    gap: 4rem !important;\n  }\n  .text-sm-start {\n    text-align: left !important;\n  }\n  .text-sm-end {\n    text-align: right !important;\n  }\n  .text-sm-center {\n    text-align: center !important;\n  }\n  .columns-sm-2 {\n    -moz-columns: 2 !important;\n         columns: 2 !important;\n  }\n  .columns-sm-3 {\n    -moz-columns: 3 !important;\n         columns: 3 !important;\n  }\n  .columns-sm-4 {\n    -moz-columns: 4 !important;\n         columns: 4 !important;\n  }\n}\n@media (min-width: 768px) {\n  .float-md-start {\n    float: left !important;\n  }\n  .float-md-end {\n    float: right !important;\n  }\n  .float-md-none {\n    float: none !important;\n  }\n  .d-md-inline {\n    display: inline !important;\n  }\n  .d-md-inline-block {\n    display: inline-block !important;\n  }\n  .d-md-block {\n    display: block !important;\n  }\n  .d-md-grid {\n    display: grid !important;\n  }\n  .d-md-table {\n    display: table !important;\n  }\n  .d-md-table-row {\n    display: table-row !important;\n  }\n  .d-md-table-cell {\n    display: table-cell !important;\n  }\n  .d-md-flex {\n    display: flex !important;\n  }\n  .d-md-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-md-none {\n    display: none !important;\n  }\n  .flex-md-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-md-row {\n    flex-direction: row !important;\n  }\n  .flex-md-column {\n    flex-direction: column !important;\n  }\n  .flex-md-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-md-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-md-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-md-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-md-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-md-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-md-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-md-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-md-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-md-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-md-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-md-center {\n    justify-content: center !important;\n  }\n  .justify-content-md-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-md-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-md-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-md-start {\n    align-items: flex-start !important;\n  }\n  .align-items-md-end {\n    align-items: flex-end !important;\n  }\n  .align-items-md-center {\n    align-items: center !important;\n  }\n  .align-items-md-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-md-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-md-start {\n    align-content: flex-start !important;\n  }\n  .align-content-md-end {\n    align-content: flex-end !important;\n  }\n  .align-content-md-center {\n    align-content: center !important;\n  }\n  .align-content-md-between {\n    align-content: space-between !important;\n  }\n  .align-content-md-around {\n    align-content: space-around !important;\n  }\n  .align-content-md-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-md-auto {\n    align-self: auto !important;\n  }\n  .align-self-md-start {\n    align-self: flex-start !important;\n  }\n  .align-self-md-end {\n    align-self: flex-end !important;\n  }\n  .align-self-md-center {\n    align-self: center !important;\n  }\n  .align-self-md-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-md-stretch {\n    align-self: stretch !important;\n  }\n  .order-md-first {\n    order: -1 !important;\n  }\n  .order-md-0 {\n    order: 0 !important;\n  }\n  .order-md-1 {\n    order: 1 !important;\n  }\n  .order-md-2 {\n    order: 2 !important;\n  }\n  .order-md-3 {\n    order: 3 !important;\n  }\n  .order-md-4 {\n    order: 4 !important;\n  }\n  .order-md-5 {\n    order: 5 !important;\n  }\n  .order-md-last {\n    order: 6 !important;\n  }\n  .m-md-0 {\n    margin: 0 !important;\n  }\n  .m-md-1 {\n    margin: 0.25rem !important;\n  }\n  .m-md-2 {\n    margin: 0.5rem !important;\n  }\n  .m-md-3 {\n    margin: 1rem !important;\n  }\n  .m-md-4 {\n    margin: 2rem !important;\n  }\n  .m-md-5 {\n    margin: 4rem !important;\n  }\n  .m-md-auto {\n    margin: auto !important;\n  }\n  .mx-md-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-md-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-md-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-md-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-md-4 {\n    margin-right: 2rem !important;\n    margin-left: 2rem !important;\n  }\n  .mx-md-5 {\n    margin-right: 4rem !important;\n    margin-left: 4rem !important;\n  }\n  .mx-md-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-md-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-md-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-md-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-md-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-md-4 {\n    margin-top: 2rem !important;\n    margin-bottom: 2rem !important;\n  }\n  .my-md-5 {\n    margin-top: 4rem !important;\n    margin-bottom: 4rem !important;\n  }\n  .my-md-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-md-0 {\n    margin-top: 0 !important;\n  }\n  .mt-md-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-md-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-md-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-md-4 {\n    margin-top: 2rem !important;\n  }\n  .mt-md-5 {\n    margin-top: 4rem !important;\n  }\n  .mt-md-auto {\n    margin-top: auto !important;\n  }\n  .me-md-0 {\n    margin-right: 0 !important;\n  }\n  .me-md-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-md-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-md-3 {\n    margin-right: 1rem !important;\n  }\n  .me-md-4 {\n    margin-right: 2rem !important;\n  }\n  .me-md-5 {\n    margin-right: 4rem !important;\n  }\n  .me-md-auto {\n    margin-right: auto !important;\n  }\n  .mb-md-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-md-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-md-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-md-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-md-4 {\n    margin-bottom: 2rem !important;\n  }\n  .mb-md-5 {\n    margin-bottom: 4rem !important;\n  }\n  .mb-md-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-md-0 {\n    margin-left: 0 !important;\n  }\n  .ms-md-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-md-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-md-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-md-4 {\n    margin-left: 2rem !important;\n  }\n  .ms-md-5 {\n    margin-left: 4rem !important;\n  }\n  .ms-md-auto {\n    margin-left: auto !important;\n  }\n  .p-md-0 {\n    padding: 0 !important;\n  }\n  .p-md-1 {\n    padding: 0.25rem !important;\n  }\n  .p-md-2 {\n    padding: 0.5rem !important;\n  }\n  .p-md-3 {\n    padding: 1rem !important;\n  }\n  .p-md-4 {\n    padding: 2rem !important;\n  }\n  .p-md-5 {\n    padding: 4rem !important;\n  }\n  .px-md-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-md-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-md-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-md-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-md-4 {\n    padding-right: 2rem !important;\n    padding-left: 2rem !important;\n  }\n  .px-md-5 {\n    padding-right: 4rem !important;\n    padding-left: 4rem !important;\n  }\n  .py-md-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-md-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-md-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-md-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-md-4 {\n    padding-top: 2rem !important;\n    padding-bottom: 2rem !important;\n  }\n  .py-md-5 {\n    padding-top: 4rem !important;\n    padding-bottom: 4rem !important;\n  }\n  .pt-md-0 {\n    padding-top: 0 !important;\n  }\n  .pt-md-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-md-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-md-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-md-4 {\n    padding-top: 2rem !important;\n  }\n  .pt-md-5 {\n    padding-top: 4rem !important;\n  }\n  .pe-md-0 {\n    padding-right: 0 !important;\n  }\n  .pe-md-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-md-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-md-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-md-4 {\n    padding-right: 2rem !important;\n  }\n  .pe-md-5 {\n    padding-right: 4rem !important;\n  }\n  .pb-md-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-md-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-md-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-md-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-md-4 {\n    padding-bottom: 2rem !important;\n  }\n  .pb-md-5 {\n    padding-bottom: 4rem !important;\n  }\n  .ps-md-0 {\n    padding-left: 0 !important;\n  }\n  .ps-md-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-md-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-md-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-md-4 {\n    padding-left: 2rem !important;\n  }\n  .ps-md-5 {\n    padding-left: 4rem !important;\n  }\n  .gap-md-0 {\n    gap: 0 !important;\n  }\n  .gap-md-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-md-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-md-3 {\n    gap: 1rem !important;\n  }\n  .gap-md-4 {\n    gap: 2rem !important;\n  }\n  .gap-md-5 {\n    gap: 4rem !important;\n  }\n  .text-md-start {\n    text-align: left !important;\n  }\n  .text-md-end {\n    text-align: right !important;\n  }\n  .text-md-center {\n    text-align: center !important;\n  }\n  .columns-md-2 {\n    -moz-columns: 2 !important;\n         columns: 2 !important;\n  }\n  .columns-md-3 {\n    -moz-columns: 3 !important;\n         columns: 3 !important;\n  }\n  .columns-md-4 {\n    -moz-columns: 4 !important;\n         columns: 4 !important;\n  }\n}\n@media (min-width: 992px) {\n  .float-lg-start {\n    float: left !important;\n  }\n  .float-lg-end {\n    float: right !important;\n  }\n  .float-lg-none {\n    float: none !important;\n  }\n  .d-lg-inline {\n    display: inline !important;\n  }\n  .d-lg-inline-block {\n    display: inline-block !important;\n  }\n  .d-lg-block {\n    display: block !important;\n  }\n  .d-lg-grid {\n    display: grid !important;\n  }\n  .d-lg-table {\n    display: table !important;\n  }\n  .d-lg-table-row {\n    display: table-row !important;\n  }\n  .d-lg-table-cell {\n    display: table-cell !important;\n  }\n  .d-lg-flex {\n    display: flex !important;\n  }\n  .d-lg-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-lg-none {\n    display: none !important;\n  }\n  .flex-lg-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-lg-row {\n    flex-direction: row !important;\n  }\n  .flex-lg-column {\n    flex-direction: column !important;\n  }\n  .flex-lg-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-lg-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-lg-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-lg-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-lg-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-lg-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-lg-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-lg-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-lg-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-lg-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-lg-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-lg-center {\n    justify-content: center !important;\n  }\n  .justify-content-lg-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-lg-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-lg-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-lg-start {\n    align-items: flex-start !important;\n  }\n  .align-items-lg-end {\n    align-items: flex-end !important;\n  }\n  .align-items-lg-center {\n    align-items: center !important;\n  }\n  .align-items-lg-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-lg-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-lg-start {\n    align-content: flex-start !important;\n  }\n  .align-content-lg-end {\n    align-content: flex-end !important;\n  }\n  .align-content-lg-center {\n    align-content: center !important;\n  }\n  .align-content-lg-between {\n    align-content: space-between !important;\n  }\n  .align-content-lg-around {\n    align-content: space-around !important;\n  }\n  .align-content-lg-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-lg-auto {\n    align-self: auto !important;\n  }\n  .align-self-lg-start {\n    align-self: flex-start !important;\n  }\n  .align-self-lg-end {\n    align-self: flex-end !important;\n  }\n  .align-self-lg-center {\n    align-self: center !important;\n  }\n  .align-self-lg-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-lg-stretch {\n    align-self: stretch !important;\n  }\n  .order-lg-first {\n    order: -1 !important;\n  }\n  .order-lg-0 {\n    order: 0 !important;\n  }\n  .order-lg-1 {\n    order: 1 !important;\n  }\n  .order-lg-2 {\n    order: 2 !important;\n  }\n  .order-lg-3 {\n    order: 3 !important;\n  }\n  .order-lg-4 {\n    order: 4 !important;\n  }\n  .order-lg-5 {\n    order: 5 !important;\n  }\n  .order-lg-last {\n    order: 6 !important;\n  }\n  .m-lg-0 {\n    margin: 0 !important;\n  }\n  .m-lg-1 {\n    margin: 0.25rem !important;\n  }\n  .m-lg-2 {\n    margin: 0.5rem !important;\n  }\n  .m-lg-3 {\n    margin: 1rem !important;\n  }\n  .m-lg-4 {\n    margin: 2rem !important;\n  }\n  .m-lg-5 {\n    margin: 4rem !important;\n  }\n  .m-lg-auto {\n    margin: auto !important;\n  }\n  .mx-lg-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-lg-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-lg-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-lg-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-lg-4 {\n    margin-right: 2rem !important;\n    margin-left: 2rem !important;\n  }\n  .mx-lg-5 {\n    margin-right: 4rem !important;\n    margin-left: 4rem !important;\n  }\n  .mx-lg-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-lg-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-lg-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-lg-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-lg-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-lg-4 {\n    margin-top: 2rem !important;\n    margin-bottom: 2rem !important;\n  }\n  .my-lg-5 {\n    margin-top: 4rem !important;\n    margin-bottom: 4rem !important;\n  }\n  .my-lg-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-lg-0 {\n    margin-top: 0 !important;\n  }\n  .mt-lg-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-lg-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-lg-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-lg-4 {\n    margin-top: 2rem !important;\n  }\n  .mt-lg-5 {\n    margin-top: 4rem !important;\n  }\n  .mt-lg-auto {\n    margin-top: auto !important;\n  }\n  .me-lg-0 {\n    margin-right: 0 !important;\n  }\n  .me-lg-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-lg-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-lg-3 {\n    margin-right: 1rem !important;\n  }\n  .me-lg-4 {\n    margin-right: 2rem !important;\n  }\n  .me-lg-5 {\n    margin-right: 4rem !important;\n  }\n  .me-lg-auto {\n    margin-right: auto !important;\n  }\n  .mb-lg-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-lg-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-lg-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-lg-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-lg-4 {\n    margin-bottom: 2rem !important;\n  }\n  .mb-lg-5 {\n    margin-bottom: 4rem !important;\n  }\n  .mb-lg-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-lg-0 {\n    margin-left: 0 !important;\n  }\n  .ms-lg-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-lg-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-lg-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-lg-4 {\n    margin-left: 2rem !important;\n  }\n  .ms-lg-5 {\n    margin-left: 4rem !important;\n  }\n  .ms-lg-auto {\n    margin-left: auto !important;\n  }\n  .p-lg-0 {\n    padding: 0 !important;\n  }\n  .p-lg-1 {\n    padding: 0.25rem !important;\n  }\n  .p-lg-2 {\n    padding: 0.5rem !important;\n  }\n  .p-lg-3 {\n    padding: 1rem !important;\n  }\n  .p-lg-4 {\n    padding: 2rem !important;\n  }\n  .p-lg-5 {\n    padding: 4rem !important;\n  }\n  .px-lg-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-lg-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-lg-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-lg-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-lg-4 {\n    padding-right: 2rem !important;\n    padding-left: 2rem !important;\n  }\n  .px-lg-5 {\n    padding-right: 4rem !important;\n    padding-left: 4rem !important;\n  }\n  .py-lg-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-lg-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-lg-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-lg-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-lg-4 {\n    padding-top: 2rem !important;\n    padding-bottom: 2rem !important;\n  }\n  .py-lg-5 {\n    padding-top: 4rem !important;\n    padding-bottom: 4rem !important;\n  }\n  .pt-lg-0 {\n    padding-top: 0 !important;\n  }\n  .pt-lg-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-lg-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-lg-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-lg-4 {\n    padding-top: 2rem !important;\n  }\n  .pt-lg-5 {\n    padding-top: 4rem !important;\n  }\n  .pe-lg-0 {\n    padding-right: 0 !important;\n  }\n  .pe-lg-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-lg-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-lg-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-lg-4 {\n    padding-right: 2rem !important;\n  }\n  .pe-lg-5 {\n    padding-right: 4rem !important;\n  }\n  .pb-lg-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-lg-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-lg-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-lg-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-lg-4 {\n    padding-bottom: 2rem !important;\n  }\n  .pb-lg-5 {\n    padding-bottom: 4rem !important;\n  }\n  .ps-lg-0 {\n    padding-left: 0 !important;\n  }\n  .ps-lg-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-lg-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-lg-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-lg-4 {\n    padding-left: 2rem !important;\n  }\n  .ps-lg-5 {\n    padding-left: 4rem !important;\n  }\n  .gap-lg-0 {\n    gap: 0 !important;\n  }\n  .gap-lg-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-lg-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-lg-3 {\n    gap: 1rem !important;\n  }\n  .gap-lg-4 {\n    gap: 2rem !important;\n  }\n  .gap-lg-5 {\n    gap: 4rem !important;\n  }\n  .text-lg-start {\n    text-align: left !important;\n  }\n  .text-lg-end {\n    text-align: right !important;\n  }\n  .text-lg-center {\n    text-align: center !important;\n  }\n  .columns-lg-2 {\n    -moz-columns: 2 !important;\n         columns: 2 !important;\n  }\n  .columns-lg-3 {\n    -moz-columns: 3 !important;\n         columns: 3 !important;\n  }\n  .columns-lg-4 {\n    -moz-columns: 4 !important;\n         columns: 4 !important;\n  }\n}\n@media (min-width: 1200px) {\n  .float-xl-start {\n    float: left !important;\n  }\n  .float-xl-end {\n    float: right !important;\n  }\n  .float-xl-none {\n    float: none !important;\n  }\n  .d-xl-inline {\n    display: inline !important;\n  }\n  .d-xl-inline-block {\n    display: inline-block !important;\n  }\n  .d-xl-block {\n    display: block !important;\n  }\n  .d-xl-grid {\n    display: grid !important;\n  }\n  .d-xl-table {\n    display: table !important;\n  }\n  .d-xl-table-row {\n    display: table-row !important;\n  }\n  .d-xl-table-cell {\n    display: table-cell !important;\n  }\n  .d-xl-flex {\n    display: flex !important;\n  }\n  .d-xl-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-xl-none {\n    display: none !important;\n  }\n  .flex-xl-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-xl-row {\n    flex-direction: row !important;\n  }\n  .flex-xl-column {\n    flex-direction: column !important;\n  }\n  .flex-xl-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-xl-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-xl-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-xl-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-xl-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-xl-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-xl-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-xl-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-xl-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-xl-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-xl-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-xl-center {\n    justify-content: center !important;\n  }\n  .justify-content-xl-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-xl-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-xl-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-xl-start {\n    align-items: flex-start !important;\n  }\n  .align-items-xl-end {\n    align-items: flex-end !important;\n  }\n  .align-items-xl-center {\n    align-items: center !important;\n  }\n  .align-items-xl-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-xl-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-xl-start {\n    align-content: flex-start !important;\n  }\n  .align-content-xl-end {\n    align-content: flex-end !important;\n  }\n  .align-content-xl-center {\n    align-content: center !important;\n  }\n  .align-content-xl-between {\n    align-content: space-between !important;\n  }\n  .align-content-xl-around {\n    align-content: space-around !important;\n  }\n  .align-content-xl-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-xl-auto {\n    align-self: auto !important;\n  }\n  .align-self-xl-start {\n    align-self: flex-start !important;\n  }\n  .align-self-xl-end {\n    align-self: flex-end !important;\n  }\n  .align-self-xl-center {\n    align-self: center !important;\n  }\n  .align-self-xl-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-xl-stretch {\n    align-self: stretch !important;\n  }\n  .order-xl-first {\n    order: -1 !important;\n  }\n  .order-xl-0 {\n    order: 0 !important;\n  }\n  .order-xl-1 {\n    order: 1 !important;\n  }\n  .order-xl-2 {\n    order: 2 !important;\n  }\n  .order-xl-3 {\n    order: 3 !important;\n  }\n  .order-xl-4 {\n    order: 4 !important;\n  }\n  .order-xl-5 {\n    order: 5 !important;\n  }\n  .order-xl-last {\n    order: 6 !important;\n  }\n  .m-xl-0 {\n    margin: 0 !important;\n  }\n  .m-xl-1 {\n    margin: 0.25rem !important;\n  }\n  .m-xl-2 {\n    margin: 0.5rem !important;\n  }\n  .m-xl-3 {\n    margin: 1rem !important;\n  }\n  .m-xl-4 {\n    margin: 2rem !important;\n  }\n  .m-xl-5 {\n    margin: 4rem !important;\n  }\n  .m-xl-auto {\n    margin: auto !important;\n  }\n  .mx-xl-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-xl-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-xl-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-xl-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-xl-4 {\n    margin-right: 2rem !important;\n    margin-left: 2rem !important;\n  }\n  .mx-xl-5 {\n    margin-right: 4rem !important;\n    margin-left: 4rem !important;\n  }\n  .mx-xl-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-xl-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-xl-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-xl-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-xl-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-xl-4 {\n    margin-top: 2rem !important;\n    margin-bottom: 2rem !important;\n  }\n  .my-xl-5 {\n    margin-top: 4rem !important;\n    margin-bottom: 4rem !important;\n  }\n  .my-xl-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-xl-0 {\n    margin-top: 0 !important;\n  }\n  .mt-xl-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-xl-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-xl-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-xl-4 {\n    margin-top: 2rem !important;\n  }\n  .mt-xl-5 {\n    margin-top: 4rem !important;\n  }\n  .mt-xl-auto {\n    margin-top: auto !important;\n  }\n  .me-xl-0 {\n    margin-right: 0 !important;\n  }\n  .me-xl-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-xl-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-xl-3 {\n    margin-right: 1rem !important;\n  }\n  .me-xl-4 {\n    margin-right: 2rem !important;\n  }\n  .me-xl-5 {\n    margin-right: 4rem !important;\n  }\n  .me-xl-auto {\n    margin-right: auto !important;\n  }\n  .mb-xl-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-xl-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-xl-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-xl-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-xl-4 {\n    margin-bottom: 2rem !important;\n  }\n  .mb-xl-5 {\n    margin-bottom: 4rem !important;\n  }\n  .mb-xl-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-xl-0 {\n    margin-left: 0 !important;\n  }\n  .ms-xl-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-xl-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-xl-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-xl-4 {\n    margin-left: 2rem !important;\n  }\n  .ms-xl-5 {\n    margin-left: 4rem !important;\n  }\n  .ms-xl-auto {\n    margin-left: auto !important;\n  }\n  .p-xl-0 {\n    padding: 0 !important;\n  }\n  .p-xl-1 {\n    padding: 0.25rem !important;\n  }\n  .p-xl-2 {\n    padding: 0.5rem !important;\n  }\n  .p-xl-3 {\n    padding: 1rem !important;\n  }\n  .p-xl-4 {\n    padding: 2rem !important;\n  }\n  .p-xl-5 {\n    padding: 4rem !important;\n  }\n  .px-xl-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-xl-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-xl-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-xl-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-xl-4 {\n    padding-right: 2rem !important;\n    padding-left: 2rem !important;\n  }\n  .px-xl-5 {\n    padding-right: 4rem !important;\n    padding-left: 4rem !important;\n  }\n  .py-xl-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-xl-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-xl-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-xl-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-xl-4 {\n    padding-top: 2rem !important;\n    padding-bottom: 2rem !important;\n  }\n  .py-xl-5 {\n    padding-top: 4rem !important;\n    padding-bottom: 4rem !important;\n  }\n  .pt-xl-0 {\n    padding-top: 0 !important;\n  }\n  .pt-xl-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-xl-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-xl-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-xl-4 {\n    padding-top: 2rem !important;\n  }\n  .pt-xl-5 {\n    padding-top: 4rem !important;\n  }\n  .pe-xl-0 {\n    padding-right: 0 !important;\n  }\n  .pe-xl-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-xl-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-xl-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-xl-4 {\n    padding-right: 2rem !important;\n  }\n  .pe-xl-5 {\n    padding-right: 4rem !important;\n  }\n  .pb-xl-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-xl-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-xl-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-xl-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-xl-4 {\n    padding-bottom: 2rem !important;\n  }\n  .pb-xl-5 {\n    padding-bottom: 4rem !important;\n  }\n  .ps-xl-0 {\n    padding-left: 0 !important;\n  }\n  .ps-xl-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-xl-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-xl-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-xl-4 {\n    padding-left: 2rem !important;\n  }\n  .ps-xl-5 {\n    padding-left: 4rem !important;\n  }\n  .gap-xl-0 {\n    gap: 0 !important;\n  }\n  .gap-xl-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-xl-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-xl-3 {\n    gap: 1rem !important;\n  }\n  .gap-xl-4 {\n    gap: 2rem !important;\n  }\n  .gap-xl-5 {\n    gap: 4rem !important;\n  }\n  .text-xl-start {\n    text-align: left !important;\n  }\n  .text-xl-end {\n    text-align: right !important;\n  }\n  .text-xl-center {\n    text-align: center !important;\n  }\n  .columns-xl-2 {\n    -moz-columns: 2 !important;\n         columns: 2 !important;\n  }\n  .columns-xl-3 {\n    -moz-columns: 3 !important;\n         columns: 3 !important;\n  }\n  .columns-xl-4 {\n    -moz-columns: 4 !important;\n         columns: 4 !important;\n  }\n}\n@media (min-width: 1400px) {\n  .float-xxl-start {\n    float: left !important;\n  }\n  .float-xxl-end {\n    float: right !important;\n  }\n  .float-xxl-none {\n    float: none !important;\n  }\n  .d-xxl-inline {\n    display: inline !important;\n  }\n  .d-xxl-inline-block {\n    display: inline-block !important;\n  }\n  .d-xxl-block {\n    display: block !important;\n  }\n  .d-xxl-grid {\n    display: grid !important;\n  }\n  .d-xxl-table {\n    display: table !important;\n  }\n  .d-xxl-table-row {\n    display: table-row !important;\n  }\n  .d-xxl-table-cell {\n    display: table-cell !important;\n  }\n  .d-xxl-flex {\n    display: flex !important;\n  }\n  .d-xxl-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-xxl-none {\n    display: none !important;\n  }\n  .flex-xxl-fill {\n    flex: 1 1 auto !important;\n  }\n  .flex-xxl-row {\n    flex-direction: row !important;\n  }\n  .flex-xxl-column {\n    flex-direction: column !important;\n  }\n  .flex-xxl-row-reverse {\n    flex-direction: row-reverse !important;\n  }\n  .flex-xxl-column-reverse {\n    flex-direction: column-reverse !important;\n  }\n  .flex-xxl-grow-0 {\n    flex-grow: 0 !important;\n  }\n  .flex-xxl-grow-1 {\n    flex-grow: 1 !important;\n  }\n  .flex-xxl-shrink-0 {\n    flex-shrink: 0 !important;\n  }\n  .flex-xxl-shrink-1 {\n    flex-shrink: 1 !important;\n  }\n  .flex-xxl-wrap {\n    flex-wrap: wrap !important;\n  }\n  .flex-xxl-nowrap {\n    flex-wrap: nowrap !important;\n  }\n  .flex-xxl-wrap-reverse {\n    flex-wrap: wrap-reverse !important;\n  }\n  .justify-content-xxl-start {\n    justify-content: flex-start !important;\n  }\n  .justify-content-xxl-end {\n    justify-content: flex-end !important;\n  }\n  .justify-content-xxl-center {\n    justify-content: center !important;\n  }\n  .justify-content-xxl-between {\n    justify-content: space-between !important;\n  }\n  .justify-content-xxl-around {\n    justify-content: space-around !important;\n  }\n  .justify-content-xxl-evenly {\n    justify-content: space-evenly !important;\n  }\n  .align-items-xxl-start {\n    align-items: flex-start !important;\n  }\n  .align-items-xxl-end {\n    align-items: flex-end !important;\n  }\n  .align-items-xxl-center {\n    align-items: center !important;\n  }\n  .align-items-xxl-baseline {\n    align-items: baseline !important;\n  }\n  .align-items-xxl-stretch {\n    align-items: stretch !important;\n  }\n  .align-content-xxl-start {\n    align-content: flex-start !important;\n  }\n  .align-content-xxl-end {\n    align-content: flex-end !important;\n  }\n  .align-content-xxl-center {\n    align-content: center !important;\n  }\n  .align-content-xxl-between {\n    align-content: space-between !important;\n  }\n  .align-content-xxl-around {\n    align-content: space-around !important;\n  }\n  .align-content-xxl-stretch {\n    align-content: stretch !important;\n  }\n  .align-self-xxl-auto {\n    align-self: auto !important;\n  }\n  .align-self-xxl-start {\n    align-self: flex-start !important;\n  }\n  .align-self-xxl-end {\n    align-self: flex-end !important;\n  }\n  .align-self-xxl-center {\n    align-self: center !important;\n  }\n  .align-self-xxl-baseline {\n    align-self: baseline !important;\n  }\n  .align-self-xxl-stretch {\n    align-self: stretch !important;\n  }\n  .order-xxl-first {\n    order: -1 !important;\n  }\n  .order-xxl-0 {\n    order: 0 !important;\n  }\n  .order-xxl-1 {\n    order: 1 !important;\n  }\n  .order-xxl-2 {\n    order: 2 !important;\n  }\n  .order-xxl-3 {\n    order: 3 !important;\n  }\n  .order-xxl-4 {\n    order: 4 !important;\n  }\n  .order-xxl-5 {\n    order: 5 !important;\n  }\n  .order-xxl-last {\n    order: 6 !important;\n  }\n  .m-xxl-0 {\n    margin: 0 !important;\n  }\n  .m-xxl-1 {\n    margin: 0.25rem !important;\n  }\n  .m-xxl-2 {\n    margin: 0.5rem !important;\n  }\n  .m-xxl-3 {\n    margin: 1rem !important;\n  }\n  .m-xxl-4 {\n    margin: 2rem !important;\n  }\n  .m-xxl-5 {\n    margin: 4rem !important;\n  }\n  .m-xxl-auto {\n    margin: auto !important;\n  }\n  .mx-xxl-0 {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .mx-xxl-1 {\n    margin-right: 0.25rem !important;\n    margin-left: 0.25rem !important;\n  }\n  .mx-xxl-2 {\n    margin-right: 0.5rem !important;\n    margin-left: 0.5rem !important;\n  }\n  .mx-xxl-3 {\n    margin-right: 1rem !important;\n    margin-left: 1rem !important;\n  }\n  .mx-xxl-4 {\n    margin-right: 2rem !important;\n    margin-left: 2rem !important;\n  }\n  .mx-xxl-5 {\n    margin-right: 4rem !important;\n    margin-left: 4rem !important;\n  }\n  .mx-xxl-auto {\n    margin-right: auto !important;\n    margin-left: auto !important;\n  }\n  .my-xxl-0 {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .my-xxl-1 {\n    margin-top: 0.25rem !important;\n    margin-bottom: 0.25rem !important;\n  }\n  .my-xxl-2 {\n    margin-top: 0.5rem !important;\n    margin-bottom: 0.5rem !important;\n  }\n  .my-xxl-3 {\n    margin-top: 1rem !important;\n    margin-bottom: 1rem !important;\n  }\n  .my-xxl-4 {\n    margin-top: 2rem !important;\n    margin-bottom: 2rem !important;\n  }\n  .my-xxl-5 {\n    margin-top: 4rem !important;\n    margin-bottom: 4rem !important;\n  }\n  .my-xxl-auto {\n    margin-top: auto !important;\n    margin-bottom: auto !important;\n  }\n  .mt-xxl-0 {\n    margin-top: 0 !important;\n  }\n  .mt-xxl-1 {\n    margin-top: 0.25rem !important;\n  }\n  .mt-xxl-2 {\n    margin-top: 0.5rem !important;\n  }\n  .mt-xxl-3 {\n    margin-top: 1rem !important;\n  }\n  .mt-xxl-4 {\n    margin-top: 2rem !important;\n  }\n  .mt-xxl-5 {\n    margin-top: 4rem !important;\n  }\n  .mt-xxl-auto {\n    margin-top: auto !important;\n  }\n  .me-xxl-0 {\n    margin-right: 0 !important;\n  }\n  .me-xxl-1 {\n    margin-right: 0.25rem !important;\n  }\n  .me-xxl-2 {\n    margin-right: 0.5rem !important;\n  }\n  .me-xxl-3 {\n    margin-right: 1rem !important;\n  }\n  .me-xxl-4 {\n    margin-right: 2rem !important;\n  }\n  .me-xxl-5 {\n    margin-right: 4rem !important;\n  }\n  .me-xxl-auto {\n    margin-right: auto !important;\n  }\n  .mb-xxl-0 {\n    margin-bottom: 0 !important;\n  }\n  .mb-xxl-1 {\n    margin-bottom: 0.25rem !important;\n  }\n  .mb-xxl-2 {\n    margin-bottom: 0.5rem !important;\n  }\n  .mb-xxl-3 {\n    margin-bottom: 1rem !important;\n  }\n  .mb-xxl-4 {\n    margin-bottom: 2rem !important;\n  }\n  .mb-xxl-5 {\n    margin-bottom: 4rem !important;\n  }\n  .mb-xxl-auto {\n    margin-bottom: auto !important;\n  }\n  .ms-xxl-0 {\n    margin-left: 0 !important;\n  }\n  .ms-xxl-1 {\n    margin-left: 0.25rem !important;\n  }\n  .ms-xxl-2 {\n    margin-left: 0.5rem !important;\n  }\n  .ms-xxl-3 {\n    margin-left: 1rem !important;\n  }\n  .ms-xxl-4 {\n    margin-left: 2rem !important;\n  }\n  .ms-xxl-5 {\n    margin-left: 4rem !important;\n  }\n  .ms-xxl-auto {\n    margin-left: auto !important;\n  }\n  .p-xxl-0 {\n    padding: 0 !important;\n  }\n  .p-xxl-1 {\n    padding: 0.25rem !important;\n  }\n  .p-xxl-2 {\n    padding: 0.5rem !important;\n  }\n  .p-xxl-3 {\n    padding: 1rem !important;\n  }\n  .p-xxl-4 {\n    padding: 2rem !important;\n  }\n  .p-xxl-5 {\n    padding: 4rem !important;\n  }\n  .px-xxl-0 {\n    padding-right: 0 !important;\n    padding-left: 0 !important;\n  }\n  .px-xxl-1 {\n    padding-right: 0.25rem !important;\n    padding-left: 0.25rem !important;\n  }\n  .px-xxl-2 {\n    padding-right: 0.5rem !important;\n    padding-left: 0.5rem !important;\n  }\n  .px-xxl-3 {\n    padding-right: 1rem !important;\n    padding-left: 1rem !important;\n  }\n  .px-xxl-4 {\n    padding-right: 2rem !important;\n    padding-left: 2rem !important;\n  }\n  .px-xxl-5 {\n    padding-right: 4rem !important;\n    padding-left: 4rem !important;\n  }\n  .py-xxl-0 {\n    padding-top: 0 !important;\n    padding-bottom: 0 !important;\n  }\n  .py-xxl-1 {\n    padding-top: 0.25rem !important;\n    padding-bottom: 0.25rem !important;\n  }\n  .py-xxl-2 {\n    padding-top: 0.5rem !important;\n    padding-bottom: 0.5rem !important;\n  }\n  .py-xxl-3 {\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n  }\n  .py-xxl-4 {\n    padding-top: 2rem !important;\n    padding-bottom: 2rem !important;\n  }\n  .py-xxl-5 {\n    padding-top: 4rem !important;\n    padding-bottom: 4rem !important;\n  }\n  .pt-xxl-0 {\n    padding-top: 0 !important;\n  }\n  .pt-xxl-1 {\n    padding-top: 0.25rem !important;\n  }\n  .pt-xxl-2 {\n    padding-top: 0.5rem !important;\n  }\n  .pt-xxl-3 {\n    padding-top: 1rem !important;\n  }\n  .pt-xxl-4 {\n    padding-top: 2rem !important;\n  }\n  .pt-xxl-5 {\n    padding-top: 4rem !important;\n  }\n  .pe-xxl-0 {\n    padding-right: 0 !important;\n  }\n  .pe-xxl-1 {\n    padding-right: 0.25rem !important;\n  }\n  .pe-xxl-2 {\n    padding-right: 0.5rem !important;\n  }\n  .pe-xxl-3 {\n    padding-right: 1rem !important;\n  }\n  .pe-xxl-4 {\n    padding-right: 2rem !important;\n  }\n  .pe-xxl-5 {\n    padding-right: 4rem !important;\n  }\n  .pb-xxl-0 {\n    padding-bottom: 0 !important;\n  }\n  .pb-xxl-1 {\n    padding-bottom: 0.25rem !important;\n  }\n  .pb-xxl-2 {\n    padding-bottom: 0.5rem !important;\n  }\n  .pb-xxl-3 {\n    padding-bottom: 1rem !important;\n  }\n  .pb-xxl-4 {\n    padding-bottom: 2rem !important;\n  }\n  .pb-xxl-5 {\n    padding-bottom: 4rem !important;\n  }\n  .ps-xxl-0 {\n    padding-left: 0 !important;\n  }\n  .ps-xxl-1 {\n    padding-left: 0.25rem !important;\n  }\n  .ps-xxl-2 {\n    padding-left: 0.5rem !important;\n  }\n  .ps-xxl-3 {\n    padding-left: 1rem !important;\n  }\n  .ps-xxl-4 {\n    padding-left: 2rem !important;\n  }\n  .ps-xxl-5 {\n    padding-left: 4rem !important;\n  }\n  .gap-xxl-0 {\n    gap: 0 !important;\n  }\n  .gap-xxl-1 {\n    gap: 0.25rem !important;\n  }\n  .gap-xxl-2 {\n    gap: 0.5rem !important;\n  }\n  .gap-xxl-3 {\n    gap: 1rem !important;\n  }\n  .gap-xxl-4 {\n    gap: 2rem !important;\n  }\n  .gap-xxl-5 {\n    gap: 4rem !important;\n  }\n  .text-xxl-start {\n    text-align: left !important;\n  }\n  .text-xxl-end {\n    text-align: right !important;\n  }\n  .text-xxl-center {\n    text-align: center !important;\n  }\n  .columns-xxl-2 {\n    -moz-columns: 2 !important;\n         columns: 2 !important;\n  }\n  .columns-xxl-3 {\n    -moz-columns: 3 !important;\n         columns: 3 !important;\n  }\n  .columns-xxl-4 {\n    -moz-columns: 4 !important;\n         columns: 4 !important;\n  }\n}\n@media print {\n  .d-print-inline {\n    display: inline !important;\n  }\n  .d-print-inline-block {\n    display: inline-block !important;\n  }\n  .d-print-block {\n    display: block !important;\n  }\n  .d-print-grid {\n    display: grid !important;\n  }\n  .d-print-table {\n    display: table !important;\n  }\n  .d-print-table-row {\n    display: table-row !important;\n  }\n  .d-print-table-cell {\n    display: table-cell !important;\n  }\n  .d-print-flex {\n    display: flex !important;\n  }\n  .d-print-inline-flex {\n    display: inline-flex !important;\n  }\n  .d-print-none {\n    display: none !important;\n  }\n}\n:root {\n  font-size: 16px;\n  height: 100%;\n  --tblr-primary: #206bc4;\n  --tblr-secondary: #626976;\n  --tblr-success: #2fb344;\n  --tblr-info: #4299e1;\n  --tblr-warning: #f76707;\n  --tblr-danger: #d63939;\n  --tblr-light: #fafbfc;\n  --tblr-dark: #1e293b;\n  --tblr-muted: #626976;\n  --tblr-blue: #206bc4;\n  --tblr-azure: #4299e1;\n  --tblr-indigo: #4263eb;\n  --tblr-purple: #ae3ec9;\n  --tblr-pink: #d6336c;\n  --tblr-red: #d63939;\n  --tblr-orange: #f76707;\n  --tblr-yellow: #f59f00;\n  --tblr-lime: #74b816;\n  --tblr-green: #2fb344;\n  --tblr-teal: #0ca678;\n  --tblr-cyan: #17a2b8;\n  --tblr-facebook: #3b5998;\n  --tblr-twitter: #1da1f2;\n  --tblr-linkedin: #0a66c2;\n  --tblr-google: #dc4e41;\n  --tblr-youtube: #ff0000;\n  --tblr-vimeo: #1ab7ea;\n  --tblr-dribbble: #ea4c89;\n  --tblr-github: #181717;\n  --tblr-instagram: #e4405f;\n  --tblr-pinterest: #bd081c;\n  --tblr-vk: #6383a8;\n  --tblr-rss: #ffa500;\n  --tblr-flickr: #0063dc;\n  --tblr-bitbucket: #0052cc;\n  --tblr-tabler: #206bc4;\n  --tblr-primary-rgb: 32, 107, 196;\n  --tblr-secondary-rgb: 98, 105, 118;\n  --tblr-success-rgb: 47, 179, 68;\n  --tblr-info-rgb: 66, 153, 225;\n  --tblr-warning-rgb: 247, 103, 7;\n  --tblr-danger-rgb: 214, 57, 57;\n  --tblr-light-rgb: 250, 251, 252;\n  --tblr-dark-rgb: 30, 41, 59;\n  --tblr-muted-rgb: 98, 105, 118;\n  --tblr-blue-rgb: 32, 107, 196;\n  --tblr-azure-rgb: 66, 153, 225;\n  --tblr-indigo-rgb: 66, 99, 235;\n  --tblr-purple-rgb: 174, 62, 201;\n  --tblr-pink-rgb: 214, 51, 108;\n  --tblr-red-rgb: 214, 57, 57;\n  --tblr-orange-rgb: 247, 103, 7;\n  --tblr-yellow-rgb: 245, 159, 0;\n  --tblr-lime-rgb: 116, 184, 22;\n  --tblr-green-rgb: 47, 179, 68;\n  --tblr-teal-rgb: 12, 166, 120;\n  --tblr-cyan-rgb: 23, 162, 184;\n  --tblr-facebook-rgb: 59, 89, 152;\n  --tblr-twitter-rgb: 29, 161, 242;\n  --tblr-linkedin-rgb: 10, 102, 194;\n  --tblr-google-rgb: 220, 78, 65;\n  --tblr-youtube-rgb: 255, 0, 0;\n  --tblr-vimeo-rgb: 26, 183, 234;\n  --tblr-dribbble-rgb: 234, 76, 137;\n  --tblr-github-rgb: 24, 23, 23;\n  --tblr-instagram-rgb: 228, 64, 95;\n  --tblr-pinterest-rgb: 189, 8, 28;\n  --tblr-vk-rgb: 99, 131, 168;\n  --tblr-rss-rgb: 255, 165, 0;\n  --tblr-flickr-rgb: 0, 99, 220;\n  --tblr-bitbucket-rgb: 0, 82, 204;\n  --tblr-tabler-rgb: 32, 107, 196;\n  --tblr-card-bg: #ffffff;\n  --tblr-card-bg-rgb: 255, 255, 255;\n  --tblr-border-color: #e6e7e9;\n  --tblr-border-color-rgb: 230, 231, 233;\n  --tblr-border-color-light: #f2f3f4;\n  --tblr-border-color-light-rgb: 242, 243, 244;\n}\n\nbody {\n  overflow-y: scroll;\n  letter-spacing: 0;\n  touch-action: manipulation;\n  text-rendering: optimizeLegibility;\n  font-feature-settings: \"liga\" 0;\n  position: relative;\n  min-height: 100%;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n@media print {\n  body {\n    background: transparent;\n  }\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  -webkit-transition: background 0.3s;\n  transition: background 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  *::-webkit-scrollbar {\n    -webkit-transition: none;\n    transition: none;\n  }\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  background: rgba(var(--tblr-body-color-rgb), 0.16);\n}\n\n*::-webkit-scrollbar-track {\n  background: rgba(var(--tblr-body-color-rgb), 0.06);\n}\n\n*:hover::-webkit-scrollbar-thumb {\n  background: rgba(var(--tblr-body-color-rgb), 0.32);\n}\n\n*::-webkit-scrollbar-corner {\n  background: transparent;\n}\n\n.layout-fluid .container,\n.layout-fluid [class^=container-],\n.layout-fluid [class*=\" container-\"] {\n  max-width: 100%;\n}\n\n.layout-boxed {\n  --tblr-theme-boxed-border-radius: 0;\n  --tblr-theme-boxed-width: 1320px;\n}\n@media (min-width: 768px) {\n  .layout-boxed {\n    background: #1e293b linear-gradient(to right, rgba(255, 255, 255, 0.1), transparent) fixed;\n    padding: 1rem;\n    --tblr-theme-boxed-border-radius: 4px;\n  }\n}\n.layout-boxed .page {\n  margin: 0 auto;\n  max-width: var(--tblr-theme-boxed-width);\n  border-radius: var(--tblr-theme-boxed-border-radius);\n  color: #1e293b;\n}\n@media (min-width: 768px) {\n  .layout-boxed .page {\n    border: 1px solid var(--tblr-border-color);\n    background: var(--tblr-body-bg);\n  }\n}\n.layout-boxed .page > .navbar:first-child {\n  border-top-left-radius: var(--tblr-theme-boxed-border-radius);\n  border-top-right-radius: var(--tblr-theme-boxed-border-radius);\n}\n\n/**\nNavbar\n */\n.navbar {\n  align-items: stretch;\n  min-height: 3.5rem;\n  background: transparent;\n  color: #1e293b;\n}\n.navbar-collapse .navbar {\n  flex-grow: 1;\n}\n.navbar.collapsing {\n  min-height: 0;\n}\n.navbar::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  -webkit-transition: background 0.3s;\n  transition: background 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .navbar::-webkit-scrollbar {\n    -webkit-transition: none;\n    transition: none;\n  }\n}\n.navbar::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  background: rgba(var(--tblr-body-color-rgb), 0.16);\n}\n.navbar::-webkit-scrollbar-track {\n  background: rgba(var(--tblr-body-color-rgb), 0.06);\n}\n.navbar:hover::-webkit-scrollbar-thumb {\n  background: rgba(var(--tblr-body-color-rgb), 0.32);\n}\n.navbar::-webkit-scrollbar-corner {\n  background: transparent;\n}\n.navbar .navbar-brand {\n  color: #1e293b;\n}\n.navbar .navbar-brand:hover, .navbar .navbar-brand:focus {\n  color: #1e293b;\n  opacity: 0.8;\n}\n.navbar .navbar-nav .nav-link {\n  color: #1e293b;\n}\n.navbar .navbar-nav .nav-link:hover, .navbar .navbar-nav .nav-link:focus {\n  color: #1e293b;\n}\n.navbar .navbar-nav .nav-link.disabled {\n  color: rgba(30, 41, 59, 0.3);\n}\n.navbar .navbar-nav .show > .nav-link,\n.navbar .navbar-nav .active > .nav-link,\n.navbar .navbar-nav .nav-link.show,\n.navbar .navbar-nav .nav-link.active {\n  color: #1e293b;\n}\n.navbar .navbar-toggler {\n  color: #1e293b;\n  border-color: transparent;\n}\n.navbar .navbar-text {\n  color: #1e293b;\n}\n.navbar .navbar-text a,\n.navbar .navbar-text a:hover,\n.navbar .navbar-text a:focus {\n  color: #1e293b;\n}\n@media not print {\n  .theme-dark .navbar {\n    background: #1e293b;\n    color: rgba(255, 255, 255, 0.7);\n  }\n  .theme-dark .navbar::-webkit-scrollbar {\n    width: 6px;\n    height: 6px;\n    -webkit-transition: background 0.3s;\n    transition: background 0.3s;\n  }\n  @media (prefers-reduced-motion: reduce) {\n    .theme-dark .navbar::-webkit-scrollbar {\n      -webkit-transition: none;\n      transition: none;\n    }\n  }\n  .theme-dark .navbar::-webkit-scrollbar-thumb {\n    border-radius: 5px;\n    background: rgba(var(--tblr-body-color-rgb), 0.16);\n  }\n  .theme-dark .navbar::-webkit-scrollbar-track {\n    background: rgba(var(--tblr-body-color-rgb), 0.06);\n  }\n  .theme-dark .navbar:hover::-webkit-scrollbar-thumb {\n    background: rgba(var(--tblr-body-color-rgb), 0.32);\n  }\n  .theme-dark .navbar::-webkit-scrollbar-corner {\n    background: transparent;\n  }\n  .theme-dark .navbar .navbar-brand {\n    color: #ffffff;\n  }\n  .theme-dark .navbar .navbar-brand:hover, .theme-dark .navbar .navbar-brand:focus {\n    color: #ffffff;\n    opacity: 0.8;\n  }\n  .theme-dark .navbar .navbar-nav .nav-link {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  .theme-dark .navbar .navbar-nav .nav-link:hover, .theme-dark .navbar .navbar-nav .nav-link:focus {\n    color: #ffffff;\n  }\n  .theme-dark .navbar .navbar-nav .nav-link.disabled {\n    color: rgba(255, 255, 255, 0.3);\n  }\n  .theme-dark .navbar .navbar-nav .show > .nav-link,\n.theme-dark .navbar .navbar-nav .active > .nav-link,\n.theme-dark .navbar .navbar-nav .nav-link.show,\n.theme-dark .navbar .navbar-nav .nav-link.active {\n    color: #ffffff;\n  }\n  .theme-dark .navbar .navbar-toggler {\n    color: #ffffff;\n    border-color: transparent;\n  }\n  .theme-dark .navbar .navbar-text {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  .theme-dark .navbar .navbar-text a,\n.theme-dark .navbar .navbar-text a:hover,\n.theme-dark .navbar .navbar-text a:focus {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  .theme-dark .navbar::-webkit-scrollbar {\n    width: 6px;\n    height: 6px;\n    -webkit-transition: background 0.3s;\n    transition: background 0.3s;\n  }\n  @media (prefers-reduced-motion: reduce) {\n    .theme-dark .navbar::-webkit-scrollbar {\n      -webkit-transition: none;\n      transition: none;\n    }\n  }\n  .theme-dark .navbar::-webkit-scrollbar-thumb {\n    border-radius: 5px;\n    background: rgba(var(--tblr-body-color-rgb), 0.16);\n  }\n  .theme-dark .navbar::-webkit-scrollbar-track {\n    background: rgba(var(--tblr-body-color-rgb), 0.06);\n  }\n  .theme-dark .navbar:hover::-webkit-scrollbar-thumb {\n    background: rgba(var(--tblr-body-color-rgb), 0.32);\n  }\n  .theme-dark .navbar::-webkit-scrollbar-corner {\n    background: transparent;\n  }\n  .theme-dark .navbar .input-icon-addon {\n    color: rgba(250, 251, 252, 0.64);\n  }\n  .theme-dark .navbar .form-control {\n    border-color: transparent;\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n  .theme-dark .navbar .form-control::-moz-placeholder {\n    color: rgba(250, 251, 252, 0.64);\n  }\n  .theme-dark .navbar .form-control::placeholder {\n    color: rgba(250, 251, 252, 0.64);\n  }\n}\n@media not print {\n  @media (prefers-color-scheme: dark) {\n    .theme-dark-auto .navbar {\n      background: #1e293b;\n      color: rgba(255, 255, 255, 0.7);\n    }\n    .theme-dark-auto .navbar::-webkit-scrollbar {\n      width: 6px;\n      height: 6px;\n      -webkit-transition: background 0.3s;\n      transition: background 0.3s;\n    }\n    .theme-dark-auto .navbar::-webkit-scrollbar-thumb {\n      border-radius: 5px;\n      background: rgba(var(--tblr-body-color-rgb), 0.16);\n    }\n    .theme-dark-auto .navbar::-webkit-scrollbar-track {\n      background: rgba(var(--tblr-body-color-rgb), 0.06);\n    }\n    .theme-dark-auto .navbar:hover::-webkit-scrollbar-thumb {\n      background: rgba(var(--tblr-body-color-rgb), 0.32);\n    }\n    .theme-dark-auto .navbar::-webkit-scrollbar-corner {\n      background: transparent;\n    }\n    .theme-dark-auto .navbar .navbar-brand {\n      color: #ffffff;\n    }\n    .theme-dark-auto .navbar .navbar-brand:hover, .theme-dark-auto .navbar .navbar-brand:focus {\n      color: #ffffff;\n      opacity: 0.8;\n    }\n    .theme-dark-auto .navbar .navbar-nav .nav-link {\n      color: rgba(255, 255, 255, 0.7);\n    }\n    .theme-dark-auto .navbar .navbar-nav .nav-link:hover, .theme-dark-auto .navbar .navbar-nav .nav-link:focus {\n      color: #ffffff;\n    }\n    .theme-dark-auto .navbar .navbar-nav .nav-link.disabled {\n      color: rgba(255, 255, 255, 0.3);\n    }\n    .theme-dark-auto .navbar .navbar-nav .show > .nav-link,\n.theme-dark-auto .navbar .navbar-nav .active > .nav-link,\n.theme-dark-auto .navbar .navbar-nav .nav-link.show,\n.theme-dark-auto .navbar .navbar-nav .nav-link.active {\n      color: #ffffff;\n    }\n    .theme-dark-auto .navbar .navbar-toggler {\n      color: #ffffff;\n      border-color: transparent;\n    }\n    .theme-dark-auto .navbar .navbar-text {\n      color: rgba(255, 255, 255, 0.7);\n    }\n    .theme-dark-auto .navbar .navbar-text a,\n.theme-dark-auto .navbar .navbar-text a:hover,\n.theme-dark-auto .navbar .navbar-text a:focus {\n      color: rgba(255, 255, 255, 0.7);\n    }\n    .theme-dark-auto .navbar::-webkit-scrollbar {\n      width: 6px;\n      height: 6px;\n      -webkit-transition: background 0.3s;\n      transition: background 0.3s;\n    }\n    .theme-dark-auto .navbar::-webkit-scrollbar-thumb {\n      border-radius: 5px;\n      background: rgba(var(--tblr-body-color-rgb), 0.16);\n    }\n    .theme-dark-auto .navbar::-webkit-scrollbar-track {\n      background: rgba(var(--tblr-body-color-rgb), 0.06);\n    }\n    .theme-dark-auto .navbar:hover::-webkit-scrollbar-thumb {\n      background: rgba(var(--tblr-body-color-rgb), 0.32);\n    }\n    .theme-dark-auto .navbar::-webkit-scrollbar-corner {\n      background: transparent;\n    }\n    .theme-dark-auto .navbar .input-icon-addon {\n      color: rgba(250, 251, 252, 0.64);\n    }\n    .theme-dark-auto .navbar .form-control {\n      border-color: transparent;\n      background-color: rgba(0, 0, 0, 0.1);\n    }\n    .theme-dark-auto .navbar .form-control::-moz-placeholder {\n      color: rgba(250, 251, 252, 0.64);\n    }\n    .theme-dark-auto .navbar .form-control::placeholder {\n      color: rgba(250, 251, 252, 0.64);\n    }\n  }\n}\n@media (prefers-color-scheme: dark) and (prefers-reduced-motion: reduce) {\n  .theme-dark-auto .navbar::-webkit-scrollbar {\n    -webkit-transition: none;\n    transition: none;\n  }\n}\n@media (prefers-color-scheme: dark) and (prefers-reduced-motion: reduce) {\n  .theme-dark-auto .navbar::-webkit-scrollbar {\n    -webkit-transition: none;\n    transition: none;\n  }\n}\n.navbar .dropdown-menu {\n  position: absolute;\n  z-index: 1030;\n}\n.navbar .navbar-nav {\n  min-height: 3rem;\n}\n.navbar .navbar-nav .nav-link {\n  position: relative;\n  min-width: 2rem;\n  min-height: 2rem;\n  justify-content: center;\n  border-radius: 4px;\n}\n.navbar .navbar-nav .nav-link .badge {\n  position: absolute;\n  top: 0.375rem;\n  right: 0.375rem;\n  transform: translate(50%, -50%);\n}\n\n.navbar-nav {\n  margin: 0;\n  padding: 0;\n}\n\n@media (max-width: 575.98px) {\n  .navbar-expand-sm .navbar-collapse {\n    flex-direction: column;\n  }\n  .navbar-expand-sm .navbar-collapse [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    padding: 0;\n  }\n  .navbar-expand-sm .navbar-collapse .navbar-nav {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .navbar-expand-sm .navbar-collapse .navbar-nav .nav-link {\n    padding: 0.5rem 0.75rem;\n    justify-content: flex-start;\n  }\n  .navbar-expand-sm .navbar-collapse .dropdown-menu-columns {\n    flex-direction: column;\n  }\n  .navbar-expand-sm .navbar-collapse .dropdown-menu {\n    padding: 0;\n    background: transparent;\n    position: static;\n    color: inherit;\n    box-shadow: none;\n    border: none;\n    min-width: 0;\n    margin: 0;\n  }\n  .navbar-expand-sm .navbar-collapse .dropdown-menu .dropdown-item {\n    min-width: 0;\n    display: flex;\n    width: auto;\n    padding-left: 2.5rem;\n    color: inherit;\n  }\n  .navbar-expand-sm .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 4rem;\n  }\n  .navbar-expand-sm .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 5.5rem;\n  }\n  .navbar-expand-sm .navbar-collapse .dropdown-toggle:after {\n    margin-left: auto;\n  }\n  .navbar-expand-sm .navbar-collapse .nav-item.active:after {\n    border-bottom-width: 0;\n    border-left-width: 3px;\n    right: auto;\n    top: 0;\n    bottom: 0;\n  }\n}\n@media (min-width: 576px) {\n  .navbar-expand-sm .navbar-collapse {\n    width: auto;\n    flex: 1 1 auto;\n  }\n  .navbar-expand-sm.navbar-dark .nav-item.active .nav-link,\n.navbar-expand-sm .navbar-dark .nav-item.active .nav-link {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n  .navbar-expand-sm.navbar-light .nav-item.active,\n.navbar-expand-sm .navbar-light .nav-item.active {\n    position: relative;\n  }\n  .navbar-expand-sm.navbar-light .nav-item.active:after,\n.navbar-expand-sm .navbar-light .nav-item.active:after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -0.25rem;\n    border: 0 solid #206bc4;\n    border-bottom-width: 2px;\n  }\n  .navbar-expand-sm.navbar-light.navbar-vertical,\n.navbar-expand-sm .navbar-light.navbar-vertical {\n    box-shadow: inset -1px 0 0 0 rgba(98, 105, 118, 0.16);\n  }\n  .navbar-expand-sm.navbar-light.navbar-vertical.navbar-right,\n.navbar-expand-sm .navbar-light.navbar-vertical.navbar-right {\n    box-shadow: inset 1px 0 0 0 rgba(98, 105, 118, 0.16);\n  }\n  .navbar-expand-sm.navbar-vertical ~ .navbar,\n.navbar-expand-sm.navbar-vertical ~ .page-wrapper {\n    margin-left: 15rem;\n  }\n  .navbar-expand-sm.navbar-vertical.navbar-right ~ .navbar,\n.navbar-expand-sm.navbar-vertical.navbar-right ~ .page-wrapper {\n    margin-left: 0;\n    margin-right: 15rem;\n  }\n}\n@media (max-width: 767.98px) {\n  .navbar-expand-md .navbar-collapse {\n    flex-direction: column;\n  }\n  .navbar-expand-md .navbar-collapse [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    padding: 0;\n  }\n  .navbar-expand-md .navbar-collapse .navbar-nav {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .navbar-expand-md .navbar-collapse .navbar-nav .nav-link {\n    padding: 0.5rem 0.75rem;\n    justify-content: flex-start;\n  }\n  .navbar-expand-md .navbar-collapse .dropdown-menu-columns {\n    flex-direction: column;\n  }\n  .navbar-expand-md .navbar-collapse .dropdown-menu {\n    padding: 0;\n    background: transparent;\n    position: static;\n    color: inherit;\n    box-shadow: none;\n    border: none;\n    min-width: 0;\n    margin: 0;\n  }\n  .navbar-expand-md .navbar-collapse .dropdown-menu .dropdown-item {\n    min-width: 0;\n    display: flex;\n    width: auto;\n    padding-left: 2.5rem;\n    color: inherit;\n  }\n  .navbar-expand-md .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 4rem;\n  }\n  .navbar-expand-md .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 5.5rem;\n  }\n  .navbar-expand-md .navbar-collapse .dropdown-toggle:after {\n    margin-left: auto;\n  }\n  .navbar-expand-md .navbar-collapse .nav-item.active:after {\n    border-bottom-width: 0;\n    border-left-width: 3px;\n    right: auto;\n    top: 0;\n    bottom: 0;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-expand-md .navbar-collapse {\n    width: auto;\n    flex: 1 1 auto;\n  }\n  .navbar-expand-md.navbar-dark .nav-item.active .nav-link,\n.navbar-expand-md .navbar-dark .nav-item.active .nav-link {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n  .navbar-expand-md.navbar-light .nav-item.active,\n.navbar-expand-md .navbar-light .nav-item.active {\n    position: relative;\n  }\n  .navbar-expand-md.navbar-light .nav-item.active:after,\n.navbar-expand-md .navbar-light .nav-item.active:after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -0.25rem;\n    border: 0 solid #206bc4;\n    border-bottom-width: 2px;\n  }\n  .navbar-expand-md.navbar-light.navbar-vertical,\n.navbar-expand-md .navbar-light.navbar-vertical {\n    box-shadow: inset -1px 0 0 0 rgba(98, 105, 118, 0.16);\n  }\n  .navbar-expand-md.navbar-light.navbar-vertical.navbar-right,\n.navbar-expand-md .navbar-light.navbar-vertical.navbar-right {\n    box-shadow: inset 1px 0 0 0 rgba(98, 105, 118, 0.16);\n  }\n  .navbar-expand-md.navbar-vertical ~ .navbar,\n.navbar-expand-md.navbar-vertical ~ .page-wrapper {\n    margin-left: 15rem;\n  }\n  .navbar-expand-md.navbar-vertical.navbar-right ~ .navbar,\n.navbar-expand-md.navbar-vertical.navbar-right ~ .page-wrapper {\n    margin-left: 0;\n    margin-right: 15rem;\n  }\n}\n@media (max-width: 991.98px) {\n  .navbar-expand-lg .navbar-collapse {\n    flex-direction: column;\n  }\n  .navbar-expand-lg .navbar-collapse [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    padding: 0;\n  }\n  .navbar-expand-lg .navbar-collapse .navbar-nav {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .navbar-expand-lg .navbar-collapse .navbar-nav .nav-link {\n    padding: 0.5rem 0.75rem;\n    justify-content: flex-start;\n  }\n  .navbar-expand-lg .navbar-collapse .dropdown-menu-columns {\n    flex-direction: column;\n  }\n  .navbar-expand-lg .navbar-collapse .dropdown-menu {\n    padding: 0;\n    background: transparent;\n    position: static;\n    color: inherit;\n    box-shadow: none;\n    border: none;\n    min-width: 0;\n    margin: 0;\n  }\n  .navbar-expand-lg .navbar-collapse .dropdown-menu .dropdown-item {\n    min-width: 0;\n    display: flex;\n    width: auto;\n    padding-left: 2.5rem;\n    color: inherit;\n  }\n  .navbar-expand-lg .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 4rem;\n  }\n  .navbar-expand-lg .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 5.5rem;\n  }\n  .navbar-expand-lg .navbar-collapse .dropdown-toggle:after {\n    margin-left: auto;\n  }\n  .navbar-expand-lg .navbar-collapse .nav-item.active:after {\n    border-bottom-width: 0;\n    border-left-width: 3px;\n    right: auto;\n    top: 0;\n    bottom: 0;\n  }\n}\n@media (min-width: 992px) {\n  .navbar-expand-lg .navbar-collapse {\n    width: auto;\n    flex: 1 1 auto;\n  }\n  .navbar-expand-lg.navbar-dark .nav-item.active .nav-link,\n.navbar-expand-lg .navbar-dark .nav-item.active .nav-link {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n  .navbar-expand-lg.navbar-light .nav-item.active,\n.navbar-expand-lg .navbar-light .nav-item.active {\n    position: relative;\n  }\n  .navbar-expand-lg.navbar-light .nav-item.active:after,\n.navbar-expand-lg .navbar-light .nav-item.active:after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -0.25rem;\n    border: 0 solid #206bc4;\n    border-bottom-width: 2px;\n  }\n  .navbar-expand-lg.navbar-light.navbar-vertical,\n.navbar-expand-lg .navbar-light.navbar-vertical {\n    box-shadow: inset -1px 0 0 0 rgba(98, 105, 118, 0.16);\n  }\n  .navbar-expand-lg.navbar-light.navbar-vertical.navbar-right,\n.navbar-expand-lg .navbar-light.navbar-vertical.navbar-right {\n    box-shadow: inset 1px 0 0 0 rgba(98, 105, 118, 0.16);\n  }\n  .navbar-expand-lg.navbar-vertical ~ .navbar,\n.navbar-expand-lg.navbar-vertical ~ .page-wrapper {\n    margin-left: 15rem;\n  }\n  .navbar-expand-lg.navbar-vertical.navbar-right ~ .navbar,\n.navbar-expand-lg.navbar-vertical.navbar-right ~ .page-wrapper {\n    margin-left: 0;\n    margin-right: 15rem;\n  }\n}\n@media (max-width: 1199.98px) {\n  .navbar-expand-xl .navbar-collapse {\n    flex-direction: column;\n  }\n  .navbar-expand-xl .navbar-collapse [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    padding: 0;\n  }\n  .navbar-expand-xl .navbar-collapse .navbar-nav {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .navbar-expand-xl .navbar-collapse .navbar-nav .nav-link {\n    padding: 0.5rem 0.75rem;\n    justify-content: flex-start;\n  }\n  .navbar-expand-xl .navbar-collapse .dropdown-menu-columns {\n    flex-direction: column;\n  }\n  .navbar-expand-xl .navbar-collapse .dropdown-menu {\n    padding: 0;\n    background: transparent;\n    position: static;\n    color: inherit;\n    box-shadow: none;\n    border: none;\n    min-width: 0;\n    margin: 0;\n  }\n  .navbar-expand-xl .navbar-collapse .dropdown-menu .dropdown-item {\n    min-width: 0;\n    display: flex;\n    width: auto;\n    padding-left: 2.5rem;\n    color: inherit;\n  }\n  .navbar-expand-xl .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 4rem;\n  }\n  .navbar-expand-xl .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 5.5rem;\n  }\n  .navbar-expand-xl .navbar-collapse .dropdown-toggle:after {\n    margin-left: auto;\n  }\n  .navbar-expand-xl .navbar-collapse .nav-item.active:after {\n    border-bottom-width: 0;\n    border-left-width: 3px;\n    right: auto;\n    top: 0;\n    bottom: 0;\n  }\n}\n@media (min-width: 1200px) {\n  .navbar-expand-xl .navbar-collapse {\n    width: auto;\n    flex: 1 1 auto;\n  }\n  .navbar-expand-xl.navbar-dark .nav-item.active .nav-link,\n.navbar-expand-xl .navbar-dark .nav-item.active .nav-link {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n  .navbar-expand-xl.navbar-light .nav-item.active,\n.navbar-expand-xl .navbar-light .nav-item.active {\n    position: relative;\n  }\n  .navbar-expand-xl.navbar-light .nav-item.active:after,\n.navbar-expand-xl .navbar-light .nav-item.active:after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -0.25rem;\n    border: 0 solid #206bc4;\n    border-bottom-width: 2px;\n  }\n  .navbar-expand-xl.navbar-light.navbar-vertical,\n.navbar-expand-xl .navbar-light.navbar-vertical {\n    box-shadow: inset -1px 0 0 0 rgba(98, 105, 118, 0.16);\n  }\n  .navbar-expand-xl.navbar-light.navbar-vertical.navbar-right,\n.navbar-expand-xl .navbar-light.navbar-vertical.navbar-right {\n    box-shadow: inset 1px 0 0 0 rgba(98, 105, 118, 0.16);\n  }\n  .navbar-expand-xl.navbar-vertical ~ .navbar,\n.navbar-expand-xl.navbar-vertical ~ .page-wrapper {\n    margin-left: 15rem;\n  }\n  .navbar-expand-xl.navbar-vertical.navbar-right ~ .navbar,\n.navbar-expand-xl.navbar-vertical.navbar-right ~ .page-wrapper {\n    margin-left: 0;\n    margin-right: 15rem;\n  }\n}\n@media (max-width: 1399.98px) {\n  .navbar-expand-xxl .navbar-collapse {\n    flex-direction: column;\n  }\n  .navbar-expand-xxl .navbar-collapse [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    padding: 0;\n  }\n  .navbar-expand-xxl .navbar-collapse .navbar-nav {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .navbar-expand-xxl .navbar-collapse .navbar-nav .nav-link {\n    padding: 0.5rem 0.75rem;\n    justify-content: flex-start;\n  }\n  .navbar-expand-xxl .navbar-collapse .dropdown-menu-columns {\n    flex-direction: column;\n  }\n  .navbar-expand-xxl .navbar-collapse .dropdown-menu {\n    padding: 0;\n    background: transparent;\n    position: static;\n    color: inherit;\n    box-shadow: none;\n    border: none;\n    min-width: 0;\n    margin: 0;\n  }\n  .navbar-expand-xxl .navbar-collapse .dropdown-menu .dropdown-item {\n    min-width: 0;\n    display: flex;\n    width: auto;\n    padding-left: 2.5rem;\n    color: inherit;\n  }\n  .navbar-expand-xxl .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 4rem;\n  }\n  .navbar-expand-xxl .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 5.5rem;\n  }\n  .navbar-expand-xxl .navbar-collapse .dropdown-toggle:after {\n    margin-left: auto;\n  }\n  .navbar-expand-xxl .navbar-collapse .nav-item.active:after {\n    border-bottom-width: 0;\n    border-left-width: 3px;\n    right: auto;\n    top: 0;\n    bottom: 0;\n  }\n}\n@media (min-width: 1400px) {\n  .navbar-expand-xxl .navbar-collapse {\n    width: auto;\n    flex: 1 1 auto;\n  }\n  .navbar-expand-xxl.navbar-dark .nav-item.active .nav-link,\n.navbar-expand-xxl .navbar-dark .nav-item.active .nav-link {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n  .navbar-expand-xxl.navbar-light .nav-item.active,\n.navbar-expand-xxl .navbar-light .nav-item.active {\n    position: relative;\n  }\n  .navbar-expand-xxl.navbar-light .nav-item.active:after,\n.navbar-expand-xxl .navbar-light .nav-item.active:after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -0.25rem;\n    border: 0 solid #206bc4;\n    border-bottom-width: 2px;\n  }\n  .navbar-expand-xxl.navbar-light.navbar-vertical,\n.navbar-expand-xxl .navbar-light.navbar-vertical {\n    box-shadow: inset -1px 0 0 0 rgba(98, 105, 118, 0.16);\n  }\n  .navbar-expand-xxl.navbar-light.navbar-vertical.navbar-right,\n.navbar-expand-xxl .navbar-light.navbar-vertical.navbar-right {\n    box-shadow: inset 1px 0 0 0 rgba(98, 105, 118, 0.16);\n  }\n  .navbar-expand-xxl.navbar-vertical ~ .navbar,\n.navbar-expand-xxl.navbar-vertical ~ .page-wrapper {\n    margin-left: 15rem;\n  }\n  .navbar-expand-xxl.navbar-vertical.navbar-right ~ .navbar,\n.navbar-expand-xxl.navbar-vertical.navbar-right ~ .page-wrapper {\n    margin-left: 0;\n    margin-right: 15rem;\n  }\n}\n.navbar-expand .navbar-collapse {\n  flex-direction: column;\n}\n.navbar-expand .navbar-collapse [class^=container] {\n  flex-direction: column;\n  align-items: stretch;\n  padding: 0;\n}\n.navbar-expand .navbar-collapse .navbar-nav {\n  margin-left: 0;\n  margin-right: 0;\n}\n.navbar-expand .navbar-collapse .navbar-nav .nav-link {\n  padding: 0.5rem 0.75rem;\n  justify-content: flex-start;\n}\n.navbar-expand .navbar-collapse .dropdown-menu-columns {\n  flex-direction: column;\n}\n.navbar-expand .navbar-collapse .dropdown-menu {\n  padding: 0;\n  background: transparent;\n  position: static;\n  color: inherit;\n  box-shadow: none;\n  border: none;\n  min-width: 0;\n  margin: 0;\n}\n.navbar-expand .navbar-collapse .dropdown-menu .dropdown-item {\n  min-width: 0;\n  display: flex;\n  width: auto;\n  padding-left: 2.5rem;\n  color: inherit;\n}\n.navbar-expand .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-item {\n  padding-left: 4rem;\n}\n.navbar-expand .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-menu .dropdown-item {\n  padding-left: 5.5rem;\n}\n.navbar-expand .navbar-collapse .dropdown-toggle:after {\n  margin-left: auto;\n}\n.navbar-expand .navbar-collapse .nav-item.active:after {\n  border-bottom-width: 0;\n  border-left-width: 3px;\n  right: auto;\n  top: 0;\n  bottom: 0;\n}\n.navbar-expand .navbar-collapse {\n  width: auto;\n  flex: 1 1 auto;\n}\n.navbar-expand.navbar-dark .nav-item.active .nav-link,\n.navbar-expand .navbar-dark .nav-item.active .nav-link {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.navbar-expand.navbar-light .nav-item.active,\n.navbar-expand .navbar-light .nav-item.active {\n  position: relative;\n}\n.navbar-expand.navbar-light .nav-item.active:after,\n.navbar-expand .navbar-light .nav-item.active:after {\n  content: \"\";\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: -0.25rem;\n  border: 0 solid #206bc4;\n  border-bottom-width: 2px;\n}\n.navbar-expand.navbar-light.navbar-vertical,\n.navbar-expand .navbar-light.navbar-vertical {\n  box-shadow: inset -1px 0 0 0 rgba(98, 105, 118, 0.16);\n}\n.navbar-expand.navbar-light.navbar-vertical.navbar-right,\n.navbar-expand .navbar-light.navbar-vertical.navbar-right {\n  box-shadow: inset 1px 0 0 0 rgba(98, 105, 118, 0.16);\n}\n.navbar-expand.navbar-vertical ~ .navbar,\n.navbar-expand.navbar-vertical ~ .page-wrapper {\n  margin-left: 15rem;\n}\n.navbar-expand.navbar-vertical.navbar-right ~ .navbar,\n.navbar-expand.navbar-vertical.navbar-right ~ .page-wrapper {\n  margin-left: 0;\n  margin-right: 15rem;\n}\n\n/**\nNavbar brand\n */\n.navbar-brand {\n  display: inline-flex;\n  align-items: center;\n  font-weight: 600;\n  margin: 0;\n}\n\n.navbar-brand-image {\n  height: 2rem;\n  width: auto;\n}\n\n/**\nNavbar toggler\n */\n.navbar-toggler {\n  border: 0;\n  width: 2rem;\n  height: 2rem;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.navbar-toggler-icon {\n  height: 2px;\n  width: 1.25em;\n  background: currentColor;\n  border-radius: 10px;\n  transition: top 0.2s 0.2s, bottom 0.2s 0.2s, transform 0.2s, opacity 0s 0.2s;\n  position: relative;\n}\n@media (prefers-reduced-motion: reduce) {\n  .navbar-toggler-icon {\n    transition: none;\n  }\n}\n.navbar-toggler-icon:before, .navbar-toggler-icon:after {\n  content: \"\";\n  display: block;\n  height: inherit;\n  width: inherit;\n  border-radius: inherit;\n  background: inherit;\n  position: absolute;\n  left: 0;\n  transition: inherit;\n}\n@media (prefers-reduced-motion: reduce) {\n  .navbar-toggler-icon:before, .navbar-toggler-icon:after {\n    transition: none;\n  }\n}\n.navbar-toggler-icon:before {\n  top: -0.45em;\n}\n.navbar-toggler-icon:after {\n  bottom: -0.45em;\n}\n.navbar-toggler[aria-expanded=true] .navbar-toggler-icon {\n  transform: rotate(45deg);\n  transition: top 0.3s, bottom 0.3s, transform 0.3s 0.3s, opacity 0s 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .navbar-toggler[aria-expanded=true] .navbar-toggler-icon {\n    transition: none;\n  }\n}\n.navbar-toggler[aria-expanded=true] .navbar-toggler-icon:before {\n  top: 0;\n  transform: rotate(-90deg);\n}\n.navbar-toggler[aria-expanded=true] .navbar-toggler-icon:after {\n  bottom: 0;\n  opacity: 0;\n}\n\n/**\nNavbar light\n */\n.navbar-light {\n  box-shadow: inset 0 -1px 0 0 rgba(98, 105, 118, 0.16);\n  background-color: #ffffff;\n}\n\n/**\nNavbar dark\n */\n.navbar-dark {\n  background: #1e293b;\n  color: rgba(255, 255, 255, 0.7);\n}\n.navbar-dark::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  -webkit-transition: background 0.3s;\n  transition: background 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .navbar-dark::-webkit-scrollbar {\n    -webkit-transition: none;\n    transition: none;\n  }\n}\n.navbar-dark::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  background: rgba(var(--tblr-body-color-rgb), 0.16);\n}\n.navbar-dark::-webkit-scrollbar-track {\n  background: rgba(var(--tblr-body-color-rgb), 0.06);\n}\n.navbar-dark:hover::-webkit-scrollbar-thumb {\n  background: rgba(var(--tblr-body-color-rgb), 0.32);\n}\n.navbar-dark::-webkit-scrollbar-corner {\n  background: transparent;\n}\n.navbar-dark .navbar-brand {\n  color: #ffffff;\n}\n.navbar-dark .navbar-brand:hover, .navbar-dark .navbar-brand:focus {\n  color: #ffffff;\n  opacity: 0.8;\n}\n.navbar-dark .navbar-nav .nav-link {\n  color: rgba(255, 255, 255, 0.7);\n}\n.navbar-dark .navbar-nav .nav-link:hover, .navbar-dark .navbar-nav .nav-link:focus {\n  color: #ffffff;\n}\n.navbar-dark .navbar-nav .nav-link.disabled {\n  color: rgba(255, 255, 255, 0.3);\n}\n.navbar-dark .navbar-nav .show > .nav-link,\n.navbar-dark .navbar-nav .active > .nav-link,\n.navbar-dark .navbar-nav .nav-link.show,\n.navbar-dark .navbar-nav .nav-link.active {\n  color: #ffffff;\n}\n.navbar-dark .navbar-toggler {\n  color: #ffffff;\n  border-color: transparent;\n}\n.navbar-dark .navbar-text {\n  color: rgba(255, 255, 255, 0.7);\n}\n.navbar-dark .navbar-text a,\n.navbar-dark .navbar-text a:hover,\n.navbar-dark .navbar-text a:focus {\n  color: rgba(255, 255, 255, 0.7);\n}\n.navbar-dark::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  -webkit-transition: background 0.3s;\n  transition: background 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .navbar-dark::-webkit-scrollbar {\n    -webkit-transition: none;\n    transition: none;\n  }\n}\n.navbar-dark::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  background: rgba(var(--tblr-body-color-rgb), 0.16);\n}\n.navbar-dark::-webkit-scrollbar-track {\n  background: rgba(var(--tblr-body-color-rgb), 0.06);\n}\n.navbar-dark:hover::-webkit-scrollbar-thumb {\n  background: rgba(var(--tblr-body-color-rgb), 0.32);\n}\n.navbar-dark::-webkit-scrollbar-corner {\n  background: transparent;\n}\n.navbar-dark .input-icon-addon {\n  color: rgba(250, 251, 252, 0.64);\n}\n.navbar-dark .form-control {\n  border-color: transparent;\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.navbar-dark .form-control::-moz-placeholder {\n  color: rgba(250, 251, 252, 0.64);\n}\n.navbar-dark .form-control::placeholder {\n  color: rgba(250, 251, 252, 0.64);\n}\n\n/**\nNavbar nav\n */\n.navbar-nav {\n  align-items: stretch;\n}\n.navbar-nav .nav-item {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n/**\nNavbar side\n */\n.navbar-side {\n  margin: 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n}\n\n/**\nNavbar vertical\n */\n@media (min-width: 576px) {\n  .navbar-vertical.navbar-expand-sm {\n    width: 15rem;\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    z-index: 1030;\n    align-items: flex-start;\n    transition: transform 0.3s;\n    overflow-x: auto;\n    padding: 0;\n  }\n}\n@media (min-width: 576px) and (prefers-reduced-motion: reduce) {\n  .navbar-vertical.navbar-expand-sm {\n    transition: none;\n  }\n}\n@media (min-width: 576px) {\n  .navbar-vertical.navbar-expand-sm.navbar-right {\n    left: auto;\n    right: 0;\n  }\n}\n@media (min-width: 576px) {\n  .navbar-vertical.navbar-expand-sm .navbar-brand {\n    padding: 0.75rem 0;\n    justify-content: center;\n  }\n}\n@media (min-width: 576px) {\n  .navbar-vertical.navbar-expand-sm .navbar-collapse {\n    align-items: stretch;\n  }\n}\n@media (min-width: 576px) {\n  .navbar-vertical.navbar-expand-sm .navbar-nav {\n    flex-direction: column;\n    flex-grow: 1;\n    min-height: auto;\n  }\n  .navbar-vertical.navbar-expand-sm .navbar-nav .nav-link {\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n  }\n}\n@media (min-width: 576px) {\n  .navbar-vertical.navbar-expand-sm > [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    min-height: 100%;\n    justify-content: flex-start;\n    padding: 0;\n  }\n}\n@media (min-width: 576px) {\n  .navbar-vertical.navbar-expand-sm ~ .page {\n    padding-left: 15rem;\n  }\n  .navbar-vertical.navbar-expand-sm ~ .page [class^=container] {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n}\n@media (min-width: 576px) {\n  .navbar-vertical.navbar-expand-sm.navbar-right ~ .page {\n    padding-left: 0;\n    padding-right: 15rem;\n  }\n}\n@media (min-width: 576px) {\n  .navbar-vertical.navbar-expand-sm .navbar-collapse {\n    flex-direction: column;\n  }\n  .navbar-vertical.navbar-expand-sm .navbar-collapse [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    padding: 0;\n  }\n  .navbar-vertical.navbar-expand-sm .navbar-collapse .navbar-nav {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .navbar-vertical.navbar-expand-sm .navbar-collapse .navbar-nav .nav-link {\n    padding: 0.5rem 0.75rem;\n    justify-content: flex-start;\n  }\n  .navbar-vertical.navbar-expand-sm .navbar-collapse .dropdown-menu-columns {\n    flex-direction: column;\n  }\n  .navbar-vertical.navbar-expand-sm .navbar-collapse .dropdown-menu {\n    padding: 0;\n    background: transparent;\n    position: static;\n    color: inherit;\n    box-shadow: none;\n    border: none;\n    min-width: 0;\n    margin: 0;\n  }\n  .navbar-vertical.navbar-expand-sm .navbar-collapse .dropdown-menu .dropdown-item {\n    min-width: 0;\n    display: flex;\n    width: auto;\n    padding-left: 2.5rem;\n    color: inherit;\n  }\n  .navbar-vertical.navbar-expand-sm .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 4rem;\n  }\n  .navbar-vertical.navbar-expand-sm .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 5.5rem;\n  }\n  .navbar-vertical.navbar-expand-sm .navbar-collapse .dropdown-toggle:after {\n    margin-left: auto;\n  }\n  .navbar-vertical.navbar-expand-sm .navbar-collapse .nav-item.active:after {\n    border-bottom-width: 0;\n    border-left-width: 3px;\n    right: auto;\n    top: 0;\n    bottom: 0;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-vertical.navbar-expand-md {\n    width: 15rem;\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    z-index: 1030;\n    align-items: flex-start;\n    transition: transform 0.3s;\n    overflow-x: auto;\n    padding: 0;\n  }\n}\n@media (min-width: 768px) and (prefers-reduced-motion: reduce) {\n  .navbar-vertical.navbar-expand-md {\n    transition: none;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-vertical.navbar-expand-md.navbar-right {\n    left: auto;\n    right: 0;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-vertical.navbar-expand-md .navbar-brand {\n    padding: 0.75rem 0;\n    justify-content: center;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-vertical.navbar-expand-md .navbar-collapse {\n    align-items: stretch;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-vertical.navbar-expand-md .navbar-nav {\n    flex-direction: column;\n    flex-grow: 1;\n    min-height: auto;\n  }\n  .navbar-vertical.navbar-expand-md .navbar-nav .nav-link {\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-vertical.navbar-expand-md > [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    min-height: 100%;\n    justify-content: flex-start;\n    padding: 0;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-vertical.navbar-expand-md ~ .page {\n    padding-left: 15rem;\n  }\n  .navbar-vertical.navbar-expand-md ~ .page [class^=container] {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-vertical.navbar-expand-md.navbar-right ~ .page {\n    padding-left: 0;\n    padding-right: 15rem;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-vertical.navbar-expand-md .navbar-collapse {\n    flex-direction: column;\n  }\n  .navbar-vertical.navbar-expand-md .navbar-collapse [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    padding: 0;\n  }\n  .navbar-vertical.navbar-expand-md .navbar-collapse .navbar-nav {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .navbar-vertical.navbar-expand-md .navbar-collapse .navbar-nav .nav-link {\n    padding: 0.5rem 0.75rem;\n    justify-content: flex-start;\n  }\n  .navbar-vertical.navbar-expand-md .navbar-collapse .dropdown-menu-columns {\n    flex-direction: column;\n  }\n  .navbar-vertical.navbar-expand-md .navbar-collapse .dropdown-menu {\n    padding: 0;\n    background: transparent;\n    position: static;\n    color: inherit;\n    box-shadow: none;\n    border: none;\n    min-width: 0;\n    margin: 0;\n  }\n  .navbar-vertical.navbar-expand-md .navbar-collapse .dropdown-menu .dropdown-item {\n    min-width: 0;\n    display: flex;\n    width: auto;\n    padding-left: 2.5rem;\n    color: inherit;\n  }\n  .navbar-vertical.navbar-expand-md .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 4rem;\n  }\n  .navbar-vertical.navbar-expand-md .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 5.5rem;\n  }\n  .navbar-vertical.navbar-expand-md .navbar-collapse .dropdown-toggle:after {\n    margin-left: auto;\n  }\n  .navbar-vertical.navbar-expand-md .navbar-collapse .nav-item.active:after {\n    border-bottom-width: 0;\n    border-left-width: 3px;\n    right: auto;\n    top: 0;\n    bottom: 0;\n  }\n}\n@media (min-width: 992px) {\n  .navbar-vertical.navbar-expand-lg {\n    width: 15rem;\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    z-index: 1030;\n    align-items: flex-start;\n    transition: transform 0.3s;\n    overflow-x: auto;\n    padding: 0;\n  }\n}\n@media (min-width: 992px) and (prefers-reduced-motion: reduce) {\n  .navbar-vertical.navbar-expand-lg {\n    transition: none;\n  }\n}\n@media (min-width: 992px) {\n  .navbar-vertical.navbar-expand-lg.navbar-right {\n    left: auto;\n    right: 0;\n  }\n}\n@media (min-width: 992px) {\n  .navbar-vertical.navbar-expand-lg .navbar-brand {\n    padding: 0.75rem 0;\n    justify-content: center;\n  }\n}\n@media (min-width: 992px) {\n  .navbar-vertical.navbar-expand-lg .navbar-collapse {\n    align-items: stretch;\n  }\n}\n@media (min-width: 992px) {\n  .navbar-vertical.navbar-expand-lg .navbar-nav {\n    flex-direction: column;\n    flex-grow: 1;\n    min-height: auto;\n  }\n  .navbar-vertical.navbar-expand-lg .navbar-nav .nav-link {\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n  }\n}\n@media (min-width: 992px) {\n  .navbar-vertical.navbar-expand-lg > [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    min-height: 100%;\n    justify-content: flex-start;\n    padding: 0;\n  }\n}\n@media (min-width: 992px) {\n  .navbar-vertical.navbar-expand-lg ~ .page {\n    padding-left: 15rem;\n  }\n  .navbar-vertical.navbar-expand-lg ~ .page [class^=container] {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n}\n@media (min-width: 992px) {\n  .navbar-vertical.navbar-expand-lg.navbar-right ~ .page {\n    padding-left: 0;\n    padding-right: 15rem;\n  }\n}\n@media (min-width: 992px) {\n  .navbar-vertical.navbar-expand-lg .navbar-collapse {\n    flex-direction: column;\n  }\n  .navbar-vertical.navbar-expand-lg .navbar-collapse [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    padding: 0;\n  }\n  .navbar-vertical.navbar-expand-lg .navbar-collapse .navbar-nav {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .navbar-vertical.navbar-expand-lg .navbar-collapse .navbar-nav .nav-link {\n    padding: 0.5rem 0.75rem;\n    justify-content: flex-start;\n  }\n  .navbar-vertical.navbar-expand-lg .navbar-collapse .dropdown-menu-columns {\n    flex-direction: column;\n  }\n  .navbar-vertical.navbar-expand-lg .navbar-collapse .dropdown-menu {\n    padding: 0;\n    background: transparent;\n    position: static;\n    color: inherit;\n    box-shadow: none;\n    border: none;\n    min-width: 0;\n    margin: 0;\n  }\n  .navbar-vertical.navbar-expand-lg .navbar-collapse .dropdown-menu .dropdown-item {\n    min-width: 0;\n    display: flex;\n    width: auto;\n    padding-left: 2.5rem;\n    color: inherit;\n  }\n  .navbar-vertical.navbar-expand-lg .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 4rem;\n  }\n  .navbar-vertical.navbar-expand-lg .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 5.5rem;\n  }\n  .navbar-vertical.navbar-expand-lg .navbar-collapse .dropdown-toggle:after {\n    margin-left: auto;\n  }\n  .navbar-vertical.navbar-expand-lg .navbar-collapse .nav-item.active:after {\n    border-bottom-width: 0;\n    border-left-width: 3px;\n    right: auto;\n    top: 0;\n    bottom: 0;\n  }\n}\n@media (min-width: 1200px) {\n  .navbar-vertical.navbar-expand-xl {\n    width: 15rem;\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    z-index: 1030;\n    align-items: flex-start;\n    transition: transform 0.3s;\n    overflow-x: auto;\n    padding: 0;\n  }\n}\n@media (min-width: 1200px) and (prefers-reduced-motion: reduce) {\n  .navbar-vertical.navbar-expand-xl {\n    transition: none;\n  }\n}\n@media (min-width: 1200px) {\n  .navbar-vertical.navbar-expand-xl.navbar-right {\n    left: auto;\n    right: 0;\n  }\n}\n@media (min-width: 1200px) {\n  .navbar-vertical.navbar-expand-xl .navbar-brand {\n    padding: 0.75rem 0;\n    justify-content: center;\n  }\n}\n@media (min-width: 1200px) {\n  .navbar-vertical.navbar-expand-xl .navbar-collapse {\n    align-items: stretch;\n  }\n}\n@media (min-width: 1200px) {\n  .navbar-vertical.navbar-expand-xl .navbar-nav {\n    flex-direction: column;\n    flex-grow: 1;\n    min-height: auto;\n  }\n  .navbar-vertical.navbar-expand-xl .navbar-nav .nav-link {\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n  }\n}\n@media (min-width: 1200px) {\n  .navbar-vertical.navbar-expand-xl > [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    min-height: 100%;\n    justify-content: flex-start;\n    padding: 0;\n  }\n}\n@media (min-width: 1200px) {\n  .navbar-vertical.navbar-expand-xl ~ .page {\n    padding-left: 15rem;\n  }\n  .navbar-vertical.navbar-expand-xl ~ .page [class^=container] {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n}\n@media (min-width: 1200px) {\n  .navbar-vertical.navbar-expand-xl.navbar-right ~ .page {\n    padding-left: 0;\n    padding-right: 15rem;\n  }\n}\n@media (min-width: 1200px) {\n  .navbar-vertical.navbar-expand-xl .navbar-collapse {\n    flex-direction: column;\n  }\n  .navbar-vertical.navbar-expand-xl .navbar-collapse [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    padding: 0;\n  }\n  .navbar-vertical.navbar-expand-xl .navbar-collapse .navbar-nav {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .navbar-vertical.navbar-expand-xl .navbar-collapse .navbar-nav .nav-link {\n    padding: 0.5rem 0.75rem;\n    justify-content: flex-start;\n  }\n  .navbar-vertical.navbar-expand-xl .navbar-collapse .dropdown-menu-columns {\n    flex-direction: column;\n  }\n  .navbar-vertical.navbar-expand-xl .navbar-collapse .dropdown-menu {\n    padding: 0;\n    background: transparent;\n    position: static;\n    color: inherit;\n    box-shadow: none;\n    border: none;\n    min-width: 0;\n    margin: 0;\n  }\n  .navbar-vertical.navbar-expand-xl .navbar-collapse .dropdown-menu .dropdown-item {\n    min-width: 0;\n    display: flex;\n    width: auto;\n    padding-left: 2.5rem;\n    color: inherit;\n  }\n  .navbar-vertical.navbar-expand-xl .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 4rem;\n  }\n  .navbar-vertical.navbar-expand-xl .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 5.5rem;\n  }\n  .navbar-vertical.navbar-expand-xl .navbar-collapse .dropdown-toggle:after {\n    margin-left: auto;\n  }\n  .navbar-vertical.navbar-expand-xl .navbar-collapse .nav-item.active:after {\n    border-bottom-width: 0;\n    border-left-width: 3px;\n    right: auto;\n    top: 0;\n    bottom: 0;\n  }\n}\n@media (min-width: 1400px) {\n  .navbar-vertical.navbar-expand-xxl {\n    width: 15rem;\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    z-index: 1030;\n    align-items: flex-start;\n    transition: transform 0.3s;\n    overflow-x: auto;\n    padding: 0;\n  }\n}\n@media (min-width: 1400px) and (prefers-reduced-motion: reduce) {\n  .navbar-vertical.navbar-expand-xxl {\n    transition: none;\n  }\n}\n@media (min-width: 1400px) {\n  .navbar-vertical.navbar-expand-xxl.navbar-right {\n    left: auto;\n    right: 0;\n  }\n}\n@media (min-width: 1400px) {\n  .navbar-vertical.navbar-expand-xxl .navbar-brand {\n    padding: 0.75rem 0;\n    justify-content: center;\n  }\n}\n@media (min-width: 1400px) {\n  .navbar-vertical.navbar-expand-xxl .navbar-collapse {\n    align-items: stretch;\n  }\n}\n@media (min-width: 1400px) {\n  .navbar-vertical.navbar-expand-xxl .navbar-nav {\n    flex-direction: column;\n    flex-grow: 1;\n    min-height: auto;\n  }\n  .navbar-vertical.navbar-expand-xxl .navbar-nav .nav-link {\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n  }\n}\n@media (min-width: 1400px) {\n  .navbar-vertical.navbar-expand-xxl > [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    min-height: 100%;\n    justify-content: flex-start;\n    padding: 0;\n  }\n}\n@media (min-width: 1400px) {\n  .navbar-vertical.navbar-expand-xxl ~ .page {\n    padding-left: 15rem;\n  }\n  .navbar-vertical.navbar-expand-xxl ~ .page [class^=container] {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n}\n@media (min-width: 1400px) {\n  .navbar-vertical.navbar-expand-xxl.navbar-right ~ .page {\n    padding-left: 0;\n    padding-right: 15rem;\n  }\n}\n@media (min-width: 1400px) {\n  .navbar-vertical.navbar-expand-xxl .navbar-collapse {\n    flex-direction: column;\n  }\n  .navbar-vertical.navbar-expand-xxl .navbar-collapse [class^=container] {\n    flex-direction: column;\n    align-items: stretch;\n    padding: 0;\n  }\n  .navbar-vertical.navbar-expand-xxl .navbar-collapse .navbar-nav {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .navbar-vertical.navbar-expand-xxl .navbar-collapse .navbar-nav .nav-link {\n    padding: 0.5rem 0.75rem;\n    justify-content: flex-start;\n  }\n  .navbar-vertical.navbar-expand-xxl .navbar-collapse .dropdown-menu-columns {\n    flex-direction: column;\n  }\n  .navbar-vertical.navbar-expand-xxl .navbar-collapse .dropdown-menu {\n    padding: 0;\n    background: transparent;\n    position: static;\n    color: inherit;\n    box-shadow: none;\n    border: none;\n    min-width: 0;\n    margin: 0;\n  }\n  .navbar-vertical.navbar-expand-xxl .navbar-collapse .dropdown-menu .dropdown-item {\n    min-width: 0;\n    display: flex;\n    width: auto;\n    padding-left: 2.5rem;\n    color: inherit;\n  }\n  .navbar-vertical.navbar-expand-xxl .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 4rem;\n  }\n  .navbar-vertical.navbar-expand-xxl .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-menu .dropdown-item {\n    padding-left: 5.5rem;\n  }\n  .navbar-vertical.navbar-expand-xxl .navbar-collapse .dropdown-toggle:after {\n    margin-left: auto;\n  }\n  .navbar-vertical.navbar-expand-xxl .navbar-collapse .nav-item.active:after {\n    border-bottom-width: 0;\n    border-left-width: 3px;\n    right: auto;\n    top: 0;\n    bottom: 0;\n  }\n}\n.navbar-vertical.navbar-expand {\n  width: 15rem;\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1030;\n  align-items: flex-start;\n  transition: transform 0.3s;\n  overflow-x: auto;\n  padding: 0;\n}\n@media (prefers-reduced-motion: reduce) {\n  .navbar-vertical.navbar-expand {\n    transition: none;\n  }\n}\n.navbar-vertical.navbar-expand.navbar-right {\n  left: auto;\n  right: 0;\n}\n.navbar-vertical.navbar-expand .navbar-brand {\n  padding: 0.75rem 0;\n  justify-content: center;\n}\n.navbar-vertical.navbar-expand .navbar-collapse {\n  align-items: stretch;\n}\n.navbar-vertical.navbar-expand .navbar-nav {\n  flex-direction: column;\n  flex-grow: 1;\n  min-height: auto;\n}\n.navbar-vertical.navbar-expand .navbar-nav .nav-link {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n.navbar-vertical.navbar-expand > [class^=container] {\n  flex-direction: column;\n  align-items: stretch;\n  min-height: 100%;\n  justify-content: flex-start;\n  padding: 0;\n}\n.navbar-vertical.navbar-expand ~ .page {\n  padding-left: 15rem;\n}\n.navbar-vertical.navbar-expand ~ .page [class^=container] {\n  padding-left: 1.5rem;\n  padding-right: 1.5rem;\n}\n.navbar-vertical.navbar-expand.navbar-right ~ .page {\n  padding-left: 0;\n  padding-right: 15rem;\n}\n.navbar-vertical.navbar-expand .navbar-collapse {\n  flex-direction: column;\n}\n.navbar-vertical.navbar-expand .navbar-collapse [class^=container] {\n  flex-direction: column;\n  align-items: stretch;\n  padding: 0;\n}\n.navbar-vertical.navbar-expand .navbar-collapse .navbar-nav {\n  margin-left: 0;\n  margin-right: 0;\n}\n.navbar-vertical.navbar-expand .navbar-collapse .navbar-nav .nav-link {\n  padding: 0.5rem 0.75rem;\n  justify-content: flex-start;\n}\n.navbar-vertical.navbar-expand .navbar-collapse .dropdown-menu-columns {\n  flex-direction: column;\n}\n.navbar-vertical.navbar-expand .navbar-collapse .dropdown-menu {\n  padding: 0;\n  background: transparent;\n  position: static;\n  color: inherit;\n  box-shadow: none;\n  border: none;\n  min-width: 0;\n  margin: 0;\n}\n.navbar-vertical.navbar-expand .navbar-collapse .dropdown-menu .dropdown-item {\n  min-width: 0;\n  display: flex;\n  width: auto;\n  padding-left: 2.5rem;\n  color: inherit;\n}\n.navbar-vertical.navbar-expand .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-item {\n  padding-left: 4rem;\n}\n.navbar-vertical.navbar-expand .navbar-collapse .dropdown-menu .dropdown-menu .dropdown-menu .dropdown-item {\n  padding-left: 5.5rem;\n}\n.navbar-vertical.navbar-expand .navbar-collapse .dropdown-toggle:after {\n  margin-left: auto;\n}\n.navbar-vertical.navbar-expand .navbar-collapse .nav-item.active:after {\n  border-bottom-width: 0;\n  border-left-width: 3px;\n  right: auto;\n  top: 0;\n  bottom: 0;\n}\n\n.navbar-overlap:after {\n  content: \"\";\n  height: 9rem;\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  background: inherit;\n  z-index: -1;\n  box-shadow: inherit;\n}\n\n.page {\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  min-height: 100vh;\n}\n\n.page-center {\n  justify-content: center;\n}\n\n.page-wrapper {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n@media print {\n  .page-wrapper {\n    margin: 0 !important;\n  }\n}\n\n.page-wrapper-full .page-body:first-child {\n  margin: 0;\n  border-top: 0;\n}\n\n.page-body {\n  margin-top: 1.25rem;\n  margin-bottom: 1.25rem;\n}\n\n.page-body-card {\n  background: #ffffff;\n  border-top: 1px solid rgba(98, 105, 118, 0.16);\n  padding: 1.25rem 0;\n  margin-bottom: 0;\n  flex: 1;\n}\n.page-body ~ .page-body-card {\n  margin-top: 0;\n}\n\n.page-cover {\n  background: no-repeat center/cover;\n  min-height: 9rem;\n}\n@media (min-width: 768px) {\n  .page-cover {\n    min-height: 12rem;\n  }\n}\n@media (min-width: 992px) {\n  .page-cover {\n    min-height: 15rem;\n  }\n}\n\n.page-cover-overlay {\n  position: relative;\n}\n.page-cover-overlay:after {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.6) 100%);\n}\n\n.page-header {\n  display: flex;\n  flex-wrap: wrap;\n  min-height: 2.25rem;\n  flex-direction: column;\n  justify-content: center;\n}\n.page-wrapper .page-header {\n  margin: 1.25rem 0 0;\n}\n\n.page-header-border {\n  border-bottom: 1px solid rgba(98, 105, 118, 0.16);\n  padding-bottom: 1.25rem;\n}\n\n.page-pretitle {\n  font-size: 0.625rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.04em;\n  line-height: 1.6;\n  color: #626976;\n}\n\n.page-title {\n  margin: 0;\n  font-size: 1.25rem;\n  line-height: 1.4;\n  font-weight: 600;\n  color: inherit;\n  display: flex;\n  align-items: center;\n}\n.page-title svg {\n  width: 1.5rem;\n  height: 1.5rem;\n  margin-right: 0.25rem;\n}\n\n.page-title-lg {\n  font-size: 1.5rem;\n  line-height: 1.3333333333;\n}\n\n.page-subtitle {\n  margin-top: 0.25rem;\n  color: #626976;\n}\n\n.page-tabs {\n  margin-top: 0.5rem;\n  position: relative;\n}\n\n.page-header-tabs .nav-bordered {\n  border: 0;\n}\n.page-header-tabs + .page-body-card {\n  margin-top: 0;\n}\n\n.footer {\n  border-top: 1px solid #e6e7e9;\n  background-color: #ffffff;\n  padding: 2rem 0;\n  color: #626976;\n  margin-top: auto;\n}\n\n.footer-transparent {\n  background-color: transparent;\n  border-top: 0;\n}\n\n/*!\n * Tabler (v0.9.0): _dark.scss\n * Copyright 2018-2021 The Tabler Authors\n * Copyright 2018-2021 codecalm\n * Licensed under MIT (https://github.com/tabler/tabler/blob/master/LICENSE)\n */\nbody:not(.theme-dark) .hide-theme-light {\n  display: none !important;\n}\n\n@media not print {\n  .theme-dark {\n    --tblr-body-color: #fafbfc;\n    --tblr-body-color-rgb: 250, 251, 252;\n    --tblr-body-bg: #1b2434;\n    --tblr-body-bg-rgb: 27, 36, 52;\n    --tblr-card-bg: #1e293b;\n    --tblr-card-bg-rgb: 30, 41, 59;\n    --tblr-border-color: #2c3c56;\n    --tblr-border-color-light: #253249;\n    --tblr-btn-color: #1e293b;\n    color: #fafbfc;\n    background-color: #1b2434;\n  }\n  .theme-dark .page {\n    color: #fafbfc;\n  }\n  .theme-dark .hide-theme-dark {\n    display: none !important;\n  }\n  .theme-dark .text-body {\n    color: #fafbfc !important;\n  }\n  .theme-dark .card,\n.theme-dark .card-footer,\n.theme-dark .card-stacked::after,\n.theme-dark .footer:not(.footer-transparent),\n.theme-dark .modal-content,\n.theme-dark .modal-header,\n.theme-dark .dropdown-menu,\n.theme-dark .toast,\n.theme-dark .toast-header,\n.theme-dark .alert:not(.alert-important) {\n    background-color: #1e293b;\n    color: inherit;\n  }\n  .theme-dark .bg-light {\n    background-color: #1b2434 !important;\n  }\n  .theme-dark .card {\n    border-color: transparent;\n  }\n  .theme-dark .card-tabs .nav-tabs .nav-link {\n    background-color: #1b2434;\n    color: inherit;\n  }\n  .theme-dark pre {\n    background-color: #1b2434;\n    border-color: #2c3c56;\n  }\n  .theme-dark .card-tabs .nav-tabs .nav-link.active {\n    background-color: #1e293b;\n    color: inherit;\n  }\n  .theme-dark .btn-white,\n.theme-dark .form-file-button {\n    background-image: none;\n  }\n  .theme-dark .form-check-input:not(:checked),\n.theme-dark .form-select,\n.theme-dark .form-file-text,\n.theme-dark .form-control,\n.theme-dark .form-selectgroup-label,\n.theme-dark .form-selectgroup-check,\n.theme-dark .form-imagecheck-figure:before {\n    background-color: #1b2434;\n    color: #fafbfc;\n    border-color: #2c3c56;\n  }\n  .theme-dark .form-control-plaintext {\n    color: #fafbfc;\n  }\n  .theme-dark .input-group-flat .input-group-text {\n    background-color: #1b2434;\n  }\n  .theme-dark .input-group-text {\n    border-color: #2c3c56;\n  }\n  .theme-dark .highlight {\n    background-color: #1b2434;\n  }\n  .theme-dark .avatar {\n    --tblr-avatar-bg: #212e42;\n  }\n  .theme-dark .avatar-list-stacked .avatar {\n    box-shadow: 0 0 0 2px #1e293b;\n  }\n  .theme-dark .markdown,\n.theme-dark .markdown > *,\n.theme-dark .accordion-button {\n    color: inherit;\n  }\n  .theme-dark .btn-close,\n.theme-dark .accordion-button:after {\n    filter: invert(1) grayscale(100%) brightness(200%);\n  }\n  .theme-dark .apexcharts-text {\n    fill: #fafbfc;\n  }\n  .theme-dark .apexcharts-gridline {\n    stroke: var(--tblr-border-color);\n  }\n  .theme-dark .apexcharts-legend-text {\n    color: inherit !important;\n  }\n  .theme-dark .apexcharts-tooltip {\n    background: #1e293b !important;\n    border: 1px solid #2c3c56 !important;\n    box-shadow: 2px 2px 6px -4px #1b2434 !important;\n  }\n  .theme-dark .apexcharts-tooltip .apexcharts-tooltip-title {\n    background: #1e293b !important;\n    border-bottom: 1px solid #2c3c56 !important;\n  }\n  .theme-dark .navbar-brand-autodark {\n    filter: brightness(0) invert(1);\n  }\n  .theme-dark .table thead th, .theme-dark .markdown > table thead th,\n.theme-dark .input-group-text {\n    background: transparent;\n  }\n  .theme-dark .list-group-header {\n    background: #1b2434;\n  }\n  .theme-dark .list-group-item {\n    border-color: rgba(98, 105, 118, 0.16);\n  }\n  .theme-dark .list-group-item:not(.disabled):not(:disabled) {\n    color: #fafbfc;\n  }\n  .theme-dark .list-group-item.disabled, .theme-dark .list-group-item:disabled {\n    color: #475569;\n  }\n  .theme-dark .apexcharts-radialbar-area {\n    stroke: #2c3c56;\n  }\n  .theme-dark .form-control.is-invalid,\n.theme-dark .was-validated .form-control:invalid {\n    border-color: var(--tblr-danger);\n  }\n  .theme-dark .form-control.is-valid,\n.theme-dark .was-validated .form-control:valid {\n    border-color: var(--tblr-success);\n  }\n}\n@media not print {\n  @media (prefers-color-scheme: dark) {\n    .theme-dark-auto {\n      --tblr-body-color: #fafbfc;\n      --tblr-body-color-rgb: 250, 251, 252;\n      --tblr-body-bg: #1b2434;\n      --tblr-body-bg-rgb: 27, 36, 52;\n      --tblr-card-bg: #1e293b;\n      --tblr-card-bg-rgb: 30, 41, 59;\n      --tblr-border-color: #2c3c56;\n      --tblr-border-color-light: #253249;\n      --tblr-btn-color: #1e293b;\n      color: #fafbfc;\n      background-color: #1b2434;\n    }\n    .theme-dark-auto .page {\n      color: #fafbfc;\n    }\n    .theme-dark-auto .hide-theme-dark {\n      display: none !important;\n    }\n    .theme-dark-auto .text-body {\n      color: #fafbfc !important;\n    }\n    .theme-dark-auto .card,\n.theme-dark-auto .card-footer,\n.theme-dark-auto .card-stacked::after,\n.theme-dark-auto .footer:not(.footer-transparent),\n.theme-dark-auto .modal-content,\n.theme-dark-auto .modal-header,\n.theme-dark-auto .dropdown-menu,\n.theme-dark-auto .toast,\n.theme-dark-auto .toast-header,\n.theme-dark-auto .alert:not(.alert-important) {\n      background-color: #1e293b;\n      color: inherit;\n    }\n    .theme-dark-auto .bg-light {\n      background-color: #1b2434 !important;\n    }\n    .theme-dark-auto .card {\n      border-color: transparent;\n    }\n    .theme-dark-auto .card-tabs .nav-tabs .nav-link {\n      background-color: #1b2434;\n      color: inherit;\n    }\n    .theme-dark-auto pre {\n      background-color: #1b2434;\n      border-color: #2c3c56;\n    }\n    .theme-dark-auto .card-tabs .nav-tabs .nav-link.active {\n      background-color: #1e293b;\n      color: inherit;\n    }\n    .theme-dark-auto .btn-white,\n.theme-dark-auto .form-file-button {\n      background-image: none;\n    }\n    .theme-dark-auto .form-check-input:not(:checked),\n.theme-dark-auto .form-select,\n.theme-dark-auto .form-file-text,\n.theme-dark-auto .form-control,\n.theme-dark-auto .form-selectgroup-label,\n.theme-dark-auto .form-selectgroup-check,\n.theme-dark-auto .form-imagecheck-figure:before {\n      background-color: #1b2434;\n      color: #fafbfc;\n      border-color: #2c3c56;\n    }\n    .theme-dark-auto .form-control-plaintext {\n      color: #fafbfc;\n    }\n    .theme-dark-auto .input-group-flat .input-group-text {\n      background-color: #1b2434;\n    }\n    .theme-dark-auto .input-group-text {\n      border-color: #2c3c56;\n    }\n    .theme-dark-auto .highlight {\n      background-color: #1b2434;\n    }\n    .theme-dark-auto .avatar {\n      --tblr-avatar-bg: #212e42;\n    }\n    .theme-dark-auto .avatar-list-stacked .avatar {\n      box-shadow: 0 0 0 2px #1e293b;\n    }\n    .theme-dark-auto .markdown,\n.theme-dark-auto .markdown > *,\n.theme-dark-auto .accordion-button {\n      color: inherit;\n    }\n    .theme-dark-auto .btn-close,\n.theme-dark-auto .accordion-button:after {\n      filter: invert(1) grayscale(100%) brightness(200%);\n    }\n    .theme-dark-auto .apexcharts-text {\n      fill: #fafbfc;\n    }\n    .theme-dark-auto .apexcharts-gridline {\n      stroke: var(--tblr-border-color);\n    }\n    .theme-dark-auto .apexcharts-legend-text {\n      color: inherit !important;\n    }\n    .theme-dark-auto .apexcharts-tooltip {\n      background: #1e293b !important;\n      border: 1px solid #2c3c56 !important;\n      box-shadow: 2px 2px 6px -4px #1b2434 !important;\n    }\n    .theme-dark-auto .apexcharts-tooltip .apexcharts-tooltip-title {\n      background: #1e293b !important;\n      border-bottom: 1px solid #2c3c56 !important;\n    }\n    .theme-dark-auto .navbar-brand-autodark {\n      filter: brightness(0) invert(1);\n    }\n    .theme-dark-auto .table thead th, .theme-dark-auto .markdown > table thead th,\n.theme-dark-auto .input-group-text {\n      background: transparent;\n    }\n    .theme-dark-auto .list-group-header {\n      background: #1b2434;\n    }\n    .theme-dark-auto .list-group-item {\n      border-color: rgba(98, 105, 118, 0.16);\n    }\n    .theme-dark-auto .list-group-item:not(.disabled):not(:disabled) {\n      color: #fafbfc;\n    }\n    .theme-dark-auto .list-group-item.disabled, .theme-dark-auto .list-group-item:disabled {\n      color: #475569;\n    }\n    .theme-dark-auto .apexcharts-radialbar-area {\n      stroke: #2c3c56;\n    }\n    .theme-dark-auto .form-control.is-invalid,\n.theme-dark-auto .was-validated .form-control:invalid {\n      border-color: var(--tblr-danger);\n    }\n    .theme-dark-auto .form-control.is-valid,\n.theme-dark-auto .was-validated .form-control:valid {\n      border-color: var(--tblr-success);\n    }\n  }\n}\n.accordion {\n  --tblr-accordion-color: var(--tblr-body-color);\n}\n\n.accordion-button:focus:not(:focus-visible) {\n  outline: none;\n  box-shadow: none;\n}\n.accordion-button:after {\n  opacity: 0.7;\n}\n.accordion-button:not(.collapsed) {\n  font-weight: 600;\n  border-bottom-color: transparent;\n  box-shadow: none;\n}\n.accordion-button:not(.collapsed):after {\n  opacity: 1;\n}\n\n.alert {\n  --tblr-alert-color: #626976;\n  background: #ffffff;\n  border: 1px solid rgba(98, 105, 118, 0.16);\n  border-left: 0.25rem solid var(--tblr-alert-color);\n  box-shadow: rgba(30, 41, 59, 0.04) 0 2px 4px 0;\n}\n.alert > :last-child {\n  margin-bottom: 0;\n}\n\n.alert-important {\n  border-color: transparent;\n  background: var(--tblr-alert-color);\n  color: #fff;\n}\n.alert-important .alert-icon,\n.alert-important .alert-link {\n  color: inherit;\n}\n.alert-important .alert-link:hover {\n  color: inherit;\n}\n\n.alert-link, .alert-link:hover {\n  color: var(--tblr-alert-color);\n}\n\n.alert-primary {\n  --tblr-alert-color: #206bc4;\n}\n\n.alert-secondary {\n  --tblr-alert-color: #626976;\n}\n\n.alert-success {\n  --tblr-alert-color: #2fb344;\n}\n\n.alert-info {\n  --tblr-alert-color: #4299e1;\n}\n\n.alert-warning {\n  --tblr-alert-color: #f76707;\n}\n\n.alert-danger {\n  --tblr-alert-color: #d63939;\n}\n\n.alert-light {\n  --tblr-alert-color: #fafbfc;\n}\n\n.alert-dark {\n  --tblr-alert-color: #1e293b;\n}\n\n.alert-muted {\n  --tblr-alert-color: #626976;\n}\n\n.alert-blue {\n  --tblr-alert-color: #206bc4;\n}\n\n.alert-azure {\n  --tblr-alert-color: #4299e1;\n}\n\n.alert-indigo {\n  --tblr-alert-color: #4263eb;\n}\n\n.alert-purple {\n  --tblr-alert-color: #ae3ec9;\n}\n\n.alert-pink {\n  --tblr-alert-color: #d6336c;\n}\n\n.alert-red {\n  --tblr-alert-color: #d63939;\n}\n\n.alert-orange {\n  --tblr-alert-color: #f76707;\n}\n\n.alert-yellow {\n  --tblr-alert-color: #f59f00;\n}\n\n.alert-lime {\n  --tblr-alert-color: #74b816;\n}\n\n.alert-green {\n  --tblr-alert-color: #2fb344;\n}\n\n.alert-teal {\n  --tblr-alert-color: #0ca678;\n}\n\n.alert-cyan {\n  --tblr-alert-color: #17a2b8;\n}\n\n.alert-facebook {\n  --tblr-alert-color: #3b5998;\n}\n\n.alert-twitter {\n  --tblr-alert-color: #1da1f2;\n}\n\n.alert-linkedin {\n  --tblr-alert-color: #0a66c2;\n}\n\n.alert-google {\n  --tblr-alert-color: #dc4e41;\n}\n\n.alert-youtube {\n  --tblr-alert-color: #ff0000;\n}\n\n.alert-vimeo {\n  --tblr-alert-color: #1ab7ea;\n}\n\n.alert-dribbble {\n  --tblr-alert-color: #ea4c89;\n}\n\n.alert-github {\n  --tblr-alert-color: #181717;\n}\n\n.alert-instagram {\n  --tblr-alert-color: #e4405f;\n}\n\n.alert-pinterest {\n  --tblr-alert-color: #bd081c;\n}\n\n.alert-vk {\n  --tblr-alert-color: #6383a8;\n}\n\n.alert-rss {\n  --tblr-alert-color: #ffa500;\n}\n\n.alert-flickr {\n  --tblr-alert-color: #0063dc;\n}\n\n.alert-bitbucket {\n  --tblr-alert-color: #0052cc;\n}\n\n.alert-tabler {\n  --tblr-alert-color: #206bc4;\n}\n\n.alert-icon {\n  color: var(--tblr-alert-color);\n  width: 1.5rem !important;\n  height: 1.5rem !important;\n  margin: -0.125rem 1rem -0.125rem 0;\n}\n\n.alert-title {\n  font-size: 0.875rem;\n  line-height: 1.4285714286;\n  font-weight: 600;\n  margin-bottom: 0.25rem;\n  color: var(--tblr-alert-color);\n}\n\n.avatar {\n  --tblr-avatar-size: 2.5rem;\n  --tblr-avatar-bg: var(--tblr-border-color-light);\n  position: relative;\n  width: var(--tblr-avatar-size);\n  height: var(--tblr-avatar-size);\n  font-size: calc(var(--tblr-avatar-size) / 2.8571428572);\n  font-weight: 500;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #626976;\n  text-align: center;\n  text-transform: uppercase;\n  vertical-align: bottom;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  background: var(--tblr-avatar-bg) no-repeat center/cover;\n  border-radius: 4px;\n}\n.avatar svg {\n  width: calc(var(--tblr-avatar-size) / 1.6666666667);\n  height: calc(var(--tblr-avatar-size) / 1.6666666667);\n}\n.avatar .badge {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  border-radius: 100rem;\n  box-shadow: 0 0 0 2px #ffffff;\n}\na.avatar {\n  cursor: pointer;\n}\n\n.avatar-rounded {\n  border-radius: 100rem;\n}\n\n.avatar-xs {\n  --tblr-avatar-size: 1.5rem;\n}\n\n.avatar-xs .badge:empty {\n  width: 0.375rem;\n  height: 0.375rem;\n}\n\n.avatar-sm {\n  --tblr-avatar-size: 2rem;\n}\n\n.avatar-sm .badge:empty {\n  width: 0.5rem;\n  height: 0.5rem;\n}\n\n.avatar-md {\n  --tblr-avatar-size: 3.75rem;\n}\n\n.avatar-md .badge:empty {\n  width: 0.9375rem;\n  height: 0.9375rem;\n}\n\n.avatar-lg {\n  --tblr-avatar-size: 5rem;\n}\n\n.avatar-lg .badge:empty {\n  width: 1.25rem;\n  height: 1.25rem;\n}\n\n.avatar-xl {\n  --tblr-avatar-size: 7rem;\n}\n\n.avatar-xl .badge:empty {\n  width: 1.75rem;\n  height: 1.75rem;\n}\n\n.avatar-2xl {\n  --tblr-avatar-size: 11rem;\n}\n\n.avatar-2xl .badge:empty {\n  width: 2.75rem;\n  height: 2.75rem;\n}\n\n.avatar-list {\n  display: inline-flex;\n  padding: 0;\n  margin: 0 0 -0.5rem;\n  flex-wrap: wrap;\n}\n.avatar-list .avatar {\n  margin-bottom: 0.5rem;\n}\n.avatar-list .avatar:not(:last-child) {\n  margin-right: 0.5rem;\n}\n.avatar-list a.avatar:hover {\n  z-index: 1;\n}\n\n.avatar-list-stacked .avatar {\n  margin-right: -0.5rem !important;\n  box-shadow: 0 0 0 2px var(--tblr-card-bg);\n}\n\n.avatar-upload {\n  width: 4rem;\n  height: 4rem;\n  border: 1px dashed #e6e7e9;\n  background: #ffffff;\n  flex-direction: column;\n  transition: color 0.3s, background-color 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .avatar-upload {\n    transition: none;\n  }\n}\n.avatar-upload svg {\n  width: 1.5rem;\n  height: 1.5rem;\n  stroke-width: 1;\n}\n.avatar-upload:hover {\n  border-color: #206bc4;\n  color: #206bc4;\n  text-decoration: none;\n}\n\n.avatar-upload-text {\n  font-size: 0.625rem;\n  line-height: 1;\n  margin-top: 0.25rem;\n}\n\n.page-cover ~ * .page-avatar {\n  margin-top: calc(calc(-1 * calc(var(--tblr-avatar-size) * .5)) - 1.25rem);\n  box-shadow: 0 0 0 0.25rem #f5f7fb;\n}\n\n.badge {\n  justify-content: center;\n  align-items: center;\n  background: #64748b;\n  overflow: hidden;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  border: 1px solid transparent;\n  min-width: 1.3571428571em;\n  font-weight: 600;\n  letter-spacing: 0.04em;\n  vertical-align: bottom;\n}\na.badge {\n  color: #ffffff;\n}\n\n.badge:empty {\n  display: inline-block;\n  width: 0.5rem;\n  height: 0.5rem;\n  min-width: 0;\n  min-height: auto;\n  padding: 0;\n  border-radius: 100rem;\n  vertical-align: baseline;\n}\n.badge .avatar {\n  box-sizing: content-box;\n  width: 1.25rem;\n  height: 1.25rem;\n  margin: 0 0.5rem 0 -0.5rem;\n}\n.badge .icon {\n  width: 1em;\n  height: 1em;\n  font-size: 1rem;\n  stroke-width: 2;\n}\n\n.badge-sm {\n  font-size: 0.625rem;\n  line-height: 1.6;\n  padding: 0 0.25rem;\n}\n\n.badge-outline {\n  background-color: transparent;\n  border: 1px solid currentColor;\n}\n\n.badge-pill {\n  border-radius: 100rem;\n}\n\n.breadcrumb {\n  padding: 0;\n  margin: 0;\n  background: transparent;\n}\n.breadcrumb a {\n  color: #626976;\n}\n.breadcrumb a:hover {\n  text-decoration: underline;\n}\n\n.breadcrumb-item.active a {\n  color: inherit;\n  pointer-events: none;\n}\n\n.breadcrumb-dots {\n  --tblr-breadcrumb-divider: \"Â·\";\n}\n\n.breadcrumb-arrows {\n  --tblr-breadcrumb-divider: \"â€º\";\n}\n\n.breadcrumb-bullets {\n  --tblr-breadcrumb-divider: \"â€¢\";\n}\n\n.btn {\n  --tblr-btn-icon-size: 1.25rem;\n  --tblr-btn-color: var(--tblr-color-text);\n  --tblr-btn-border-color: var(--tblr-border-color);\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap;\n}\n.btn .icon {\n  width: var(--tblr-btn-icon-size);\n  height: var(--tblr-btn-icon-size);\n  min-width: var(--tblr-btn-icon-size);\n  margin: 0 calc(var(--tblr-btn-padding-x) / 2) 0 calc(var(--tblr-btn-padding-x) / -4);\n  vertical-align: bottom;\n  color: inherit;\n}\n.btn .avatar {\n  width: var(--tblr-btn-icon-size);\n  height: var(--tblr-btn-icon-size);\n  margin: 0 calc(var(--tblr-btn-padding-x) / 2) 0 calc(var(--tblr-btn-padding-x) / -4);\n}\n.btn .icon-right {\n  margin: 0 calc(var(--tblr-btn-padding-x) / -4) 0 calc(var(--tblr-btn-padding-x) / 2);\n}\n.btn .badge {\n  top: auto;\n}\n\n.btn-link {\n  color: #206bc4;\n  background-color: transparent;\n  border-color: transparent;\n}\n.btn-link .icon {\n  color: inherit;\n}\n.btn-link:hover {\n  color: #1a569d;\n  border-color: transparent;\n}\n\n.btn-white {\n  --tblr-btn-bg: var(--tblr-card-bg);\n  --tblr-btn-hover-bg: var(--tblr-card-bg);\n}\n\n.btn-primary {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-secondary {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-success {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-info {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-warning {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-danger {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-light {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #1e293b;\n}\n\n.btn-dark {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-muted {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-blue {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-azure {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-indigo {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-purple {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-pink {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-red {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-orange {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-yellow {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-lime {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-green {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-teal {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-cyan {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-facebook {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-twitter {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-linkedin {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-google {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-youtube {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-vimeo {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-dribbble {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-github {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-instagram {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-pinterest {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-vk {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-rss {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-flickr {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-bitbucket {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-tabler {\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-color: #fafbfc;\n}\n\n.btn-ghost-primary {\n  --tblr-btn-color: #206bc4;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #206bc4;\n  --tblr-btn-hover-border-color: #206bc4;\n  --tblr-btn-focus-shadow-rgb: 32, 107, 196;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #206bc4;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #206bc4;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-secondary {\n  --tblr-btn-color: #626976;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #626976;\n  --tblr-btn-hover-border-color: #626976;\n  --tblr-btn-focus-shadow-rgb: 98, 105, 118;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #626976;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #626976;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-success {\n  --tblr-btn-color: #2fb344;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #2fb344;\n  --tblr-btn-hover-border-color: #2fb344;\n  --tblr-btn-focus-shadow-rgb: 47, 179, 68;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #2fb344;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #2fb344;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-info {\n  --tblr-btn-color: #4299e1;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #4299e1;\n  --tblr-btn-hover-border-color: #4299e1;\n  --tblr-btn-focus-shadow-rgb: 66, 153, 225;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #4299e1;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #4299e1;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-warning {\n  --tblr-btn-color: #f76707;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #f76707;\n  --tblr-btn-hover-border-color: #f76707;\n  --tblr-btn-focus-shadow-rgb: 247, 103, 7;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #f76707;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #f76707;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-danger {\n  --tblr-btn-color: #d63939;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #d63939;\n  --tblr-btn-hover-border-color: #d63939;\n  --tblr-btn-focus-shadow-rgb: 214, 57, 57;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #d63939;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #d63939;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-light {\n  --tblr-btn-color: #fafbfc;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #1e293b;\n  --tblr-btn-hover-bg: #fafbfc;\n  --tblr-btn-hover-border-color: #fafbfc;\n  --tblr-btn-focus-shadow-rgb: 250, 251, 252;\n  --tblr-btn-active-color: #1e293b;\n  --tblr-btn-active-bg: #fafbfc;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #fafbfc;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-dark {\n  --tblr-btn-color: #1e293b;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #1e293b;\n  --tblr-btn-hover-border-color: #1e293b;\n  --tblr-btn-focus-shadow-rgb: 30, 41, 59;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #1e293b;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #1e293b;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-muted {\n  --tblr-btn-color: #626976;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #626976;\n  --tblr-btn-hover-border-color: #626976;\n  --tblr-btn-focus-shadow-rgb: 98, 105, 118;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #626976;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #626976;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-blue {\n  --tblr-btn-color: #206bc4;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #206bc4;\n  --tblr-btn-hover-border-color: #206bc4;\n  --tblr-btn-focus-shadow-rgb: 32, 107, 196;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #206bc4;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #206bc4;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-azure {\n  --tblr-btn-color: #4299e1;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #4299e1;\n  --tblr-btn-hover-border-color: #4299e1;\n  --tblr-btn-focus-shadow-rgb: 66, 153, 225;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #4299e1;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #4299e1;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-indigo {\n  --tblr-btn-color: #4263eb;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #4263eb;\n  --tblr-btn-hover-border-color: #4263eb;\n  --tblr-btn-focus-shadow-rgb: 66, 99, 235;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #4263eb;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #4263eb;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-purple {\n  --tblr-btn-color: #ae3ec9;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #ae3ec9;\n  --tblr-btn-hover-border-color: #ae3ec9;\n  --tblr-btn-focus-shadow-rgb: 174, 62, 201;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #ae3ec9;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #ae3ec9;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-pink {\n  --tblr-btn-color: #d6336c;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #d6336c;\n  --tblr-btn-hover-border-color: #d6336c;\n  --tblr-btn-focus-shadow-rgb: 214, 51, 108;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #d6336c;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #d6336c;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-red {\n  --tblr-btn-color: #d63939;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #d63939;\n  --tblr-btn-hover-border-color: #d63939;\n  --tblr-btn-focus-shadow-rgb: 214, 57, 57;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #d63939;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #d63939;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-orange {\n  --tblr-btn-color: #f76707;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #f76707;\n  --tblr-btn-hover-border-color: #f76707;\n  --tblr-btn-focus-shadow-rgb: 247, 103, 7;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #f76707;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #f76707;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-yellow {\n  --tblr-btn-color: #f59f00;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #f59f00;\n  --tblr-btn-hover-border-color: #f59f00;\n  --tblr-btn-focus-shadow-rgb: 245, 159, 0;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #f59f00;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #f59f00;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-lime {\n  --tblr-btn-color: #74b816;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #74b816;\n  --tblr-btn-hover-border-color: #74b816;\n  --tblr-btn-focus-shadow-rgb: 116, 184, 22;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #74b816;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #74b816;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-green {\n  --tblr-btn-color: #2fb344;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #2fb344;\n  --tblr-btn-hover-border-color: #2fb344;\n  --tblr-btn-focus-shadow-rgb: 47, 179, 68;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #2fb344;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #2fb344;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-teal {\n  --tblr-btn-color: #0ca678;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #0ca678;\n  --tblr-btn-hover-border-color: #0ca678;\n  --tblr-btn-focus-shadow-rgb: 12, 166, 120;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #0ca678;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #0ca678;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-cyan {\n  --tblr-btn-color: #17a2b8;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #17a2b8;\n  --tblr-btn-hover-border-color: #17a2b8;\n  --tblr-btn-focus-shadow-rgb: 23, 162, 184;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #17a2b8;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #17a2b8;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-facebook {\n  --tblr-btn-color: #3b5998;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #3b5998;\n  --tblr-btn-hover-border-color: #3b5998;\n  --tblr-btn-focus-shadow-rgb: 59, 89, 152;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #3b5998;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #3b5998;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-twitter {\n  --tblr-btn-color: #1da1f2;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #1da1f2;\n  --tblr-btn-hover-border-color: #1da1f2;\n  --tblr-btn-focus-shadow-rgb: 29, 161, 242;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #1da1f2;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #1da1f2;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-linkedin {\n  --tblr-btn-color: #0a66c2;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #0a66c2;\n  --tblr-btn-hover-border-color: #0a66c2;\n  --tblr-btn-focus-shadow-rgb: 10, 102, 194;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #0a66c2;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #0a66c2;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-google {\n  --tblr-btn-color: #dc4e41;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #dc4e41;\n  --tblr-btn-hover-border-color: #dc4e41;\n  --tblr-btn-focus-shadow-rgb: 220, 78, 65;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #dc4e41;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #dc4e41;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-youtube {\n  --tblr-btn-color: #ff0000;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #ff0000;\n  --tblr-btn-hover-border-color: #ff0000;\n  --tblr-btn-focus-shadow-rgb: 255, 0, 0;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #ff0000;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #ff0000;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-vimeo {\n  --tblr-btn-color: #1ab7ea;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #1ab7ea;\n  --tblr-btn-hover-border-color: #1ab7ea;\n  --tblr-btn-focus-shadow-rgb: 26, 183, 234;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #1ab7ea;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #1ab7ea;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-dribbble {\n  --tblr-btn-color: #ea4c89;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #ea4c89;\n  --tblr-btn-hover-border-color: #ea4c89;\n  --tblr-btn-focus-shadow-rgb: 234, 76, 137;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #ea4c89;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #ea4c89;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-github {\n  --tblr-btn-color: #181717;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #181717;\n  --tblr-btn-hover-border-color: #181717;\n  --tblr-btn-focus-shadow-rgb: 24, 23, 23;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #181717;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #181717;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-instagram {\n  --tblr-btn-color: #e4405f;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #e4405f;\n  --tblr-btn-hover-border-color: #e4405f;\n  --tblr-btn-focus-shadow-rgb: 228, 64, 95;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #e4405f;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #e4405f;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-pinterest {\n  --tblr-btn-color: #bd081c;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #bd081c;\n  --tblr-btn-hover-border-color: #bd081c;\n  --tblr-btn-focus-shadow-rgb: 189, 8, 28;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #bd081c;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #bd081c;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-vk {\n  --tblr-btn-color: #6383a8;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #6383a8;\n  --tblr-btn-hover-border-color: #6383a8;\n  --tblr-btn-focus-shadow-rgb: 99, 131, 168;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #6383a8;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #6383a8;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-rss {\n  --tblr-btn-color: #ffa500;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #ffa500;\n  --tblr-btn-hover-border-color: #ffa500;\n  --tblr-btn-focus-shadow-rgb: 255, 165, 0;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #ffa500;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #ffa500;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-flickr {\n  --tblr-btn-color: #0063dc;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #0063dc;\n  --tblr-btn-hover-border-color: #0063dc;\n  --tblr-btn-focus-shadow-rgb: 0, 99, 220;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #0063dc;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #0063dc;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-bitbucket {\n  --tblr-btn-color: #0052cc;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #0052cc;\n  --tblr-btn-hover-border-color: #0052cc;\n  --tblr-btn-focus-shadow-rgb: 0, 82, 204;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #0052cc;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #0052cc;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-ghost-tabler {\n  --tblr-btn-color: #206bc4;\n  --tblr-btn-border-color: transparent;\n  --tblr-btn-hover-color: #fafbfc;\n  --tblr-btn-hover-bg: #206bc4;\n  --tblr-btn-hover-border-color: #206bc4;\n  --tblr-btn-focus-shadow-rgb: 32, 107, 196;\n  --tblr-btn-active-color: #fafbfc;\n  --tblr-btn-active-bg: #206bc4;\n  --tblr-btn-active-border-color: transparent;\n  --tblr-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  --tblr-btn-disabled-color: #206bc4;\n  --tblr-btn-disabled-bg: transparent;\n  --tblr-btn-disabled-border-color: transparent;\n  --tblr-gradient: none;\n}\n\n.btn-sm, .btn-group-sm > .btn {\n  --tblr-btn-line-height: 1.5;\n  --tblr-btn-icon-size: .75rem;\n}\n\n.btn-lg, .btn-group-lg > .btn {\n  --tblr-btn-line-height: 1.5;\n  --tblr-btn-icon-size: 2rem;\n}\n\n.btn-pill {\n  padding-right: 1.5em;\n  padding-left: 1.5em;\n  border-radius: 10rem;\n}\n.btn-pill[class*=btn-icon] {\n  padding: 0.375rem 15px;\n}\n\n.btn-square {\n  border-radius: 0;\n}\n\n.btn-icon {\n  min-width: calc(var(--tblr-btn-line-height) * var(--tblr-btn-font-size) + var(--tblr-btn-padding-y) * 2 + var(--tblr-btn-border-width) * 2);\n  min-height: calc(var(--tblr-btn-line-height) * var(--tblr-btn-font-size) + var(--tblr-btn-padding-y) * 2 + var(--tblr-btn-border-width) * 2);\n  padding-left: 0;\n  padding-right: 0;\n}\n.btn-icon .icon {\n  margin: calc(-1 * var(--tblr-btn-padding-x));\n}\n\n.btn-list {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: -0.5rem !important;\n  margin-right: -0.5rem;\n}\n.btn-list > * {\n  margin: 0 0.5rem 0.5rem 0 !important;\n}\n\n.btn-floating {\n  position: fixed;\n  z-index: 1030;\n  bottom: 1.5rem;\n  right: 1.5rem;\n  border-radius: 100rem;\n}\n\n.btn-loading {\n  position: relative;\n  color: transparent !important;\n  text-shadow: none !important;\n  pointer-events: none;\n}\n.btn-loading > * {\n  opacity: 0;\n}\n.btn-loading:after {\n  content: \"\";\n  display: inline-block;\n  vertical-align: text-bottom;\n  border: 2px solid currentColor;\n  border-right-color: transparent;\n  border-radius: 100rem;\n  color: var(--tblr-btn-color);\n  position: absolute;\n  width: var(--tblr-btn-icon-size);\n  height: var(--tblr-btn-icon-size);\n  left: calc(50% - var(--tblr-btn-icon-size) / 2);\n  top: calc(50% - var(--tblr-btn-icon-size) / 2);\n  -webkit-animation: spinner-border 0.75s linear infinite;\n          animation: spinner-border 0.75s linear infinite;\n}\n\n.btn-action {\n  padding: 0;\n  border: 0;\n  color: #626976;\n  display: inline-flex;\n  width: 2rem;\n  height: 2rem;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n}\n.btn-action:after {\n  content: none;\n}\n.btn-action:focus {\n  outline: none;\n  box-shadow: none;\n}\n.btn-action:hover, .btn-action.show {\n  color: #1e293b;\n  background: #f5f7fb;\n}\n.btn-action.show {\n  color: #206bc4;\n}\n.btn-action .icon {\n  margin: 0;\n  width: 1.25rem;\n  height: 1.25rem;\n  font-size: 1.25rem;\n  stroke-width: 1;\n}\n\n.btn-actions {\n  display: flex;\n}\n\n.calendar {\n  display: block;\n  font-size: 0.765625rem;\n  border: 1px solid #e6e7e9;\n  border-radius: 4px;\n}\n\n.calendar-nav {\n  display: flex;\n  align-items: center;\n}\n\n.calendar-title {\n  flex: 1;\n  text-align: center;\n}\n\n.calendar-body,\n.calendar-header {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  padding: 0.5rem 0;\n}\n\n.calendar-header {\n  color: #626976;\n}\n\n.calendar-date {\n  flex: 0 0 14.2857142857%;\n  max-width: 14.2857142857%;\n  padding: 0.2rem;\n  text-align: center;\n  border: 0;\n}\n.calendar-date.prev-month, .calendar-date.next-month {\n  opacity: 0.25;\n}\n.calendar-date .date-item {\n  position: relative;\n  display: inline-block;\n  width: 1.4rem;\n  height: 1.4rem;\n  line-height: 1.4rem;\n  color: #66758c;\n  text-align: center;\n  text-decoration: none;\n  white-space: nowrap;\n  vertical-align: middle;\n  cursor: pointer;\n  background: 0 0;\n  border: 1px solid transparent;\n  border-radius: 100rem;\n  outline: 0;\n  transition: background 0.3s, border 0.3s, box-shadow 0.32s, color 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .calendar-date .date-item {\n    transition: none;\n  }\n}\n.calendar-date .date-item:hover {\n  color: #206bc4;\n  text-decoration: none;\n  background: #fefeff;\n  border-color: #e6e7e9;\n}\n.calendar-date .date-today {\n  color: #206bc4;\n  border-color: #e6e7e9;\n}\n\n.calendar-range {\n  position: relative;\n}\n.calendar-range:before {\n  position: absolute;\n  top: 50%;\n  right: 0;\n  left: 0;\n  height: 1.4rem;\n  content: \"\";\n  background: rgba(32, 107, 196, 0.1);\n  transform: translateY(-50%);\n}\n.calendar-range.range-start .date-item, .calendar-range.range-end .date-item {\n  color: #ffffff;\n  background: #206bc4;\n  border-color: #206bc4;\n}\n.calendar-range.range-start:before {\n  left: 50%;\n}\n.calendar-range.range-end:before {\n  right: 50%;\n}\n\n.carousel-indicators-vertical {\n  left: auto;\n  top: 0;\n  margin: 0 1rem 0 0;\n  flex-direction: column;\n}\n.carousel-indicators-vertical [data-bs-target] {\n  margin: 3px 0 3px;\n  width: 3px;\n  height: 30px;\n  border: 0;\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n}\n\n.carousel-indicators-dot [data-bs-target] {\n  width: 0.5rem;\n  height: 0.5rem;\n  border-radius: 100rem;\n  border: 10px solid transparent;\n  margin: 0;\n}\n\n.carousel-indicators-thumb [data-bs-target] {\n  width: 2rem;\n  height: auto;\n  background: no-repeat center/cover;\n  border: 0;\n  border-radius: 4px;\n  box-shadow: rgba(30, 41, 59, 0.04) 0 2px 4px 0;\n  margin: 0 3px;\n  opacity: 0.75;\n}\n@media (min-width: 992px) {\n  .carousel-indicators-thumb [data-bs-target] {\n    width: 4rem;\n  }\n}\n.carousel-indicators-thumb [data-bs-target]:before {\n  content: \"\";\n  padding-top: var(--tblr-aspect-ratio, 100%);\n  display: block;\n}\n.carousel-indicators-thumb.carousel-indicators-vertical [data-bs-target] {\n  margin: 3px 0;\n}\n\n.carousel-caption-background {\n  background: red;\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: 90%;\n  background: linear-gradient(0deg, rgba(30, 41, 59, 0.9), rgba(30, 41, 59, 0));\n}\n\n.card {\n  --tblr-card-border-radius: 4px;\n  box-shadow: rgba(30, 41, 59, 0.04) 0 2px 4px 0;\n  border: 1px solid rgba(98, 105, 118, 0.16);\n  background: var(--tblr-card-bg, #ffffff);\n  border-radius: var(--tblr-card-border-radius);\n  transition: transform 0.3s ease-out, opacity 0.3s ease-out, box-shadow 0.3s ease-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .card {\n    transition: none;\n  }\n}\n@media print {\n  .card {\n    border: none;\n    box-shadow: none;\n  }\n}\na.card {\n  color: inherit;\n}\na.card:hover {\n  text-decoration: none;\n  box-shadow: rgba(30, 41, 59, 0.16) 0 2px 16px 0;\n}\n\n.card .card {\n  box-shadow: none;\n}\n\n.card-borderless,\n.card-borderless .card-header,\n.card-borderless .card-footer {\n  border-color: transparent;\n}\n\n.card-stamp {\n  --stamp-size: 7rem;\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: calc(var(--stamp-size) * 1);\n  height: calc(var(--stamp-size) * 1);\n  max-height: 100%;\n  border-top-right-radius: 4px;\n  opacity: 0.2;\n  overflow: hidden;\n  pointer-events: none;\n}\n\n.card-stamp-lg {\n  --stamp-size: 13rem;\n}\n\n.card-stamp-icon {\n  background: var(--tblr-muted);\n  color: var(--tblr-card-bg);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 100rem;\n  width: calc(var(--stamp-size) * 1);\n  height: calc(var(--stamp-size) * 1);\n  position: relative;\n  top: calc(var(--stamp-size) * -0.25);\n  right: calc(var(--stamp-size) * -0.25);\n  font-size: calc(var(--stamp-size) * 0.75);\n  transform: rotate(10deg);\n}\n.card-stamp-icon .icon {\n  stroke-width: 2;\n  width: calc(var(--stamp-size) * 0.75);\n  height: calc(var(--stamp-size) * 0.75);\n}\n\n.card-img,\n.card-img-start {\n  border-top-left-radius: 3px;\n  border-bottom-left-radius: 3px;\n}\n\n.card-img,\n.card-img-end {\n  border-top-right-radius: 3px;\n  border-bottom-right-radius: 3px;\n}\n\n.card-img-overlay {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n}\n\n.card-img-overlay-dark {\n  background-image: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.6) 100%);\n}\n\n.card-inactive {\n  pointer-events: none;\n  box-shadow: none;\n}\n.card-inactive .card-body {\n  opacity: 0.64;\n}\n\n.card-active {\n  position: relative;\n  background-color: rgba(32, 107, 196, 0.03);\n  z-index: 1;\n}\n.card-active:before {\n  position: absolute;\n  top: -1px;\n  right: -1px;\n  bottom: -1px;\n  left: -1px;\n  content: \"\";\n  border: 1px solid #206bc4;\n  border-radius: inherit;\n}\n\n.card-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem 1.25rem;\n  text-align: center;\n  transition: background 0.3s;\n  border-top: 1px solid var(--tblr-border-color);\n  flex: 1;\n  color: inherit;\n  font-weight: 500;\n}\n@media (prefers-reduced-motion: reduce) {\n  .card-btn {\n    transition: none;\n  }\n}\n.card-btn:hover {\n  text-decoration: none;\n  background: rgba(32, 107, 196, 0.04);\n}\n.card-btn + .card-btn {\n  border-left: 1px solid var(--tblr-border-color);\n}\n\n.card-stacked {\n  position: relative;\n}\n.card-stacked:after {\n  position: absolute;\n  top: -5px;\n  right: 5px;\n  left: 5px;\n  height: 5px;\n  content: \"\";\n  background: #ffffff;\n  border: 1px solid rgba(98, 105, 118, 0.16);\n  border-radius: var(--tblr-card-border-radius) var(--tblr-card-border-radius) 0 0;\n}\n\n.card-cover {\n  position: relative;\n  padding: 1rem 1.25rem;\n  background: #666666 no-repeat center/cover;\n}\n.card-cover:before {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  content: \"\";\n  background: rgba(30, 41, 59, 0.48);\n}\n.card-cover:first-child, .card-cover:first-child:before {\n  border-radius: 4px 4px 0 0;\n}\n\n.card-cover-blurred:before {\n  -webkit-backdrop-filter: blur(2px);\n          backdrop-filter: blur(2px);\n}\n\n.card-actions {\n  margin: -0.5rem -0.5rem -0.5rem auto;\n  padding-left: 0.5rem;\n}\n.card-actions a {\n  text-decoration: none;\n}\n\n.card-header {\n  color: inherit;\n  display: flex;\n  align-items: center;\n  background: transparent;\n}\n.card-header:first-child {\n  border-radius: var(--tblr-card-border-radius) var(--tblr-card-border-radius) 0 0;\n}\n\n.card-header-light {\n  border-bottom-color: transparent;\n  background: var(--tblr-light);\n}\n\n.card-header-tabs {\n  flex: 1;\n  margin: -0.5rem -0.625rem -1rem;\n}\n\n.card-header-pills {\n  flex: 1;\n  margin-top: -0.5rem;\n  margin-bottom: -0.5rem;\n}\n\n.card-rotate-left {\n  transform: rotate(-1.5deg);\n}\n\n.card-rotate-right {\n  transform: rotate(1.5deg);\n}\n\n.card-link {\n  color: inherit;\n}\n.card-link:hover {\n  color: inherit;\n  text-decoration: none;\n  box-shadow: 0 1px 6px 0 rgba(0, 0, 0, 0.08);\n}\n\n.card-link-rotate:hover {\n  transform: rotate(1.5deg);\n  opacity: 1;\n}\n\n.card-link-pop:hover {\n  transform: translateY(-2px);\n  opacity: 1;\n}\n\n.card-footer {\n  margin-top: auto;\n}\n.card-footer:last-child {\n  border-radius: 0 0 var(--tblr-card-border-radius) var(--tblr-card-border-radius);\n}\n\n.card-footer-transparent {\n  background: transparent;\n  border-color: transparent;\n  padding-top: 0;\n}\n\n.card-progress {\n  height: 0.25rem;\n}\n.card-progress:last-child {\n  border-radius: 0 0 2px 2px;\n}\n.card-progress:first-child {\n  border-radius: 2px 2px 0 0;\n}\n\n.card-meta {\n  color: #626976;\n}\n\n.card-title {\n  display: block;\n  margin: 0 0 1rem;\n  font-size: 1rem;\n  font-weight: 500;\n  line-height: 1.5rem;\n}\na.card-title:hover {\n  color: inherit;\n}\n\n.card-header .card-title {\n  margin: 0;\n}\n\n.card-subtitle {\n  margin-top: -0.5rem;\n  margin-bottom: 1.25rem;\n  color: #626976;\n  font-weight: normal;\n}\n.card-header .card-subtitle {\n  margin: 0;\n}\n.card-title .card-subtitle {\n  margin: 0 0 0 0.25rem;\n  font-size: 0.875rem;\n}\n\n.card-body > :last-child {\n  margin-bottom: 0;\n}\n.card-sm > .card-body {\n  padding: 1rem;\n}\n@media (min-width: 768px) {\n  .card-md > .card-body {\n    padding: 2.5rem;\n  }\n}\n@media (min-width: 768px) {\n  .card-lg > .card-body {\n    padding: 2rem;\n  }\n}\n@media (min-width: 992px) {\n  .card-lg > .card-body {\n    padding: 4rem;\n  }\n}\n@media print {\n  .card-body {\n    padding: 0;\n  }\n}\n.card-body + .card-body {\n  border-top: 1px solid #e6e7e9;\n}\n\n.card-body-scrollable {\n  overflow: auto;\n}\n\n/**\nCard optinos\n */\n.card-options {\n  top: 1.5rem;\n  right: 0.75rem;\n  display: flex;\n  margin-left: auto;\n}\n\n.card-options-link {\n  display: inline-block;\n  min-width: 1rem;\n  margin-left: 0.25rem;\n  color: #626976;\n}\n\n/**\nCard status\n */\n.card-status-top {\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  height: 2px;\n  border-radius: var(--tblr-card-border-radius) var(--tblr-card-border-radius) 0 0;\n}\n\n.card-status-start {\n  position: absolute;\n  right: auto;\n  bottom: 0;\n  width: 2px;\n  height: 100%;\n  border-radius: var(--tblr-card-border-radius) 0 0 var(--tblr-card-border-radius);\n}\n\n.card-status-bottom {\n  position: absolute;\n  top: initial;\n  bottom: 0;\n  width: 100%;\n  height: 2px;\n  border-radius: 0 0 var(--tblr-card-border-radius) var(--tblr-card-border-radius);\n}\n\n/**\nCard table\n */\n.card-table {\n  margin-bottom: 0 !important;\n}\n.card-table tr td:first-child,\n.card-table tr th:first-child {\n  padding-left: 1.25rem;\n  border-left: 0;\n}\n.card-table tr td:last-child,\n.card-table tr th:last-child {\n  padding-right: 1.25rem;\n  border-right: 0;\n}\n.card-table thead tr:first-child,\n.card-table tbody tr:first-child,\n.card-table tfoot tr:first-child {\n  border-top: 0;\n}\n.card-table thead tr:first-child td,\n.card-table thead tr:first-child th,\n.card-table tbody tr:first-child td,\n.card-table tbody tr:first-child th,\n.card-table tfoot tr:first-child td,\n.card-table tfoot tr:first-child th {\n  border-top: 0;\n}\n.card-table thead tr:last-child,\n.card-table tbody tr:last-child,\n.card-table tfoot tr:last-child {\n  border-bottom: 0;\n}\n.card-table thead tr:last-child td,\n.card-table thead tr:last-child th,\n.card-table tbody tr:last-child td,\n.card-table tbody tr:last-child th,\n.card-table tfoot tr:last-child td,\n.card-table tfoot tr:last-child th {\n  border-bottom: 0;\n}\n.card-body + .card-table {\n  border-top: 1px solid #e6e7e9;\n}\n\n/*\nCard code\n */\n.card-code {\n  padding: 0;\n}\n.card-code .highlight {\n  margin: 0;\n  border: 0;\n}\n.card-code pre {\n  margin: 0 !important;\n  border: 0 !important;\n}\n\n/*\nCard chart\n */\n.card-chart {\n  position: relative;\n  z-index: 1;\n  height: 3.5rem;\n}\n\n/**\nCard avatar\n */\n.card-avatar {\n  margin-left: auto;\n  margin-right: auto;\n  box-shadow: 0 0 0 0.25rem #ffffff;\n  margin-top: calc(-1 * var(--tblr-avatar-size) * 0.5);\n}\n\n/*\nCard list group\n */\n.card-body + .card-list-group {\n  border-top: 1px solid #e6e7e9;\n}\n.card-list-group .list-group-item {\n  padding-right: 1.25rem;\n  padding-left: 1.25rem;\n  border-right: 0;\n  border-left: 0;\n  border-radius: 0;\n}\n.card-list-group .list-group-item:last-child {\n  border-bottom: 0;\n}\n.card-list-group .list-group-item:first-child {\n  border-top: 0;\n}\n\n.card-tabs .nav-tabs {\n  position: relative;\n  z-index: 1000;\n  border-bottom: 0;\n}\n.card-tabs .nav-tabs .nav-link {\n  color: #626976;\n  background: #fafbfc;\n  border: 1px solid rgba(98, 105, 118, 0.16);\n}\n.card-tabs .nav-tabs .nav-link.active, .card-tabs .nav-tabs .nav-link:active, .card-tabs .nav-tabs .nav-link:hover {\n  border-color: rgba(98, 105, 118, 0.16);\n  color: #1e293b;\n}\n.card-tabs .nav-tabs .nav-link.active {\n  background: #ffffff;\n  border-bottom-color: transparent;\n}\n.card-tabs .nav-tabs .nav-item:not(:first-child) .nav-link {\n  border-top-left-radius: 0;\n}\n.card-tabs .nav-tabs .nav-item:not(:last-child) .nav-link {\n  border-top-right-radius: 0;\n}\n.card-tabs .nav-tabs .nav-item + .nav-item {\n  margin-left: -1px;\n}\n.card-tabs .nav-tabs-bottom {\n  margin-bottom: 0;\n}\n.card-tabs .nav-tabs-bottom .nav-link {\n  margin-bottom: 0;\n}\n.card-tabs .nav-tabs-bottom .nav-link.active {\n  border-top-color: transparent;\n}\n.card-tabs .nav-tabs-bottom .nav-item {\n  margin-top: -1px;\n  margin-bottom: 0;\n}\n.card-tabs .nav-tabs-bottom .nav-item .nav-link {\n  border-bottom: 1px solid rgba(98, 105, 118, 0.16);\n  border-radius: 0 0 4px 4px;\n}\n.card-tabs .nav-tabs-bottom .nav-item:not(:first-child) .nav-link {\n  border-bottom-left-radius: 0;\n}\n.card-tabs .nav-tabs-bottom .nav-item:not(:last-child) .nav-link {\n  border-bottom-right-radius: 0;\n}\n.card-tabs .card {\n  border-bottom-left-radius: 0;\n}\n.card-tabs .nav-tabs + .tab-content .card {\n  border-bottom-left-radius: var(--tblr-card-border-radius);\n  border-top-left-radius: 0;\n}\n\n.btn-close {\n  cursor: pointer;\n}\n.btn-close:focus {\n  outline: none;\n}\n\n.dropdown-menu {\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  margin: 0 !important;\n}\n.dropdown-menu.card {\n  padding: 0;\n  min-width: 25rem;\n  display: none;\n}\n.dropdown-menu.card.show {\n  display: flex;\n}\n\n.dropdown-item {\n  min-width: 11rem;\n  display: flex;\n  align-items: center;\n  margin: 0;\n  line-height: 1.4285714286;\n}\n\n.dropdown-item-icon {\n  width: 1.25rem !important;\n  height: 1.25rem !important;\n  margin-right: 0.5rem;\n  color: #626976;\n  opacity: 0.7;\n  text-align: center;\n}\n\n.dropdown-item-indicator {\n  margin-right: 0.5rem;\n  margin-left: -0.25rem;\n  height: 1.25rem;\n  display: inline-flex;\n  line-height: 1;\n  vertical-align: bottom;\n  align-items: center;\n}\n\n.dropdown-header {\n  font-size: 0.625rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.04em;\n  line-height: 1.6;\n  color: #626976;\n  padding-bottom: 0.25rem;\n  pointer-events: none;\n}\n\n.dropdown-menu-scrollable {\n  height: auto;\n  max-height: 13rem;\n  overflow-x: hidden;\n}\n\n.dropdown-menu-column {\n  min-width: 11rem;\n}\n.dropdown-menu-column .dropdown-item {\n  min-width: 0;\n}\n\n.dropdown-menu-columns {\n  display: flex;\n  flex: 0 0.25rem;\n}\n\n.dropdown-menu-arrow:before {\n  content: \"\";\n  position: absolute;\n  top: -0.25rem;\n  left: 0.75rem;\n  display: block;\n  background: inherit;\n  width: 14px;\n  height: 14px;\n  transform: rotate(45deg);\n  transform-origin: center;\n  border: 1px solid;\n  border-color: inherit;\n  z-index: -1;\n  clip: rect(0px, 9px, 9px, 0px);\n}\n.dropdown-menu-arrow.dropdown-menu-end:before {\n  right: 0.75rem;\n  left: auto;\n}\n\n.dropend > .dropdown-menu {\n  margin-top: calc(-0.25rem - 1px);\n  margin-left: -0.25rem;\n}\n.dropend .dropdown-toggle:after {\n  margin-left: auto;\n}\n\n.dropdown-menu-card {\n  padding: 0;\n}\n.dropdown-menu-card > .card {\n  margin: 0;\n  border: 0;\n  box-shadow: none;\n}\n\n.datagrid {\n  --tblr-datagrid-padding: 1.5rem;\n  --tblr-datagrid-item-width: 15rem;\n  display: grid;\n  grid-gap: var(--tblr-datagrid-padding);\n  grid-template-columns: repeat(auto-fit, minmax(var(--tblr-datagrid-item-width), 1fr));\n}\n\n.datagrid-title {\n  font-size: 0.625rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.04em;\n  line-height: 1.6;\n  color: #626976;\n  margin-bottom: 0.25rem;\n}\n\n.empty {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  padding: 1rem;\n  text-align: center;\n}\n@media (min-width: 768px) {\n  .empty {\n    padding: 3rem;\n  }\n}\n\n.empty-icon {\n  margin: 0 0 1rem;\n  width: 3rem;\n  height: 3rem;\n  line-height: 1;\n  color: #626976;\n}\n.empty-icon svg {\n  width: 100%;\n  height: 100%;\n}\n\n.empty-img {\n  margin: 0 0 2rem;\n  line-height: 1;\n}\n.empty-img img {\n  height: 8rem;\n  width: auto;\n}\n\n.empty-header {\n  margin: 0 0 1rem;\n  font-size: 4rem;\n  font-weight: 300;\n  line-height: 1;\n  color: #626976;\n}\n\n.empty-title {\n  font-size: 1.25rem;\n  line-height: 1.4;\n  font-weight: 600;\n}\n\n.empty-title,\n.empty-subtitle {\n  margin: 0 0 0.5rem;\n}\n\n.empty-action {\n  margin-top: 1.5rem;\n}\n\n.empty-bordered {\n  border: 1px solid #e6e7e9;\n  border-radius: 4px;\n}\n\n.row > * {\n  min-width: 0;\n}\n\n.col-separator {\n  border-left: 1px solid #e6e7e9;\n}\n\n@media (max-width: 991.98px) {\n  .container,\n.container-fluid,\n.container-sm,\n.container-md,\n.container-lg,\n.container-xl,\n.container-xxl {\n    --tblr-gutter-x: 1rem;\n  }\n}\n\n.container-tight {\n  --tblr-gutter-x: 1.5rem;\n  --tblr-gutter-y: 0;\n  width: 100%;\n  padding-right: calc(var(--tblr-gutter-x) * 0.5);\n  padding-left: calc(var(--tblr-gutter-x) * 0.5);\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 30rem;\n}\n.container-narrow {\n  --tblr-gutter-x: 1.5rem;\n  --tblr-gutter-y: 0;\n  width: 100%;\n  padding-right: calc(var(--tblr-gutter-x) * 0.5);\n  padding-left: calc(var(--tblr-gutter-x) * 0.5);\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 45rem;\n}\n\n.row-0 {\n  margin-right: 0;\n  margin-left: 0;\n}\n.row-0 > .col,\n.row-0 > [class*=col-] {\n  padding-right: 0;\n  padding-left: 0;\n}\n.row-0 .card {\n  margin-bottom: 0;\n}\n\n.row-sm {\n  margin-right: -0.375rem;\n  margin-left: -0.375rem;\n}\n.row-sm > .col,\n.row-sm > [class*=col-] {\n  padding-right: 0.375rem;\n  padding-left: 0.375rem;\n}\n.row-sm .card {\n  margin-bottom: 0.75rem;\n}\n\n.row-md {\n  margin-right: -1.5rem;\n  margin-left: -1.5rem;\n}\n.row-md > .col,\n.row-md > [class*=col-] {\n  padding-right: 1.5rem;\n  padding-left: 1.5rem;\n}\n.row-md .card {\n  margin-bottom: 3rem;\n}\n\n.row-lg {\n  margin-right: -3rem;\n  margin-left: -3rem;\n}\n.row-lg > .col,\n.row-lg > [class*=col-] {\n  padding-right: 3rem;\n  padding-left: 3rem;\n}\n.row-lg .card {\n  margin-bottom: 6rem;\n}\n\n.row-deck > .col,\n.row-deck > [class*=col-] {\n  display: flex;\n  align-items: stretch;\n}\n.row-deck > .col .card,\n.row-deck > [class*=col-] .card {\n  flex: 1 1 auto;\n}\n\n.row-cards {\n  --tblr-gutter-x: 1rem;\n  --tblr-gutter-y: 1rem;\n  min-width: 0;\n}\n.row-cards .row-cards {\n  flex: 1;\n}\n@media (max-width: 991.98px) {\n  .row-cards {\n    --tblr-gutter-x: 0.5rem;\n    --tblr-gutter-y: 0.5rem;\n  }\n}\n\n.space-y > :not(template) ~ :not(template) {\n  margin-top: 1rem !important;\n}\n\n.space-x > :not(template) ~ :not(template) {\n  margin-left: 1rem !important;\n}\n\n.space-y-0 > :not(template) ~ :not(template) {\n  margin-top: 0 !important;\n}\n\n.space-x-0 > :not(template) ~ :not(template) {\n  margin-left: 0 !important;\n}\n\n.space-y-1 > :not(template) ~ :not(template) {\n  margin-top: 0.25rem !important;\n}\n\n.space-x-1 > :not(template) ~ :not(template) {\n  margin-left: 0.25rem !important;\n}\n\n.space-y-2 > :not(template) ~ :not(template) {\n  margin-top: 0.5rem !important;\n}\n\n.space-x-2 > :not(template) ~ :not(template) {\n  margin-left: 0.5rem !important;\n}\n\n.space-y-3 > :not(template) ~ :not(template) {\n  margin-top: 1rem !important;\n}\n\n.space-x-3 > :not(template) ~ :not(template) {\n  margin-left: 1rem !important;\n}\n\n.space-y-4 > :not(template) ~ :not(template) {\n  margin-top: 2rem !important;\n}\n\n.space-x-4 > :not(template) ~ :not(template) {\n  margin-left: 2rem !important;\n}\n\n.space-y-5 > :not(template) ~ :not(template) {\n  margin-top: 4rem !important;\n}\n\n.space-x-5 > :not(template) ~ :not(template) {\n  margin-left: 4rem !important;\n}\n\n.divide-y > :not(template) ~ :not(template) {\n  border-top: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n.divide-y > :not(template):not(:first-child) {\n  padding-top: 1rem !important;\n}\n.divide-y > :not(template):not(:last-child) {\n  padding-bottom: 1rem !important;\n}\n\n.divide-x > :not(template) ~ :not(template) {\n  border-left: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n.divide-x > :not(template):not(:first-child) {\n  padding-left: 1rem !important;\n}\n.divide-x > :not(template):not(:last-child) {\n  padding-right: 1rem !important;\n}\n\n.divide-y-0 > :not(template) ~ :not(template) {\n  border-top: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n.divide-y-0 > :not(template):not(:first-child) {\n  padding-top: 0 !important;\n}\n.divide-y-0 > :not(template):not(:last-child) {\n  padding-bottom: 0 !important;\n}\n\n.divide-x-0 > :not(template) ~ :not(template) {\n  border-left: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n.divide-x-0 > :not(template):not(:first-child) {\n  padding-left: 0 !important;\n}\n.divide-x-0 > :not(template):not(:last-child) {\n  padding-right: 0 !important;\n}\n\n.divide-y-1 > :not(template) ~ :not(template) {\n  border-top: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n.divide-y-1 > :not(template):not(:first-child) {\n  padding-top: 0.25rem !important;\n}\n.divide-y-1 > :not(template):not(:last-child) {\n  padding-bottom: 0.25rem !important;\n}\n\n.divide-x-1 > :not(template) ~ :not(template) {\n  border-left: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n.divide-x-1 > :not(template):not(:first-child) {\n  padding-left: 0.25rem !important;\n}\n.divide-x-1 > :not(template):not(:last-child) {\n  padding-right: 0.25rem !important;\n}\n\n.divide-y-2 > :not(template) ~ :not(template) {\n  border-top: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n.divide-y-2 > :not(template):not(:first-child) {\n  padding-top: 0.5rem !important;\n}\n.divide-y-2 > :not(template):not(:last-child) {\n  padding-bottom: 0.5rem !important;\n}\n\n.divide-x-2 > :not(template) ~ :not(template) {\n  border-left: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n.divide-x-2 > :not(template):not(:first-child) {\n  padding-left: 0.5rem !important;\n}\n.divide-x-2 > :not(template):not(:last-child) {\n  padding-right: 0.5rem !important;\n}\n\n.divide-y-3 > :not(template) ~ :not(template) {\n  border-top: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n.divide-y-3 > :not(template):not(:first-child) {\n  padding-top: 1rem !important;\n}\n.divide-y-3 > :not(template):not(:last-child) {\n  padding-bottom: 1rem !important;\n}\n\n.divide-x-3 > :not(template) ~ :not(template) {\n  border-left: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n.divide-x-3 > :not(template):not(:first-child) {\n  padding-left: 1rem !important;\n}\n.divide-x-3 > :not(template):not(:last-child) {\n  padding-right: 1rem !important;\n}\n\n.divide-y-4 > :not(template) ~ :not(template) {\n  border-top: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n.divide-y-4 > :not(template):not(:first-child) {\n  padding-top: 2rem !important;\n}\n.divide-y-4 > :not(template):not(:last-child) {\n  padding-bottom: 2rem !important;\n}\n\n.divide-x-4 > :not(template) ~ :not(template) {\n  border-left: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n.divide-x-4 > :not(template):not(:first-child) {\n  padding-left: 2rem !important;\n}\n.divide-x-4 > :not(template):not(:last-child) {\n  padding-right: 2rem !important;\n}\n\n.divide-y-5 > :not(template) ~ :not(template) {\n  border-top: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n.divide-y-5 > :not(template):not(:first-child) {\n  padding-top: 4rem !important;\n}\n.divide-y-5 > :not(template):not(:last-child) {\n  padding-bottom: 4rem !important;\n}\n\n.divide-x-5 > :not(template) ~ :not(template) {\n  border-left: 1px solid rgba(98, 105, 118, 0.16) !important;\n}\n.divide-x-5 > :not(template):not(:first-child) {\n  padding-left: 4rem !important;\n}\n.divide-x-5 > :not(template):not(:last-child) {\n  padding-right: 4rem !important;\n}\n\n.divide-y-fill {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n.divide-y-fill > :not(template) {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n}\n\n.icon {\n  width: 1.25rem;\n  height: 1.25rem;\n  font-size: 1.25rem;\n  vertical-align: bottom;\n  stroke-width: 1.5;\n}\n.icon:hover {\n  text-decoration: none;\n}\n\n.icon-inline {\n  width: 1em;\n  height: 1em;\n  font-size: 1.1428571429em;\n  vertical-align: -0.2em;\n}\n\n.icon-filled {\n  fill: currentColor;\n}\n\n.icon-sm {\n  width: 1rem;\n  height: 1rem;\n  stroke-width: 1;\n}\n\n.icon-md {\n  width: 2.5rem;\n  height: 2.5rem;\n  stroke-width: 1;\n}\n\n.icon-lg {\n  width: 3.5rem;\n  height: 3.5rem;\n  stroke-width: 1;\n}\n\n.img-responsive {\n  background: no-repeat center/cover;\n  padding-top: 75%;\n}\n\n.img-responsive-1x1 {\n  padding-top: 100%;\n}\n\n.img-responsive-4x3 {\n  padding-top: 75%;\n}\n\n.img-responsive-3x4 {\n  padding-top: 133.3333333333%;\n}\n\n.img-responsive-16x9 {\n  padding-top: 56.25%;\n}\n\n.img-responsive-9x16 {\n  padding-top: 177.7777777778%;\n}\n\n.img-responsive-21x9 {\n  padding-top: 42.8571428571%;\n}\n\n.img-responsive-9x21 {\n  padding-top: 233.3333333333%;\n}\n\ntextarea[cols] {\n  height: auto;\n}\n\n/**\nForm label\n */\n.col-form-label,\n.form-label {\n  display: block;\n  font-weight: 500;\n}\n.col-form-label.required:after,\n.form-label.required:after {\n  content: \"*\";\n  margin-left: 0.25rem;\n  color: #d63939;\n}\n\n.form-label-description {\n  float: right;\n  font-weight: 400;\n  color: #626976;\n}\n\n/**\nForm hint\n */\n.form-hint {\n  display: block;\n  color: #626976;\n}\n.form-hint:last-child {\n  margin-bottom: 0;\n}\n.form-hint + .form-control {\n  margin-top: 0.25rem;\n}\n.form-label + .form-hint {\n  margin-top: -0.25rem;\n}\n.input-group + .form-hint, .form-control + .form-hint, .form-select + .form-hint {\n  margin-top: 0.5rem;\n}\n\n/**\nForm select\n */\n.form-select:-moz-focusring {\n  color: var(--tblr-body-color);\n}\n\n/**\nForm control\n */\n.form-control:-webkit-autofill {\n  box-shadow: 0 0 0 1000px var(--tblr-body-bg) inset;\n  color: var(--tblr-body-color);\n}\n.form-control:disabled, .form-control.disabled {\n  color: #626976;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n}\n.form-control[size] {\n  width: auto;\n}\n.form-control[type=number]::-webkit-inner-spin-button {\n  opacity: 1;\n  cursor: pointer;\n  height: calc(calc(1.4285714286em + 0.875rem + 2px) - 1px);\n  margin: 0 -0.75rem 0 0;\n}\n.form-control[type=number]::-moz-inner-spin-button {\n  opacity: 1;\n  cursor: pointer;\n  height: calc(calc(1.4285714286em + 0.875rem + 2px) - 1px);\n  margin: 0 -0.75rem 0 0;\n}\n\n.form-control-light {\n  background-color: #f1f5f9;\n  border-color: transparent;\n}\n\n.form-control-dark {\n  background-color: rgba(0, 0, 0, 0.1);\n  color: #ffffff;\n  border-color: transparent;\n}\n.form-control-dark:focus {\n  background-color: rgba(0, 0, 0, 0.1);\n  box-shadow: none;\n  border-color: rgba(255, 255, 255, 0.24);\n}\n.form-control-dark::-moz-placeholder {\n  color: rgba(255, 255, 255, 0.6);\n}\n.form-control-dark::placeholder {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.form-control-rounded {\n  border-radius: 10rem;\n}\n\n.form-control-flush {\n  padding: 0;\n  background: none !important;\n  border-color: transparent !important;\n  resize: none;\n  box-shadow: none !important;\n  line-height: inherit;\n}\n\n.form-footer {\n  margin-top: 2rem;\n}\n\n.form-fieldset {\n  padding: 1rem;\n  margin-bottom: 1rem;\n  background: var(--tblr-body-bg);\n  border: 1px solid var(--tblr-border-color);\n  border-radius: 4px;\n}\n\n/**\nForm help\n */\n.form-help {\n  display: inline-flex;\n  font-weight: 600;\n  align-items: center;\n  justify-content: center;\n  width: 1.125rem;\n  height: 1.125rem;\n  font-size: 0.75rem;\n  color: #626976;\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  background: var(--tblr-border-color-light);\n  border-radius: 100rem;\n  transition: background-color 0.3s, color 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .form-help {\n    transition: none;\n  }\n}\n.form-help:hover, .form-help[aria-describedby] {\n  color: #ffffff;\n  background: #206bc4;\n}\n\n/**\nInput group\n */\n.input-group-link {\n  font-size: 0.75rem;\n}\n\n.input-group-flat:focus-within {\n  box-shadow: 0 0 0 0.25rem rgba(32, 107, 196, 0.25);\n  border-radius: 4px;\n}\n.input-group-flat:focus-within .form-control,\n.input-group-flat:focus-within .input-group-text {\n  border-color: #90b5e2 !important;\n}\n.input-group-flat .form-control:focus {\n  border-color: #d9dbde;\n  box-shadow: none;\n}\n.input-group-flat .form-control:not(:last-child) {\n  border-right: 0;\n}\n.input-group-flat .form-control:not(:first-child) {\n  border-left: 0;\n}\n.input-group-flat .input-group-text {\n  background: transparent;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .input-group-flat .input-group-text {\n    transition: none;\n  }\n}\n.input-group-flat .input-group-text:first-child {\n  padding-right: 0;\n}\n.input-group-flat .input-group-text:last-child {\n  padding-left: 0;\n}\n\n/**\nUpload files\n */\n.form-file-button {\n  margin-left: 0;\n  border-left: 0;\n}\n\n/**\nIcon input\n */\n.input-icon {\n  position: relative;\n}\n.input-icon .form-control:not(:last-child),\n.input-icon .form-select:not(:last-child) {\n  padding-right: 2.5rem;\n}\n.input-icon .form-control:not(:first-child),\n.input-icon .form-select:not(:last-child) {\n  padding-left: 2.5rem;\n}\n\n.input-icon-addon {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 2.5rem;\n  color: #626976;\n  pointer-events: none;\n  font-size: 1.2em;\n}\n.input-icon-addon:last-child {\n  right: 0;\n  left: auto;\n}\n\n/*\nColor Input\n */\n.form-colorinput {\n  position: relative;\n  display: inline-block;\n  margin: 0;\n  line-height: 1;\n  cursor: pointer;\n}\n\n.form-colorinput-input {\n  position: absolute;\n  z-index: -1;\n  opacity: 0;\n}\n\n.form-colorinput-color {\n  display: block;\n  width: 1.5rem;\n  height: 1.5rem;\n  color: #ffffff;\n  border: 1px solid rgba(98, 105, 118, 0.16);\n  border-radius: 3px;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n}\n.form-colorinput-color:before {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  content: \"\";\n  background: no-repeat center center/1rem;\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='16' height='16'%3e%3cpath fill='none' stroke='%23ffffff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8.5l2.5 2.5l5.5 -5.5'/%3e%3c/svg%3e\");\n  opacity: 0;\n  transition: opacity 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .form-colorinput-color:before {\n    transition: none;\n  }\n}\n.form-colorinput-input:checked ~ .form-colorinput-color:before {\n  opacity: 1;\n}\n.form-colorinput-input:focus ~ .form-colorinput-color {\n  border-color: #206bc4;\n  box-shadow: 0 0 0 0.25rem rgba(32, 107, 196, 0.25);\n}\n.form-colorinput-light .form-colorinput-color:before {\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='16' height='16'%3e%3cpath fill='none' stroke='%231e293b' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8.5l2.5 2.5l5.5 -5.5'/%3e%3c/svg%3e\");\n}\n\n/**\nImage check\n */\n.form-imagecheck {\n  position: relative;\n  margin: 0;\n  cursor: pointer;\n}\n\n.form-imagecheck-input {\n  position: absolute;\n  z-index: -1;\n  opacity: 0;\n}\n\n.form-imagecheck-figure {\n  position: relative;\n  display: block;\n  margin: 0;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  border: 1px solid var(--tblr-border-color);\n  border-radius: 3px;\n}\n.form-imagecheck-input:focus ~ .form-imagecheck-figure {\n  border-color: #206bc4;\n  box-shadow: 0 0 0 0.25rem rgba(32, 107, 196, 0.25);\n}\n.form-imagecheck-input:checked ~ .form-imagecheck-figure {\n  border-color: #206bc4;\n}\n.form-imagecheck-figure:before {\n  position: absolute;\n  top: 0.25rem;\n  left: 0.25rem;\n  z-index: 1;\n  display: block;\n  width: 1rem;\n  height: 1rem;\n  color: #ffffff;\n  pointer-events: none;\n  content: \"\";\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  background: #ffffff;\n  border: 1px solid #e6e7e9;\n  border-radius: 3px;\n  transition: opacity 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .form-imagecheck-figure:before {\n    transition: none;\n  }\n}\n.form-imagecheck-input:checked ~ .form-imagecheck-figure:before {\n  background-color: #206bc4;\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='16' height='16'%3e%3cpath fill='none' stroke='%23ffffff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8.5l2.5 2.5l5.5 -5.5'/%3e%3c/svg%3e\");\n  background-repeat: repeat;\n  background-position: center;\n  background-size: 1rem;\n  border-color: rgba(98, 105, 118, 0.24);\n}\n\n.form-imagecheck-image {\n  max-width: 100%;\n  display: block;\n  opacity: 0.64;\n  transition: opacity 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .form-imagecheck-image {\n    transition: none;\n  }\n}\n.form-imagecheck-image:first-child {\n  border-top-left-radius: 2px;\n  border-top-right-radius: 2px;\n}\n.form-imagecheck-image:last-child {\n  border-bottom-right-radius: 2px;\n  border-bottom-left-radius: 2px;\n}\n.form-imagecheck:hover .form-imagecheck-image, .form-imagecheck-input:focus ~ .form-imagecheck-figure .form-imagecheck-image, .form-imagecheck-input:checked ~ .form-imagecheck-figure .form-imagecheck-image {\n  opacity: 1;\n}\n\n.form-imagecheck-caption {\n  padding: 0.25rem;\n  font-size: 0.765625rem;\n  color: #626976;\n  text-align: center;\n  transition: color 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .form-imagecheck-caption {\n    transition: none;\n  }\n}\n.form-imagecheck:hover .form-imagecheck-caption, .form-imagecheck-input:focus ~ .form-imagecheck-figure .form-imagecheck-caption, .form-imagecheck-input:checked ~ .form-imagecheck-figure .form-imagecheck-caption {\n  color: #1e293b;\n}\n\n/*\nSelect group\n */\n.form-selectgroup {\n  display: inline-flex;\n  margin: 0 -0.5rem -0.5rem 0;\n  flex-wrap: wrap;\n}\n.form-selectgroup .form-selectgroup-item {\n  margin: 0 0.5rem 0.5rem 0;\n}\n\n.form-selectgroup-vertical {\n  flex-direction: column;\n}\n\n.form-selectgroup-item {\n  display: block;\n  position: relative;\n}\n\n.form-selectgroup-input {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -1;\n  opacity: 0;\n}\n\n.form-selectgroup-label {\n  position: relative;\n  display: block;\n  min-width: calc(1.4285714286em + 0.875rem + 2px);\n  margin: 0;\n  padding: 0.4375rem 0.75rem;\n  font-size: 0.875rem;\n  line-height: 1.4285714286;\n  color: #626976;\n  background: #ffffff;\n  text-align: center;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  border: 1px solid #d9dbde;\n  border-radius: 3px;\n  transition: border-color 0.3s, background 0.3s, color 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .form-selectgroup-label {\n    transition: none;\n  }\n}\n.form-selectgroup-label .icon:only-child {\n  margin: 0 -0.25rem;\n}\n.form-selectgroup-label:hover {\n  color: #1e293b;\n}\n\n.form-selectgroup-check {\n  display: inline-block;\n  width: 1rem;\n  height: 1rem;\n  border: 1px solid rgba(98, 105, 118, 0.24);\n  vertical-align: middle;\n}\n.form-selectgroup-input[type=checkbox] + .form-selectgroup-label .form-selectgroup-check {\n  border-radius: 4px;\n}\n.form-selectgroup-input[type=radio] + .form-selectgroup-label .form-selectgroup-check {\n  border-radius: 50%;\n}\n.form-selectgroup-input:checked + .form-selectgroup-label .form-selectgroup-check {\n  background-color: #206bc4;\n  background-repeat: repeat;\n  background-position: center;\n  background-size: 1rem;\n  border-color: rgba(98, 105, 118, 0.24);\n}\n.form-selectgroup-input[type=checkbox]:checked + .form-selectgroup-label .form-selectgroup-check {\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='16' height='16'%3e%3cpath fill='none' stroke='%23ffffff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8.5l2.5 2.5l5.5 -5.5'/%3e%3c/svg%3e\");\n}\n.form-selectgroup-input[type=radio]:checked + .form-selectgroup-label .form-selectgroup-check {\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3ccircle r='3' fill='%23ffffff' cx='8' cy='8' /%3e%3c/svg%3e\");\n}\n\n.form-selectgroup-check-floated {\n  position: absolute;\n  top: 0.4375rem;\n  right: 0.4375rem;\n}\n\n.form-selectgroup-input:checked + .form-selectgroup-label {\n  z-index: 1;\n  color: #206bc4;\n  background: rgba(32, 107, 196, 0.04);\n  border-color: #206bc4;\n}\n\n.form-selectgroup-input:focus + .form-selectgroup-label {\n  z-index: 2;\n  color: #206bc4;\n  border-color: #206bc4;\n  box-shadow: 0 0 0 0.25rem rgba(32, 107, 196, 0.25);\n}\n\n/**\nAlternate version of form select group\n */\n.form-selectgroup-boxes .form-selectgroup-label {\n  text-align: left;\n  padding: 1.25rem 1rem;\n  color: inherit;\n}\n.form-selectgroup-boxes .form-selectgroup-input:checked + .form-selectgroup-label {\n  color: inherit;\n}\n.form-selectgroup-boxes .form-selectgroup-input:checked + .form-selectgroup-label .form-selectgroup-title {\n  color: #206bc4;\n}\n.form-selectgroup-boxes .form-selectgroup-input:checked + .form-selectgroup-label .form-selectgroup-label-content {\n  opacity: 1;\n}\n\n/**\nSelect group\n */\n.form-selectgroup-pills {\n  flex-wrap: wrap;\n  align-items: flex-start;\n}\n.form-selectgroup-pills .form-selectgroup-item {\n  flex-grow: 0;\n}\n.form-selectgroup-pills .form-selectgroup-label {\n  border-radius: 50px;\n}\n\n/**\nBootstrap color input\n */\n.form-control-color::-webkit-color-swatch {\n  border: none;\n}\n\n/**\nRemove the cancel buttons in Chrome and Safari on macOS.\n */\n[type=search]::-webkit-search-cancel-button {\n  -webkit-appearance: none;\n}\n\n/**\nForm control dark theme fix\n */\n.form-control::-webkit-file-upload-button {\n  background-color: var(--tblr-btn-color, #fafbfc);\n}\n.form-control::file-selector-button {\n  background-color: var(--tblr-btn-color, #fafbfc);\n}\n.form-control:hover:not(:disabled):not([readonly])::-webkit-file-upload-button {\n  background-color: var(--tblr-btn-color, #eeeeef);\n}\n.form-control:hover:not(:disabled):not([readonly])::file-selector-button {\n  background-color: var(--tblr-btn-color, #eeeeef);\n}\n\n/*\nForm check\n */\n.form-check {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n}\n.form-check.form-check-highlight .form-check-input:not(:checked) ~ .form-check-label {\n  opacity: 0.7;\n}\n\n.form-check-input {\n  background-size: 1rem;\n  margin-top: 0.125rem;\n}\n.form-switch .form-check-input {\n  transition: background-color 0.3s, background-position 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .form-switch .form-check-input {\n    transition: none;\n  }\n}\n\n.form-check-label {\n  display: block;\n}\n.form-check-label.required:after {\n  content: \"*\";\n  margin-left: 0.25rem;\n  color: #d63939;\n}\n\n.form-check-description {\n  display: block;\n  color: #626976;\n  font-size: 0.75rem;\n  margin-top: 0.25rem;\n}\n\n.form-check-single {\n  margin: 0;\n}\n.form-check-single .form-check-input {\n  margin: 0;\n}\n\n/*\nForm switch\n */\n.form-switch .form-check-input {\n  height: 1.125rem;\n  margin-top: 0.0625rem;\n}\n\n.form-switch-lg .form-check-input {\n  height: 1.5rem;\n  width: 2.75rem;\n  background-size: 1.5rem;\n}\n\n.form-select.is-invalid-lite, .form-control.is-invalid-lite, .form-select.is-valid-lite, .form-control.is-valid-lite {\n  border-color: var(--tblr-border-color) !important;\n}\n\n.legend {\n  display: inline-block;\n  background: var(--tblr-border-color-light);\n  width: 0.75em;\n  height: 0.75em;\n  border-radius: 4px;\n}\n\n.list-group {\n  margin-left: 0;\n  margin-right: 0;\n}\n\n.list-group-header {\n  background: #fafbfc;\n  padding: 0.5rem 1.25rem;\n  font-size: 0.75rem;\n  font-weight: 500;\n  line-height: 1;\n  text-transform: uppercase;\n  color: #626976;\n  border-bottom: 1px solid var(--tblr-border-color);\n}\n.list-group-flush > .list-group-header:last-child {\n  border-bottom-width: 0;\n}\n\n.list-group-item {\n  background-color: inherit;\n}\n\n.list-group-item.active {\n  background-color: rgba(27, 125, 241, 0.02);\n  border-left-color: #f59f00;\n  border-left-width: 2px;\n}\n\n.list-group-item:active, .list-group-item:focus, .list-group-item:hover {\n  background-color: rgba(27, 125, 241, 0.02);\n}\n\n.list-group-item.disabled, .list-group-item:disabled {\n  color: #64748b;\n  background-color: rgba(27, 125, 241, 0.02);\n}\n\n.list-bordered .list-item {\n  border-top: 1px solid #e6e7e9;\n  margin-top: -1px;\n}\n.list-bordered .list-item:first-child {\n  border-top: none;\n}\n\n.list-group-hoverable .list-group-item-actions {\n  opacity: 0;\n  transition: opacity 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .list-group-hoverable .list-group-item-actions {\n    transition: none;\n  }\n}\n.list-group-hoverable .list-group-item:hover .list-group-item-actions,\n.list-group-hoverable .list-group-item-actions.show {\n  opacity: 1;\n}\n\n.list-timeline {\n  position: relative;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n}\n.list-timeline > li {\n  position: relative;\n  margin-bottom: 1.5rem;\n}\n.list-timeline > li:last-child {\n  margin-bottom: 0;\n}\n\n.list-timeline-time {\n  float: right;\n  margin-left: 1rem;\n  color: #626976;\n}\n\n.list-timeline-icon {\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 2.5rem;\n  height: 2.5rem;\n  color: #ffffff;\n  text-align: center;\n  background: #626976;\n  border-radius: 100rem;\n}\n.list-timeline-icon .icon {\n  width: 1rem;\n  height: 1rem;\n  font-size: 1rem;\n}\n\n.list-timeline-title {\n  margin: 0;\n  font-weight: 600;\n}\n\n.list-timeline-content {\n  margin-left: 3.5rem;\n}\n\n@media screen and (min-width: 768px) {\n  .list-timeline:not(.list-timeline-simple):before {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: calc(7.5rem + 2px);\n    z-index: 1;\n    display: block;\n    width: 4px;\n    content: \"\";\n    background-color: #f5f7fb;\n  }\n  .list-timeline:not(.list-timeline-simple) > li {\n    z-index: 2;\n    min-height: 40px;\n  }\n  .list-timeline:not(.list-timeline-simple) .list-timeline-time {\n    position: absolute;\n    top: 0.5rem;\n    left: 0;\n    width: 5.5rem;\n    margin: 0;\n    text-align: right;\n  }\n  .list-timeline:not(.list-timeline-simple) .list-timeline-icon {\n    top: 0;\n    left: 6.5rem;\n  }\n  .list-timeline:not(.list-timeline-simple) .list-timeline-content {\n    padding: 0.625rem 0 0 10rem;\n    margin: 0;\n  }\n}\n.list-group-transparent {\n  margin: 0 -1.25rem;\n}\n.list-group-transparent .list-group-item {\n  background: none;\n  border: 0;\n  border-radius: 3px;\n}\n.list-group-transparent .list-group-item .icon {\n  color: #626976;\n}\n.list-group-transparent .list-group-item.active {\n  font-weight: 600;\n  color: inherit;\n  background: rgba(32, 107, 196, 0.04);\n}\n.list-group-transparent .list-group-item.active .icon {\n  color: inherit;\n}\n\n.list-separated-item {\n  padding: 1rem 0;\n}\n.list-separated-item:first-child {\n  padding-top: 0;\n}\n.list-separated-item:last-child {\n  padding-bottom: 0;\n}\n.list-separated-item + .list-separated-item {\n  border-top: 1px solid #e6e7e9;\n}\n\n/**\nInline list\n */\n.list-inline-item:not(:last-child) {\n  margin-right: auto;\n  -webkit-margin-end: 0.5rem;\n          margin-inline-end: 0.5rem;\n}\n\n.list-inline-dots .list-inline-item + .list-inline-item:before {\n  content: \" Â· \";\n  -webkit-margin-end: 0.5rem;\n          margin-inline-end: 0.5rem;\n}\n\n@-webkit-keyframes loader {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loader {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n.loader {\n  position: relative;\n  display: block;\n  width: 2.5rem;\n  height: 2.5rem;\n  color: #206bc4;\n  vertical-align: middle;\n}\n.loader:after {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  content: \"\";\n  border: 1px solid;\n  border-color: transparent;\n  border-top-color: currentColor;\n  border-left-color: currentColor;\n  border-radius: 100rem;\n  -webkit-animation: loader 0.6s linear;\n          animation: loader 0.6s linear;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n}\n\n/**\nDimmer\n*/\n.dimmer {\n  position: relative;\n}\n.dimmer .loader {\n  position: absolute;\n  top: 50%;\n  right: 0;\n  left: 0;\n  display: none;\n  margin: 0 auto;\n  transform: translateY(-50%);\n}\n.dimmer.active .loader {\n  display: block;\n}\n.dimmer.active .dimmer-content {\n  pointer-events: none;\n  opacity: 0.1;\n}\n\n@-webkit-keyframes animated-dots {\n  0% {\n    transform: translateX(-100%);\n  }\n}\n\n@keyframes animated-dots {\n  0% {\n    transform: translateX(-100%);\n  }\n}\n.animated-dots {\n  display: inline-block;\n  overflow: hidden;\n  vertical-align: bottom;\n}\n.animated-dots:after {\n  display: inline-block;\n  content: \"...\";\n  -webkit-animation: animated-dots 1.2s steps(4, jump-none) infinite;\n          animation: animated-dots 1.2s steps(4, jump-none) infinite;\n}\n\n.modal-content .btn-close {\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 3.5rem;\n  height: 3.5rem;\n  margin: 0;\n  padding: 0;\n  z-index: 10;\n}\n\n.modal-body::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  -webkit-transition: background 0.3s;\n  transition: background 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .modal-body::-webkit-scrollbar {\n    -webkit-transition: none;\n    transition: none;\n  }\n}\n.modal-body::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  background: rgba(var(--tblr-body-color-rgb), 0.16);\n}\n.modal-body::-webkit-scrollbar-track {\n  background: rgba(var(--tblr-body-color-rgb), 0.06);\n}\n.modal-body:hover::-webkit-scrollbar-thumb {\n  background: rgba(var(--tblr-body-color-rgb), 0.32);\n}\n.modal-body::-webkit-scrollbar-corner {\n  background: transparent;\n}\n.modal-body .modal-title {\n  margin-bottom: 1rem;\n}\n.modal-body + .modal-body {\n  border-top: 1px solid var(--tblr-border-color);\n}\n\n.modal-status {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 2px;\n  background: #626976;\n  border-radius: 4px 4px 0 0;\n}\n\n.modal-header {\n  align-items: center;\n  min-height: 3.5rem;\n  background: #ffffff;\n  padding: 0 3.5rem 0 1.5rem;\n}\n\n.modal-title {\n  font-size: 1rem;\n  font-weight: 600;\n  line-height: 1.4285714286;\n}\n\n.modal-footer {\n  padding-top: 0;\n  padding-bottom: 0.75rem;\n}\n\n.modal-blur {\n  -webkit-backdrop-filter: blur(4px);\n          backdrop-filter: blur(4px);\n}\n\n.modal-full-width {\n  max-width: none;\n  margin: 0 0.5rem;\n}\n\n.nav-vertical,\n.nav-vertical .nav {\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\n.nav-vertical .nav {\n  margin-left: 1.25rem;\n  border-left: 1px solid var(--tblr-border-color);\n  padding-left: 0.5rem;\n}\n.nav-vertical .nav-link.active,\n.nav-vertical .nav-item.show .nav-link {\n  font-weight: 600;\n}\n.nav-vertical.nav-pills {\n  margin: 0 -0.75rem;\n}\n\n.nav-bordered {\n  border-bottom: 1px solid #e6e7e9;\n}\n.nav-bordered .nav-item + .nav-item {\n  margin-left: 1.25rem;\n}\n.nav-bordered .nav-link {\n  padding-left: 0;\n  padding-right: 0;\n  margin: 0 0 -1px;\n  border: 0;\n  border-bottom: 2px solid transparent;\n  color: #626976;\n}\n.nav-bordered .nav-link.active,\n.nav-bordered .nav-item.show .nav-link {\n  color: #206bc4;\n  border-color: #206bc4;\n}\n\n.nav-tabs-alt .nav-link {\n  font-size: 13px;\n  font-weight: 600;\n  text-transform: uppercase;\n}\n\n.nav-link {\n  display: flex;\n  transition: color 0.3s;\n  align-items: center;\n}\n@media (prefers-reduced-motion: reduce) {\n  .nav-link {\n    transition: none;\n  }\n}\n\n.nav-link-toggle {\n  margin-left: auto;\n  padding: 0 0.25rem;\n  transition: transform 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .nav-link-toggle {\n    transition: none;\n  }\n}\n.nav-link-toggle:after {\n  content: \"\";\n  display: inline-block;\n  vertical-align: 0.306em;\n  width: 0.36em;\n  height: 0.36em;\n  border-bottom: 1px solid;\n  border-left: 1px solid;\n  margin-right: 0.1em;\n  margin-left: 0.4em;\n  transform: rotate(-45deg);\n}\n.nav-link-toggle:after {\n  margin: 0;\n}\n.nav-link[aria-expanded=true] .nav-link-toggle {\n  transform: rotate(180deg);\n}\n\n.nav-link-icon {\n  width: 1.5rem;\n  height: 1.25rem;\n  margin-right: 0.25rem;\n  opacity: 0.7;\n}\n.nav-link-icon svg {\n  display: block;\n  height: 100%;\n}\n\n.stars {\n  display: inline-flex;\n  color: #94a3b8;\n  font-size: 0.75rem;\n}\n.stars .star:not(:first-child) {\n  margin-left: 0.25rem;\n}\n\n.pagination {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n}\n\n.page-link {\n  min-width: 1.75rem;\n  border-radius: 4px;\n}\n.page-link:hover {\n  background: transparent;\n}\n\n.page-item {\n  text-align: center;\n}\n.page-item.page-prev, .page-item.page-next {\n  flex: 0 0 50%;\n  text-align: left;\n}\n.page-item.page-next {\n  margin-left: auto;\n  text-align: right;\n}\n\n.page-item-subtitle {\n  margin-bottom: 2px;\n  font-size: 12px;\n  color: #626976;\n  text-transform: uppercase;\n}\n.page-item.disabled .page-item-subtitle {\n  color: rgba(98, 105, 118, 0.5);\n}\n\n.page-item-title {\n  font-size: 1rem;\n  font-weight: 400;\n  color: #1e293b;\n}\n.page-link:hover .page-item-title {\n  color: #206bc4;\n}\n.page-item.disabled .page-item-title {\n  color: rgba(98, 105, 118, 0.5);\n}\n\n@-webkit-keyframes progress-indeterminate {\n  0% {\n    right: 100%;\n    left: -35%;\n  }\n  100%, 60% {\n    right: -90%;\n    left: 100%;\n  }\n}\n\n@keyframes progress-indeterminate {\n  0% {\n    right: 100%;\n    left: -35%;\n  }\n  100%, 60% {\n    right: -90%;\n    left: 100%;\n  }\n}\n.progress {\n  position: relative;\n  width: 100%;\n  line-height: 0.5rem;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  background: var(--tblr-border-color-light);\n}\n.progress::-webkit-progress-bar {\n  background: #f1f5f9;\n}\n.progress::-webkit-progress-value {\n  background-color: #206bc4;\n}\n.progress::-moz-progress-bar {\n  background-color: #206bc4;\n}\n.progress::-ms-fill {\n  background-color: #206bc4;\n  border: none;\n}\n\n.progress-sm {\n  height: 0.25rem;\n}\n\n.progress-bar {\n  height: 100%;\n}\n\n.progress-bar-indeterminate:after, .progress-bar-indeterminate:before {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  content: \"\";\n  background-color: inherit;\n  will-change: left, right;\n}\n.progress-bar-indeterminate:before {\n  -webkit-animation: progress-indeterminate 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n          animation: progress-indeterminate 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n}\n\n.progress-separated .progress-bar {\n  border-right: 2px solid var(--tblr-card-bg, #ffffff);\n}\n\n.ribbon {\n  position: absolute;\n  top: 0.75rem;\n  right: -0.25rem;\n  z-index: 1;\n  padding: 0.25rem 0.75rem;\n  font-size: 0.625rem;\n  font-weight: 600;\n  line-height: 1.5rem;\n  color: #ffffff;\n  text-align: center;\n  text-transform: uppercase;\n  background: #206bc4;\n  border-color: #206bc4;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 2rem;\n  min-width: 2rem;\n}\n.ribbon:before {\n  position: absolute;\n  right: 0;\n  bottom: 100%;\n  width: 0;\n  height: 0;\n  content: \"\";\n  filter: brightness(70%);\n  border: 0.125rem solid;\n  border-color: inherit;\n  border-top-color: transparent;\n  border-right-color: transparent;\n}\n.ribbon.bg-blue {\n  border-color: #206bc4;\n}\n.ribbon.bg-blue-lt {\n  border-color: #2b72c7 !important;\n}\n.ribbon.bg-azure {\n  border-color: #4299e1;\n}\n.ribbon.bg-azure-lt {\n  border-color: #4b9ee3 !important;\n}\n.ribbon.bg-indigo {\n  border-color: #4263eb;\n}\n.ribbon.bg-indigo-lt {\n  border-color: #4b6bec !important;\n}\n.ribbon.bg-purple {\n  border-color: #ae3ec9;\n}\n.ribbon.bg-purple-lt {\n  border-color: #b248cc !important;\n}\n.ribbon.bg-pink {\n  border-color: #d6336c;\n}\n.ribbon.bg-pink-lt {\n  border-color: #d83d73 !important;\n}\n.ribbon.bg-red {\n  border-color: #d63939;\n}\n.ribbon.bg-red-lt {\n  border-color: #d84343 !important;\n}\n.ribbon.bg-orange {\n  border-color: #f76707;\n}\n.ribbon.bg-orange-lt {\n  border-color: #f76f13 !important;\n}\n.ribbon.bg-yellow {\n  border-color: #f59f00;\n}\n.ribbon.bg-yellow-lt {\n  border-color: #f6a40d !important;\n}\n.ribbon.bg-lime {\n  border-color: #74b816;\n}\n.ribbon.bg-lime-lt {\n  border-color: #7bbc22 !important;\n}\n.ribbon.bg-green {\n  border-color: #2fb344;\n}\n.ribbon.bg-green-lt {\n  border-color: #39b74d !important;\n}\n.ribbon.bg-teal {\n  border-color: #0ca678;\n}\n.ribbon.bg-teal-lt {\n  border-color: #18aa7f !important;\n}\n.ribbon.bg-cyan {\n  border-color: #17a2b8;\n}\n.ribbon.bg-cyan-lt {\n  border-color: #23a7bc !important;\n}\n.ribbon .icon {\n  width: 1.25rem;\n  height: 1.25rem;\n  font-size: 1.25rem;\n}\n\n.ribbon-top {\n  top: -0.25rem;\n  right: 0.75rem;\n  width: 2rem;\n  padding: 0.5rem 0;\n}\n.ribbon-top:before {\n  top: 0;\n  right: 100%;\n  bottom: auto;\n  border-color: inherit;\n  border-top-color: transparent;\n  border-left-color: transparent;\n}\n.ribbon-top.ribbon-start {\n  right: auto;\n  left: 0.75rem;\n}\n.ribbon-top.ribbon-start:before {\n  top: 0;\n  right: 100%;\n  left: auto;\n}\n\n.ribbon-start {\n  right: auto;\n  left: -0.25rem;\n}\n.ribbon-start:before {\n  top: auto;\n  bottom: 100%;\n  left: 0;\n  border-color: inherit;\n  border-top-color: transparent;\n  border-left-color: transparent;\n}\n\n.ribbon-bottom {\n  top: auto;\n  bottom: 0.75rem;\n}\n\n.ribbon-bookmark {\n  padding-left: 0.25rem;\n}\n.ribbon-bookmark:after {\n  position: absolute;\n  top: 0;\n  right: 100%;\n  display: block;\n  width: 0;\n  height: 0;\n  content: \"\";\n  border: 1rem solid;\n  border-color: inherit;\n  border-right-width: 0;\n  border-left-color: transparent;\n  border-left-width: 0.5rem;\n}\n.ribbon-bookmark.ribbon-left {\n  padding-right: 0.5rem;\n  padding-left: 0.5rem;\n}\n.ribbon-bookmark.ribbon-left:after {\n  right: auto;\n  left: 100%;\n  border-right-color: transparent;\n  border-right-width: 0.5rem;\n  border-left-width: 0;\n}\n.ribbon-bookmark.ribbon-top {\n  padding-right: 0;\n  padding-bottom: 0.25rem;\n  padding-left: 0;\n}\n.ribbon-bookmark.ribbon-top:after {\n  top: 100%;\n  right: 0;\n  left: 0;\n  border-color: inherit;\n  border-width: 1rem;\n  border-top-width: 0;\n  border-bottom-color: transparent;\n  border-bottom-width: 0.5rem;\n}\n\n/**\nMarkdown\n */\n.markdown {\n  font-size: 1rem;\n  line-height: 1.7142857143;\n}\n.markdown > :first-child {\n  margin-top: 0;\n}\n.markdown > :last-child,\n.markdown > :last-child .highlight {\n  margin-bottom: 0;\n}\n@media (min-width: 768px) {\n  .markdown > hr, .markdown > .hr {\n    margin-top: 3em;\n    margin-bottom: 3em;\n  }\n}\n.markdown > h1, .markdown > .h1, .markdown > h2, .markdown > .h2, .markdown > h3, .markdown > .h3, .markdown > h4, .markdown > .h4, .markdown > h5, .markdown > .h5, .markdown > h6, .markdown > .h6 {\n  font-weight: 600;\n}\n.markdown > blockquote {\n  font-size: 1rem;\n  margin: 1.5rem 0;\n  padding: 0.5rem 1.5rem;\n}\n.markdown > img {\n  border-radius: 4px;\n}\n\n.placeholder:not(.btn):not([class*=bg-]) {\n  background-color: currentColor !important;\n}\n.placeholder:not(.avatar):not([class*=card-img-]) {\n  border-radius: 4px;\n}\n\n.steps {\n  display: flex;\n  flex-wrap: nowrap;\n  width: 100%;\n  padding: 0;\n  margin: 2rem 0;\n  list-style: none;\n}\n.steps .step-item {\n  padding-top: calc(0.5rem + 4px);\n}\n.steps .step-item:after {\n  top: calc(0.25rem + 2px);\n  height: 2px;\n}\n.steps .step-item:before {\n  width: 0.5rem;\n  height: 0.5rem;\n}\n.steps .step-item:after, .steps .step-item:before {\n  color: #ffffff;\n  background: #206bc4;\n}\n.steps .step-item.active:before {\n  color: inherit;\n  border-color: #206bc4;\n}\n\n.steps-blue .step-item:after, .steps-blue .step-item:before {\n  color: #ffffff;\n  background: #206bc4;\n}\n.steps-blue .step-item.active:before {\n  color: inherit;\n  border-color: #206bc4;\n}\n\n.steps-azure .step-item:after, .steps-azure .step-item:before {\n  color: #ffffff;\n  background: #4299e1;\n}\n.steps-azure .step-item.active:before {\n  color: inherit;\n  border-color: #4299e1;\n}\n\n.steps-indigo .step-item:after, .steps-indigo .step-item:before {\n  color: #ffffff;\n  background: #4263eb;\n}\n.steps-indigo .step-item.active:before {\n  color: inherit;\n  border-color: #4263eb;\n}\n\n.steps-purple .step-item:after, .steps-purple .step-item:before {\n  color: #ffffff;\n  background: #ae3ec9;\n}\n.steps-purple .step-item.active:before {\n  color: inherit;\n  border-color: #ae3ec9;\n}\n\n.steps-pink .step-item:after, .steps-pink .step-item:before {\n  color: #ffffff;\n  background: #d6336c;\n}\n.steps-pink .step-item.active:before {\n  color: inherit;\n  border-color: #d6336c;\n}\n\n.steps-red .step-item:after, .steps-red .step-item:before {\n  color: #ffffff;\n  background: #d63939;\n}\n.steps-red .step-item.active:before {\n  color: inherit;\n  border-color: #d63939;\n}\n\n.steps-orange .step-item:after, .steps-orange .step-item:before {\n  color: #ffffff;\n  background: #f76707;\n}\n.steps-orange .step-item.active:before {\n  color: inherit;\n  border-color: #f76707;\n}\n\n.steps-yellow .step-item:after, .steps-yellow .step-item:before {\n  color: #ffffff;\n  background: #f59f00;\n}\n.steps-yellow .step-item.active:before {\n  color: inherit;\n  border-color: #f59f00;\n}\n\n.steps-lime .step-item:after, .steps-lime .step-item:before {\n  color: #ffffff;\n  background: #74b816;\n}\n.steps-lime .step-item.active:before {\n  color: inherit;\n  border-color: #74b816;\n}\n\n.steps-green .step-item:after, .steps-green .step-item:before {\n  color: #ffffff;\n  background: #2fb344;\n}\n.steps-green .step-item.active:before {\n  color: inherit;\n  border-color: #2fb344;\n}\n\n.steps-teal .step-item:after, .steps-teal .step-item:before {\n  color: #ffffff;\n  background: #0ca678;\n}\n.steps-teal .step-item.active:before {\n  color: inherit;\n  border-color: #0ca678;\n}\n\n.steps-cyan .step-item:after, .steps-cyan .step-item:before {\n  color: #ffffff;\n  background: #17a2b8;\n}\n.steps-cyan .step-item.active:before {\n  color: inherit;\n  border-color: #17a2b8;\n}\n\n.step-item {\n  position: relative;\n  flex: 1 1 0;\n  min-height: 1rem;\n  margin-top: 0;\n  color: inherit;\n  text-align: center;\n  cursor: default;\n}\na.step-item {\n  cursor: pointer;\n}\na.step-item:hover {\n  color: inherit;\n}\n\n.step-item:not(:first-child):after {\n  position: absolute;\n  left: -50%;\n  width: 100%;\n  content: \"\";\n  transform: translateY(-50%);\n}\n.step-item:before {\n  position: absolute;\n  top: 0;\n  left: 50%;\n  z-index: 1;\n  box-sizing: content-box;\n  display: block;\n  content: \"\";\n  border: 2px solid #ffffff;\n  border-radius: 100rem;\n  transform: translateX(-50%);\n}\n.step-item.active {\n  font-weight: 600;\n}\n.step-item.active:before {\n  background: #ffffff;\n}\n.step-item.active ~ .step-item {\n  color: #626976;\n}\n.step-item.active ~ .step-item:after, .step-item.active ~ .step-item:before {\n  background: #f3f5f5;\n}\n.step-item.active ~ .step-item:before {\n  color: #626976 !important;\n}\n\n.steps-counter {\n  counter-reset: steps;\n}\n.steps-counter .step-item {\n  padding-top: calc(1.5rem + 4px);\n}\n.steps-counter .step-item:after {\n  top: calc(0.75rem + 2px);\n  height: 2px;\n}\n.steps-counter .step-item:before {\n  width: 1.5rem;\n  height: 1.5rem;\n}\n.steps-counter .step-item {\n  counter-increment: steps;\n}\n.steps-counter .step-item:before {\n  font-size: 0.75rem;\n  line-height: 1.5rem;\n  content: counter(steps);\n}\n.steps-counter .step-item.active ~ .step-item:before {\n  background: #ffffff;\n}\n\n@-webkit-keyframes status-pulsate-main {\n  40% {\n    transform: scale(1.25, 1.25);\n  }\n  60% {\n    transform: scale(1.25, 1.25);\n  }\n}\n\n@keyframes status-pulsate-main {\n  40% {\n    transform: scale(1.25, 1.25);\n  }\n  60% {\n    transform: scale(1.25, 1.25);\n  }\n}\n@-webkit-keyframes status-pulsate-secondary {\n  10% {\n    transform: scale(1, 1);\n  }\n  30% {\n    transform: scale(3, 3);\n  }\n  80% {\n    transform: scale(3, 3);\n  }\n  100% {\n    transform: scale(1, 1);\n  }\n}\n@keyframes status-pulsate-secondary {\n  10% {\n    transform: scale(1, 1);\n  }\n  30% {\n    transform: scale(3, 3);\n  }\n  80% {\n    transform: scale(3, 3);\n  }\n  100% {\n    transform: scale(1, 1);\n  }\n}\n@-webkit-keyframes status-pulsate-tertiary {\n  25% {\n    transform: scale(1, 1);\n  }\n  80% {\n    transform: scale(3, 3);\n    opacity: 0;\n  }\n  100% {\n    transform: scale(3, 3);\n    opacity: 0;\n  }\n}\n@keyframes status-pulsate-tertiary {\n  25% {\n    transform: scale(1, 1);\n  }\n  80% {\n    transform: scale(3, 3);\n    opacity: 0;\n  }\n  100% {\n    transform: scale(3, 3);\n    opacity: 0;\n  }\n}\n.status {\n  --tblr-status-height: 1.5rem;\n  --tblr-status-color: #626976;\n  --tblr-status-color-rgb: 98, 105, 118;\n  display: inline-flex;\n  align-items: center;\n  height: var(--tblr-status-height);\n  padding: 0.25rem 0.75rem;\n  gap: 0.5rem;\n  color: var(--tblr-status-color);\n  background: rgba(var(--tblr-status-color-rgb), 0.1);\n  font-size: 0.875rem;\n  text-transform: none;\n  letter-spacing: normal;\n  border-radius: 100rem;\n  font-weight: 500;\n  line-height: 1;\n  margin: 0;\n}\n.status .status-dot {\n  background: var(--tblr-status-color);\n}\n.status .icon {\n  font-size: 1.25rem;\n}\n\n.status-lite {\n  border: 1px solid var(--tblr-border-color) !important;\n  background: transparent !important;\n  color: var(--tblr-body-text) !important;\n}\n\n.status-primary {\n  --tblr-status-color: #206bc4;\n  --tblr-status-color-rgb: 32, 107, 196;\n}\n\n.status-secondary {\n  --tblr-status-color: #626976;\n  --tblr-status-color-rgb: 98, 105, 118;\n}\n\n.status-success {\n  --tblr-status-color: #2fb344;\n  --tblr-status-color-rgb: 47, 179, 68;\n}\n\n.status-info {\n  --tblr-status-color: #4299e1;\n  --tblr-status-color-rgb: 66, 153, 225;\n}\n\n.status-warning {\n  --tblr-status-color: #f76707;\n  --tblr-status-color-rgb: 247, 103, 7;\n}\n\n.status-danger {\n  --tblr-status-color: #d63939;\n  --tblr-status-color-rgb: 214, 57, 57;\n}\n\n.status-light {\n  --tblr-status-color: #fafbfc;\n  --tblr-status-color-rgb: 250, 251, 252;\n}\n\n.status-dark {\n  --tblr-status-color: #1e293b;\n  --tblr-status-color-rgb: 30, 41, 59;\n}\n\n.status-muted {\n  --tblr-status-color: #626976;\n  --tblr-status-color-rgb: 98, 105, 118;\n}\n\n.status-blue {\n  --tblr-status-color: #206bc4;\n  --tblr-status-color-rgb: 32, 107, 196;\n}\n\n.status-azure {\n  --tblr-status-color: #4299e1;\n  --tblr-status-color-rgb: 66, 153, 225;\n}\n\n.status-indigo {\n  --tblr-status-color: #4263eb;\n  --tblr-status-color-rgb: 66, 99, 235;\n}\n\n.status-purple {\n  --tblr-status-color: #ae3ec9;\n  --tblr-status-color-rgb: 174, 62, 201;\n}\n\n.status-pink {\n  --tblr-status-color: #d6336c;\n  --tblr-status-color-rgb: 214, 51, 108;\n}\n\n.status-red {\n  --tblr-status-color: #d63939;\n  --tblr-status-color-rgb: 214, 57, 57;\n}\n\n.status-orange {\n  --tblr-status-color: #f76707;\n  --tblr-status-color-rgb: 247, 103, 7;\n}\n\n.status-yellow {\n  --tblr-status-color: #f59f00;\n  --tblr-status-color-rgb: 245, 159, 0;\n}\n\n.status-lime {\n  --tblr-status-color: #74b816;\n  --tblr-status-color-rgb: 116, 184, 22;\n}\n\n.status-green {\n  --tblr-status-color: #2fb344;\n  --tblr-status-color-rgb: 47, 179, 68;\n}\n\n.status-teal {\n  --tblr-status-color: #0ca678;\n  --tblr-status-color-rgb: 12, 166, 120;\n}\n\n.status-cyan {\n  --tblr-status-color: #17a2b8;\n  --tblr-status-color-rgb: 23, 162, 184;\n}\n\n.status-facebook {\n  --tblr-status-color: #3b5998;\n  --tblr-status-color-rgb: 59, 89, 152;\n}\n\n.status-twitter {\n  --tblr-status-color: #1da1f2;\n  --tblr-status-color-rgb: 29, 161, 242;\n}\n\n.status-linkedin {\n  --tblr-status-color: #0a66c2;\n  --tblr-status-color-rgb: 10, 102, 194;\n}\n\n.status-google {\n  --tblr-status-color: #dc4e41;\n  --tblr-status-color-rgb: 220, 78, 65;\n}\n\n.status-youtube {\n  --tblr-status-color: #ff0000;\n  --tblr-status-color-rgb: 255, 0, 0;\n}\n\n.status-vimeo {\n  --tblr-status-color: #1ab7ea;\n  --tblr-status-color-rgb: 26, 183, 234;\n}\n\n.status-dribbble {\n  --tblr-status-color: #ea4c89;\n  --tblr-status-color-rgb: 234, 76, 137;\n}\n\n.status-github {\n  --tblr-status-color: #181717;\n  --tblr-status-color-rgb: 24, 23, 23;\n}\n\n.status-instagram {\n  --tblr-status-color: #e4405f;\n  --tblr-status-color-rgb: 228, 64, 95;\n}\n\n.status-pinterest {\n  --tblr-status-color: #bd081c;\n  --tblr-status-color-rgb: 189, 8, 28;\n}\n\n.status-vk {\n  --tblr-status-color: #6383a8;\n  --tblr-status-color-rgb: 99, 131, 168;\n}\n\n.status-rss {\n  --tblr-status-color: #ffa500;\n  --tblr-status-color-rgb: 255, 165, 0;\n}\n\n.status-flickr {\n  --tblr-status-color: #0063dc;\n  --tblr-status-color-rgb: 0, 99, 220;\n}\n\n.status-bitbucket {\n  --tblr-status-color: #0052cc;\n  --tblr-status-color-rgb: 0, 82, 204;\n}\n\n.status-tabler {\n  --tblr-status-color: #206bc4;\n  --tblr-status-color-rgb: 32, 107, 196;\n}\n\n.status-dot {\n  --tblr-status-dot-color: var(--tblr-status-color, #626976);\n  --tblr-status-size: 0.5rem;\n  position: relative;\n  display: inline-block;\n  width: var(--tblr-status-size);\n  height: var(--tblr-status-size);\n  background: var(--tblr-status-dot-color);\n  border-radius: 100rem;\n}\n\n.status-dot-animated:before {\n  content: \"\";\n  position: absolute;\n  inset: 0;\n  z-index: 0;\n  background: inherit;\n  border-radius: inherit;\n  opacity: 0.6;\n  -webkit-animation: 1s linear 2s backwards infinite status-pulsate-tertiary;\n          animation: 1s linear 2s backwards infinite status-pulsate-tertiary;\n}\n\n.status-indicator {\n  --tblr-status-indicator-size: 2.5rem;\n  --tblr-status-indicator-color: var(--tblr-status-color, #626976);\n  display: block;\n  position: relative;\n  width: var(--tblr-status-indicator-size);\n  height: var(--tblr-status-indicator-size);\n}\n\n.status-indicator-circle {\n  --tblr-status-circle-size: .75rem;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  margin: calc(var(--tblr-status-circle-size) / -2) 0 0 calc(var(--tblr-status-circle-size) / -2);\n  width: var(--tblr-status-circle-size);\n  height: var(--tblr-status-circle-size);\n  border-radius: 100rem;\n  background: var(--tblr-status-color);\n}\n.status-indicator-circle:nth-child(1) {\n  z-index: 3;\n}\n.status-indicator-circle:nth-child(2) {\n  z-index: 2;\n  opacity: 0.1;\n}\n.status-indicator-circle:nth-child(3) {\n  z-index: 1;\n  opacity: 0.3;\n}\n\n.status-indicator-animated .status-indicator-circle:nth-child(1) {\n  -webkit-animation: 2s linear 1s infinite backwards status-pulsate-main;\n          animation: 2s linear 1s infinite backwards status-pulsate-main;\n}\n.status-indicator-animated .status-indicator-circle:nth-child(2) {\n  -webkit-animation: 2s linear 1s infinite backwards status-pulsate-secondary;\n          animation: 2s linear 1s infinite backwards status-pulsate-secondary;\n}\n.status-indicator-animated .status-indicator-circle:nth-child(3) {\n  -webkit-animation: 2s linear 1s infinite backwards status-pulsate-tertiary;\n          animation: 2s linear 1s infinite backwards status-pulsate-tertiary;\n}\n\n.switch-icon {\n  display: inline-block;\n  line-height: 1;\n  border: 0;\n  padding: 0;\n  background: transparent;\n  width: 1.25rem;\n  height: 1.25rem;\n  vertical-align: bottom;\n  position: relative;\n  cursor: pointer;\n}\n.switch-icon.disabled {\n  pointer-events: none;\n  opacity: 0.65;\n}\n.switch-icon:focus {\n  outline: none;\n}\n.switch-icon svg {\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n.switch-icon .switch-icon-a,\n.switch-icon .switch-icon-b {\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n.switch-icon .switch-icon-a {\n  opacity: 1;\n}\n.switch-icon .switch-icon-b {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n}\n.switch-icon.active .switch-icon-a {\n  opacity: 0;\n}\n.switch-icon.active .switch-icon-b {\n  opacity: 1;\n}\n\n.switch-icon-fade .switch-icon-a,\n.switch-icon-fade .switch-icon-b {\n  transition: opacity 0.5s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .switch-icon-fade .switch-icon-a,\n.switch-icon-fade .switch-icon-b {\n    transition: none;\n  }\n}\n\n.switch-icon-scale .switch-icon-a,\n.switch-icon-scale .switch-icon-b {\n  transition: opacity 0.5s, transform 0s 0.5s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .switch-icon-scale .switch-icon-a,\n.switch-icon-scale .switch-icon-b {\n    transition: none;\n  }\n}\n.switch-icon-scale .switch-icon-b {\n  transform: scale(1.5);\n}\n.switch-icon-scale.active .switch-icon-a,\n.switch-icon-scale.active .switch-icon-b {\n  transition: opacity 0s, transform 0.5s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .switch-icon-scale.active .switch-icon-a,\n.switch-icon-scale.active .switch-icon-b {\n    transition: none;\n  }\n}\n.switch-icon-scale.active .switch-icon-b {\n  transform: scale(1);\n}\n\n.switch-icon-flip {\n  perspective: 10em;\n}\n.switch-icon-flip .switch-icon-a,\n.switch-icon-flip .switch-icon-b {\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n  transform-style: preserve-3d;\n  transition: opacity 0s 0.2s, transform 0.4s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) {\n  .switch-icon-flip .switch-icon-a,\n.switch-icon-flip .switch-icon-b {\n    transition: none;\n  }\n}\n.switch-icon-flip .switch-icon-a {\n  opacity: 1;\n  transform: rotateY(0deg);\n}\n.switch-icon-flip .switch-icon-b {\n  opacity: 1;\n  transform: rotateY(-180deg);\n}\n.switch-icon-flip.active .switch-icon-a {\n  opacity: 1;\n  transform: rotateY(180deg);\n}\n.switch-icon-flip.active .switch-icon-b {\n  opacity: 1;\n  transform: rotateY(0deg);\n}\n\n.switch-icon-slide-up,\n.switch-icon-slide-left,\n.switch-icon-slide-right,\n.switch-icon-slide-down {\n  overflow: hidden;\n}\n.switch-icon-slide-up .switch-icon-a,\n.switch-icon-slide-up .switch-icon-b,\n.switch-icon-slide-left .switch-icon-a,\n.switch-icon-slide-left .switch-icon-b,\n.switch-icon-slide-right .switch-icon-a,\n.switch-icon-slide-right .switch-icon-b,\n.switch-icon-slide-down .switch-icon-a,\n.switch-icon-slide-down .switch-icon-b {\n  transition: opacity 0.3s, transform 0.3s;\n}\n@media (prefers-reduced-motion: reduce) {\n  .switch-icon-slide-up .switch-icon-a,\n.switch-icon-slide-up .switch-icon-b,\n.switch-icon-slide-left .switch-icon-a,\n.switch-icon-slide-left .switch-icon-b,\n.switch-icon-slide-right .switch-icon-a,\n.switch-icon-slide-right .switch-icon-b,\n.switch-icon-slide-down .switch-icon-a,\n.switch-icon-slide-down .switch-icon-b {\n    transition: none;\n  }\n}\n.switch-icon-slide-up .switch-icon-a,\n.switch-icon-slide-left .switch-icon-a,\n.switch-icon-slide-right .switch-icon-a,\n.switch-icon-slide-down .switch-icon-a {\n  transform: translateY(0);\n}\n.switch-icon-slide-up .switch-icon-b,\n.switch-icon-slide-left .switch-icon-b,\n.switch-icon-slide-right .switch-icon-b,\n.switch-icon-slide-down .switch-icon-b {\n  transform: translateY(100%);\n}\n.switch-icon-slide-up.active .switch-icon-a,\n.switch-icon-slide-left.active .switch-icon-a,\n.switch-icon-slide-right.active .switch-icon-a,\n.switch-icon-slide-down.active .switch-icon-a {\n  transform: translateY(-100%);\n}\n.switch-icon-slide-up.active .switch-icon-b,\n.switch-icon-slide-left.active .switch-icon-b,\n.switch-icon-slide-right.active .switch-icon-b,\n.switch-icon-slide-down.active .switch-icon-b {\n  transform: translateY(0);\n}\n\n.switch-icon-slide-left .switch-icon-a {\n  transform: translateX(0);\n}\n.switch-icon-slide-left .switch-icon-b {\n  transform: translateX(100%);\n}\n.switch-icon-slide-left.active .switch-icon-a {\n  transform: translateX(-100%);\n}\n.switch-icon-slide-left.active .switch-icon-b {\n  transform: translateX(0);\n}\n\n.switch-icon-slide-right .switch-icon-a {\n  transform: translateX(0);\n}\n.switch-icon-slide-right .switch-icon-b {\n  transform: translateX(-100%);\n}\n.switch-icon-slide-right.active .switch-icon-a {\n  transform: translateX(100%);\n}\n.switch-icon-slide-right.active .switch-icon-b {\n  transform: translateX(0);\n}\n\n.switch-icon-slide-down .switch-icon-a {\n  transform: translateY(0);\n}\n.switch-icon-slide-down .switch-icon-b {\n  transform: translateY(-100%);\n}\n.switch-icon-slide-down.active .switch-icon-a {\n  transform: translateY(100%);\n}\n.switch-icon-slide-down.active .switch-icon-b {\n  transform: translateY(0);\n}\n\n.table thead th, .markdown > table thead th {\n  color: #626976;\n  background: var(--tblr-border-color-light);\n  font-size: 0.625rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.04em;\n  line-height: 1.6;\n  color: #626976;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  white-space: nowrap;\n}\n@media print {\n  .table thead th, .markdown > table thead th {\n    background: transparent;\n  }\n}\n.table > :not(:first-child), .markdown > table > :not(:first-child) {\n  border-top-width: 1px;\n}\n\n.table-responsive .table, .table-responsive .markdown > table {\n  margin-bottom: 0;\n}\n\n.table-transparent thead th {\n  background: transparent;\n}\n\n.table-nowrap > :not(caption) > * > * {\n  white-space: nowrap;\n}\n\n.table-vcenter > :not(caption) > * > * {\n  vertical-align: middle;\n}\n\n.table-center > :not(caption) > * > * {\n  text-align: center;\n}\n\n.td-truncate {\n  max-width: 1px;\n  width: 100%;\n}\n\n.table-mobile {\n  display: block;\n}\n.table-mobile thead {\n  display: none;\n}\n.table-mobile tbody,\n.table-mobile tr {\n  display: flex;\n  flex-direction: column;\n}\n.table-mobile td {\n  display: block;\n  padding: 0.75rem 0.75rem !important;\n  border: none;\n  color: #1e293b !important;\n}\n.table-mobile td[data-label]:before {\n  font-size: 0.625rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.04em;\n  line-height: 1.6;\n  color: #626976;\n  content: attr(data-label);\n  display: block;\n}\n.table-mobile tr {\n  border-bottom: 1px solid rgba(98, 105, 118, 0.16);\n}\n.table-mobile .btn {\n  display: block;\n}\n@media (max-width: 575.98px) {\n  .table-mobile-sm {\n    display: block;\n  }\n  .table-mobile-sm thead {\n    display: none;\n  }\n  .table-mobile-sm tbody,\n.table-mobile-sm tr {\n    display: flex;\n    flex-direction: column;\n  }\n  .table-mobile-sm td {\n    display: block;\n    padding: 0.75rem 0.75rem !important;\n    border: none;\n    color: #1e293b !important;\n  }\n  .table-mobile-sm td[data-label]:before {\n    font-size: 0.625rem;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.04em;\n    line-height: 1.6;\n    color: #626976;\n    content: attr(data-label);\n    display: block;\n  }\n  .table-mobile-sm tr {\n    border-bottom: 1px solid rgba(98, 105, 118, 0.16);\n  }\n  .table-mobile-sm .btn {\n    display: block;\n  }\n}\n@media (max-width: 767.98px) {\n  .table-mobile-md {\n    display: block;\n  }\n  .table-mobile-md thead {\n    display: none;\n  }\n  .table-mobile-md tbody,\n.table-mobile-md tr {\n    display: flex;\n    flex-direction: column;\n  }\n  .table-mobile-md td {\n    display: block;\n    padding: 0.75rem 0.75rem !important;\n    border: none;\n    color: #1e293b !important;\n  }\n  .table-mobile-md td[data-label]:before {\n    font-size: 0.625rem;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.04em;\n    line-height: 1.6;\n    color: #626976;\n    content: attr(data-label);\n    display: block;\n  }\n  .table-mobile-md tr {\n    border-bottom: 1px solid rgba(98, 105, 118, 0.16);\n  }\n  .table-mobile-md .btn {\n    display: block;\n  }\n}\n@media (max-width: 991.98px) {\n  .table-mobile-lg {\n    display: block;\n  }\n  .table-mobile-lg thead {\n    display: none;\n  }\n  .table-mobile-lg tbody,\n.table-mobile-lg tr {\n    display: flex;\n    flex-direction: column;\n  }\n  .table-mobile-lg td {\n    display: block;\n    padding: 0.75rem 0.75rem !important;\n    border: none;\n    color: #1e293b !important;\n  }\n  .table-mobile-lg td[data-label]:before {\n    font-size: 0.625rem;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.04em;\n    line-height: 1.6;\n    color: #626976;\n    content: attr(data-label);\n    display: block;\n  }\n  .table-mobile-lg tr {\n    border-bottom: 1px solid rgba(98, 105, 118, 0.16);\n  }\n  .table-mobile-lg .btn {\n    display: block;\n  }\n}\n@media (max-width: 1199.98px) {\n  .table-mobile-xl {\n    display: block;\n  }\n  .table-mobile-xl thead {\n    display: none;\n  }\n  .table-mobile-xl tbody,\n.table-mobile-xl tr {\n    display: flex;\n    flex-direction: column;\n  }\n  .table-mobile-xl td {\n    display: block;\n    padding: 0.75rem 0.75rem !important;\n    border: none;\n    color: #1e293b !important;\n  }\n  .table-mobile-xl td[data-label]:before {\n    font-size: 0.625rem;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.04em;\n    line-height: 1.6;\n    color: #626976;\n    content: attr(data-label);\n    display: block;\n  }\n  .table-mobile-xl tr {\n    border-bottom: 1px solid rgba(98, 105, 118, 0.16);\n  }\n  .table-mobile-xl .btn {\n    display: block;\n  }\n}\n@media (max-width: 1399.98px) {\n  .table-mobile-xxl {\n    display: block;\n  }\n  .table-mobile-xxl thead {\n    display: none;\n  }\n  .table-mobile-xxl tbody,\n.table-mobile-xxl tr {\n    display: flex;\n    flex-direction: column;\n  }\n  .table-mobile-xxl td {\n    display: block;\n    padding: 0.75rem 0.75rem !important;\n    border: none;\n    color: #1e293b !important;\n  }\n  .table-mobile-xxl td[data-label]:before {\n    font-size: 0.625rem;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.04em;\n    line-height: 1.6;\n    color: #626976;\n    content: attr(data-label);\n    display: block;\n  }\n  .table-mobile-xxl tr {\n    border-bottom: 1px solid rgba(98, 105, 118, 0.16);\n  }\n  .table-mobile-xxl .btn {\n    display: block;\n  }\n}\n\n.table-sort {\n  font: inherit;\n  color: inherit;\n  text-transform: inherit;\n  letter-spacing: inherit;\n  border: 0;\n  background: inherit;\n  display: block;\n  width: 100%;\n  text-align: inherit;\n  transition: color 0.3s;\n  margin: -0.5rem -0.75rem;\n  padding: 0.5rem 0.75rem;\n}\n@media (prefers-reduced-motion: reduce) {\n  .table-sort {\n    transition: none;\n  }\n}\n.table-sort:hover, .table-sort.asc, .table-sort.desc {\n  color: #1e293b;\n}\n.table-sort:after, .table-sort.asc:after, .table-sort.desc:after {\n  content: \"\";\n  display: inline-flex;\n  width: 1rem;\n  height: 1rem;\n  vertical-align: bottom;\n  background: url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='16' height='16' fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='1'><path d='M5 7l3 -3l3 3'/><path d='M5 10l3 3l3 -3'/></svg>\") no-repeat center;\n  opacity: 0.2;\n}\n.table-sort.asc:after {\n  background: url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='16' height='16'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='1' d='M5 10l3 -3l3 3'/></svg>\") no-repeat center;\n  opacity: 1;\n}\n.table-sort.desc:after {\n  background: url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='16' height='16'><path fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='1' d='M5 7l3 3l3 -3'/></svg>\") no-repeat center;\n  opacity: 1;\n}\n\n.toast {\n  background: #ffffff;\n  border: 1px solid rgba(98, 105, 118, 0.16);\n  border-left: 0.25rem solid var(--tblr-toast-color);\n  box-shadow: rgba(30, 41, 59, 0.04) 0 2px 4px 0;\n}\n.toast .toast-header {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n}\n.toast button[data-bs-dismiss=toast] {\n  outline: none;\n}\n\n.toast-primary {\n  --tblr-toast-color: #206bc4;\n}\n\n.toast-secondary {\n  --tblr-toast-color: #626976;\n}\n\n.toast-success {\n  --tblr-toast-color: #2fb344;\n}\n\n.toast-info {\n  --tblr-toast-color: #4299e1;\n}\n\n.toast-warning {\n  --tblr-toast-color: #f76707;\n}\n\n.toast-danger {\n  --tblr-toast-color: #d63939;\n}\n\n.toast-light {\n  --tblr-toast-color: #fafbfc;\n}\n\n.toast-dark {\n  --tblr-toast-color: #1e293b;\n}\n\n.toast-muted {\n  --tblr-toast-color: #626976;\n}\n\n.toast-blue {\n  --tblr-toast-color: #206bc4;\n}\n\n.toast-azure {\n  --tblr-toast-color: #4299e1;\n}\n\n.toast-indigo {\n  --tblr-toast-color: #4263eb;\n}\n\n.toast-purple {\n  --tblr-toast-color: #ae3ec9;\n}\n\n.toast-pink {\n  --tblr-toast-color: #d6336c;\n}\n\n.toast-red {\n  --tblr-toast-color: #d63939;\n}\n\n.toast-orange {\n  --tblr-toast-color: #f76707;\n}\n\n.toast-yellow {\n  --tblr-toast-color: #f59f00;\n}\n\n.toast-lime {\n  --tblr-toast-color: #74b816;\n}\n\n.toast-green {\n  --tblr-toast-color: #2fb344;\n}\n\n.toast-teal {\n  --tblr-toast-color: #0ca678;\n}\n\n.toast-cyan {\n  --tblr-toast-color: #17a2b8;\n}\n\n.toast-facebook {\n  --tblr-toast-color: #3b5998;\n}\n\n.toast-twitter {\n  --tblr-toast-color: #1da1f2;\n}\n\n.toast-linkedin {\n  --tblr-toast-color: #0a66c2;\n}\n\n.toast-google {\n  --tblr-toast-color: #dc4e41;\n}\n\n.toast-youtube {\n  --tblr-toast-color: #ff0000;\n}\n\n.toast-vimeo {\n  --tblr-toast-color: #1ab7ea;\n}\n\n.toast-dribbble {\n  --tblr-toast-color: #ea4c89;\n}\n\n.toast-github {\n  --tblr-toast-color: #181717;\n}\n\n.toast-instagram {\n  --tblr-toast-color: #e4405f;\n}\n\n.toast-pinterest {\n  --tblr-toast-color: #bd081c;\n}\n\n.toast-vk {\n  --tblr-toast-color: #6383a8;\n}\n\n.toast-rss {\n  --tblr-toast-color: #ffa500;\n}\n\n.toast-flickr {\n  --tblr-toast-color: #0063dc;\n}\n\n.toast-bitbucket {\n  --tblr-toast-color: #0052cc;\n}\n\n.toast-tabler {\n  --tblr-toast-color: #206bc4;\n}\n\n.toolbar {\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n  margin: 0 -0.5rem;\n}\n.toolbar > * {\n  margin: 0 0.5rem;\n}\n\n/**\nHorizontal rules\n */\n/**\nHr text\n */\n.hr-text {\n  display: flex;\n  align-items: center;\n  margin: 2rem 0;\n  font-size: 0.625rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.04em;\n  line-height: 1.6;\n  color: #626976;\n  height: 1px;\n}\n.hr-text:after, .hr-text:before {\n  flex: 1 1 auto;\n  background-color: currentColor;\n  opacity: 0.16;\n}\n.hr-text:before {\n  content: \"\";\n  margin-right: 0.5rem;\n}\n.hr-text:after {\n  content: \"\";\n  margin-left: 0.5rem;\n}\n.hr-text > *:first-child {\n  padding-right: 0.5rem;\n  padding-left: 0;\n  color: #626976;\n}\n.hr-text.hr-text-left:before {\n  content: none;\n}\n.hr-text.hr-text-left > *:first-child {\n  padding-right: 0.5rem;\n  padding-left: 0.5rem;\n}\n.hr-text.hr-text-right:before {\n  content: \"\";\n}\n.hr-text.hr-text-right:after {\n  content: none;\n}\n.hr-text.hr-text-right > *:first-child {\n  padding-right: 0;\n  padding-left: 0.5rem;\n}\n.card > .hr-text {\n  margin: 0;\n}\n\n.hr-text-spaceless {\n  margin: -0.5rem 0;\n}\n\n.lead {\n  line-height: 1.4;\n}\n\na {\n  -webkit-text-decoration-skip: ink;\n          text-decoration-skip-ink: auto;\n}\n\nh1 a,\nh2 a,\nh3 a,\nh4 a,\nh5 a,\nh6 a,\n.h1 a,\n.h2 a,\n.h3 a,\n.h4 a,\n.h5 a,\n.h6 a {\n  color: inherit;\n}\nh1 a:hover,\nh2 a:hover,\nh3 a:hover,\nh4 a:hover,\nh5 a:hover,\nh6 a:hover,\n.h1 a:hover,\n.h2 a:hover,\n.h3 a:hover,\n.h4 a:hover,\n.h5 a:hover,\n.h6 a:hover {\n  color: inherit;\n}\n\nh1, .h1 {\n  line-height: 1.3333333333;\n}\n\nh2, .h2 {\n  line-height: 1.4;\n}\n\nh3, .h3 {\n  line-height: 1.5;\n}\n\nh4, .h4 {\n  line-height: 1.4285714286;\n}\n\nh5, .h5 {\n  line-height: 1.3333333333;\n}\n\nh6, .h6 {\n  line-height: 1.6;\n}\n\nstrong,\n.strong,\nb {\n  font-weight: 600;\n}\n\nblockquote {\n  padding-left: 1rem;\n  border-left: 2px solid #e6e7e9;\n}\nblockquote p {\n  margin-bottom: 1rem;\n}\nblockquote cite {\n  display: block;\n  text-align: right;\n}\nblockquote cite:before {\n  content: \"â€” \";\n}\n\nul, ol {\n  padding-left: 1.5rem;\n}\n\nhr, .hr {\n  margin: 2rem 0;\n}\n\ndl dd:last-child {\n  margin-bottom: 0;\n}\n\ncode {\n  padding: 2px 4px;\n  background: rgba(75, 84, 98, 0.03);\n  border: 1px solid rgba(75, 84, 98, 0.064);\n  border-radius: 4px;\n  font-weight: 400;\n}\n\npre {\n  padding: 1rem;\n  overflow: auto;\n  font-size: 0.75rem;\n  -webkit-hyphens: none;\n          hyphens: none;\n  line-height: 1.25rem;\n  -moz-tab-size: 3;\n    -o-tab-size: 3;\n       tab-size: 3;\n  border-radius: 4px;\n  white-space: pre-wrap;\n  background: #fdfdfe;\n  border: 1px solid rgba(98, 105, 118, 0.16);\n  -webkit-font-smoothing: auto;\n}\npre code {\n  padding: 0;\n  background: none;\n  border: none;\n  border-radius: 0;\n}\n\nimg {\n  max-width: 100%;\n}\n\n.list-unstyled {\n  margin-left: 0;\n}\n\n/**\nSelection\n */\n::-moz-selection {\n  color: #ffffff;\n  background-color: #307fdd;\n}\n::selection {\n  color: #ffffff;\n  background-color: #307fdd;\n}\n\n/**\nLinks\n */\n[class^=link-].disabled, [class*=\" link-\"].disabled {\n  color: #475569;\n  pointer-events: none;\n}\n\n/**\nSubheader\n */\n.subheader {\n  font-size: 0.625rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.04em;\n  line-height: 1.6;\n  color: #626976;\n}\n\n.chart {\n  display: block;\n  min-height: 10rem;\n}\n.chart text {\n  font-family: inherit;\n}\n\n.chart-sm {\n  height: 2.5rem;\n}\n\n.chart-lg {\n  height: 15rem;\n}\n\n.chart-square {\n  height: 5.75rem;\n}\n\n/**\nChart sparkline\n */\n.chart-sparkline {\n  position: relative;\n  width: 4rem;\n  height: 2.5rem;\n  line-height: 1;\n  min-height: 0 !important;\n}\n\n.chart-sparkline-sm {\n  height: 1.5rem;\n}\n\n.chart-sparkline-square {\n  width: 2.5rem;\n}\n\n.chart-sparkline-wide {\n  width: 6rem;\n}\n\n.chart-sparkline-label {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.625rem;\n}\n.chart-sparkline-label .icon {\n  width: 1rem;\n  height: 1rem;\n  font-size: 1rem;\n}\n\n.offcanvas {\n  background: var(--tblr-card-bg);\n}\n\n.offcanvas-header {\n  border-bottom: 1px solid rgba(98, 105, 118, 0.16);\n}\n\n.offcanvas-footer {\n  padding: 1.5rem 1.5rem;\n}\n\n.offcanvas-title {\n  font-size: 1rem;\n  font-weight: 500;\n  line-height: 1.5rem;\n}\n\n.offcanvas-narrow {\n  width: 20rem;\n}\n\n.bg-white-overlay {\n  color: #ffffff;\n  background-color: rgba(250, 251, 252, 0.24);\n}\n\n.bg-dark-overlay {\n  color: #ffffff;\n  background-color: rgba(30, 41, 59, 0.24);\n}\n\n.bg-cover {\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n}\n\n.bg-primary {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-primary-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-primary-lt {\n  color: #206bc4 !important;\n  background: rgba(32, 107, 196, 0.05) !important;\n}\n\n.bg-secondary {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-secondary-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-secondary-lt {\n  color: #626976 !important;\n  background: rgba(98, 105, 118, 0.05) !important;\n}\n\n.bg-success {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-success-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-success-lt {\n  color: #2fb344 !important;\n  background: rgba(47, 179, 68, 0.05) !important;\n}\n\n.bg-info {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-info-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-info-lt {\n  color: #4299e1 !important;\n  background: rgba(66, 153, 225, 0.05) !important;\n}\n\n.bg-warning {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-warning-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-warning-lt {\n  color: #f76707 !important;\n  background: rgba(247, 103, 7, 0.05) !important;\n}\n\n.bg-danger {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-danger-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-danger-lt {\n  color: #d63939 !important;\n  background: rgba(214, 57, 57, 0.05) !important;\n}\n\n.bg-light {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-light-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-light-lt {\n  color: #fafbfc !important;\n  background: rgba(250, 251, 252, 0.05) !important;\n}\n\n.bg-dark {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-dark-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-dark-lt {\n  color: #1e293b !important;\n  background: rgba(30, 41, 59, 0.05) !important;\n}\n\n.bg-muted {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-muted-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-muted-lt {\n  color: #626976 !important;\n  background: rgba(98, 105, 118, 0.05) !important;\n}\n\n.bg-blue {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-blue-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-blue-lt {\n  color: #206bc4 !important;\n  background: rgba(32, 107, 196, 0.05) !important;\n}\n\n.bg-azure {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-azure-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-azure-lt {\n  color: #4299e1 !important;\n  background: rgba(66, 153, 225, 0.05) !important;\n}\n\n.bg-indigo {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-indigo-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-indigo-lt {\n  color: #4263eb !important;\n  background: rgba(66, 99, 235, 0.05) !important;\n}\n\n.bg-purple {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-purple-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-purple-lt {\n  color: #ae3ec9 !important;\n  background: rgba(174, 62, 201, 0.05) !important;\n}\n\n.bg-pink {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-pink-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-pink-lt {\n  color: #d6336c !important;\n  background: rgba(214, 51, 108, 0.05) !important;\n}\n\n.bg-red {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-red-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-red-lt {\n  color: #d63939 !important;\n  background: rgba(214, 57, 57, 0.05) !important;\n}\n\n.bg-orange {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-orange-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-orange-lt {\n  color: #f76707 !important;\n  background: rgba(247, 103, 7, 0.05) !important;\n}\n\n.bg-yellow {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-yellow-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-yellow-lt {\n  color: #f59f00 !important;\n  background: rgba(245, 159, 0, 0.05) !important;\n}\n\n.bg-lime {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-lime-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-lime-lt {\n  color: #74b816 !important;\n  background: rgba(116, 184, 22, 0.05) !important;\n}\n\n.bg-green {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-green-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-green-lt {\n  color: #2fb344 !important;\n  background: rgba(47, 179, 68, 0.05) !important;\n}\n\n.bg-teal {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-teal-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-teal-lt {\n  color: #0ca678 !important;\n  background: rgba(12, 166, 120, 0.05) !important;\n}\n\n.bg-cyan {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-cyan-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-cyan-lt {\n  color: #17a2b8 !important;\n  background: rgba(23, 162, 184, 0.05) !important;\n}\n\n.bg-facebook {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-facebook-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-facebook-lt {\n  color: #3b5998 !important;\n  background: rgba(59, 89, 152, 0.05) !important;\n}\n\n.bg-twitter {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-twitter-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-twitter-lt {\n  color: #1da1f2 !important;\n  background: rgba(29, 161, 242, 0.05) !important;\n}\n\n.bg-linkedin {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-linkedin-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-linkedin-lt {\n  color: #0a66c2 !important;\n  background: rgba(10, 102, 194, 0.05) !important;\n}\n\n.bg-google {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-google-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-google-lt {\n  color: #dc4e41 !important;\n  background: rgba(220, 78, 65, 0.05) !important;\n}\n\n.bg-youtube {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-youtube-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-youtube-lt {\n  color: #ff0000 !important;\n  background: rgba(255, 0, 0, 0.05) !important;\n}\n\n.bg-vimeo {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-vimeo-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-vimeo-lt {\n  color: #1ab7ea !important;\n  background: rgba(26, 183, 234, 0.05) !important;\n}\n\n.bg-dribbble {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-dribbble-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-dribbble-lt {\n  color: #ea4c89 !important;\n  background: rgba(234, 76, 137, 0.05) !important;\n}\n\n.bg-github {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-github-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-github-lt {\n  color: #181717 !important;\n  background: rgba(24, 23, 23, 0.05) !important;\n}\n\n.bg-instagram {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-instagram-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-instagram-lt {\n  color: #e4405f !important;\n  background: rgba(228, 64, 95, 0.05) !important;\n}\n\n.bg-pinterest {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-pinterest-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-pinterest-lt {\n  color: #bd081c !important;\n  background: rgba(189, 8, 28, 0.05) !important;\n}\n\n.bg-vk {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-vk-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-vk-lt {\n  color: #6383a8 !important;\n  background: rgba(99, 131, 168, 0.05) !important;\n}\n\n.bg-rss {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-rss-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-rss-lt {\n  color: #ffa500 !important;\n  background: rgba(255, 165, 0, 0.05) !important;\n}\n\n.bg-flickr {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-flickr-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-flickr-lt {\n  color: #0063dc !important;\n  background: rgba(0, 99, 220, 0.05) !important;\n}\n\n.bg-bitbucket {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-bitbucket-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-bitbucket-lt {\n  color: #0052cc !important;\n  background: rgba(0, 82, 204, 0.05) !important;\n}\n\n.bg-tabler {\n  --tblr-bg-opacity: 1;\n  background-color: rgba(var(--tblr-tabler-rgb), var(--tblr-bg-opacity)) !important;\n}\n\n.bg-tabler-lt {\n  color: #206bc4 !important;\n  background: rgba(32, 107, 196, 0.05) !important;\n}\n\n.text-primary {\n  color: var(--tblr-primary) !important;\n}\n\n.text-secondary {\n  color: var(--tblr-secondary) !important;\n}\n\n.text-success {\n  color: var(--tblr-success) !important;\n}\n\n.text-info {\n  color: var(--tblr-info) !important;\n}\n\n.text-warning {\n  color: var(--tblr-warning) !important;\n}\n\n.text-danger {\n  color: var(--tblr-danger) !important;\n}\n\n.text-light {\n  color: var(--tblr-light) !important;\n}\n\n.text-dark {\n  color: var(--tblr-dark) !important;\n}\n\n.text-muted {\n  color: var(--tblr-muted) !important;\n}\n\n.text-blue {\n  color: var(--tblr-blue) !important;\n}\n\n.text-azure {\n  color: var(--tblr-azure) !important;\n}\n\n.text-indigo {\n  color: var(--tblr-indigo) !important;\n}\n\n.text-purple {\n  color: var(--tblr-purple) !important;\n}\n\n.text-pink {\n  color: var(--tblr-pink) !important;\n}\n\n.text-red {\n  color: var(--tblr-red) !important;\n}\n\n.text-orange {\n  color: var(--tblr-orange) !important;\n}\n\n.text-yellow {\n  color: var(--tblr-yellow) !important;\n}\n\n.text-lime {\n  color: var(--tblr-lime) !important;\n}\n\n.text-green {\n  color: var(--tblr-green) !important;\n}\n\n.text-teal {\n  color: var(--tblr-teal) !important;\n}\n\n.text-cyan {\n  color: var(--tblr-cyan) !important;\n}\n\n.text-facebook {\n  color: var(--tblr-facebook) !important;\n}\n\n.text-twitter {\n  color: var(--tblr-twitter) !important;\n}\n\n.text-linkedin {\n  color: var(--tblr-linkedin) !important;\n}\n\n.text-google {\n  color: var(--tblr-google) !important;\n}\n\n.text-youtube {\n  color: var(--tblr-youtube) !important;\n}\n\n.text-vimeo {\n  color: var(--tblr-vimeo) !important;\n}\n\n.text-dribbble {\n  color: var(--tblr-dribbble) !important;\n}\n\n.text-github {\n  color: var(--tblr-github) !important;\n}\n\n.text-instagram {\n  color: var(--tblr-instagram) !important;\n}\n\n.text-pinterest {\n  color: var(--tblr-pinterest) !important;\n}\n\n.text-vk {\n  color: var(--tblr-vk) !important;\n}\n\n.text-rss {\n  color: var(--tblr-rss) !important;\n}\n\n.text-flickr {\n  color: var(--tblr-flickr) !important;\n}\n\n.text-bitbucket {\n  color: var(--tblr-bitbucket) !important;\n}\n\n.text-tabler {\n  color: var(--tblr-tabler) !important;\n}\n\n/*\nScrollable\n*/\n.scrollable {\n  overflow-x: hidden;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n}\n.scrollable.hover {\n  overflow-y: hidden;\n}\n.scrollable.hover > * {\n  margin-top: -1px;\n}\n.scrollable.hover:hover, .scrollable.hover:focus, .scrollable.hover:active {\n  overflow: visible;\n  overflow-y: auto;\n}\n.touch .scrollable {\n  overflow-y: auto !important;\n}\n\n.scroll-x,\n.scroll-y {\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n.scroll-y {\n  overflow-y: auto;\n}\n\n.scroll-x {\n  overflow-x: auto;\n}\n\n.no-scroll {\n  overflow: hidden;\n}\n\n.w-0 {\n  width: 0 !important;\n}\n\n.h-0 {\n  height: 0 !important;\n}\n\n.w-1 {\n  width: 0.25rem !important;\n}\n\n.h-1 {\n  height: 0.25rem !important;\n}\n\n.w-2 {\n  width: 0.5rem !important;\n}\n\n.h-2 {\n  height: 0.5rem !important;\n}\n\n.w-3 {\n  width: 1rem !important;\n}\n\n.h-3 {\n  height: 1rem !important;\n}\n\n.w-4 {\n  width: 2rem !important;\n}\n\n.h-4 {\n  height: 2rem !important;\n}\n\n.w-5 {\n  width: 4rem !important;\n}\n\n.h-5 {\n  height: 4rem !important;\n}\n\n.w-auto {\n  width: auto !important;\n}\n\n.h-auto {\n  height: auto !important;\n}\n\n.w-px {\n  width: 1px !important;\n}\n\n.h-px {\n  height: 1px !important;\n}\n\n.w-full {\n  width: 100% !important;\n}\n\n.h-full {\n  height: 100% !important;\n}\n\n.opacity-0 {\n  opacity: 0 !important;\n}\n\n.opacity-5 {\n  opacity: 0.05 !important;\n}\n\n.opacity-10 {\n  opacity: 0.1 !important;\n}\n\n.opacity-15 {\n  opacity: 0.15 !important;\n}\n\n.opacity-20 {\n  opacity: 0.2 !important;\n}\n\n.opacity-25 {\n  opacity: 0.25 !important;\n}\n\n.opacity-30 {\n  opacity: 0.3 !important;\n}\n\n.opacity-35 {\n  opacity: 0.35 !important;\n}\n\n.opacity-40 {\n  opacity: 0.4 !important;\n}\n\n.opacity-45 {\n  opacity: 0.45 !important;\n}\n\n.opacity-50 {\n  opacity: 0.5 !important;\n}\n\n.opacity-55 {\n  opacity: 0.55 !important;\n}\n\n.opacity-60 {\n  opacity: 0.6 !important;\n}\n\n.opacity-65 {\n  opacity: 0.65 !important;\n}\n\n.opacity-70 {\n  opacity: 0.7 !important;\n}\n\n.opacity-75 {\n  opacity: 0.75 !important;\n}\n\n.opacity-80 {\n  opacity: 0.8 !important;\n}\n\n.opacity-85 {\n  opacity: 0.85 !important;\n}\n\n.opacity-90 {\n  opacity: 0.9 !important;\n}\n\n.opacity-95 {\n  opacity: 0.95 !important;\n}\n\n.opacity-100 {\n  opacity: 1 !important;\n}\n\n.hover-shadow-sm:hover {\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n}\n\n.hover-shadow:hover {\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n}\n\n.hover-shadow-lg:hover {\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175) !important;\n}\n\n.hover-shadow-none:hover {\n  box-shadow: none !important;\n}\n\n/**\nAntialiasing\n */\n.antialiased {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.subpixel-antialiased {\n  -webkit-font-smoothing: auto;\n  -moz-osx-font-smoothing: auto;\n}", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join("");
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === "string") {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, ""]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

/***/ }),

/***/ "./Resources/assets/js/appView.html":
/*!******************************************!*\
  !*** ./Resources/assets/js/appView.html ***!
  \******************************************/
/***/ ((module) => {

// Module
var code = "";
// Exports
module.exports = code;

/***/ }),

/***/ "./Resources/assets/sass/app.scss":
/*!****************************************!*\
  !*** ./Resources/assets/sass/app.scss ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/routerjs/dist/router.esm.js":
/*!**************************************************!*\
  !*** ./node_modules/routerjs/dist/router.esm.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BrowserHistoryEngine": () => (/* binding */ BrowserHistoryEngine),
/* harmony export */   "compose": () => (/* binding */ compose),
/* harmony export */   "createRouter": () => (/* binding */ createRouter),
/* harmony export */   "pipe": () => (/* binding */ pipe)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

/**
 * Expose `pathToRegexp`.
 */
var pathToRegexp_1 = pathToRegexp;
var parse_1 = parse;
var compile_1 = compile;
var tokensToFunction_1 = tokensToFunction;
var tokensToRegExp_1 = tokensToRegExp;

/**
 * Default configs.
 */
var DEFAULT_DELIMITER = '/';

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // ":test(\\d+)?" => ["test", "\d+", undefined, "?"]
  // "(\\d+)"  => [undefined, undefined, "\d+", undefined]
  '(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?'
].join('|'), 'g');

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse (str, options) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER;
  var whitelist = (options && options.whitelist) || undefined;
  var pathEscaped = false;
  var res;

  while ((res = PATH_REGEXP.exec(str)) !== null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length;

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1];
      pathEscaped = true;
      continue
    }

    var prev = '';
    var name = res[2];
    var capture = res[3];
    var group = res[4];
    var modifier = res[5];

    if (!pathEscaped && path.length) {
      var k = path.length - 1;
      var c = path[k];
      var matches = whitelist ? whitelist.indexOf(c) > -1 : true;

      if (matches) {
        prev = c;
        path = path.slice(0, k);
      }
    }

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path);
      path = '';
      pathEscaped = false;
    }

    var repeat = modifier === '+' || modifier === '*';
    var optional = modifier === '?' || modifier === '*';
    var pattern = capture || group;
    var delimiter = prev || defaultDelimiter;

    tokens.push({
      name: name || key++,
      prefix: prev,
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      pattern: pattern
        ? escapeGroup(pattern)
        : '[^' + escapeString(delimiter === defaultDelimiter ? delimiter : (delimiter + defaultDelimiter)) + ']+?'
    });
  }

  // Push any remaining characters.
  if (path || index < str.length) {
    tokens.push(path + str.substr(index));
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(parse(str, options), options)
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens, options) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length);

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options));
    }
  }

  return function (data, options) {
    var path = '';
    var encode = (options && options.encode) || encodeURIComponent;
    var validate = options ? options.validate !== false : true;

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        path += token;
        continue
      }

      var value = data ? data[token.name] : undefined;
      var segment;

      if (Array.isArray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but got array')
        }

        if (value.length === 0) {
          if (token.optional) continue

          throw new TypeError('Expected "' + token.name + '" to not be empty')
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j], token);

          if (validate && !matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '"')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }

        continue
      }

      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {
        segment = encode(String(value), token);

        if (validate && !matches[i].test(segment)) {
          throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but got "' + segment + '"')
        }

        path += token.prefix + segment;
        continue
      }

      if (token.optional) continue

      throw new TypeError('Expected "' + token.name + '" to be ' + (token.repeat ? 'an array' : 'a string'))
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$/()])/g, '\\$1')
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options && options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {Array=}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  if (!keys) return path

  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        pattern: null
      });
    }
  }

  return path
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array=}  keys
 * @param  {Object=} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  return new RegExp('(?:' + parts.join('|') + ')', flags(options))
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {Array=}  keys
 * @param  {Object=} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}  tokens
 * @param  {Array=}  keys
 * @param  {Object=} options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  options = options || {};

  var strict = options.strict;
  var start = options.start !== false;
  var end = options.end !== false;
  var delimiter = options.delimiter || DEFAULT_DELIMITER;
  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|');
  var route = start ? '^' : '';

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var capture = token.repeat
        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'
        : token.pattern;

      if (keys) keys.push(token);

      if (token.optional) {
        if (!token.prefix) {
          route += '(' + capture + ')?';
        } else {
          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?';
        }
      } else {
        route += escapeString(token.prefix) + '(' + capture + ')';
      }
    }
  }

  if (end) {
    if (!strict) route += '(?:' + escapeString(delimiter) + ')?';

    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')';
  } else {
    var endToken = tokens[tokens.length - 1];
    var isEndDelimited = typeof endToken === 'string'
      ? endToken[endToken.length - 1] === delimiter
      : endToken === undefined;

    if (!strict) route += '(?:' + escapeString(delimiter) + '(?=' + endsWith + '))?';
    if (!isEndDelimited) route += '(?=' + escapeString(delimiter) + '|' + endsWith + ')';
  }

  return new RegExp(route, flags(options))
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {Array=}                keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (path instanceof RegExp) {
    return regexpToRegexp(path, keys)
  }

  if (Array.isArray(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)
  }

  return stringToRegexp(/** @type {string} */ (path), keys, options)
}
pathToRegexp_1.parse = parse_1;
pathToRegexp_1.compile = compile_1;
pathToRegexp_1.tokensToFunction = tokensToFunction_1;
pathToRegexp_1.tokensToRegExp = tokensToRegExp_1;

var defaultOptions = {
    bindClick: true,
};
var hasDifferentOrigin = function (href) {
    var url = new URL(href, window.location.origin);
    return url.origin !== window.location.origin;
};
var BrowserHistoryEngine = function (opt) {
    if (opt === void 0) { opt = {}; }
    return function () {
        var engine;
        var options = __assign(__assign({}, defaultOptions), opt);
        var handlers = [];
        var exitHandlers = [];
        var previousPath = null;
        var executeHandlers = function (path) { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, handlers.reduce(function (acc, h) {
                            return acc.then(function () { return h(path); });
                        }, Promise.resolve())];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); };
        var executeExitHandlers = function (path) { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, exitHandlers.reduce(function (acc, h) {
                            return acc.then(function () { return h(path); });
                        }, Promise.resolve())];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); };
        var clickHandler = function (e) {
            var target = e.target;
            while (target && target.nodeName.toUpperCase() !== 'A') {
                target = target.parentNode;
            }
            if (target && target.nodeName.toUpperCase() === 'A') {
                if (target.hasAttribute('data-routerjs-ignore') ||
                    target.hasAttribute('download') ||
                    target.hasAttribute('target') ||
                    target.getAttribute('rel') === 'external') {
                    return;
                }
                var href = target.getAttribute('href');
                if (href &&
                    (hasDifferentOrigin(href) ||
                        href.indexOf('mailto:') === 0 ||
                        href.indexOf('tel:') === 0)) {
                    return;
                }
                e.preventDefault();
                engine.navigate(target.pathname);
            }
        };
        var popStateHandler = function (_ev) { return __awaiter(void 0, void 0, void 0, function () {
            var path;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        path = window.location.pathname;
                        if (!(previousPath !== null)) return [3 /*break*/, 2];
                        return [4 /*yield*/, executeExitHandlers(previousPath)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        previousPath = path;
                        return [4 /*yield*/, executeHandlers(path)];
                    case 3:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); };
        engine = {
            setup: function () {
                window.addEventListener('popstate', popStateHandler);
                if (options.bindClick) {
                    window.addEventListener('click', clickHandler);
                }
            },
            teardown: function () {
                window.removeEventListener('popstate', popStateHandler);
                window.removeEventListener('click', clickHandler);
            },
            addRouteChangeHandler: function (handler) {
                handlers.push(handler);
            },
            addRouteExitHandler: function (handler) {
                exitHandlers.push(handler);
            },
            navigate: function (path) { return __awaiter(void 0, void 0, void 0, function () {
                var currentPath;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            currentPath = "" + window.location.pathname + window.location.search;
                            if (!(currentPath !== path)) return [3 /*break*/, 4];
                            if (!(previousPath !== null)) return [3 /*break*/, 2];
                            return [4 /*yield*/, executeExitHandlers(previousPath)];
                        case 1:
                            _a.sent();
                            _a.label = 2;
                        case 2:
                            previousPath = path;
                            window.history.pushState({}, '', path);
                            return [4 /*yield*/, executeHandlers(path)];
                        case 3:
                            _a.sent();
                            _a.label = 4;
                        case 4: return [2 /*return*/];
                    }
                });
            }); },
            back: function () {
                window.history.back();
            },
            forward: function () {
                window.history.forward();
            },
            go: function (n) {
                window.history.go(n);
            },
            setLocation: function (path) {
                if (window.location.pathname !== path) {
                    window.history.pushState({}, '', path);
                }
            },
            run: function (path) {
                var currentPath = "" + window.location.pathname + window.location.search;
                var url = path || currentPath;
                if (currentPath !== url) {
                    window.history.pushState({}, '', url);
                }
                executeHandlers(url);
            },
        };
        return engine;
    };
};

// -------------------------- Implementation
var LEADING_BACKSLASHES_MATCH = /\/*$/;
var createContext = function (path) {
    var context = {
        path: path,
        set: function (key, value) {
            context[key] = value;
        },
    };
    return context;
};
var createRequest = function (_a) {
    var path = _a.path, params = _a.params, splats = _a.splats;
    var _b = path.split('?'), _ = _b[0], queryString = _b[1];
    var query = (queryString || '').split('&').reduce(function (acc, q) {
        var _a;
        var _b = q.split('='), k = _b[0], v = _b[1];
        if (!k)
            return acc;
        return __assign(__assign({}, acc), (_a = {}, _a[decodeURIComponent(k)] = decodeURIComponent(v), _a));
    }, {});
    var isStopped = false;
    var req = {
        get: function (key, def) {
            // eslint-disable-next-line no-nested-ternary
            return req.params && req.params[key] !== undefined
                ? req.params[key]
                : req.query && key in req.query // eslint-disable-line no-nested-ternary
                    ? req.query[key]
                    : def !== undefined
                        ? def
                        : undefined;
        },
        path: path,
        params: params,
        splats: splats,
        query: query,
        stop: function () {
            isStopped = true;
        },
        isStopped: function () { return isStopped; },
    };
    return req;
};
var createExecuteRoutes = function (context) {
    var executeRoutes = function (matchedRoutes, always, path) { return __awaiter(void 0, void 0, void 0, function () {
        var route, params, splats, pathWithoutQuery, match, j, k, req;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!(matchedRoutes.length > 0)) return [3 /*break*/, 2];
                    route = matchedRoutes[0];
                    params = {};
                    splats = [];
                    pathWithoutQuery = path.split('?')[0];
                    match = pathWithoutQuery.match(route.path);
                    /* istanbul ignore else */
                    if (match) {
                        j = 0;
                        for (j = 0; j < route.paramNames.length; j++) {
                            params[route.paramNames[j].name] = match[j + 1];
                        }
                        /* If any other match put them in request splat */
                        /* istanbul ignore else */
                        if (j < match.length) {
                            for (k = j; k < match.length; k++) {
                                splats.push(match[k]);
                            }
                        }
                    }
                    req = createRequest({
                        path: path,
                        params: params,
                        splats: splats,
                    });
                    return [4 /*yield*/, route.callback(req, context)];
                case 1:
                    _a.sent();
                    if (!req.isStopped() && matchedRoutes.length > 1) {
                        return [2 /*return*/, executeRoutes(matchedRoutes.slice(1), always, path)];
                    }
                    _a.label = 2;
                case 2:
                    if (!(always.length > 0)) return [3 /*break*/, 4];
                    return [4 /*yield*/, always[0](context)];
                case 3:
                    _a.sent();
                    if (always.length > 1) {
                        return [2 /*return*/, executeRoutes([], always.slice(1), path)];
                    }
                    _a.label = 4;
                case 4: return [2 /*return*/, Promise.resolve()];
            }
        });
    }); };
    return executeRoutes;
};
var defaultOptions$1 = {
    ignoreCase: false,
    basePath: '/',
    engine: BrowserHistoryEngine(),
};
var createRouter = function (opt) {
    var handlers = {
        routes: [],
        exits: [],
    };
    var always = [];
    var errors = new Map();
    var options = __assign(__assign({}, defaultOptions$1), opt);
    var engine = options.engine();
    var cleanBasePath = options.basePath.replace(LEADING_BACKSLASHES_MATCH, '');
    var basePathRegExp = new RegExp("^" + cleanBasePath);
    /* eslint-disable no-console */
    errors.set(500, [
        function (e, context) {
            /* istanbul ignore else */
            if (console && console.error) {
                console.error("500 - path: \"" + context.path + "\"");
                console.error(e);
            }
        },
    ]);
    errors.set(404, [
        function (e, context) {
            /* istanbul ignore else */
            if (console && console.warn) {
                console.warn("404 - path: \"" + context.path + "\"");
                console.warn(e);
            }
        },
    ]);
    /* eslint-enable no-console */
    var errorThrowerFactory = function (context) { return function (error) {
        var _a = error.statusCode, statusCode = _a === void 0 ? 500 : _a;
        var callbacks = errors.get(statusCode);
        var alwaysCallbacks = errors.get('*');
        /* istanbul ignore else */
        if (callbacks || alwaysCallbacks) {
            if (callbacks && callbacks.length > 0) {
                callbacks.forEach(function (callback) {
                    callback(error, context);
                });
            }
            if (alwaysCallbacks && alwaysCallbacks.length > 0) {
                alwaysCallbacks.forEach(function (callback) {
                    callback(error, context);
                });
            }
        }
        else {
            throw error;
        }
    }; };
    var onNavigation = function (collectionName) { return function (path) { return __awaiter(void 0, void 0, void 0, function () {
        var routes, matchedIndexes, cleanPath, urlToTest, i, len, route, context, e, executeRoutes, e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    routes = handlers[collectionName];
                    matchedIndexes = [];
                    cleanPath = path.replace(basePathRegExp, '');
                    cleanPath = cleanPath === '' ? '/' : cleanPath;
                    urlToTest = path.split('?')[0];
                    urlToTest = urlToTest.replace(basePathRegExp, '');
                    urlToTest = urlToTest === '' ? '/' : urlToTest;
                    for (i = 0, len = routes.length; i < len; i++) {
                        route = routes[i];
                        if (route.path.test(urlToTest)) {
                            matchedIndexes.push(i);
                        }
                    }
                    context = createContext(cleanPath);
                    if (!(collectionName === 'routes' && matchedIndexes.length === 0)) return [3 /*break*/, 1];
                    e = new Error("Path \"" + cleanPath + "\" not matched");
                    e.statusCode = 404;
                    errorThrowerFactory(context)(e);
                    return [3 /*break*/, 4];
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    executeRoutes = createExecuteRoutes(context);
                    return [4 /*yield*/, executeRoutes(matchedIndexes.map(function (i) { return routes[i]; }), always, cleanPath)];
                case 2:
                    _a.sent();
                    return [3 /*break*/, 4];
                case 3:
                    e_1 = _a.sent();
                    errorThrowerFactory(context)(e_1);
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/];
            }
        });
    }); }; };
    engine.setup();
    engine.addRouteChangeHandler(onNavigation('routes'));
    engine.addRouteExitHandler(onNavigation('exits'));
    var addRouteToCollection = function (collectionName) { return function (path, callback) {
        if (!callback) {
            throw new Error("Missing callback for path \"" + path + "\"");
        }
        var routes = handlers[collectionName];
        var paramNames = [];
        var finalPath = pathToRegexp_1(path, paramNames, {
            sensitive: !options.ignoreCase,
            strict: false,
        });
        routes.push({
            url: path,
            path: finalPath,
            paramNames: paramNames,
            callback: callback,
        });
    }; };
    var router = {
        get: function (path, callback) {
            addRouteToCollection('routes')(path, callback);
            return router;
        },
        exit: function (path, callback) {
            addRouteToCollection('exits')(path, callback);
            return router;
        },
        always: function (callback) {
            if (!callback) {
                throw new Error('A callback is mandatory when defining an "always" callback!');
            }
            always.push(callback);
            return router;
        },
        error: function (errorCode, callback) {
            errors.set(errorCode, __spreadArrays((errors.get(errorCode) || []), [callback]));
            return router;
        },
        run: function (path) {
            engine.run(path);
            return router;
        },
        teardown: function () {
            engine.teardown();
            return router;
        },
        navigate: engine.navigate,
        go: engine.go,
        back: engine.back,
        forward: engine.forward,
        setLocation: engine.setLocation,
        buildUrl: function (path) { return "" + cleanBasePath + path; },
        getOptions: function () { return (__assign(__assign({}, options), { basePath: cleanBasePath, engine: undefined })); },
        _getOptions: function () {
            // eslint-disable-next-line no-console
            console.warn('@deprecated _getOptions is deprecated, use getOptions instead');
            return router.getOptions();
        },
        // @ts-ignore
        _showRoutes: function () {
            // eslint-disable-next-line no-console
            console.log(handlers);
        },
    };
    return router;
};

/**
 * Borrowed from [redux project](https://github.com/reduxjs/redux)
 *
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */
function compose() {
    var funcs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        funcs[_i] = arguments[_i];
    }
    if (funcs.length === 0) {
        return function (arg) { return arg; };
    }
    if (funcs.length === 1) {
        return funcs[0];
    }
    return funcs.reduce(function (a, b) { return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return a(b.apply(void 0, args));
    }; });
}
var noop = function () { };
var pipe = function () {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
    }
    return compose.apply(void 0, fns)(noop);
};




/***/ }),

/***/ "./node_modules/@tabler/core/dist/css/tabler.css":
/*!*******************************************************!*\
  !*** ./node_modules/@tabler/core/dist/css/tabler.css ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_cjs_js_ruleSet_1_rules_6_oneOf_1_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_oneOf_1_use_2_tabler_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../../css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!../../../../postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./tabler.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./node_modules/@tabler/core/dist/css/tabler.css");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_ruleSet_1_rules_6_oneOf_1_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_oneOf_1_use_2_tabler_css__WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_ruleSet_1_rules_6_oneOf_1_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_oneOf_1_use_2_tabler_css__WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : 0;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && typeof btoa !== 'undefined') {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/ractive/ractive.mjs":
/*!******************************************!*\
  !*** ./node_modules/ractive/ractive.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*
	Ractive.js v1.4.0
	Build: cf2bc5f2a151700d010d1ddc802f4a663e067d28
	Date: Fri Feb 25 2022 00:20:23 GMT-0500 (Eastern Standard Time)
	Website: https://ractive.js.org
	License: MIT
*/
/* istanbul ignore if */
if (!Object.assign) {
  Object.assign = function(target) {
    var sources = [], len = arguments.length - 1;
    while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];

    if (target == null) { throw new TypeError('Cannot convert undefined or null to object'); }

    var to = Object(target);
    var sourcesLength = sources.length;

    for (var index = 0; index < sourcesLength; index++) {
      var nextSource = sources[index];
      for (var nextKey in nextSource) {
        if (!Object.prototype.hasOwnProperty.call(nextSource, nextKey)) { continue; }
        to[nextKey] = nextSource[nextKey];
      }
    }

    return to;
  };
}

function hasOwn(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

function fillGaps(target) {
  var sources = [], len = arguments.length - 1;
  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];

  for (var i = 0; i < sources.length; i++) {
    var source = sources[i];
    for (var key in source) {
      // Source can be a prototype-less object.
      if (key in target || !hasOwn(source, key)) { continue; }
      target[key] = source[key];
    }
  }

  return target;
}

function toPairs(obj) {
  if ( obj === void 0 ) obj = {};

  var pairs = [];
  for (var key in obj) {
    // Source can be a prototype-less object.
    if (!hasOwn(obj, key)) { continue; }
    pairs.push([key, obj[key]]);
  }
  return pairs;
}

var obj = Object;

var assign = obj.assign;

var create = obj.create;

var defineProperty = obj.defineProperty;

var defineProperties = obj.defineProperties;

var keys = obj.keys;

var toString = Object.prototype.toString;


var isArray = Array.isArray;

function isEqual(a, b) {
  if (a === null && b === null) {
    return true;
  }

  if (isObjectType(a) || isObjectType(b)) {
    return false;
  }

  return a === b;
}

// http://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric
function isNumeric(thing) {
  return !isNaN(parseFloat(thing)) && isFinite(thing);
}

function isObject(thing) {
  return thing && toString.call(thing) === '[object Object]';
}

function isObjectLike(thing) {
  return !!(thing && (isObjectType(thing) || isFunction(thing))) && !isDate(thing);
}

function isDate(thing) {
  return thing instanceof Date;
}

function isObjectType(thing) {
  return typeof thing === 'object';
}

function isFunction(thing) {
  return typeof thing === 'function';
}

function isString(thing) {
  return typeof thing === 'string';
}

function isNumber(thing) {
  return typeof thing === 'number';
}

function isUndefined(thing) {
  return thing === undefined;
}

/* istanbul ignore if */
if (!Array.prototype.find) {
  defineProperty(Array.prototype, 'find', {
    value: function value(callback, thisArg) {
      if (this === null || isUndefined(this))
        { throw new TypeError('Array.prototype.find called on null or undefined'); }

      if (!isFunction(callback)) { throw new TypeError((callback + " is not a function")); }

      var array = Object(this);
      var arrayLength = array.length >>> 0;

      for (var index = 0; index < arrayLength; index++) {
        if (!hasOwn(array, index)) { continue; }
        if (!callback.call(thisArg, array[index], index, array)) { continue; }
        return array[index];
      }

      return undefined;
    },
    configurable: true,
    writable: true
  });
}

// NOTE: Node doesn't exist in IE8. Nothing can be done.
/* istanbul ignore if */
if (
  typeof window !== 'undefined' &&
  window.Node &&
  window.Node.prototype &&
  !window.Node.prototype.contains
) {
  Node.prototype.contains = function(node) {
    var this$1 = this;

    if (!node) { throw new TypeError('node required'); }

    do {
      if (this$1 === node) { return true; }
    } while ((node = node && node.parentNode));

    return false;
  };
}

/* istanbul ignore if */
if (typeof window !== 'undefined' && window.performance && !window.performance.now) {
  window.performance = window.performance || {};

  var nowOffset = Date.now();

  window.performance.now = function() {
    return Date.now() - nowOffset;
  };
}

/* eslint no-console:"off" */
var win = typeof window !== 'undefined' ? window : null;
var doc = win ? document : null;
var isClient = !!doc;
var base = typeof global !== 'undefined' ? global : win;
var hasConsole =
  typeof console !== 'undefined' && isFunction(console.warn) && isFunction(console.warn.apply);

var svg = doc
  ? doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')
  : false;

var vendors = ['o', 'ms', 'moz', 'webkit'];

/* istanbul ignore if */
if (!base.Promise) {
  var PENDING = {};
  var FULFILLED = {};
  var REJECTED = {};

  var Promise$1 = (base.Promise = function(callback) {
    var fulfilledHandlers = [];
    var rejectedHandlers = [];
    var state = PENDING;
    var result;
    var dispatchHandlers;

    var makeResolver = function (newState) {
      return function(value) {
        if (state !== PENDING) { return; }
        result = value;
        state = newState;
        dispatchHandlers = makeDispatcher(
          state === FULFILLED ? fulfilledHandlers : rejectedHandlers,
          result
        );
        wait(dispatchHandlers);
      };
    };

    var fulfill = makeResolver(FULFILLED);
    var reject = makeResolver(REJECTED);

    try {
      callback(fulfill, reject);
    } catch (err) {
      reject(err);
    }

    return {
      // `then()` returns a Promise - 2.2.7
      then: function then(onFulfilled, onRejected) {
        var promise2 = new Promise$1(function (fulfill, reject) {
          var processResolutionHandler = function (handler, handlers, forward) {
            if (isFunction(handler)) {
              handlers.push(function (p1result) {
                try {
                  resolve$1(promise2, handler(p1result), fulfill, reject);
                } catch (err) {
                  reject(err);
                }
              });
            } else {
              handlers.push(forward);
            }
          };

          processResolutionHandler(onFulfilled, fulfilledHandlers, fulfill);
          processResolutionHandler(onRejected, rejectedHandlers, reject);

          if (state !== PENDING) {
            wait(dispatchHandlers);
          }
        });
        return promise2;
      },
      catch: function catch$1(onRejected) {
        return this.then(null, onRejected);
      },
      finally: function finally$1(callback) {
        return this.then(
          function (v) {
            callback();
            return v;
          },
          function (e) {
            callback();
            throw e;
          }
        );
      }
    };
  });

  Promise$1.all = function(promises) {
    return new Promise$1(function (fulfill, reject) {
      var result = [];
      var pending;
      var i;

      if (!promises.length) {
        fulfill(result);
        return;
      }

      var processPromise = function (promise, i) {
        if (promise && isFunction(promise.then)) {
          promise.then(function (value) {
            result[i] = value;
            --pending || fulfill(result);
          }, reject);
        } else {
          result[i] = promise;
          --pending || fulfill(result);
        }
      };

      pending = i = promises.length;

      while (i--) {
        processPromise(promises[i], i);
      }
    });
  };

  Promise$1.race = function(promises) {
    return new Promise$1(function (fulfill, reject) {
      var pending = true;
      function ok(v) {
        if (!pending) { return; }
        pending = false;
        fulfill(v);
      }
      function fail(e) {
        if (!pending) { return; }
        pending = false;
        reject(e);
      }
      for (var i = 0; i < promises.length; i++) {
        if (promises[i] && isFunction(promises[i].then)) {
          promises[i].then(ok, fail);
        }
      }
    });
  };

  Promise$1.resolve = function(value) {
    if (value && isFunction(value.then)) { return value; }
    return new Promise$1(function (fulfill) {
      fulfill(value);
    });
  };

  Promise$1.reject = function(reason) {
    if (reason && isFunction(reason.then)) { return reason; }
    return new Promise$1(function (fulfill, reject) {
      reject(reason);
    });
  };

  // TODO use MutationObservers or something to simulate setImmediate
  var wait = function(callback) {
    setTimeout(callback, 0);
  };

  var makeDispatcher = function(handlers, result) {
    return function() {
      for (var handler = (void 0); (handler = handlers.shift()); ) {
        handler(result);
      }
    };
  };

  var resolve$1 = function(promise, x, fulfil, reject) {
    var then;
    if (x === promise) {
      throw new TypeError("A promise's fulfillment handler cannot return the same promise");
    }
    if (x instanceof Promise$1) {
      x.then(fulfil, reject);
    } else if (x && (isObjectType(x) || isFunction(x))) {
      try {
        then = x.then;
      } catch (e) {
        reject(e);
        return;
      }
      if (isFunction(then)) {
        var called;

        var resolvePromise = function(y) {
          if (called) { return; }
          called = true;
          resolve$1(promise, y, fulfil, reject);
        };
        var rejectPromise = function(r) {
          if (called) { return; }
          called = true;
          reject(r);
        };

        try {
          then.call(x, resolvePromise, rejectPromise);
        } catch (e) {
          if (!called) {
            reject(e);
            called = true;
            return;
          }
        }
      } else {
        fulfil(x);
      }
    } else {
      fulfil(x);
    }
  };
}

/* istanbul ignore if */
if (
  typeof window !== 'undefined' &&
  !(window.requestAnimationFrame && window.cancelAnimationFrame)
) {
  var lastTime = 0;
  window.requestAnimationFrame = function(callback) {
    var currentTime = Date.now();
    var timeToNextCall = Math.max(0, 16 - (currentTime - lastTime));
    var id = window.setTimeout(function () {
      callback(currentTime + timeToNextCall);
    }, timeToNextCall);
    lastTime = currentTime + timeToNextCall;
    return id;
  };
  window.cancelAnimationFrame = function(id) {
    clearTimeout(id);
  };
}

var defaults = {
  // render placement:
  el: void 0,
  append: false,
  delegate: true,
  enhance: false,

  // template:
  template: null,

  // parse:
  allowExpressions: true,
  delimiters: ['{{', '}}'],
  tripleDelimiters: ['{{{', '}}}'],
  staticDelimiters: ['[[', ']]'],
  staticTripleDelimiters: ['[[[', ']]]'],
  csp: true,
  interpolate: false,
  preserveWhitespace: false,
  preserveStandaloneSections: false,
  sanitize: false,
  stripComments: true,
  contextLines: 0,

  // data & binding:
  data: create(null),
  helpers: create(null),
  computed: create(null),
  syncComputedChildren: false,
  resolveInstanceMembers: false,
  warnAboutAmbiguity: false,
  adapt: [],
  isolated: true,
  twoway: true,
  lazy: false,

  // transitions:
  noIntro: false,
  noOutro: false,
  transitionsEnabled: true,
  complete: void 0,
  nestedTransitions: true,

  // css:
  css: null,
  noCSSTransform: false
};

// These are a subset of the easing equations found at
// https://raw.github.com/danro/easing-js - license info
// follows:

// --------------------------------------------------
// easing.js v0.5.4
// Generic set of easing functions with AMD support
// https://github.com/danro/easing-js
// This code may be freely distributed under the MIT license
// http://danro.mit-license.org/
// --------------------------------------------------
// All functions adapted from Thomas Fuchs & Jeremy Kahn
// Easing Equations (c) 2003 Robert Penner, BSD license
// https://raw.github.com/danro/easing-js/master/LICENSE
// --------------------------------------------------

// In that library, the functions named easeIn, easeOut, and
// easeInOut below are named easeInCubic, easeOutCubic, and
// (you guessed it) easeInOutCubic.
//
// You can add additional easing functions to this list, and they
// will be globally available.

var easing = {
  linear: function linear(pos) {
    return pos;
  },
  easeIn: function easeIn(pos) {
    /* istanbul ignore next */
    return Math.pow(pos, 3);
  },
  easeOut: function easeOut(pos) {
    return Math.pow(pos - 1, 3) + 1;
  },
  easeInOut: function easeInOut(pos) {
    /* istanbul ignore next */
    if ((pos /= 0.5) < 1) {
      return 0.5 * Math.pow(pos, 3);
    }
    /* istanbul ignore next */
    return 0.5 * (Math.pow(pos - 2, 3) + 2);
  }
};

function noop() {}

/* global console */
/* eslint no-console:"off" */

var alreadyWarned = {};
var log;
var printWarning;
var welcome;

if (hasConsole) {
  var welcomeIntro = [
    "%cRactive.js %c1.4.0 %cin debug mode, %cmore...",
    'color: rgb(114, 157, 52); font-weight: normal;',
    'color: rgb(85, 85, 85); font-weight: normal;',
    'color: rgb(85, 85, 85); font-weight: normal;',
    'color: rgb(82, 140, 224); font-weight: normal; text-decoration: underline;'
  ];
  var welcomeMessage = "You're running Ractive 1.4.0 in debug mode - messages will be printed to the console to help you fix problems and optimise your application.\n\nTo disable debug mode, add this line at the start of your app:\n  Ractive.DEBUG = false;\n\nTo disable debug mode when your app is minified, add this snippet:\n  Ractive.DEBUG = /unminified/.test(function(){/*unminified*/});\n\nGet help and support:\n  http://ractive.js.org\n  http://stackoverflow.com/questions/tagged/ractivejs\n  http://groups.google.com/forum/#!forum/ractive-js\n  http://twitter.com/ractivejs\n\nFound a bug? Raise an issue:\n  https://github.com/ractivejs/ractive/issues\n\n";

  welcome = function () {
    if (Ractive.WELCOME_MESSAGE === false) {
      welcome = noop;
      return;
    }
    var message = 'WELCOME_MESSAGE' in Ractive ? Ractive.WELCOME_MESSAGE : welcomeMessage;
    var hasGroup = !!console.groupCollapsed;
    if (hasGroup) { console.groupCollapsed.apply(console, welcomeIntro); }
    console.log(message);
    if (hasGroup) {
      console.groupEnd(welcomeIntro);
    }

    welcome = noop;
  };

  printWarning = function (message, args) {
    welcome();

    // extract information about the instance this message pertains to, if applicable
    if (isObjectType(args[args.length - 1])) {
      var options = args.pop();
      var ractive = options ? options.ractive : null;

      if (ractive) {
        // if this is an instance of a component that we know the name of, add
        // it to the message
        var name;
        if (ractive.component && (name = ractive.component.name)) {
          message = "<" + name + "> " + message;
        }

        var node;
        if (
          (node =
            options.node || (ractive.fragment && ractive.fragment.rendered && ractive.find('*')))
        ) {
          args.push(node);
        }
      }
    }

    console.warn.apply(
      console,
      ['%cRactive.js: %c' + message, 'color: rgb(114, 157, 52);', 'color: rgb(85, 85, 85);'].concat(
        args
      )
    );
  };

  log = function() {
    console.log.apply(console, arguments);
  };
} else {
  printWarning = log = welcome = noop;
}

function format(message, args) {
  return message.replace(/%s/g, function () { return args.shift(); });
}

function fatal(message) {
  var args = [], len = arguments.length - 1;
  while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];

  message = format(message, args);
  throw new Error(message);
}

function logIfDebug() {
  if (Ractive.DEBUG) {
    log.apply(null, arguments);
  }
}

function warn(message) {
  var args = [], len = arguments.length - 1;
  while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];

  message = format(message, args);
  printWarning(message, args);
}

function warnOnce(message) {
  var args = [], len = arguments.length - 1;
  while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];

  message = format(message, args);

  if (alreadyWarned[message]) {
    return;
  }

  alreadyWarned[message] = true;
  printWarning(message, args);
}

function warnIfDebug() {
  if (Ractive.DEBUG) {
    warn.apply(null, arguments);
  }
}

function warnOnceIfDebug() {
  if (Ractive.DEBUG) {
    warnOnce.apply(null, arguments);
  }
}

// Error messages that are used (or could be) in multiple places
var badArguments = 'Bad arguments';
var noRegistryFunctionReturn =
  'A function was specified for "%s" %s, but no %s was returned';
var missingPlugin = function (name, type) { return ("Missing \"" + name + "\" " + type + " plugin. You may need to download a plugin via http://ractive.js.org/integrations/#" + type + "s"); };

function findInViewHierarchy(registryName, ractive, name) {
  var instance = findInstance(registryName, ractive, name);
  return instance ? instance[registryName][name] : null;
}

function findInstance(registryName, ractive, name) {
  while (ractive) {
    if (name in ractive[registryName]) {
      return ractive;
    }

    if (ractive.isolated) {
      return null;
    }

    ractive = ractive.parent;
  }
}

function interpolate(from, to, ractive, type) {
  if (from === to) { return null; }

  if (type) {
    var interpol = findInViewHierarchy('interpolators', ractive, type);
    if (interpol) { return interpol(from, to) || null; }

    fatal(missingPlugin(type, 'interpolator'));
  }

  return (
    interpolators.number(from, to) ||
    interpolators.array(from, to) ||
    interpolators.object(from, to) ||
    null
  );
}

var interpolators = {
  number: function number(from, to) {
    if (!isNumeric(from) || !isNumeric(to)) {
      return null;
    }

    from = +from;
    to = +to;

    var delta = to - from;

    if (!delta) {
      return function() {
        return from;
      };
    }

    return function(t) {
      return from + t * delta;
    };
  },

  array: function array(from, to) {
    var len, i;

    if (!isArray(from) || !isArray(to)) {
      return null;
    }

    var intermediate = [];
    var interpolators = [];

    i = len = Math.min(from.length, to.length);
    while (i--) {
      interpolators[i] = interpolate(from[i], to[i]);
    }

    // surplus values - don't interpolate, but don't exclude them either
    for (i = len; i < from.length; i += 1) {
      intermediate[i] = from[i];
    }

    for (i = len; i < to.length; i += 1) {
      intermediate[i] = to[i];
    }

    return function(t) {
      var i = len;

      while (i--) {
        intermediate[i] = interpolators[i](t);
      }

      return intermediate;
    };
  },

  object: function object(from, to) {
    if (!isObject(from) || !isObject(to)) {
      return null;
    }

    var properties = [];
    var intermediate = {};
    var interpolators = {};

    var loop = function ( prop ) {
      if (hasOwn(from, prop)) {
        if (hasOwn(to, prop)) {
          properties.push(prop);
          interpolators[prop] = interpolate(from[prop], to[prop]) || (function () { return to[prop]; });
        } else {
          intermediate[prop] = from[prop];
        }
      }
    };

    for (var prop in from) loop( prop );

    for (var prop$1 in to) {
      if (hasOwn(to, prop$1) && !hasOwn(from, prop$1)) {
        intermediate[prop$1] = to[prop$1];
      }
    }

    var len = properties.length;

    return function(t) {
      var i = len;

      while (i--) {
        var prop = properties[i];

        intermediate[prop] = interpolators[prop](t);
      }

      return intermediate;
    };
  }
};

var refPattern = /\[\s*(\*|[0-9]|[1-9][0-9]+)\s*\]/g;
var splitPattern = /([^\\](?:\\\\)*)\./;
var escapeKeyPattern = /\\|\./g;
var unescapeKeyPattern = /((?:\\)+)\1|\\(\.)/g;

function escapeKey(key) {
  if (isString(key)) {
    return key.replace(escapeKeyPattern, '\\$&');
  }

  return key;
}

function normalise(ref) {
  return ref ? ref.replace(refPattern, '.$1') : '';
}

function splitKeypath(keypath) {
  var result = [];
  var match;

  keypath = normalise(keypath);

  while ((match = splitPattern.exec(keypath))) {
    var index = match.index + match[1].length;
    result.push(keypath.substr(0, index));
    keypath = keypath.substr(index + 1);
  }

  result.push(keypath);

  return result;
}

function unescapeKey(key) {
  if (isString(key)) {
    return key.replace(unescapeKeyPattern, '$1$2');
  }

  return key;
}

function addToArray(array, value) {
  var index = array.indexOf(value);

  if (index === -1) {
    array.push(value);
  }
}

function arrayContains(array, value) {
  for (var i = 0, c = array.length; i < c; i++) {
    if (array[i] == value) {
      return true;
    }
  }

  return false;
}

function arrayContentsMatch(a, b) {
  var i;

  if (!isArray(a) || !isArray(b)) {
    return false;
  }

  if (a.length !== b.length) {
    return false;
  }

  i = a.length;
  while (i--) {
    if (a[i] !== b[i]) {
      return false;
    }
  }

  return true;
}

function ensureArray(x) {
  if (isString(x)) {
    return [x];
  }

  if (isUndefined(x)) {
    return [];
  }

  return x;
}

function lastItem(array) {
  return array[array.length - 1];
}

function removeFromArray(array, member) {
  if (!array) {
    return;
  }

  var index = array.indexOf(member);

  if (index !== -1) {
    array.splice(index, 1);
  }
}

function combine() {
  var arrays = [], len = arguments.length;
  while ( len-- ) arrays[ len ] = arguments[ len ];

  var res = arrays.concat.apply([], arrays);
  var i = res.length;
  while (i--) {
    var idx = res.indexOf(res[i]);
    if (~idx && idx < i) { res.splice(i, 1); }
  }

  return res;
}

function toArray(arrayLike) {
  var array = [];
  var i = arrayLike.length;
  while (i--) {
    array[i] = arrayLike[i];
  }

  return array;
}

function findMap(array, fn) {
  var len = array.length;
  for (var i = 0; i < len; i++) {
    var result = fn(array[i]);
    if (result) { return result; }
  }
}

function buildNewIndices(one, two, comparator) {
  var oldArray = one;
  var newArray = two;
  if (comparator) {
    oldArray = oldArray.map(comparator);
    newArray = newArray.map(comparator);
  }

  var oldLength = oldArray.length;

  var usedIndices = {};
  var firstUnusedIndex = 0;

  var result = oldArray.map(function (item) {
    var index;
    var start = firstUnusedIndex;

    do {
      index = newArray.indexOf(item, start);

      if (index === -1) {
        return -1;
      }

      start = index + 1;
    } while (usedIndices[index] === true && start < oldLength);

    // keep track of the first unused index, so we don't search
    // the whole of newArray for each item in oldArray unnecessarily
    if (index === firstUnusedIndex) {
      firstUnusedIndex += 1;
    }
    // allow next instance of next "equal" to be found item
    usedIndices[index] = true;
    return index;
  });

  var len = (result.oldLen = oldArray.length);
  result.newLen = newArray.length;

  if (len === result.newLen) {
    var i = 0;
    for (i; i < len; i++) {
      if (result[i] !== i) { break; }
    }

    if (i === len) { result.same = true; }
  }

  return result;
}

var fnBind = Function.prototype.bind;

function bind(fn, context) {
  if (!/this/.test(fn.toString())) { return fn; }

  var bound = fnBind.call(fn, context);
  for (var prop in fn) { bound[prop] = fn[prop]; }

  return bound;
}

var shuffleTasks = { early: [], mark: [] };
var registerQueue = { early: [], mark: [] };
var noVirtual = { virtual: false };

var ModelBase = function ModelBase(parent) {
  this.deps = [];

  this.children = [];
  this.childByKey = {};
  this.links = [];

  this.bindings = [];

  if (parent) {
    this.parent = parent;
    this.root = parent.root;
  }
};
var ModelBase__proto__ = ModelBase.prototype;

ModelBase__proto__.addShuffleTask = function addShuffleTask (task, stage) {
    if ( stage === void 0 ) stage = 'early';

  shuffleTasks[stage].push(task);
};
ModelBase__proto__.addShuffleRegister = function addShuffleRegister (item, stage) {
    if ( stage === void 0 ) stage = 'early';

  registerQueue[stage].push({ model: this, item: item });
};

ModelBase__proto__.downstreamChanged = function downstreamChanged () {};

ModelBase__proto__.findMatches = function findMatches (keys$$1) {
  var len = keys$$1.length;

  var existingMatches = [this];
  var matches;
  var i;

  var loop = function (  ) {
    var key = keys$$1[i];

    if (key === '*') {
      matches = [];
      existingMatches.forEach(function (model) {
        matches.push.apply(matches, model.getValueChildren(model.get()));
      });
    } else {
      matches = existingMatches.map(function (model) { return model.joinKey(key); });
    }

    existingMatches = matches;
  };

    for (i = 0; i < len; i += 1) loop(  );

  return matches;
};

ModelBase__proto__.getKeypath = function getKeypath (ractive) {
  if (ractive !== this.ractive && this._link) { return this._link.target.getKeypath(ractive); }

  if (!this.keypath) {
    var parent = this.parent && this.parent.getKeypath(ractive);
    this.keypath = parent
      ? ((this.parent.getKeypath(ractive)) + "." + (escapeKey(this.key)))
      : escapeKey(this.key);
  }

  return this.keypath;
};

ModelBase__proto__.getValueChildren = function getValueChildren (value) {
    var this$1 = this;

  var children;
  if (isArray(value)) {
    children = [];
    if ('length' in this && this.length !== value.length) {
      children.push(this.joinKey('length'));
    }
    value.forEach(function (m, i) {
      children.push(this$1.joinKey(i));
    });
  } else if (isObject(value) || isFunction(value)) {
    children = keys(value).map(function (key) { return this$1.joinKey(escapeKey(key)); });
  } else if (value != null) {
    children = [];
  }

  var computed = this.computed;
  if (computed) {
    children.push.apply(children, keys(computed).map(function (k) { return this$1.joinKey(k); }));
  }

  return children;
};

ModelBase__proto__.getVirtual = function getVirtual (shouldCapture) {
    var this$1 = this;

  var value = this.get(shouldCapture, { virtual: false });
  if (isObjectLike(value)) {
    var result = isArray(value) ? [] : create(null);

    var keys$$1 = keys(value);
    var i = keys$$1.length;
    while (i--) {
      var child = this$1.childByKey[keys$$1[i]];
      if (!child) { result[keys$$1[i]] = value[keys$$1[i]]; }
      else if (child._link) { result[keys$$1[i]] = child._link.getVirtual(); }
      else { result[keys$$1[i]] = child.getVirtual(); }
    }

    i = this.children.length;
    while (i--) {
      var child$1 = this$1.children[i];
      if (!(child$1.key in result) && child$1._link) {
        result[child$1.key] = child$1._link.getVirtual();
      }
    }

    if (this.computed) {
      keys$$1 = keys(this.computed);
      i = keys$$1.length;
      while (i--) {
        result[keys$$1[i]] = this$1.computed[keys$$1[i]].get();
      }
    }

    return result;
  } else { return value; }
};

ModelBase__proto__.has = function has (key) {
    var this$1 = this;

  if (this._link) { return this._link.has(key); }

  var value = this.get(false, noVirtual);
  if (!value) { return false; }

  key = unescapeKey(key);
  if ((isFunction(value) || isObject(value)) && key in value) { return true; }

  var computed = this.computed;
  if (computed && key in this.computed) { return true; }

  computed = this.root.ractive && this.root.ractive.computed;
  if (computed) {
    keys(computed).forEach(function (k) {
      if (computed[k].pattern && computed[k].pattern.test(this$1.getKeypath())) { return true; }
    });
  }

  return false;
};

ModelBase__proto__.joinAll = function joinAll (keys$$1, opts) {
  var model = this;
  for (var i = 0; i < keys$$1.length; i += 1) {
    if (
      opts &&
      opts.lastLink === false &&
      i + 1 === keys$$1.length &&
      model.childByKey[keys$$1[i]] &&
      model.childByKey[keys$$1[i]]._link
    )
      { return model.childByKey[keys$$1[i]]; }
    model = model.joinKey(keys$$1[i], opts);
  }

  return model;
};

ModelBase__proto__.notifyUpstream = function notifyUpstream (startPath) {
    var this$1 = this;

  var parent = this.parent;
  var path = startPath || [this.key];
  while (parent) {
    if (parent.patterns) { parent.patterns.forEach(function (o) { return o.notify(path.slice()); }); }
    path.unshift(parent.key);
    parent.links.forEach(function (l) { return l.notifiedUpstream(path, this$1.root); });
    parent.deps.forEach(function (d) { return d.handleChange(path); });
    parent.downstreamChanged(startPath);
    parent = parent.parent;
  }
};

ModelBase__proto__.rebind = function rebind (next, previous, safe) {
    var this$1 = this;

  if (this._link) {
    this._link.rebind(next, previous, false);
  }

  if (next === this) { return; }

  // tell the deps to move to the new target
  var i = this.deps.length;
  while (i--) {
    if (this$1.deps[i].rebind) { this$1.deps[i].rebind(next, previous, safe); }
  }

  i = this.links.length;
  while (i--) {
    var link = this$1.links[i];
    // only relink the root of the link tree
    if (link.owner && link.owner._link) { link.relinking(next, safe); }
  }

  i = this.children.length;
  while (i--) {
    var child = this$1.children[i];
    child.rebind(next ? next.joinKey(child.key) : undefined, child._link || child, safe);
    if (this$1.dataModel) {
      this$1.addShuffleTask(function () { return checkDataLink(this$1, this$1.retrieve()); }, 'early');
    }
  }

  i = this.bindings.length;
  while (i--) {
    this$1.bindings[i].rebind(next, previous, safe);
  }
};

ModelBase__proto__.reference = function reference () {
  'refs' in this ? this.refs++ : (this.refs = 1);
};

ModelBase__proto__.register = function register (dep) {
  this.deps.push(dep);
};

ModelBase__proto__.registerLink = function registerLink (link) {
  addToArray(this.links, link);
};

ModelBase__proto__.registerPatternObserver = function registerPatternObserver (observer) {
  (this.patterns || (this.patterns = [])).push(observer);
  this.register(observer);
};

ModelBase__proto__.registerTwowayBinding = function registerTwowayBinding (binding) {
  this.bindings.push(binding);
};

ModelBase__proto__.unreference = function unreference () {
  if ('refs' in this) { this.refs--; }
};

ModelBase__proto__.unregister = function unregister (dep) {
  removeFromArray(this.deps, dep);
};

ModelBase__proto__.unregisterLink = function unregisterLink (link) {
  removeFromArray(this.links, link);
};

ModelBase__proto__.unregisterPatternObserver = function unregisterPatternObserver (observer) {
  removeFromArray(this.patterns, observer);
  this.unregister(observer);
};

ModelBase__proto__.unregisterTwowayBinding = function unregisterTwowayBinding (binding) {
  removeFromArray(this.bindings, binding);
};

ModelBase__proto__.updateFromBindings = function updateFromBindings$1 (cascade) {
    var this$1 = this;

  var i = this.bindings.length;
  while (i--) {
    var value = this$1.bindings[i].getValue();
    if (value !== this$1.value) { this$1.set(value); }
  }

  // check for one-way bindings if there are no two-ways
  if (!this.bindings.length) {
    var oneway = findBoundValue(this.deps);
    if (oneway && oneway.value !== this.value) { this.set(oneway.value); }
  }

  if (cascade) {
    this.children.forEach(updateFromBindings);
    this.links.forEach(updateFromBindings);
    if (this._link) { this._link.updateFromBindings(cascade); }
  }
};

// TODO: this may be better handled by overriding `get` on models with a parent that isRoot
function maybeBind(model, value, shouldBind) {
  if (shouldBind && isFunction(value) && model.parent && model.parent.isRoot) {
    if (!model.boundValue) {
      model.boundValue = bind(value._r_unbound || value, model.parent.ractive);
    }

    return model.boundValue;
  }

  return value;
}

function updateFromBindings(model) {
  model.updateFromBindings(true);
}

function findBoundValue(list) {
  var i = list.length;
  while (i--) {
    if (list[i].bound) {
      var owner = list[i].owner;
      if (owner) {
        var value = owner.name === 'checked' ? owner.node.checked : owner.node.value;
        return { value: value };
      }
    }
  }
}

function fireShuffleTasks(stage) {
  if (!stage) {
    fireShuffleTasks('early');
    fireShuffleTasks('mark');
  } else {
    var tasks = shuffleTasks[stage];
    shuffleTasks[stage] = [];
    var i = tasks.length;
    while (i--) { tasks[i](); }

    var register = registerQueue[stage];
    registerQueue[stage] = [];
    i = register.length;
    while (i--) { register[i].model.register(register[i].item); }
  }
}

function shuffle(model, newIndices, link, unsafe) {
  model.shuffling = true;

  var upstream = model.source().length !== model.source().value.length;
  var i = newIndices.length;
  while (i--) {
    var idx = newIndices[i];
    // nothing is actually changing, so move in the index and roll on
    if (i === idx) {
      continue;
    }

    upstream = true;

    // rebind the children on i to idx
    if (i in model.childByKey)
      { model.childByKey[i].rebind(
        !~idx ? undefined : model.joinKey(idx),
        model.childByKey[i],
        !unsafe
      ); }
  }

  model.links.forEach(function (l) { return l.shuffle(newIndices); });
  if (!link) { fireShuffleTasks('early'); }

  i = model.deps.length;
  while (i--) {
    if (model.deps[i].shuffle) { model.deps[i].shuffle(newIndices); }
  }

  model[link ? 'marked' : 'mark']();
  if (!link) { fireShuffleTasks('mark'); }

  if (upstream) { model.notifyUpstream(); }

  model.shuffling = false;
}

function checkDataLink(model, value) {
  if (value !== model.dataModel) {
    if (value && value.viewmodel && value.viewmodel.isRoot && model.childByKey.data) {
      model.childByKey.data.link(value.viewmodel, 'data');
      model.dataModel = value;
    } else if (model.dataModel) {
      model.childByKey.data.unlink();
      model.dataModel = true;
    }
  }
}

var stack = [];
var captureGroup;

function startCapturing() {
  stack.push((captureGroup = []));
}

function stopCapturing() {
  var dependencies = stack.pop();
  captureGroup = stack[stack.length - 1];
  return dependencies;
}

function capture(model) {
  if (captureGroup) {
    addToArray(captureGroup, model);
  }
}

function bind$1(x) {
  x.bind();
}
function cancel(x) {
  x.cancel();
}
function destroyed(x) {
  x.destroyed();
}
function handleChange(x) {
  x.handleChange();
}
function mark(x) {
  x.mark();
}
function markForce(x) {
  x.mark(true);
}
function marked(x) {
  x.marked();
}
function markedAll(x) {
  x.markedAll();
}
function render(x) {
  x.render();
}
function shuffled(x) {
  x.shuffled();
}
function teardown(x) {
  x.teardown();
}
function unbind(x) {
  x.unbind();
}
function unrender(x) {
  x.unrender();
}

function update(x) {
  x.update();
}
function toString$1(x) {
  return x.toString();
}
function toEscapedString(x) {
  return x.toString(true);
}

// this is the dry method of checking to see if a rebind applies to
// a particular keypath because in some cases, a dep may be bound
// directly to a particular keypath e.g. foo.bars.0.baz and need
// to avoid getting kicked to foo.bars.1.baz if foo.bars is unshifted
function rebindMatch(template, next, previous, fragment) {
  var keypath = template.r || template;

  // no valid keypath, go with next
  if (!keypath || !isString(keypath)) { return next; }

  // completely contextual ref, go with next
  if (
    keypath === '.' ||
    keypath[0] === '@' ||
    (next || previous).isKey ||
    (next || previous).isKeypath
  )
    { return next; }

  var parts = keypath.split('/');
  var keys = splitKeypath(parts[parts.length - 1]);
  var last = keys[keys.length - 1];

  // check the keypath against the model keypath to see if it matches
  var model = next || previous;

  // check to see if this was an alias
  if (model && keys.length === 1 && last !== model.key && fragment) {
    keys = findAlias(last, fragment) || keys;
  }

  var i = keys.length;
  var match = true;
  var shuffling = false;

  while (model && i--) {
    if (model.shuffling) { shuffling = true; }
    // non-strict comparison to account for indices in keypaths
    if (keys[i] != model.key) { match = false; }
    model = model.parent;
  }

  // next is undefined, but keypath is shuffling and previous matches
  if (!next && match && shuffling) { return previous; }
  else if (next && !match && shuffling)
    // next is defined, but doesn't match the keypath
    { return previous; }
  else { return next; }
}

function findAlias(name, fragment) {
  while (fragment) {
    var z = fragment.aliases;
    if (z && z[name]) {
      var aliases = (fragment.owner.iterations ? fragment.owner : fragment).owner.template.z;
      for (var i = 0; i < aliases.length; i++) {
        if (aliases[i].n === name) {
          var alias = aliases[i].x;
          if (!alias.r) { return false; }
          var parts = alias.r.split('/');
          return splitKeypath(parts[parts.length - 1]);
        }
      }
      return;
    }

    fragment = fragment.componentParent || fragment.parent;
  }
}

// temporary placeholder target for detached implicit links
var Missing = {
  key: '@missing',
  animate: noop,
  applyValue: noop,
  get: noop,
  getKeypath: function getKeypath() {
    return this.key;
  },
  joinAll: function joinAll() {
    return this;
  },
  joinKey: function joinKey() {
    return this;
  },
  mark: noop,
  registerLink: noop,
  shufle: noop,
  set: noop,
  unregisterLink: noop
};
Missing.parent = Missing;

var LinkModel = (function (ModelBase) {
  function LinkModel(parent, owner, target, key) {
    ModelBase.call(this, parent);

    this.owner = owner;
    this.target = target;
    this.key = isUndefined(key) ? owner.key : key;
    if (owner && owner.isLink) { this.sourcePath = (owner.sourcePath) + "." + (this.key); }

    if (target) { target.registerLink(this); }

    if (parent) { this.isReadonly = parent.isReadonly; }

    this.isLink = true;
  }

  if ( ModelBase ) LinkModel.__proto__ = ModelBase;
  var LinkModel__proto__ = LinkModel.prototype = Object.create( ModelBase && ModelBase.prototype );
  LinkModel__proto__.constructor = LinkModel;

  LinkModel__proto__.animate = function animate (from, to, options, interpolator) {
    return this.target.animate(from, to, options, interpolator);
  };

  LinkModel__proto__.applyValue = function applyValue (value) {
    if (this.boundValue) { this.boundValue = null; }
    this.target.applyValue(value);
  };

  LinkModel__proto__.attach = function attach (fragment) {
    var model = resolveReference(fragment, this.key);
    if (model) {
      this.relinking(model, false);
    } else {
      // if there is no link available, move everything here to real models
      this.owner.unlink();
    }
  };

  LinkModel__proto__.detach = function detach () {
    this.relinking(Missing, false);
  };

  LinkModel__proto__.get = function get (shouldCapture, opts) {
    if ( opts === void 0 ) opts = {};

    if (shouldCapture) {
      capture(this);

      // may need to tell the target to unwrap
      opts.unwrap = 'unwrap' in opts ? opts.unwrap : true;
    }

    var bind = 'shouldBind' in opts ? opts.shouldBind : true;
    opts.shouldBind = this.mapping && this.target.parent && this.target.parent.isRoot;

    return maybeBind(this, this.target.get(false, opts), bind);
  };

  LinkModel__proto__.getKeypath = function getKeypath (ractive) {
    if (ractive && ractive !== this.root.ractive) { return this.target.getKeypath(ractive); }

    return ModelBase.prototype.getKeypath.call(this, ractive);
  };

  LinkModel__proto__.handleChange = function handleChange$1 () {
    this.deps.forEach(handleChange);
    this.links.forEach(handleChange);
    this.notifyUpstream();
  };

  LinkModel__proto__.isDetached = function isDetached () {
    return this.virtual && this.target === Missing;
  };

  LinkModel__proto__.joinKey = function joinKey (key) {
    // TODO: handle nested links
    if (isUndefined(key) || key === '') { return this; }

    if (!hasOwn(this.childByKey, key)) {
      var child = new LinkModel(this, this, this.target.joinKey(key), key);
      this.children.push(child);
      this.childByKey[key] = child;
    }

    return this.childByKey[key];
  };

  LinkModel__proto__.mark = function mark (force) {
    this.target.mark(force);
  };

  LinkModel__proto__.marked = function marked$1 () {
    if (this.boundValue) { this.boundValue = null; }

    this.links.forEach(marked);

    this.deps.forEach(handleChange);
  };

  LinkModel__proto__.markedAll = function markedAll$1 () {
    this.children.forEach(markedAll);
    this.marked();
  };

  LinkModel__proto__.notifiedUpstream = function notifiedUpstream (startPath, root) {
    var this$1 = this;

    this.links.forEach(function (l) { return l.notifiedUpstream(startPath, this$1.root); });
    this.deps.forEach(handleChange);
    if (startPath && this.rootLink) {
      var parent = this.parent;
      if (this.root !== root) {
        var path = startPath.slice(1);
        path.unshift(this.key);
        this.notifyUpstream(path);
      } else if (parent && parent !== this.target) {
        var path$1 = [parent.key, this.key];
        parent.links.forEach(function (l) { return l.notifiedUpstream(path$1, parent.root); });
        parent.deps.forEach(function (d) { return d.handleChange(path$1); });
        parent.notifyUpstream(path$1);
      }
    }
  };

  LinkModel__proto__.relinked = function relinked () {
    this.target.registerLink(this);
    this.children.forEach(function (c) { return c.relinked(); });
  };

  LinkModel__proto__.relinking = function relinking (target, safe) {
    var this$1 = this;

    if (this.rootLink && this.sourcePath)
      { target = rebindMatch(this.sourcePath, target, this.target); }
    if (!target || this.target === target) { return; }

    this.target && this.target.unregisterLink(this);

    this.target = target;
    this.children.forEach(function (c) {
      c.relinking(target.joinKey(c.key), safe);
    });

    if (!safe) { this.keypath = undefined; }

    if (this.rootLink)
      { this.addShuffleTask(function () {
        this$1.relinked();
        if (!safe) {
          this$1.markedAll();
          this$1.notifyUpstream();
        }
      }); }
  };

  LinkModel__proto__.set = function set (value) {
    if (this.boundValue) { this.boundValue = null; }
    this.target.set(value);
  };

  LinkModel__proto__.shuffle = function shuffle$1 (newIndices) {
    // watch for extra shuffles caused by a shuffle in a downstream link
    if (this.shuffling) { return; }

    // let the real model handle firing off shuffles
    if (!this.target.shuffling) {
      if (this.target.shuffle) {
        this.target.shuffle(newIndices);
      } else {
        // the target is a computation, which can't shuffle
        this.target.mark();
      }
    } else {
      shuffle(this, newIndices, true);
    }
  };

  LinkModel__proto__.source = function source () {
    if (this.target.source) { return this.target.source(); }
    else { return this.target; }
  };

  LinkModel__proto__.teardown = function teardown$3 () {
    if (this._link) { this._link.teardown(); }
    this.target.unregisterLink(this);
    this.children.forEach(teardown);
  };

  return LinkModel;
}(ModelBase));

ModelBase.prototype.link = function link(model, keypath, options) {
  var lnk = this._link || new LinkModel(this.parent, this, model, this.key);
  lnk.implicit = options && options.implicit;
  lnk.mapping = options && options.mapping;
  lnk.sourcePath = keypath;
  lnk.rootLink = true;
  if (this._link) { this._link.relinking(model, false); }
  this._link = lnk;
  this.rebind(lnk, this, false);
  fireShuffleTasks();

  lnk.markedAll();

  this.notifyUpstream();
  return lnk;
};

ModelBase.prototype.unlink = function unlink() {
  if (this._link) {
    var ln = this._link;
    this._link = undefined;
    ln.rebind(this, ln, false);
    fireShuffleTasks();
    ln.teardown();
    this.notifyUpstream();
  }
};

function fromExpression(body, length) {
  if ( length === void 0 ) length = 0;

  var args = new Array(length);

  while (length--) {
    args[length] = "_" + length;
  }

  // Functions created directly with new Function() look like this:
  //     function anonymous (_0 /**/) { return _0*2 }
  //
  // With this workaround, we get a little more compact:
  //     function (_0){return _0*2}
  return new Function([], ("return function (" + (args.join(',')) + "){return(" + body + ");};"))();
}

var functions = create(null);

function getFunction(str, i) {
  if (functions[str]) { return functions[str]; }
  return (functions[str] = createFunction(str, i));
}

function addFunctions(template) {
  if (!template) { return; }

  var exp = template.e;

  if (!exp) { return; }

  keys(exp).forEach(function (str) {
    if (functions[str]) { return; }
    functions[str] = exp[str];
  });
}

var TEMPLATE_VERSION = 4;

var leadingWhitespace = /^\s+/;

var ParseError = function(message) {
  this.name = 'ParseError';
  this.message = message;
  try {
    throw new Error(message);
  } catch (e) {
    this.stack = e.stack;
  }
};

ParseError.prototype = Error.prototype;

var Parser = function(str, options) {
  var item;
  var lineStart = 0;

  this.str = str;
  this.options = options || {};
  this.pos = 0;

  this.lines = this.str.split('\n');
  this.lineEnds = this.lines.map(function (line) {
    var lineEnd = lineStart + line.length + 1; // +1 for the newline

    lineStart = lineEnd;
    return lineEnd;
  }, 0);

  // Custom init logic
  if (this.init) { this.init(str, options); }

  var items = [];

  while (this.pos < this.str.length && (item = this.read())) {
    items.push(item);
  }

  this.leftover = this.remaining();
  this.result = this.postProcess ? this.postProcess(items, options) : items;
};

Parser.prototype = {
  read: function read(converters) {
    var this$1 = this;

    var i, item;

    if (!converters) { converters = this.converters; }

    var pos = this.pos;

    var len = converters.length;
    for (i = 0; i < len; i += 1) {
      this$1.pos = pos; // reset for each attempt

      if ((item = converters[i](this$1))) {
        return item;
      }
    }

    return null;
  },

  getContextMessage: function getContextMessage(pos, message) {
    var ref = this.getLinePos(pos);
    var lineNum = ref[0];
    var columnNum = ref[1];
    if (this.options.contextLines === -1) {
      return [lineNum, columnNum, (message + " at line " + lineNum + " character " + columnNum)];
    }

    var line = this.lines[lineNum - 1];

    var contextUp = '';
    var contextDown = '';
    if (this.options.contextLines) {
      var start =
        lineNum - 1 - this.options.contextLines < 0 ? 0 : lineNum - 1 - this.options.contextLines;
      contextUp = this.lines
        .slice(start, lineNum - 1 - start)
        .join('\n')
        .replace(/\t/g, '  ');
      contextDown = this.lines
        .slice(lineNum, lineNum + this.options.contextLines)
        .join('\n')
        .replace(/\t/g, '  ');
      if (contextUp) {
        contextUp += '\n';
      }
      if (contextDown) {
        contextDown = '\n' + contextDown;
      }
    }

    var numTabs = 0;
    var annotation =
      contextUp +
      line.replace(/\t/g, function (match, char) {
        if (char < columnNum) {
          numTabs += 1;
        }

        return '  ';
      }) +
      '\n' +
      new Array(columnNum + numTabs).join(' ') +
      '^----' +
      contextDown;

    return [
      lineNum,
      columnNum,
      (message + " at line " + lineNum + " character " + columnNum + ":\n" + annotation)
    ];
  },

  getLinePos: function getLinePos(char) {
    var this$1 = this;

    var lineNum = 0;
    var lineStart = 0;

    while (char >= this.lineEnds[lineNum]) {
      lineStart = this$1.lineEnds[lineNum];
      lineNum += 1;
    }

    var columnNum = char - lineStart;
    return [lineNum + 1, columnNum + 1, char]; // line/col should be one-based, not zero-based!
  },

  error: function error(message) {
    var ref = this.getContextMessage(this.pos, message);
    var lineNum = ref[0];
    var columnNum = ref[1];
    var msg = ref[2];

    var error = new ParseError(msg);

    error.line = lineNum;
    error.character = columnNum;
    error.shortMessage = message;

    throw error;
  },

  matchString: function matchString(string) {
    if (this.str.substr(this.pos, string.length) === string) {
      this.pos += string.length;
      return string;
    }
  },

  matchPattern: function matchPattern(pattern) {
    var match;

    if ((match = pattern.exec(this.remaining()))) {
      this.pos += match[0].length;
      return match[1] || match[0];
    }
  },

  sp: function sp() {
    this.matchPattern(leadingWhitespace);
  },

  remaining: function remaining() {
    return this.str.substring(this.pos);
  },

  nextChar: function nextChar() {
    return this.str.charAt(this.pos);
  },

  warn: function warn(message) {
    var msg = this.getContextMessage(this.pos, message)[2];

    warnIfDebug(msg);
  }
};

Parser.extend = function(proto) {
  var Parent = this;
  var Child = function(str, options) {
    Parser.call(this, str, options);
  };

  Child.prototype = create(Parent.prototype);

  for (var key in proto) {
    if (hasOwn(proto, key)) {
      Child.prototype[key] = proto[key];
    }
  }

  Child.extend = Parser.extend;
  return Child;
};

var TEXT = 1;
var INTERPOLATOR = 2;
var TRIPLE = 3;
var SECTION = 4;
var INVERTED = 5;
var CLOSING = 6;
var ELEMENT = 7;
var PARTIAL = 8;
var COMMENT = 9;
var DELIMCHANGE = 10;
var ANCHOR = 11;
var ATTRIBUTE = 13;
var CLOSING_TAG = 14;
var COMPONENT = 15;
var YIELDER = 16;
var INLINE_PARTIAL = 17;
var DOCTYPE = 18;
var ALIAS = 19;

var AWAIT = 55;

var NUMBER_LITERAL = 20;
var STRING_LITERAL = 21;
var ARRAY_LITERAL = 22;
var OBJECT_LITERAL = 23;
var BOOLEAN_LITERAL = 24;
var REGEXP_LITERAL = 25;

var GLOBAL = 26;
var KEY_VALUE_PAIR = 27;

var REFERENCE = 30;
var REFINEMENT = 31;
var MEMBER = 32;
var PREFIX_OPERATOR = 33;
var BRACKETED = 34;
var CONDITIONAL = 35;
var INFIX_OPERATOR = 36;

var INVOCATION = 40;

var SECTION_IF = 50;
var SECTION_UNLESS = 51;
var SECTION_EACH = 52;
var SECTION_WITH = 53;
var SECTION_IF_WITH = 54;

var ELSE = 60;
var ELSEIF = 61;
var THEN = 62;
var CATCH = 63;

var EVENT = 70;
var DECORATOR = 71;
var TRANSITION = 72;
var BINDING_FLAG = 73;
var DELEGATE_FLAG = 74;

var delimiterChangePattern = /^[^\s=]+/;
var whitespacePattern = /^\s+/;

function readDelimiterChange(parser) {
  if (!parser.matchString('=')) {
    return null;
  }

  var start = parser.pos;

  // allow whitespace before new opening delimiter
  parser.sp();

  var opening = parser.matchPattern(delimiterChangePattern);
  if (!opening) {
    parser.pos = start;
    return null;
  }

  // allow whitespace (in fact, it's necessary...)
  if (!parser.matchPattern(whitespacePattern)) {
    return null;
  }

  var closing = parser.matchPattern(delimiterChangePattern);
  if (!closing) {
    parser.pos = start;
    return null;
  }

  // allow whitespace before closing '='
  parser.sp();

  if (!parser.matchString('=')) {
    parser.pos = start;
    return null;
  }

  return [opening, closing];
}

var regexpPattern = /^(\/(?:[^\n\r\u2028\u2029/\\[]|\\.|\[(?:[^\n\r\u2028\u2029\]\\]|\\.)*])+\/(?:([gimuy])(?![a-z]*\2))*(?![a-zA-Z_$0-9]))/;

function readNumberLiteral(parser) {
  var result;

  if ((result = parser.matchPattern(regexpPattern))) {
    return {
      t: REGEXP_LITERAL,
      v: result
    };
  }

  return null;
}

var pattern = /[-/\\^$*+?.()|[\]{}]/g;

function escapeRegExp(str) {
  return str.replace(pattern, '\\$&');
}

var regExpCache = {};

function getLowestIndex(haystack, needles) {
  return haystack.search(
    regExpCache[needles.join()] ||
      (regExpCache[needles.join()] = new RegExp(needles.map(escapeRegExp).join('|')))
  );
}

// https://github.com/kangax/html-minifier/issues/63#issuecomment-37763316
//export const booleanAttributes = /^(allowFullscreen|async|autofocus|autoplay|checked|compact|controls|declare|default|defaultChecked|defaultMuted|defaultSelected|defer|disabled|enabled|formNoValidate|hidden|indeterminate|inert|isMap|itemScope|loop|multiple|muted|noHref|noResize|noShade|noValidate|noWrap|open|pauseOnExit|readOnly|required|reversed|scoped|seamless|selected|sortable|translate|trueSpeed|typeMustMatch|visible)$/i;
var booleanAttributes = {
  allowfullscreen: 1,
  async: 1,
  autofocus: 1,
  autoplay: 1,
  checked: 1,
  compact: 1,
  controls: 1,
  declare: 1,
  default: 1,
  defaultchecked: 1,
  defaultmuted: 1,
  defaultselected: 1,
  defer: 1,
  disabled: 1,
  enabled: 1,
  formnovalidate: 1,
  hidden: 1,
  indeterminate: 1,
  inert: 1,
  ismap: 1,
  itemscope: 1,
  loop: 1,
  multiple: 1,
  muted: 1,
  nohref: 1,
  noresize: 1,
  noshade: 1,
  novalidate: 1,
  nowrap: 1,
  open: 1,
  pauseonexit: 1,
  readonly: 1,
  required: 1,
  reversed: 1,
  scoped: 1,
  seamless: 1,
  selected: 1,
  sortable: 1,
  translate: 1,
  truespeed: 1,
  typemustmatch: 1,
  visible: 1
};
var voidElements = {
  area: 1,
  base: 1,
  br: 1,
  col: 1,
  command: 1,
  doctype: 1,
  embed: 1,
  hr: 1,
  img: 1,
  input: 1,
  keygen: 1,
  link: 1,
  meta: 1,
  param: 1,
  source: 1,
  track: 1,
  wbr: 1
};

var htmlEntities = {
  quot: 34,
  amp: 38,
  apos: 39,
  lt: 60,
  gt: 62,
  nbsp: 160,
  iexcl: 161,
  cent: 162,
  pound: 163,
  curren: 164,
  yen: 165,
  brvbar: 166,
  sect: 167,
  uml: 168,
  copy: 169,
  ordf: 170,
  laquo: 171,
  not: 172,
  shy: 173,
  reg: 174,
  macr: 175,
  deg: 176,
  plusmn: 177,
  sup2: 178,
  sup3: 179,
  acute: 180,
  micro: 181,
  para: 182,
  middot: 183,
  cedil: 184,
  sup1: 185,
  ordm: 186,
  raquo: 187,
  frac14: 188,
  frac12: 189,
  frac34: 190,
  iquest: 191,
  Agrave: 192,
  Aacute: 193,
  Acirc: 194,
  Atilde: 195,
  Auml: 196,
  Aring: 197,
  AElig: 198,
  Ccedil: 199,
  Egrave: 200,
  Eacute: 201,
  Ecirc: 202,
  Euml: 203,
  Igrave: 204,
  Iacute: 205,
  Icirc: 206,
  Iuml: 207,
  ETH: 208,
  Ntilde: 209,
  Ograve: 210,
  Oacute: 211,
  Ocirc: 212,
  Otilde: 213,
  Ouml: 214,
  times: 215,
  Oslash: 216,
  Ugrave: 217,
  Uacute: 218,
  Ucirc: 219,
  Uuml: 220,
  Yacute: 221,
  THORN: 222,
  szlig: 223,
  agrave: 224,
  aacute: 225,
  acirc: 226,
  atilde: 227,
  auml: 228,
  aring: 229,
  aelig: 230,
  ccedil: 231,
  egrave: 232,
  eacute: 233,
  ecirc: 234,
  euml: 235,
  igrave: 236,
  iacute: 237,
  icirc: 238,
  iuml: 239,
  eth: 240,
  ntilde: 241,
  ograve: 242,
  oacute: 243,
  ocirc: 244,
  otilde: 245,
  ouml: 246,
  divide: 247,
  oslash: 248,
  ugrave: 249,
  uacute: 250,
  ucirc: 251,
  uuml: 252,
  yacute: 253,
  thorn: 254,
  yuml: 255,
  OElig: 338,
  oelig: 339,
  Scaron: 352,
  scaron: 353,
  Yuml: 376,
  fnof: 402,
  circ: 710,
  tilde: 732,
  Alpha: 913,
  Beta: 914,
  Gamma: 915,
  Delta: 916,
  Epsilon: 917,
  Zeta: 918,
  Eta: 919,
  Theta: 920,
  Iota: 921,
  Kappa: 922,
  Lambda: 923,
  Mu: 924,
  Nu: 925,
  Xi: 926,
  Omicron: 927,
  Pi: 928,
  Rho: 929,
  Sigma: 931,
  Tau: 932,
  Upsilon: 933,
  Phi: 934,
  Chi: 935,
  Psi: 936,
  Omega: 937,
  alpha: 945,
  beta: 946,
  gamma: 947,
  delta: 948,
  epsilon: 949,
  zeta: 950,
  eta: 951,
  theta: 952,
  iota: 953,
  kappa: 954,
  lambda: 955,
  mu: 956,
  nu: 957,
  xi: 958,
  omicron: 959,
  pi: 960,
  rho: 961,
  sigmaf: 962,
  sigma: 963,
  tau: 964,
  upsilon: 965,
  phi: 966,
  chi: 967,
  psi: 968,
  omega: 969,
  thetasym: 977,
  upsih: 978,
  piv: 982,
  ensp: 8194,
  emsp: 8195,
  thinsp: 8201,
  zwnj: 8204,
  zwj: 8205,
  lrm: 8206,
  rlm: 8207,
  ndash: 8211,
  mdash: 8212,
  lsquo: 8216,
  rsquo: 8217,
  sbquo: 8218,
  ldquo: 8220,
  rdquo: 8221,
  bdquo: 8222,
  dagger: 8224,
  Dagger: 8225,
  bull: 8226,
  hellip: 8230,
  permil: 8240,
  prime: 8242,
  Prime: 8243,
  lsaquo: 8249,
  rsaquo: 8250,
  oline: 8254,
  frasl: 8260,
  euro: 8364,
  image: 8465,
  weierp: 8472,
  real: 8476,
  trade: 8482,
  alefsym: 8501,
  larr: 8592,
  uarr: 8593,
  rarr: 8594,
  darr: 8595,
  harr: 8596,
  crarr: 8629,
  lArr: 8656,
  uArr: 8657,
  rArr: 8658,
  dArr: 8659,
  hArr: 8660,
  forall: 8704,
  part: 8706,
  exist: 8707,
  empty: 8709,
  nabla: 8711,
  isin: 8712,
  notin: 8713,
  ni: 8715,
  prod: 8719,
  sum: 8721,
  minus: 8722,
  lowast: 8727,
  radic: 8730,
  prop: 8733,
  infin: 8734,
  ang: 8736,
  and: 8743,
  or: 8744,
  cap: 8745,
  cup: 8746,
  int: 8747,
  there4: 8756,
  sim: 8764,
  cong: 8773,
  asymp: 8776,
  ne: 8800,
  equiv: 8801,
  le: 8804,
  ge: 8805,
  sub: 8834,
  sup: 8835,
  nsub: 8836,
  sube: 8838,
  supe: 8839,
  oplus: 8853,
  otimes: 8855,
  perp: 8869,
  sdot: 8901,
  lceil: 8968,
  rceil: 8969,
  lfloor: 8970,
  rfloor: 8971,
  lang: 9001,
  rang: 9002,
  loz: 9674,
  spades: 9824,
  clubs: 9827,
  hearts: 9829,
  diams: 9830
};
var controlCharacters = [
  8364,
  129,
  8218,
  402,
  8222,
  8230,
  8224,
  8225,
  710,
  8240,
  352,
  8249,
  338,
  141,
  381,
  143,
  144,
  8216,
  8217,
  8220,
  8221,
  8226,
  8211,
  8212,
  732,
  8482,
  353,
  8250,
  339,
  157,
  382,
  376
];
var entityPattern = new RegExp(
  '&(#?(?:x[\\w\\d]+|\\d+|' + keys(htmlEntities).join('|') + '));?',
  'g'
);
var codePointSupport = isFunction(String.fromCodePoint);
var codeToChar = codePointSupport ? String.fromCodePoint : String.fromCharCode;

function decodeCharacterReferences(html) {
  return html.replace(entityPattern, function (match, entity) {
    var code;

    // Handle named entities
    if (entity[0] !== '#') {
      code = htmlEntities[entity];
    } else if (entity[1] === 'x') {
      code = parseInt(entity.substring(2), 16);
    } else {
      code = parseInt(entity.substring(1), 10);
    }

    if (!code) {
      return match;
    }

    return codeToChar(validateCode(code));
  });
}

var lessThan = /</g;
var greaterThan = />/g;
var amp = /&/g;
var invalid = 65533;

function escapeHtml(str) {
  return str
    .replace(amp, '&amp;')
    .replace(lessThan, '&lt;')
    .replace(greaterThan, '&gt;');
}

// some code points are verboten. If we were inserting HTML, the browser would replace the illegal
// code points with alternatives in some cases - since we're bypassing that mechanism, we need
// to replace them ourselves
//
// Source: http://en.wikipedia.org/wiki/Character_encodings_in_HTML#Illegal_characters
/* istanbul ignore next */
function validateCode(code) {
  if (!code) {
    return invalid;
  }

  // line feed becomes generic whitespace
  if (code === 10) {
    return 32;
  }

  // ASCII range. (Why someone would use HTML entities for ASCII characters I don't know, but...)
  if (code < 128) {
    return code;
  }

  // code points 128-159 are dealt with leniently by browsers, but they're incorrect. We need
  // to correct the mistake or we'll end up with missing â‚¬ signs and so on
  if (code <= 159) {
    return controlCharacters[code - 128];
  }

  // basic multilingual plane
  if (code < 55296) {
    return code;
  }

  // UTF-16 surrogate halves
  if (code <= 57343) {
    return invalid;
  }

  // rest of the basic multilingual plane
  if (code <= 65535) {
    return code;
  } else if (!codePointSupport) {
    return invalid;
  }

  // supplementary multilingual plane 0x10000 - 0x1ffff
  if (code >= 65536 && code <= 131071) {
    return code;
  }

  // supplementary ideographic plane 0x20000 - 0x2ffff
  if (code >= 131072 && code <= 196607) {
    return code;
  }

  return invalid;
}

var expectedExpression = 'Expected a JavaScript expression';
var expectedParen = 'Expected closing paren';

// bulletproof number regex from https://gist.github.com/Rich-Harris/7544330
var numberPattern = /^(?:[+-]?)0*(?:(?:(?:[1-9]\d*)?\.\d+)|(?:(?:0|[1-9]\d*)\.)|(?:0|[1-9]\d*))(?:[eE][+-]?\d+)?/;

function readNumberLiteral$1(parser) {
  var result;

  if ((result = parser.matchPattern(numberPattern))) {
    return {
      t: NUMBER_LITERAL,
      v: result
    };
  }

  return null;
}

function readBooleanLiteral(parser) {
  var remaining = parser.remaining();

  if (remaining.substr(0, 4) === 'true') {
    parser.pos += 4;
    return {
      t: BOOLEAN_LITERAL,
      v: 'true'
    };
  }

  if (remaining.substr(0, 5) === 'false') {
    parser.pos += 5;
    return {
      t: BOOLEAN_LITERAL,
      v: 'false'
    };
  }

  return null;
}

// Match one or more characters until: ", ', \, or EOL/EOF.
// EOL/EOF is written as (?!.) (meaning there's no non-newline char next).
var stringMiddlePattern = /^(?=.)[^"'\\]+?(?:(?!.)|(?=["'\\]))/;

// Match one escape sequence, including the backslash.
var escapeSequencePattern = /^\\(?:[`'"\\bfnrt]|0(?![0-9])|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|(?=.)[^ux0-9])/;

// Match one ES5 line continuation (backslash + line terminator).
var lineContinuationPattern = /^\\(?:\r\n|[\u000A\u000D\u2028\u2029])/;

// Helper for defining getDoubleQuotedString and getSingleQuotedString.
function makeQuotedStringMatcher(okQuote) {
  return function(parser) {
    var literal = '"';
    var done = false;
    var next;

    while (!done) {
      next =
        parser.matchPattern(stringMiddlePattern) ||
        parser.matchPattern(escapeSequencePattern) ||
        parser.matchString(okQuote);
      if (next) {
        if (next === "\"") {
          literal += "\\\"";
        } else if (next === "\\'") {
          literal += "'";
        } else {
          literal += next;
        }
      } else {
        next = parser.matchPattern(lineContinuationPattern);
        if (next) {
          // convert \(newline-like) into a \u escape, which is allowed in JSON
          literal += '\\u' + ('000' + next.charCodeAt(1).toString(16)).slice(-4);
        } else {
          done = true;
        }
      }
    }

    literal += '"';

    // use JSON.parse to interpret escapes
    return JSON.parse(literal);
  };
}

var singleMatcher = makeQuotedStringMatcher("\"");
var doubleMatcher = makeQuotedStringMatcher("'");

function readStringLiteral(parser) {
  var start = parser.pos;
  var quote = parser.matchString("'") || parser.matchString("\"");

  if (quote) {
    var string = (quote === "'" ? singleMatcher : doubleMatcher)(parser);

    if (!parser.matchString(quote)) {
      parser.pos = start;
      return null;
    }

    return {
      t: STRING_LITERAL,
      v: string
    };
  }

  return null;
}

// Match one or more characters until: ", ', or \
var stringMiddlePattern$1 = /^[^`"\\\$]+?(?:(?=[`"\\\$]))/;

var escapes = /[\r\n\t\b\f]/g;
function getString(literal) {
  return JSON.parse(("\"" + (literal.replace(escapes, escapeChar)) + "\""));
}

function escapeChar(c) {
  switch (c) {
    case '\n':
      return '\\n';
    case '\r':
      return '\\r';
    case '\t':
      return '\\t';
    case '\b':
      return '\\b';
    case '\f':
      return '\\f';
  }
}

function readTemplateStringLiteral(parser) {
  if (!parser.matchString('`')) { return null; }

  var literal = '';
  var done = false;
  var next;
  var parts = [];

  while (!done) {
    next =
      parser.matchPattern(stringMiddlePattern$1) ||
      parser.matchPattern(escapeSequencePattern) ||
      parser.matchString('$') ||
      parser.matchString('"');
    if (next) {
      if (next === "\"") {
        literal += "\\\"";
      } else if (next === '\\`') {
        literal += '`';
      } else if (next === '$') {
        if (parser.matchString('{')) {
          parts.push({ t: STRING_LITERAL, v: getString(literal) });
          literal = '';

          parser.sp();
          var expr = readExpression(parser);

          if (!expr) { parser.error('Expected valid expression'); }

          parts.push({ t: BRACKETED, x: expr });

          parser.sp();
          if (!parser.matchString('}'))
            { parser.error("Expected closing '}' after interpolated expression"); }
        } else {
          literal += '$';
        }
      } else {
        literal += next;
      }
    } else {
      next = parser.matchPattern(lineContinuationPattern);
      if (next) {
        // convert \(newline-like) into a \u escape, which is allowed in JSON
        literal += '\\u' + ('000' + next.charCodeAt(1).toString(16)).slice(-4);
      } else {
        done = true;
      }
    }
  }

  if (literal.length) { parts.push({ t: STRING_LITERAL, v: getString(literal) }); }

  if (!parser.matchString('`')) { parser.error("Expected closing '`'"); }

  if (!parts.length) {
    // empty string literal
    return { t: STRING_LITERAL, v: '' };
  } else if (parts.length === 1) {
    return parts[0];
  } else {
    var result = parts.pop();
    var part;

    while ((part = parts.pop())) {
      result = {
        t: INFIX_OPERATOR,
        s: '+',
        o: [part, result]
      };
    }

    return {
      t: BRACKETED,
      x: result
    };
  }
}

var name = /^[a-zA-Z_$][a-zA-Z_$0-9]*/;
var spreadPattern = /^\s*\.{3}/;
var legalReference = /^(?:[a-zA-Z$_0-9]|\\\.)+(?:(?:\.(?:[a-zA-Z$_0-9]|\\\.)+)|(?:\[[0-9]+\]))*/;
var relaxedName = /^[a-zA-Z_$][-\/a-zA-Z_$0-9]*(?:\.(?:[a-zA-Z_$][-\/a-zA-Z_$0-9]*))*/;

var identifier = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;

// http://mathiasbynens.be/notes/javascript-properties
// can be any name, string literal, or number literal
function readKey(parser) {
  var token;

  if ((token = readStringLiteral(parser))) {
    return identifier.test(token.v) ? token.v : '"' + token.v.replace(/"/g, '\\"') + '"';
  }

  if ((token = readNumberLiteral$1(parser))) {
    return token.v;
  }

  if ((token = parser.matchPattern(name))) {
    return token;
  }

  return null;
}

function readKeyValuePair(parser) {
  var spread;
  var start = parser.pos;

  // allow whitespace between '{' and key
  parser.sp();

  var refKey = parser.nextChar() !== "'" && parser.nextChar() !== '"';
  if (refKey) { spread = parser.matchPattern(spreadPattern); }

  var key = spread ? readExpression(parser) : readKey(parser);
  if (key === null) {
    parser.pos = start;
    return null;
  }

  // allow whitespace between key and ':'
  parser.sp();

  // es2015 shorthand property
  if (refKey && (parser.nextChar() === ',' || parser.nextChar() === '}')) {
    if (!spread && !name.test(key)) {
      parser.error(("Expected a valid reference, but found '" + key + "' instead."));
    }

    var pair = {
      t: KEY_VALUE_PAIR,
      k: key,
      v: {
        t: REFERENCE,
        n: key
      }
    };

    if (spread) {
      pair.p = true;
    }

    return pair;
  }

  // next character must be ':'
  if (!parser.matchString(':')) {
    parser.pos = start;
    return null;
  }

  // allow whitespace between ':' and value
  parser.sp();

  // next expression must be a, well... expression
  var value = readExpression(parser);
  if (value === null) {
    parser.pos = start;
    return null;
  }

  return {
    t: KEY_VALUE_PAIR,
    k: key,
    v: value
  };
}

function readKeyValuePairs(parser) {
  var start = parser.pos;

  var pair = readKeyValuePair(parser);
  if (pair === null) {
    return null;
  }

  var pairs = [pair];

  if (parser.matchString(',')) {
    var keyValuePairs = readKeyValuePairs(parser);

    if (!keyValuePairs) {
      parser.pos = start;
      return null;
    }

    return pairs.concat(keyValuePairs);
  }

  return pairs;
}

function readObjectLiteral(parser) {
  var start = parser.pos;

  // allow whitespace
  parser.sp();

  if (!parser.matchString('{')) {
    parser.pos = start;
    return null;
  }

  var keyValuePairs = readKeyValuePairs(parser);

  // allow whitespace between final value and '}'
  parser.sp();

  if (!parser.matchString('}')) {
    parser.pos = start;
    return null;
  }

  return {
    t: OBJECT_LITERAL,
    m: keyValuePairs
  };
}

function readArrayLiteral(parser) {
  var start = parser.pos;

  // allow whitespace before '['
  parser.sp();

  if (!parser.matchString('[')) {
    parser.pos = start;
    return null;
  }

  var expressionList = readExpressionList(parser, true);

  if (!parser.matchString(']')) {
    parser.pos = start;
    return null;
  }

  return {
    t: ARRAY_LITERAL,
    m: expressionList
  };
}

function readLiteral(parser) {
  return (
    readNumberLiteral$1(parser) ||
    readBooleanLiteral(parser) ||
    readStringLiteral(parser) ||
    readTemplateStringLiteral(parser) ||
    readObjectLiteral(parser) ||
    readArrayLiteral(parser) ||
    readNumberLiteral(parser)
  );
}

// if a reference is a browser global, we don't deference it later, so it needs special treatment
var globals = /^(?:Array|console|Date|RegExp|decodeURIComponent|decodeURI|encodeURIComponent|encodeURI|isFinite|isNaN|parseFloat|parseInt|JSON|Math|NaN|undefined|null|Object|Number|String|Boolean)\b/;

// keywords are not valid references, with the exception of `this`
var keywords = /^(?:break|case|catch|continue|debugger|default|delete|do|else|finally|for|function|if|in|instanceof|new|return|switch|throw|try|typeof|var|void|while|with)$/;

var prefixPattern = /^(?:\@\.|\@|~\/|(?:\^\^\/(?:\^\^\/)*(?:\.\.\/)*)|(?:\.\.\/)+|\.\/(?:\.\.\/)*|\.)/;
var specials = /^(key|index|keypath|rootpath|this|global|shared|context|event|node|local|style|helpers|last|macro)/;

function readReference(parser) {
  var prefix, name$$1, global, reference, lastDotIndex;

  var startPos = parser.pos;

  prefix = parser.matchPattern(prefixPattern) || '';
  name$$1 =
    (!prefix && parser.relaxedNames && parser.matchPattern(relaxedName)) ||
    parser.matchPattern(legalReference);
  var actual = prefix.length + ((name$$1 && name$$1.length) || 0);

  if (prefix === '@.') {
    prefix = '@';
    if (name$$1) { name$$1 = 'this.' + name$$1; }
    else { name$$1 = 'this'; }
  }

  if (!name$$1 && prefix) {
    name$$1 = prefix;
    prefix = '';
  }

  if (!name$$1) {
    return null;
  }

  if (prefix === '@') {
    if (!specials.test(name$$1)) {
      parser.error(("Unrecognized special reference @" + name$$1));
    } else if ((!name$$1.indexOf('event') || !name$$1.indexOf('node')) && !parser.inEvent) {
      parser.error("@event and @node are only valid references within an event directive");
    } else if (!name$$1.indexOf('context')) {
      parser.pos = parser.pos - (name$$1.length - 7);
      return {
        t: BRACKETED,
        x: {
          t: REFERENCE,
          n: '@context'
        }
      };
    }
  }

  // bug out if it's a keyword (exception for ancestor/restricted refs - see https://github.com/ractivejs/ractive/issues/1497)
  if (!prefix && !parser.relaxedNames && keywords.test(name$$1)) {
    parser.pos = startPos;
    return null;
  }

  // if this is a browser global, stop here
  if (!prefix && globals.test(name$$1)) {
    global = globals.exec(name$$1)[0];
    parser.pos = startPos + global.length;

    return {
      t: GLOBAL,
      v: global
    };
  }

  reference = (prefix || '') + normalise(name$$1);

  if (parser.matchString('(')) {
    // if this is a method invocation (as opposed to a function) we need
    // to strip the method name from the reference combo, else the context
    // will be wrong
    // but only if the reference was actually a member and not a refinement
    lastDotIndex = reference.lastIndexOf('.');
    if (lastDotIndex !== -1 && name$$1[name$$1.length - 1] !== ']') {
      if (lastDotIndex === 0) {
        reference = '.';
        parser.pos = startPos;
      } else {
        var refLength = reference.length;
        reference = reference.substr(0, lastDotIndex);
        parser.pos = startPos + (actual - (refLength - lastDotIndex));
      }
    } else {
      parser.pos -= 1;
    }
  }

  return {
    t: REFERENCE,
    n: reference.replace(/^this\./, './').replace(/^this$/, '.')
  };
}

function readBracketedExpression(parser) {
  if (!parser.matchString('(')) { return null; }

  parser.sp();

  var expr = readExpression(parser);

  if (!expr) { parser.error(expectedExpression); }

  parser.sp();

  if (!parser.matchString(')')) { parser.error(expectedParen); }

  return {
    t: BRACKETED,
    x: expr
  };
}

function readPrimary(parser) {
  return readLiteral(parser) || readReference(parser) || readBracketedExpression(parser);
}

function readRefinement(parser) {
  // some things call for strict refinement (partial names), meaning no space between reference and refinement
  if (!parser.strictRefinement) {
    parser.sp();
  }

  // "." name
  if (parser.matchString('.')) {
    parser.sp();

    var name$$1 = parser.matchPattern(name);
    if (name$$1) {
      return {
        t: REFINEMENT,
        n: name$$1
      };
    }

    parser.error('Expected a property name');
  }

  // "[" expression "]"
  if (parser.matchString('[')) {
    parser.sp();

    var expr = readExpression(parser);
    if (!expr) { parser.error(expectedExpression); }

    parser.sp();

    if (!parser.matchString(']')) { parser.error("Expected ']'"); }

    return {
      t: REFINEMENT,
      x: expr
    };
  }

  return null;
}

function readMemberOrInvocation(parser) {
  var expression = readPrimary(parser);

  if (!expression) { return null; }

  while (expression) {
    var refinement = readRefinement(parser);
    if (refinement) {
      expression = {
        t: MEMBER,
        x: expression,
        r: refinement
      };
    } else if (parser.matchString('(')) {
      parser.sp();
      var expressionList = readExpressionList(parser, true);

      parser.sp();

      if (!parser.matchString(')')) {
        parser.error(expectedParen);
      }

      expression = {
        t: INVOCATION,
        x: expression
      };

      if (expressionList) { expression.o = expressionList; }
    } else {
      break;
    }
  }

  return expression;
}

var readTypeOf;

var makePrefixSequenceMatcher = function(symbol, fallthrough) {
  return function(parser) {
    var expression;

    if ((expression = fallthrough(parser))) {
      return expression;
    }

    if (!parser.matchString(symbol)) {
      return null;
    }

    parser.sp();

    expression = readExpression(parser);
    if (!expression) {
      parser.error(expectedExpression);
    }

    return {
      s: symbol,
      o: expression,
      t: PREFIX_OPERATOR
    };
  };
};

// create all prefix sequence matchers, return readTypeOf
(function() {
  var i, len, matcher, fallthrough;

  var prefixOperators = '! ~ + - typeof'.split(' ');

  fallthrough = readMemberOrInvocation;
  for (i = 0, len = prefixOperators.length; i < len; i += 1) {
    matcher = makePrefixSequenceMatcher(prefixOperators[i], fallthrough);
    fallthrough = matcher;
  }

  // typeof operator is higher precedence than multiplication, so provides the
  // fallthrough for the multiplication sequence matcher we're about to create
  // (we're skipping void and delete)
  readTypeOf = fallthrough;
})();

var readTypeof = readTypeOf;

var readLogicalOr;

var makeInfixSequenceMatcher = function(symbol, fallthrough) {
  return function(parser) {
    // > and / have to be quoted
    if (parser.inUnquotedAttribute && (symbol === '>' || symbol === '/'))
      { return fallthrough(parser); }

    var start, left, right;

    left = fallthrough(parser);
    if (!left) {
      return null;
    }

    // Loop to handle left-recursion in a case like `a * b * c` and produce
    // left association, i.e. `(a * b) * c`.  The matcher can't call itself
    // to parse `left` because that would be infinite regress.
    while (true) {
      start = parser.pos;

      parser.sp();

      if (!parser.matchString(symbol)) {
        parser.pos = start;
        return left;
      }

      // special case - in operator must not be followed by [a-zA-Z_$0-9]
      if (symbol === 'in' && /[a-zA-Z_$0-9]/.test(parser.remaining().charAt(0))) {
        parser.pos = start;
        return left;
      }

      parser.sp();

      // right operand must also consist of only higher-precedence operators
      right = fallthrough(parser);
      if (!right) {
        parser.pos = start;
        return left;
      }

      left = {
        t: INFIX_OPERATOR,
        s: symbol,
        o: [left, right]
      };

      // Loop back around.  If we don't see another occurrence of the symbol,
      // we'll return left.
    }
  };
};

// create all infix sequence matchers, and return readLogicalOr
(function() {
  var i, len, matcher, fallthrough;

  // All the infix operators on order of precedence (source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Operator_Precedence)
  // Each sequence matcher will initially fall through to its higher precedence
  // neighbour, and only attempt to match if one of the higher precedence operators
  // (or, ultimately, a literal, reference, or bracketed expression) already matched
  var infixOperators = '* / % + - << >> >>> < <= > >= in instanceof == != === !== & ^ | && ||'.split(
    ' '
  );

  // A typeof operator is higher precedence than multiplication
  fallthrough = readTypeof;
  for (i = 0, len = infixOperators.length; i < len; i += 1) {
    matcher = makeInfixSequenceMatcher(infixOperators[i], fallthrough);
    fallthrough = matcher;
  }

  // Logical OR is the fallthrough for the conditional matcher
  readLogicalOr = fallthrough;
})();

var readLogicalOr$1 = readLogicalOr;

// The conditional operator is the lowest precedence operator, so we start here
function getConditional(parser) {
  var expression = readLogicalOr$1(parser);
  if (!expression) {
    return null;
  }

  var start = parser.pos;

  parser.sp();

  if (!parser.matchString('?')) {
    parser.pos = start;
    return expression;
  }

  parser.sp();

  var ifTrue = readExpression(parser);
  if (!ifTrue) {
    parser.error(expectedExpression);
  }

  parser.sp();

  if (!parser.matchString(':')) {
    parser.error('Expected ":"');
  }

  parser.sp();

  var ifFalse = readExpression(parser);
  if (!ifFalse) {
    parser.error(expectedExpression);
  }

  return {
    t: CONDITIONAL,
    o: [expression, ifTrue, ifFalse]
  };
}

function readExpression(parser) {
  // if eval is false, no expressions
  if (parser.allowExpressions === false) {
    var ref = readReference(parser);
    parser.sp();
    return ref;
  }

  // The conditional operator is the lowest precedence operator (except yield,
  // assignment operators, and commas, none of which are supported), so we
  // start there. If it doesn't match, it 'falls through' to progressively
  // higher precedence operators, until it eventually matches (or fails to
  // match) a 'primary' - a literal or a reference. This way, the abstract syntax
  // tree has everything in its proper place, i.e. 2 + 3 * 4 === 14, not 20.
  return getConditional(parser);
}

function readExpressionList(parser, spread) {
  var isSpread;
  var expressions = [];

  var pos = parser.pos;

  do {
    parser.sp();

    if (spread) {
      isSpread = parser.matchPattern(spreadPattern);
    }

    var expr = readExpression(parser);

    if (expr === null && expressions.length) {
      parser.error(expectedExpression);
    } else if (expr === null) {
      parser.pos = pos;
      return null;
    }

    if (isSpread) {
      expr.p = true;
    }

    expressions.push(expr);

    parser.sp();
  } while (parser.matchString(','));

  return expressions;
}

function readExpressionOrReference(parser, expectedFollowers) {
  var start = parser.pos;
  var expression = readExpression(parser);

  if (!expression) {
    // valid reference but invalid expression e.g. `{{new}}`?
    var ref = parser.matchPattern(/^(\w+)/);
    if (ref) {
      return {
        t: REFERENCE,
        n: ref
      };
    }

    return null;
  }

  for (var i = 0; i < expectedFollowers.length; i += 1) {
    if (parser.remaining().substr(0, expectedFollowers[i].length) === expectedFollowers[i]) {
      return expression;
    }
  }

  parser.pos = start;
  return readReference(parser);
}

function flattenExpression(expression) {
  var refs;
  var count = 0;

  extractRefs(expression, (refs = []));
  var stringified = stringify(expression);

  return {
    r: refs,
    s: getVars(stringified)
  };

  function getVars(expr) {
    var vars = [];
    for (var i = count - 1; i >= 0; i--) {
      vars.push(("x$" + i));
    }
    return vars.length ? ("(function(){var " + (vars.join(',')) + ";return(" + expr + ");})()") : expr;
  }

  function stringify(node) {
    if (isString(node)) {
      return node;
    }

    switch (node.t) {
      case BOOLEAN_LITERAL:
      case GLOBAL:
      case NUMBER_LITERAL:
      case REGEXP_LITERAL:
        return node.v;

      case STRING_LITERAL:
        return JSON.stringify(String(node.v));

      case ARRAY_LITERAL:
        if (node.m && hasSpread(node.m)) {
          return ("[].concat(" + (makeSpread(node.m, '[', ']', stringify)) + ")");
        } else {
          return '[' + (node.m ? node.m.map(stringify).join(',') : '') + ']';
        }

      case OBJECT_LITERAL:
        if (node.m && hasSpread(node.m)) {
          return ("Object.assign({}," + (makeSpread(node.m, '{', '}', stringifyPair)) + ")");
        } else {
          return '{' + (node.m ? node.m.map(function (n) { return ((n.k) + ":" + (stringify(n.v))); }).join(',') : '') + '}';
        }

      case PREFIX_OPERATOR:
        return (node.s === 'typeof' ? 'typeof ' : node.s) + stringify(node.o);

      case INFIX_OPERATOR:
        return (
          stringify(node.o[0]) +
          (node.s.substr(0, 2) === 'in' ? ' ' + node.s + ' ' : node.s) +
          stringify(node.o[1])
        );

      case INVOCATION:
        if (node.o && hasSpread(node.o)) {
          var id = count++;
          return ("(x$" + id + "=" + (stringify(node.x)) + ").apply(x$" + id + "," + (stringify({
            t: ARRAY_LITERAL,
            m: node.o
          })) + ")");
        } else {
          return stringify(node.x) + '(' + (node.o ? node.o.map(stringify).join(',') : '') + ')';
        }

      case BRACKETED:
        return '(' + stringify(node.x) + ')';

      case MEMBER:
        return stringify(node.x) + stringify(node.r);

      case REFINEMENT:
        return node.n ? '.' + node.n : '[' + stringify(node.x) + ']';

      case CONDITIONAL:
        return stringify(node.o[0]) + '?' + stringify(node.o[1]) + ':' + stringify(node.o[2]);

      case REFERENCE:
        return '_' + refs.indexOf(node.n);

      default:
        throw new Error('Expected legal JavaScript');
    }
  }

  function stringifyPair(node) {
    return node.p ? stringify(node.k) : ((node.k) + ":" + (stringify(node.v)));
  }

  function makeSpread(list, open, close, fn) {
    var out = list.reduce(
      function (a, c) {
        if (c.p) {
          a.str += "" + (a.open ? close + ',' : a.str.length ? ',' : '') + (fn(c));
        } else {
          a.str += "" + (!a.str.length ? open : !a.open ? ',' + open : ',') + (fn(c));
        }
        a.open = !c.p;
        return a;
      },
      { open: false, str: '' }
    );
    if (out.open) { out.str += close; }
    return out.str;
  }
}

function hasSpread(list) {
  for (var i = 0; i < list.length; i++) {
    if (list[i].p) { return true; }
  }

  return false;
}

// TODO maybe refactor this?
function extractRefs(node, refs) {
  if (node.t === REFERENCE && isString(node.n)) {
    if (!~refs.indexOf(node.n)) {
      refs.unshift(node.n);
    }
  }

  var list = node.o || node.m;
  if (list) {
    if (isObject(list)) {
      extractRefs(list, refs);
    } else {
      var i = list.length;
      while (i--) {
        extractRefs(list[i], refs);
      }
    }
  }

  if (node.k && node.t === KEY_VALUE_PAIR && !isString(node.k)) {
    extractRefs(node.k, refs);
  }

  if (node.x) {
    extractRefs(node.x, refs);
  }

  if (node.r) {
    extractRefs(node.r, refs);
  }

  if (node.v) {
    extractRefs(node.v, refs);
  }
}

function refineExpression(expression, mustache) {
  var referenceExpression;

  if (expression) {
    while (expression.t === BRACKETED && expression.x) {
      expression = expression.x;
    }

    if (expression.t === REFERENCE) {
      var n = expression.n;
      if (!~n.indexOf('@context')) {
        mustache.r = expression.n;
      } else {
        mustache.x = flattenExpression(expression);
      }
    } else {
      if ((referenceExpression = getReferenceExpression(expression))) {
        mustache.rx = referenceExpression;
      } else {
        mustache.x = flattenExpression(expression);
      }
    }

    return mustache;
  }
}

// TODO refactor this! it's bewildering
function getReferenceExpression(expression) {
  var members = [];
  var refinement;

  while (expression.t === MEMBER && expression.r.t === REFINEMENT) {
    refinement = expression.r;

    if (refinement.x) {
      if (refinement.x.t === REFERENCE) {
        members.unshift(refinement.x);
      } else {
        members.unshift(flattenExpression(refinement.x));
      }
    } else {
      members.unshift(refinement.n);
    }

    expression = expression.x;
  }

  if (expression.t !== REFERENCE) {
    return null;
  }

  return {
    r: expression.n,
    m: members
  };
}

var attributeNamePattern = /^[^\s"'>\/=(]+/;
var onPattern = /^on/;
var eventPattern = /^on-([a-zA-Z\*\.$_]((?:[a-zA-Z\*\.$_0-9\-]|\\-)+))$/;
var reservedEventNames = /^(?:change|reset|teardown|update|construct|config|init|render|complete|unrender|detach|insert|destruct|attachchild|detachchild)$/;
var decoratorPattern = /^as-([a-z-A-Z][-a-zA-Z_0-9]*)$/;
var transitionPattern = /^([a-zA-Z](?:(?!-in-out)[-a-zA-Z_0-9])*)-(in|out|in-out)$/;
var boundPattern = /^((bind|class)-(([-a-zA-Z0-9_])+))$/;
var directives = {
  lazy: { t: BINDING_FLAG, v: 'l' },
  twoway: { t: BINDING_FLAG, v: 't' },
  'no-delegation': { t: DELEGATE_FLAG }
};
var unquotedAttributeValueTextPattern = /^[^\s"'=<>\/`]+/;
var proxyEvent = /^[^\s"'=<>@\[\]()]*/;
var whitespace = /^\s+/;

var slashes = /\\/g;
function splitEvent(str) {
  var result = [];
  var s = 0;

  for (var i = 0; i < str.length; i++) {
    if (str[i] === '-' && str[i - 1] !== '\\') {
      result.push(str.substring(s, i).replace(slashes, ''));
      s = i + 1;
    }
  }

  result.push(str.substring(s).replace(slashes, ''));

  return result;
}

function readAttribute(parser) {
  var name, i, nearest, idx;

  parser.sp();

  name = parser.matchPattern(attributeNamePattern);
  if (!name) {
    return null;
  }

  // check for accidental delimiter consumption e.g. <tag bool{{>attrs}} />
  nearest = name.length;
  for (i = 0; i < parser.tags.length; i++) {
    if (~(idx = name.indexOf(parser.tags[i].open))) {
      if (idx < nearest) { nearest = idx; }
    }
  }
  if (nearest < name.length) {
    parser.pos -= name.length - nearest;
    name = name.substr(0, nearest);
    if (!name) { return null; }
  }

  return { n: name };
}

function readAttributeValue(parser) {
  var start = parser.pos;

  // next character must be `=`, `/`, `>` or whitespace
  if (!/[=\/>\s]/.test(parser.nextChar())) {
    parser.error('Expected `=`, `/`, `>` or whitespace');
  }

  parser.sp();

  if (!parser.matchString('=')) {
    parser.pos = start;
    return null;
  }

  parser.sp();

  var valueStart = parser.pos;
  var startDepth = parser.sectionDepth;

  var value =
    readQuotedAttributeValue(parser, "'") ||
    readQuotedAttributeValue(parser, "\"") ||
    readUnquotedAttributeValue(parser);

  if (value === null) {
    parser.error('Expected valid attribute value');
  }

  if (parser.sectionDepth !== startDepth) {
    parser.pos = valueStart;
    parser.error(
      'An attribute value must contain as many opening section tags as closing section tags'
    );
  }

  if (!value.length) {
    return '';
  }

  if (value.length === 1 && isString(value[0])) {
    return decodeCharacterReferences(value[0]);
  }

  return value;
}

function readUnquotedAttributeValueToken(parser) {
  var text, index;

  var start = parser.pos;

  text = parser.matchPattern(unquotedAttributeValueTextPattern);

  if (!text) {
    return null;
  }

  var haystack = text;
  var needles = parser.tags.map(function (t) { return t.open; }); // TODO refactor... we do this in readText.js as well

  if ((index = getLowestIndex(haystack, needles)) !== -1) {
    text = text.substr(0, index);
    parser.pos = start + text.length;
  }

  return text;
}

function readUnquotedAttributeValue(parser) {
  parser.inAttribute = true;

  var tokens = [];

  var token = readMustache(parser) || readUnquotedAttributeValueToken(parser);
  while (token) {
    tokens.push(token);
    token = readMustache(parser) || readUnquotedAttributeValueToken(parser);
  }

  if (!tokens.length) {
    return null;
  }

  parser.inAttribute = false;
  return tokens;
}

function readQuotedAttributeValue(parser, quoteMark) {
  var start = parser.pos;

  if (!parser.matchString(quoteMark)) {
    return null;
  }

  parser.inAttribute = quoteMark;

  var tokens = [];

  var token = readMustache(parser) || readQuotedStringToken(parser, quoteMark);
  while (token !== null) {
    tokens.push(token);
    token = readMustache(parser) || readQuotedStringToken(parser, quoteMark);
  }

  if (!parser.matchString(quoteMark)) {
    parser.pos = start;
    return null;
  }

  parser.inAttribute = false;

  return tokens;
}

function readQuotedStringToken(parser, quoteMark) {
  var haystack = parser.remaining();

  var needles = parser.tags.map(function (t) { return t.open; }); // TODO refactor... we do this in readText.js as well
  needles.push(quoteMark);

  var index = getLowestIndex(haystack, needles);

  if (index === -1) {
    parser.error('Quoted attribute value must have a closing quote');
  }

  if (!index) {
    return null;
  }

  parser.pos += index;
  return haystack.substr(0, index);
}

function readAttributeOrDirective(parser) {
  var match, directive;

  var attribute = readAttribute(parser, false);

  if (!attribute) { return null; }

  // lazy, twoway
  if ((directive = directives[attribute.n])) {
    attribute.t = directive.t;
    if (directive.v) { attribute.v = directive.v; }
    delete attribute.n; // no name necessary
    parser.sp();
    if (parser.nextChar() === '=') { attribute.f = readAttributeValue(parser); }
  } else if ((match = decoratorPattern.exec(attribute.n))) {
    // decorators
    attribute.n = match[1];
    attribute.t = DECORATOR;
    readArguments(parser, attribute);
  } else if ((match = transitionPattern.exec(attribute.n))) {
    // transitions
    attribute.n = match[1];
    attribute.t = TRANSITION;
    readArguments(parser, attribute);
    attribute.v = match[2] === 'in-out' ? 't0' : match[2] === 'in' ? 't1' : 't2';
  } else if ((match = eventPattern.exec(attribute.n))) {
    // on-click etc
    attribute.n = splitEvent(match[1]);
    attribute.t = EVENT;

    if (parser.matchString('(')) {
      attribute.a = flattenExpression({
        t: ARRAY_LITERAL,
        m: readExpressionList(parser)
      });
      if (!parser.matchString(')')) { parser.error("Expected closing ')'"); }
    }

    parser.inEvent = true;

    // check for a proxy event
    if (!readProxyEvent(parser, attribute)) {
      // otherwise, it's an expression
      readArguments(parser, attribute, true);
    } else if (reservedEventNames.test(attribute.f)) {
      parser.pos -= attribute.f.length;
      parser.error(
        'Cannot use reserved event names (change, reset, teardown, update, construct, config, init, render, unrender, complete, detach, insert, destruct, attachchild, detachchild)'
      );
    }

    parser.inEvent = false;
  } else if ((match = boundPattern.exec(attribute.n))) {
    // bound directives
    var bind = match[2] === 'bind';
    attribute.n = bind ? match[3] : match[1];
    attribute.t = ATTRIBUTE;
    readArguments(parser, attribute, false, true);

    if (!attribute.f && bind) {
      attribute.f = [{ t: INTERPOLATOR, r: match[3] }];
    }
  } else {
    parser.sp();
    var value = parser.nextChar() === '=' ? readAttributeValue(parser) : null;
    attribute.f = value != null ? value : attribute.f;

    if (parser.sanitizeEventAttributes && onPattern.test(attribute.n)) {
      return { exclude: true };
    } else {
      attribute.f = attribute.f || (attribute.f === '' ? '' : 0);
      attribute.t = ATTRIBUTE;
    }
  }

  return attribute;
}

function readProxyEvent(parser, attribute) {
  var start = parser.pos;
  if (!parser.matchString('=')) { parser.error("Missing required directive arguments"); }

  var quote = parser.matchString("'") || parser.matchString("\"");
  parser.sp();
  var proxy = parser.matchPattern(proxyEvent);

  if (proxy !== undefined) {
    if (quote) {
      parser.sp();
      if (!parser.matchString(quote)) { parser.pos = start; }
      else { return (attribute.f = proxy) || true; }
    } else if (!parser.matchPattern(whitespace)) {
      parser.pos = start;
    } else {
      return (attribute.f = proxy) || true;
    }
  } else {
    parser.pos = start;
  }
}

function readArguments(parser, attribute, required, single) {
  if ( required === void 0 ) required = false;
  if ( single === void 0 ) single = false;

  parser.sp();
  if (!parser.matchString('=')) {
    if (required) { parser.error("Missing required directive arguments"); }
    return;
  }
  parser.sp();

  var quote = parser.matchString('"') || parser.matchString("'");
  var spread = parser.spreadArgs;
  parser.spreadArgs = true;
  parser.inUnquotedAttribute = !quote;
  var expr = single
    ? readExpressionOrReference(parser, [quote || ' ', '/', '>'])
    : { m: readExpressionList(parser), t: ARRAY_LITERAL };
  parser.inUnquotedAttribute = false;
  parser.spreadArgs = spread;

  if (quote) {
    parser.sp();
    if (parser.matchString(quote) !== quote) { parser.error(("Expected matching quote '" + quote + "'")); }
  }

  if (single) {
    var interpolator = { t: INTERPOLATOR };
    refineExpression(expr, interpolator);
    attribute.f = [interpolator];
  } else {
    attribute.f = flattenExpression(expr);
  }
}

var delimiterChangeToken = { t: DELIMCHANGE, exclude: true };

function readMustache(parser) {
  var mustache, i;

  // If we're inside a <script> or <style> tag, and we're not
  // interpolating, bug out
  if (parser.interpolate[parser.inside] === false) {
    return null;
  }

  for (i = 0; i < parser.tags.length; i += 1) {
    if ((mustache = readMustacheOfType(parser, parser.tags[i]))) {
      return mustache;
    }
  }

  if (parser.inTag && !parser.inAttribute) {
    mustache = readAttributeOrDirective(parser);
    if (mustache) {
      parser.sp();
      return mustache;
    }
  }
}

function readMustacheOfType(parser, tag) {
  var mustache, reader, i;

  var start = parser.pos;

  if (parser.matchString('\\' + tag.open)) {
    if (start === 0 || parser.str[start - 1] !== '\\') {
      return tag.open;
    }
  } else if (!parser.matchString(tag.open)) {
    return null;
  }

  // delimiter change?
  if ((mustache = readDelimiterChange(parser))) {
    // find closing delimiter or abort...
    if (!parser.matchString(tag.close)) {
      return null;
    }

    // ...then make the switch
    tag.open = mustache[0];
    tag.close = mustache[1];
    parser.sortMustacheTags();

    return delimiterChangeToken;
  }

  parser.sp();

  // illegal section closer
  if (parser.matchString('/')) {
    parser.pos -= 1;
    var rewind = parser.pos;
    if (!readNumberLiteral(parser)) {
      parser.pos = rewind - tag.close.length;
      if (parser.inAttribute) {
        parser.pos = start;
        return null;
      } else {
        parser.error("Attempted to close a section that wasn't open");
      }
    } else {
      parser.pos = rewind;
    }
  }

  for (i = 0; i < tag.readers.length; i += 1) {
    reader = tag.readers[i];

    if ((mustache = reader(parser, tag))) {
      if (tag.isStatic) {
        mustache.s = 1;
      }

      if (parser.includeLinePositions) {
        mustache.q = parser.getLinePos(start);
      }

      return mustache;
    }
  }

  parser.pos = start;
  return null;
}

function readTriple(parser, tag) {
  var expression = readExpression(parser);

  if (!expression) {
    return null;
  }

  if (!parser.matchString(tag.close)) {
    parser.error(("Expected closing delimiter '" + (tag.close) + "'"));
  }

  var triple = { t: TRIPLE };
  refineExpression(expression, triple); // TODO handle this differently - it's mysterious

  return triple;
}

function readUnescaped(parser, tag) {
  if (!parser.matchString('&')) {
    return null;
  }

  parser.sp();

  var expression = readExpression(parser);

  if (!expression) {
    return null;
  }

  if (!parser.matchString(tag.close)) {
    parser.error(("Expected closing delimiter '" + (tag.close) + "'"));
  }

  var triple = { t: TRIPLE };
  refineExpression(expression, triple); // TODO handle this differently - it's mysterious

  return triple;
}

var legalAlias = /^(?:[a-zA-Z$_0-9]|\\\.)+(?:(?:(?:[a-zA-Z$_0-9]|\\\.)+)|(?:\[[0-9]+\]))*/;
var asRE = /^as/i;

function readAliases(parser) {
  var aliases = [];
  var alias;
  var start = parser.pos;

  parser.sp();

  alias = readAlias(parser);

  if (alias) {
    alias.x = refineExpression(alias.x, {});
    aliases.push(alias);

    parser.sp();

    while (parser.matchString(',')) {
      alias = readAlias(parser);

      if (!alias) {
        parser.error('Expected another alias.');
      }

      alias.x = refineExpression(alias.x, {});
      aliases.push(alias);

      parser.sp();
    }

    return aliases;
  }

  parser.pos = start;
  return null;
}

function readAlias(parser) {
  var start = parser.pos;

  parser.sp();

  var expr = readExpression(parser, []);

  if (!expr) {
    parser.pos = start;
    return null;
  }

  parser.sp();
  parser.matchPattern(asRE);
  parser.sp();

  var alias = parser.matchPattern(legalAlias);

  if (!alias) {
    parser.pos = start;
    return null;
  }

  return { n: alias, x: expr };
}

function readPartial(parser, tag) {
  var type = parser.matchString('>') || parser.matchString('yield');
  var partial = { t: type === '>' ? PARTIAL : YIELDER };
  var aliases;

  if (!type) { return null; }

  parser.sp();

  if (type === '>' || !(aliases = parser.matchString('with'))) {
    // Partial names can include hyphens, so we can't use readExpression
    // blindly. Instead, we use the `relaxedNames` flag to indicate that
    // `foo-bar` should be read as a single name, rather than 'subtract
    // bar from foo'
    parser.relaxedNames = parser.strictRefinement = true;
    var expression = readExpression(parser);
    parser.relaxedNames = parser.strictRefinement = false;

    if (!expression && type === '>') { return null; }

    if (expression) {
      refineExpression(expression, partial); // TODO...
      parser.sp();
      if (type !== '>') { aliases = parser.matchString('with'); }
    }
  }

  parser.sp();

  // check for alias context e.g. `{{>foo bar as bat, bip as bop}}`
  if (aliases || type === '>') {
    aliases = readAliases(parser);
    if (aliases && aliases.length) {
      partial.z = aliases;
    } else {
      // otherwise check for literal context e.g. `{{>foo bar}}` then
      // turn it into `{{#with bar}}{{>foo}}{{/with}}`
      var context = readExpression(parser);
      if (context) {
        partial.c = {};
        refineExpression(context, partial.c);
      }

      // allow aliases after context
      if (parser.matchString(',')) {
        aliases = readAliases(parser);
        if (aliases && aliases.length) {
          partial.z = aliases;
        }
      }
    }

    if (type !== '>' && (!partial.c && !partial.z)) {
      // {{yield with}} requires some aliases
      parser.error("Expected a context or one or more aliases");
    }
  }

  parser.sp();

  if (!parser.matchString(tag.close)) {
    parser.error(("Expected closing delimiter '" + (tag.close) + "'"));
  }

  return partial;
}

function readComment(parser, tag) {
  if (!parser.matchString('!')) {
    return null;
  }

  var index = parser.remaining().indexOf(tag.close);

  if (index !== -1) {
    parser.pos += index + tag.close.length;
    return { t: COMMENT };
  }
}

function readInterpolator(parser, tag) {
  var expression, err;

  var start = parser.pos;

  // TODO would be good for perf if we could do away with the try-catch
  try {
    expression = readExpressionOrReference(parser, [tag.close]);
  } catch (e) {
    err = e;
  }

  if (!expression) {
    if (parser.str.charAt(start) === '!') {
      // special case - comment
      parser.pos = start;
      return null;
    }

    if (err) {
      throw err;
    }
  }

  if (!parser.matchString(tag.close)) {
    parser.error(("Expected closing delimiter '" + (tag.close) + "' after reference"));

    if (!expression) {
      // special case - comment
      if (parser.nextChar() === '!') {
        return null;
      }

      parser.error("Expected expression or legal reference");
    }
  }

  var interpolator = { t: INTERPOLATOR };
  refineExpression(expression, interpolator); // TODO handle this differently - it's mysterious

  return interpolator;
}

function readClosing(parser, tag) {
  var start = parser.pos;

  if (!parser.matchString(tag.open)) {
    return null;
  }

  parser.sp();

  if (!parser.matchString('/')) {
    parser.pos = start;
    return null;
  }

  parser.sp();

  var remaining = parser.remaining();
  var index = remaining.indexOf(tag.close);

  if (index !== -1) {
    var closing = {
      t: CLOSING,
      r: remaining.substr(0, index).split(' ')[0]
    };

    parser.pos += index;

    if (!parser.matchString(tag.close)) {
      parser.error(("Expected closing delimiter '" + (tag.close) + "'"));
    }

    return closing;
  }

  parser.pos = start;
  return null;
}

var patterns = {
  else: /^\s*else\s*/,
  elseif: /^\s*elseif\s+/,
  then: /^\s*then\s*/,
  catch: /^\s*catch\s*/
};

var types = {
  else: ELSE,
  elseif: ELSEIF,
  then: THEN,
  catch: CATCH
};

function readInlineBlock(parser, tag, type) {
  var start = parser.pos;

  if (!parser.matchString(tag.open)) {
    return null;
  }

  if (!parser.matchPattern(patterns[type])) {
    parser.pos = start;
    return null;
  }

  var res = { t: types[type] };

  if (type === 'elseif') {
    res.x = readExpression(parser);
  } else if (type === 'catch' || type === 'then') {
    var nm = parser.matchPattern(name);
    if (nm) { res.n = nm; }
  }

  if (!parser.matchString(tag.close)) {
    parser.error(("Expected closing delimiter '" + (tag.close) + "'"));
  }

  return res;
}

var handlebarsBlockCodes = {
  each: SECTION_EACH,
  if: SECTION_IF,
  with: SECTION_IF_WITH,
  unless: SECTION_UNLESS
};

var indexRefPattern = /^\s*:\s*([a-zA-Z_$][a-zA-Z_$0-9]*)/;
var keyIndexRefPattern = /^\s*,\s*([a-zA-Z_$][a-zA-Z_$0-9]*)/;
var handlebarsBlockPattern = new RegExp('^(' + keys(handlebarsBlockCodes).join('|') + ')\\b');

function readSection(parser, tag) {
  var expression,
    section,
    child,
    children,
    hasElse,
    block,
    unlessBlock,
    closed,
    i,
    expectedClose,
    hasThen,
    hasCatch,
    inlineThen;
  var aliasOnly = false;

  var start = parser.pos;

  if (parser.matchString('^')) {
    // watch out for parent context refs - {{^^/^^/foo}}
    if (parser.matchString('^/')) {
      parser.pos = start;
      return null;
    }
    section = { t: SECTION, f: [], n: SECTION_UNLESS };
  } else if (parser.matchString('#')) {
    section = { t: SECTION, f: [] };

    if (parser.matchString('partial')) {
      parser.pos = start - parser.standardDelimiters[0].length;
      parser.error(
        'Partial definitions can only be at the top level of the template, or immediately inside components'
      );
    }

    if ((block = parser.matchString('await'))) {
      expectedClose = block;
      section.t = AWAIT;
    } else if ((block = parser.matchPattern(handlebarsBlockPattern))) {
      expectedClose = block;
      section.n = handlebarsBlockCodes[block];
    }
  } else {
    return null;
  }

  parser.sp();

  if (block === 'with') {
    var aliases = readAliases(parser);
    if (aliases) {
      aliasOnly = true;
      section.z = aliases;
      section.t = ALIAS;
    }
  } else if (block === 'each') {
    var alias = readAlias(parser);
    if (alias) {
      section.z = [{ n: alias.n, x: { r: '.' } }];
      expression = alias.x;
    }
  }

  if (!aliasOnly) {
    if (!expression) { expression = readExpression(parser); }

    if (!expression) {
      parser.error('Expected expression');
    }

    // extra each aliases
    if (block === 'each' && parser.matchString(',')) {
      var aliases$1 = readAliases(parser);
      if (aliases$1) {
        if (section.z) { aliases$1.unshift(section.z[0]); }
        section.z = aliases$1;
      }
    }

    // optional index and key references
    if ((block === 'each' || !block) && (i = parser.matchPattern(indexRefPattern))) {
      var extra;

      if ((extra = parser.matchPattern(keyIndexRefPattern))) {
        section.i = i + ',' + extra;
      } else {
        section.i = i;
      }
    } else if (block === 'await' && parser.matchString('then')) {
      parser.sp();
      hasThen = true;
      inlineThen = parser.matchPattern(name);
      if (!inlineThen) { inlineThen = true; }
    }

    if (!block && expression.n) {
      expectedClose = expression.n;
    }
  }

  parser.sp();

  if (parser.matchString('-')) { section.w = 1; }

  if (!parser.matchString(tag.close)) {
    parser.error(("Expected closing delimiter '" + (tag.close) + "'"));
  }

  parser.sectionDepth += 1;
  children = section.f;

  var pos;
  do {
    pos = parser.pos;
    if ((child = readClosing(parser, tag))) {
      if (expectedClose && child.r !== expectedClose) {
        if (!block) {
          if (child.r)
            { parser.warn(
              ("Expected " + (tag.open) + "/" + expectedClose + (tag.close) + " but found " + (tag.open) + "/" + (child.r) + (tag.close))
            ); }
        } else {
          parser.pos = pos;
          parser.error(("Expected " + (tag.open) + "/" + expectedClose + (tag.close)));
        }
      }

      parser.sectionDepth -= 1;
      closed = true;
    } else if (
      !aliasOnly &&
      ((child = readInlineBlock(parser, tag, 'elseif')) ||
        (child = readInlineBlock(parser, tag, 'else')) ||
        (block === 'await' &&
          ((child = readInlineBlock(parser, tag, 'then')) ||
            (child = readInlineBlock(parser, tag, 'catch')))))
    ) {
      if (section.n === SECTION_UNLESS) {
        parser.error('{{else}} not allowed in {{#unless}}');
      }

      if (hasElse) {
        if (child.t === ELSE) {
          parser.error('there can only be one {{else}} block, at the end of a section');
        } else if (child.t === ELSEIF) {
          parser.error('illegal {{elseif...}} after {{else}}');
        }
      }

      if (!unlessBlock && (inlineThen || !hasThen) && !hasCatch) {
        if (block === 'await') {
          var s = { f: children };
          section.f = [s];
          if (inlineThen) {
            s.t = THEN;
            inlineThen !== true && (s.n = inlineThen);
          } else {
            s.t = SECTION;
          }
        } else {
          unlessBlock = [];
        }
      }

      var mustache = {
        t: SECTION,
        f: (children = [])
      };

      if (child.t === ELSE) {
        if (block === 'await') {
          section.f.push(mustache);
          mustache.t = ELSE;
        } else {
          mustache.n = SECTION_UNLESS;
          unlessBlock.push(mustache);
        }
        hasElse = true;
      } else if (child.t === ELSEIF) {
        mustache.n = SECTION_IF;
        refineExpression(child.x, mustache);
        unlessBlock.push(mustache);
      } else if (child.t === THEN) {
        if (hasElse) { parser.error('{{then}} block must appear before any {{else}} block'); }
        if (hasCatch) { parser.error('{{then}} block must appear before any {{catch}} block'); }
        if (hasThen) { parser.error('there can only be one {{then}} block per {{#await}}'); }
        mustache.t = THEN;
        hasThen = true;
        child.n && (mustache.n = child.n);
        section.f.push(mustache);
      } else if (child.t === CATCH) {
        if (hasElse) { parser.error('{{catch}} block must appear before any {{else}} block'); }
        if (hasCatch) { parser.error('there can only be one {{catch}} block per {{#await}}'); }
        mustache.t = CATCH;
        hasCatch = true;
        mustache.n = child.n;
        section.f.push(mustache);
      }
    } else {
      child = parser.read(READERS);

      if (!child) {
        break;
      }

      children.push(child);
    }
  } while (!closed);

  if (unlessBlock) {
    section.l = unlessBlock;
  }

  if (!aliasOnly) {
    refineExpression(expression, section);
  }

  if (block === 'await' && (inlineThen || !hasThen) && !hasCatch && !hasElse) {
    var s$1 = { f: section.f };
    section.f = [s$1];
    if (inlineThen) {
      s$1.t = THEN;
      inlineThen !== true && (s$1.n = inlineThen);
    } else {
      s$1.t = SECTION;
    }
  }

  // TODO if a section is empty it should be discarded. Don't do
  // that here though - we need to clean everything up first, as
  // it may contain removeable whitespace. As a temporary measure,
  // to pass the existing tests, remove empty `f` arrays
  if (!section.f.length) {
    delete section.f;
  }

  return section;
}

var OPEN_COMMENT = '<!--';
var CLOSE_COMMENT = '-->';

function readHtmlComment(parser) {
  var start = parser.pos;

  if (parser.textOnlyMode || !parser.matchString(OPEN_COMMENT)) {
    return null;
  }

  var remaining = parser.remaining();
  var endIndex = remaining.indexOf(CLOSE_COMMENT);

  if (endIndex === -1) {
    parser.error("Illegal HTML - expected closing comment sequence ('-->')");
  }

  var content = remaining.substr(0, endIndex);
  parser.pos += endIndex + 3;

  var comment = {
    t: COMMENT,
    c: content
  };

  if (parser.includeLinePositions) {
    comment.q = parser.getLinePos(start);
  }

  return comment;
}

var leadingLinebreak = /^[ \t\f\r\n]*\r?\n/;
var trailingLinebreak = /\r?\n[ \t\f\r\n]*$/;

function stripStandalones(items, preserveStandaloneSections) {
  var i, current, backOne, backTwo, lastSectionItem;

  for (i = 1; i < items.length; i += 1) {
    current = items[i];
    backOne = items[i - 1];
    backTwo = items[i - 2];

    // if we're at the end of a [text][comment][text] sequence...
    if (isString(current) && isComment(backOne) && isString(backTwo)) {
      // ... and the comment is a standalone (i.e. line breaks either side)...
      if (trailingLinebreak.test(backTwo) && leadingLinebreak.test(current)) {
        // ... then we want to remove the whitespace after the first line break
        items[i - 2] = backTwo.replace(trailingLinebreak, '\n');

        // and the leading line break of the second text token
        items[i] = current.replace(leadingLinebreak, '');
      }
    }

    if (!preserveStandaloneSections) {
      // if the current item is a section, and it is preceded by a linebreak, and
      // its first item is a linebreak...
      if (isSection(current) && isString(backOne)) {
        if (
          trailingLinebreak.test(backOne) &&
          isString(current.f[0]) &&
          leadingLinebreak.test(current.f[0])
        ) {
          items[i - 1] = backOne.replace(trailingLinebreak, '\n');
          current.f[0] = current.f[0].replace(leadingLinebreak, '');
        }
      }

      // if the last item was a section, and it is followed by a linebreak, and
      // its last item is a linebreak...
      if (isString(current) && isSection(backOne)) {
        lastSectionItem = lastItem(backOne.f);

        if (
          isString(lastSectionItem) &&
          trailingLinebreak.test(lastSectionItem) &&
          leadingLinebreak.test(current)
        ) {
          backOne.f[backOne.f.length - 1] = lastSectionItem.replace(trailingLinebreak, '\n');
          items[i] = current.replace(leadingLinebreak, '');
        }
      }
    }
  }

  return items;
}

function isComment(item) {
  return item.t === COMMENT || item.t === DELIMCHANGE;
}

function isSection(item) {
  return (item.t === SECTION || item.t === INVERTED) && item.f;
}

function trimWhitespace(items, leadingPattern, trailingPattern) {
  var item;

  if (leadingPattern) {
    item = items[0];
    if (isString(item)) {
      item = item.replace(leadingPattern, '');

      if (!item) {
        items.shift();
      } else {
        items[0] = item;
      }
    }
  }

  if (trailingPattern) {
    item = lastItem(items);
    if (isString(item)) {
      item = item.replace(trailingPattern, '');

      if (!item) {
        items.pop();
      } else {
        items[items.length - 1] = item;
      }
    }
  }
}

var contiguousWhitespace = /[ \t\f\r\n]+/g;
var leadingWhitespace$1 = /^[ \t\f\r\n]+/;
var trailingWhitespace = /[ \t\f\r\n]+$/;
var leadingNewLine = /^(?:\r\n|\r|\n)/;
var trailingNewLine = /(?:\r\n|\r|\n)$/;
var trailingIndent = /(\n)?[ \t]*$/;
var leadingLine = /[ \t]*\n/;

function cleanup(
  items,
  stripComments,
  preserveWhitespace,
  removeLeadingWhitespace,
  removeTrailingWhitespace,
  whiteSpaceElements,
  preserveStandaloneSections
) {
  if (isString(items)) { return; }

  var i,
    item,
    previousItem,
    nextItem,
    preserveWhitespaceInsideFragment,
    removeLeadingWhitespaceInsideFragment,
    removeTrailingWhitespaceInsideFragment;

  // First pass - remove standalones and comments etc
  stripStandalones(items, preserveStandaloneSections);

  i = items.length;
  while (i--) {
    item = items[i];

    // Remove delimiter changes, unsafe elements etc
    if (item.exclude) {
      items.splice(i, 1);
    } else if (stripComments && item.t === COMMENT) {
      // Remove comments, unless we want to keep them
      items.splice(i, 1);
    }
  }

  // If necessary, remove leading and trailing whitespace
  trimWhitespace(
    items,
    removeLeadingWhitespace ? leadingWhitespace$1 : null,
    removeTrailingWhitespace ? trailingWhitespace : null
  );

  i = items.length;
  while (i--) {
    item = items[i];
    removeLeadingWhitespaceInsideFragment = removeTrailingWhitespaceInsideFragment = false;

    if (item.w) {
      var prev = items[i - 1];
      var hitLast = true;
      if (typeof prev === 'string') { items[i - 1] = prev.replace(trailingIndent, '$1'); }
      if (item.f) {
        if (typeof item.f[0] === 'string') { item.f[0] = item.f[0].replace(leadingLine, ''); }
        var last = item.f.length - 1;
        if (typeof item.f[last] === 'string') {
          item.f[last] = item.f[last].replace(trailingIndent, function (_m, str) {
            hitLast = str;
            return str || '';
          });
        }
      }
      var next = items[i + 1];
      if (hitLast && typeof next === 'string') { items[i + 1] = next.replace(leadingLine, ''); }
    }

    // Recurse
    if (item.f) {
      var isPreserveWhitespaceElement =
        item.t === ELEMENT &&
        (whiteSpaceElements[item.e.toLowerCase()] || whiteSpaceElements[item.e]);
      preserveWhitespaceInsideFragment = preserveWhitespace || isPreserveWhitespaceElement;

      if (!preserveWhitespace && isPreserveWhitespaceElement) {
        trimWhitespace(item.f, leadingNewLine, trailingNewLine);
      }

      if (!preserveWhitespaceInsideFragment) {
        previousItem = items[i - 1];
        nextItem = items[i + 1];

        // if the previous item was a text item with trailing whitespace,
        // remove leading whitespace inside the fragment
        if (!previousItem || (isString(previousItem) && trailingWhitespace.test(previousItem))) {
          removeLeadingWhitespaceInsideFragment = true;
        }

        // and vice versa
        if (!nextItem || (isString(nextItem) && leadingWhitespace$1.test(nextItem))) {
          removeTrailingWhitespaceInsideFragment = true;
        }
      }

      cleanup(
        item.f,
        stripComments,
        preserveWhitespaceInsideFragment,
        removeLeadingWhitespaceInsideFragment,
        removeTrailingWhitespaceInsideFragment,
        whiteSpaceElements
      );
    }

    // Split if-else blocks into two (an if, and an unless)
    if (item.l) {
      if (item.w) { item.l.forEach(function (l) { return (l.w = 1); }); }
      cleanup(
        item.l,
        stripComments,
        preserveWhitespace,
        removeLeadingWhitespaceInsideFragment,
        removeTrailingWhitespaceInsideFragment,
        whiteSpaceElements
      );

      item.l.forEach(function (s) { return (s.l = 1); });
      item.l.unshift(i + 1, 0);
      items.splice.apply(items, item.l);
      delete item.l; // TODO would be nice if there was a way around this
    }

    // Clean up conditional attributes
    if (item.m) {
      cleanup(
        item.m,
        stripComments,
        preserveWhitespace,
        removeLeadingWhitespaceInsideFragment,
        removeTrailingWhitespaceInsideFragment,
        whiteSpaceElements
      );
      if (item.m.length < 1) { delete item.m; }
    }

    delete item.w;
  }

  // final pass - fuse text nodes together
  i = items.length;
  while (i--) {
    if (isString(items[i])) {
      if (isString(items[i + 1])) {
        items[i] = items[i] + items[i + 1];
        items.splice(i + 1, 1);
      }

      if (!preserveWhitespace) {
        items[i] = items[i].replace(contiguousWhitespace, ' ');
      }

      if (items[i] === '') {
        items.splice(i, 1);
      }
    }
  }
}

var closingTagPattern = /^([a-zA-Z]{1,}:?[a-zA-Z0-9\-]*)\s*\>/;

function readClosingTag(parser) {
  var tag;

  var start = parser.pos;

  // are we looking at a closing tag?
  if (!parser.matchString('</')) {
    return null;
  }

  if ((tag = parser.matchPattern(closingTagPattern))) {
    if (parser.inside && tag !== parser.inside) {
      parser.pos = start;
      return null;
    }

    return {
      t: CLOSING_TAG,
      e: tag
    };
  }

  // We have an illegal closing tag, report it
  parser.pos -= 2;
  parser.error('Illegal closing tag');
}

function hyphenateCamel(camelCaseStr) {
  return camelCaseStr.replace(/([A-Z])/g, function (match, $1) {
    return '-' + $1.toLowerCase();
  });
}

var tagNamePattern = /^[a-zA-Z]{1,}:?[a-zA-Z0-9\-]*/;
var anchorPattern = /^[a-zA-Z_$][-a-zA-Z0-9_$]*/;
var validTagNameFollower = /^[\s\n\/>]/;
var semiEnd = /;\s*$/;
var exclude = { exclude: true };

// based on http://developers.whatwg.org/syntax.html#syntax-tag-omission
var disallowedContents = {
  li: ['li'],
  dt: ['dt', 'dd'],
  dd: ['dt', 'dd'],
  p: 'address article aside blockquote div dl fieldset footer form h1 h2 h3 h4 h5 h6 header hgroup hr main menu nav ol p pre section table ul'.split(
    ' '
  ),
  rt: ['rt', 'rp'],
  rp: ['rt', 'rp'],
  optgroup: ['optgroup'],
  option: ['option', 'optgroup'],
  thead: ['tbody', 'tfoot'],
  tbody: ['tbody', 'tfoot'],
  tfoot: ['tbody'],
  tr: ['tr', 'tbody'],
  td: ['td', 'th', 'tr'],
  th: ['td', 'th', 'tr']
};

function readElement$1(parser) {
  var attribute,
    selfClosing,
    children,
    partials,
    hasPartials,
    child,
    closed,
    pos,
    remaining,
    closingTag,
    anchor;

  var start = parser.pos;

  if (parser.inside || parser.inAttribute || parser.textOnlyMode) {
    return null;
  }

  if (!parser.matchString('<')) {
    return null;
  }

  // if this is a closing tag, abort straight away
  if (parser.nextChar() === '/') {
    return null;
  }

  var element = {};
  if (parser.includeLinePositions) {
    element.q = parser.getLinePos(start);
  }

  // check for doctype decl
  if (parser.matchString('!')) {
    element.t = DOCTYPE;
    if (!parser.matchPattern(/^doctype/i)) {
      parser.error('Expected DOCTYPE declaration');
    }

    element.a = parser.matchPattern(/^(.+?)>/);
    return element;
  } else if ((anchor = parser.matchString('#'))) {
    // check for anchor
    parser.sp();
    element.t = ANCHOR;
    element.n = parser.matchPattern(anchorPattern);
  } else {
    // otherwise, it's an element/component
    element.t = ELEMENT;

    // element name
    element.e = parser.matchPattern(tagNamePattern);
    if (!element.e) {
      return null;
    }
  }

  // next character must be whitespace, closing solidus or '>'
  if (!validTagNameFollower.test(parser.nextChar())) {
    parser.error('Illegal tag name');
  }

  parser.sp();

  parser.inTag = true;

  // directives and attributes
  while ((attribute = readMustache(parser))) {
    if (attribute !== false) {
      if (!element.m) { element.m = []; }
      element.m.push(attribute);
    }

    parser.sp();
  }

  parser.inTag = false;

  // allow whitespace before closing solidus
  parser.sp();

  // self-closing solidus?
  if (parser.matchString('/')) {
    selfClosing = true;
  }

  // closing angle bracket
  if (!parser.matchString('>')) {
    return null;
  }

  var lowerCaseName = (element.e || element.n).toLowerCase();
  var preserveWhitespace = parser.preserveWhitespace;

  if (!selfClosing && (anchor || !voidElements[element.e.toLowerCase()])) {
    if (!anchor) {
      parser.elementStack.push(lowerCaseName);

      // Special case - if we open a script element, further tags should
      // be ignored unless they're a closing script element
      if (lowerCaseName in parser.interpolate) {
        parser.inside = lowerCaseName;
      }
    }

    children = [];
    partials = create(null);

    do {
      pos = parser.pos;
      remaining = parser.remaining();

      if (!remaining) {
        // if this happens to be a script tag and there's no content left, it's because
        // a closing script tag can't appear in a script
        if (parser.inside === 'script') {
          closed = true;
          break;
        }

        parser.error(
          ("Missing end " + (parser.elementStack.length > 1 ? 'tags' : 'tag') + " (" + (parser.elementStack
            .reverse()
            .map(function (x) { return ("</" + x + ">"); })
            .join('')) + ")")
        );
      }

      // if for example we're in an <li> element, and we see another
      // <li> tag, close the first so they become siblings
      if (!anchor && !canContain(lowerCaseName, remaining)) {
        closed = true;
      } else if (!anchor && (closingTag = readClosingTag(parser))) {
        // closing tag
        closed = true;

        var closingTagName = closingTag.e.toLowerCase();

        // if this *isn't* the closing tag for the current element...
        if (closingTagName !== lowerCaseName) {
          // rewind parser
          parser.pos = pos;

          // if it doesn't close a parent tag, error
          if (!~parser.elementStack.indexOf(closingTagName)) {
            var errorMessage = 'Unexpected closing tag';

            // add additional help for void elements, since component names
            // might clash with them
            if (voidElements[closingTagName.toLowerCase()]) {
              errorMessage += " (<" + closingTagName + "> is a void element - it cannot contain children)";
            }

            parser.error(errorMessage);
          }
        }
      } else if (anchor && readAnchorClose(parser, element.n)) {
        closed = true;
      } else {
        // implicit close by closing section tag. TODO clean this up
        var tag = {
          open: parser.standardDelimiters[0],
          close: parser.standardDelimiters[1]
        };
        if (readClosing(parser, tag) || readInline(parser, tag)) {
          closed = true;
          parser.pos = pos;
        } else if ((child = parser.read(PARTIAL_READERS))) {
          if (partials[child.n]) {
            parser.pos = pos;
            parser.error('Duplicate partial definition');
          }

          cleanup(
            child.f,
            parser.stripComments,
            preserveWhitespace,
            !preserveWhitespace,
            !preserveWhitespace,
            parser.whiteSpaceElements
          );

          partials[child.n] = child.f;
          hasPartials = true;
        } else {
          if ((child = parser.read(READERS))) {
            children.push(child);
          } else {
            closed = true;
          }
        }
      }
    } while (!closed);

    if (children.length) {
      element.f = children;
    }

    if (hasPartials) {
      element.p = partials;
    }

    parser.elementStack.pop();
  }

  parser.inside = null;

  if (parser.sanitizeElements && parser.sanitizeElements.indexOf(lowerCaseName) !== -1) {
    return exclude;
  }

  if (
    element.m &&
    lowerCaseName !== 'input' &&
    lowerCaseName !== 'select' &&
    lowerCaseName !== 'textarea' &&
    lowerCaseName !== 'option'
  ) {
    var attrs = element.m;
    var classes, styles, cls, style;
    var i = 0;
    var a;
    while (i < attrs.length) {
      a = attrs[i];

      if (a.t !== ATTRIBUTE) {
        i++;
        continue;
      }

      if (a.n.indexOf('class-') === 0 && !a.f) {
        // static class directives
        (classes || (classes = [])).push(a.n.slice(6));
        attrs.splice(i, 1);
      } else if (a.n.indexOf('style-') === 0 && isString(a.f)) {
        // static style directives
        (styles || (styles = [])).push(((hyphenateCamel(a.n.slice(6))) + ": " + (a.f) + ";"));
        attrs.splice(i, 1);
      } else if (a.n === 'class' && isString(a.f)) {
        // static class attrs
        (classes || (classes = [])).push(a.f);
        attrs.splice(i, 1);
      } else if (a.n === 'style' && isString(a.f)) {
        // static style attrs
        (styles || (styles = [])).push(a.f + (semiEnd.test(a.f) ? '' : ';'));
        attrs.splice(i, 1);
      } else if (a.n === 'class') {
        cls = a;
        i++;
      } else if (a.n === 'style') {
        style = a;
        i++;
      } else if (
        !~a.n.indexOf(':') &&
        a.n !== 'value' &&
        a.n !== 'contenteditable' &&
        isString(a.f)
      ) {
        a.g = 1;
        i++;
      } else {
        i++;
      }
    }

    if (classes) {
      if (!cls || !isString(cls.f))
        { attrs.unshift({ t: ATTRIBUTE, n: 'class', f: classes.join(' '), g: 1 }); }
      else { cls.f += ' ' + classes.join(' '); }
    } else if (cls && isString(cls.f)) { cls.g = 1; }

    if (styles) {
      if (!style || !isString(style.f))
        { attrs.unshift({ t: ATTRIBUTE, n: 'style', f: styles.join(' '), g: 1 }); }
      else { style.f += '; ' + styles.join(' '); }
    } else if (style && isString(style.f)) { style.g = 1; }
  }

  return element;
}

function canContain(name, remaining) {
  var match = /^<([a-zA-Z][a-zA-Z0-9]*)/.exec(remaining);
  var disallowed = disallowedContents[name];

  if (!match || !disallowed) {
    return true;
  }

  return !~disallowed.indexOf(match[1].toLowerCase());
}

function readAnchorClose(parser, name) {
  var pos = parser.pos;
  if (!parser.matchString('</')) {
    return null;
  }

  parser.matchString('#');
  parser.sp();

  if (!parser.matchString(name)) {
    parser.pos = pos;
    return null;
  }

  parser.sp();

  if (!parser.matchString('>')) {
    parser.pos = pos;
    return null;
  }

  return true;
}

var inlines = /^\s*(elseif|else|then|catch)\s*/;
function readInline(parser, tag) {
  var pos = parser.pos;
  if (!parser.matchString(tag.open)) { return; }
  if (parser.matchPattern(inlines)) {
    return true;
  } else {
    parser.pos = pos;
  }
}

function readText(parser) {
  var index, disallowed, barrier;

  var remaining = parser.remaining();

  if (parser.textOnlyMode) {
    disallowed = parser.tags.map(function (t) { return t.open; });
    disallowed = disallowed.concat(parser.tags.map(function (t) { return '\\' + t.open; }));

    index = getLowestIndex(remaining, disallowed);
  } else {
    barrier = parser.inside ? '</' + parser.inside : '<';

    if (parser.inside && !parser.interpolate[parser.inside]) {
      index = remaining.indexOf(barrier);
    } else {
      disallowed = parser.tags.map(function (t) { return t.open; });
      disallowed = disallowed.concat(parser.tags.map(function (t) { return '\\' + t.open; }));

      // http://developers.whatwg.org/syntax.html#syntax-attributes
      if (parser.inAttribute === true) {
        // we're inside an unquoted attribute value
        disallowed.push("\"", "'", "=", "<", ">", '`');
      } else if (parser.inAttribute) {
        // quoted attribute value
        disallowed.push(parser.inAttribute);
      } else {
        disallowed.push(barrier);
      }

      index = getLowestIndex(remaining, disallowed);
    }
  }

  if (!index) {
    return null;
  }

  if (index === -1) {
    index = remaining.length;
  }

  parser.pos += index;

  if ((parser.inside && parser.inside !== 'textarea') || parser.textOnlyMode) {
    return remaining.substr(0, index);
  } else {
    return decodeCharacterReferences(remaining.substr(0, index));
  }
}

var partialDefinitionSectionPattern = /^\s*#\s*partial\s+/;

function readPartialDefinitionSection(parser) {
  var child, closed;

  var start = parser.pos;

  var delimiters = parser.standardDelimiters;

  if (!parser.matchString(delimiters[0])) {
    return null;
  }

  if (!parser.matchPattern(partialDefinitionSectionPattern)) {
    parser.pos = start;
    return null;
  }

  var name = parser.matchPattern(/^[a-zA-Z_$][a-zA-Z_$0-9\-\/]*/);

  if (!name) {
    parser.error('expected legal partial name');
  }

  parser.sp();
  if (!parser.matchString(delimiters[1])) {
    parser.error(("Expected closing delimiter '" + (delimiters[1]) + "'"));
  }

  var content = [];

  var open = delimiters[0];
  var close = delimiters[1];

  do {
    if ((child = readClosing(parser, { open: open, close: close }))) {
      if (child.r !== 'partial') {
        parser.error(("Expected " + open + "/partial" + close));
      }

      closed = true;
    } else {
      child = parser.read(READERS);

      if (!child) {
        parser.error(("Expected " + open + "/partial" + close));
      }

      content.push(child);
    }
  } while (!closed);

  return {
    t: INLINE_PARTIAL,
    n: name,
    f: content
  };
}

function readTemplate(parser) {
  var fragment = [];
  var partials = create(null);
  var hasPartials = false;

  var preserveWhitespace = parser.preserveWhitespace;

  while (parser.pos < parser.str.length) {
    var pos = parser.pos;
    var item = (void 0), partial = (void 0);

    if ((partial = parser.read(PARTIAL_READERS))) {
      if (partials[partial.n]) {
        parser.pos = pos;
        parser.error('Duplicated partial definition');
      }

      cleanup(
        partial.f,
        parser.stripComments,
        preserveWhitespace,
        !preserveWhitespace,
        !preserveWhitespace,
        parser.whiteSpaceElements
      );

      partials[partial.n] = partial.f;
      hasPartials = true;
    } else if ((item = parser.read(READERS))) {
      fragment.push(item);
    } else {
      parser.error('Unexpected template content');
    }
  }

  var result = {
    v: TEMPLATE_VERSION,
    t: fragment
  };

  if (hasPartials) {
    result.p = partials;
  }

  return result;
}

function insertExpressions(obj, expr) {
  keys(obj).forEach(function (key) {
    if (isExpression(key, obj)) { return addTo(obj, expr); }

    var ref = obj[key];
    if (hasChildren(ref)) { insertExpressions(ref, expr); }
  });
}

function isExpression(key, obj) {
  return key === 's' && isArray(obj.r);
}

function addTo(obj, expr) {
  var s = obj.s;
  var r = obj.r;
  if (!expr[s]) { expr[s] = fromExpression(s, r.length); }
}

function hasChildren(ref) {
  return isArray(ref) || isObject(ref);
}

var shared = {};

// See https://github.com/ractivejs/template-spec for information
// about the Ractive template specification

var STANDARD_READERS = [
  readPartial,
  readUnescaped,
  readSection,
  readInterpolator,
  readComment
];
var TRIPLE_READERS = [readTriple];

var READERS = [readMustache, readHtmlComment, readElement$1, readText];
var PARTIAL_READERS = [readPartialDefinitionSection];

var preserveWhitespaceElements = { pre: 1, script: 1, style: 1, textarea: 1 };

var defaultInterpolate = { textarea: true, script: true, style: true, template: true };

var StandardParser = Parser.extend({
  init: function init(str, options) {
    var tripleDelimiters = options.tripleDelimiters || shared.defaults.tripleDelimiters;
    var staticDelimiters = options.staticDelimiters || shared.defaults.staticDelimiters;
    var staticTripleDelimiters =
      options.staticTripleDelimiters || shared.defaults.staticTripleDelimiters;

    this.standardDelimiters = options.delimiters || shared.defaults.delimiters;

    this.tags = [
      {
        isStatic: false,
        isTriple: false,
        open: this.standardDelimiters[0],
        close: this.standardDelimiters[1],
        readers: STANDARD_READERS
      },
      {
        isStatic: false,
        isTriple: true,
        open: tripleDelimiters[0],
        close: tripleDelimiters[1],
        readers: TRIPLE_READERS
      },
      {
        isStatic: true,
        isTriple: false,
        open: staticDelimiters[0],
        close: staticDelimiters[1],
        readers: STANDARD_READERS
      },
      {
        isStatic: true,
        isTriple: true,
        open: staticTripleDelimiters[0],
        close: staticTripleDelimiters[1],
        readers: TRIPLE_READERS
      }
    ];

    this.contextLines = options.contextLines || shared.defaults.contextLines;

    this.sortMustacheTags();

    this.sectionDepth = 0;
    this.elementStack = [];

    this.interpolate = assign(
      {},
      defaultInterpolate,
      shared.defaults.interpolate,
      options.interpolate
    );

    if (options.sanitize === true) {
      options.sanitize = {
        // blacklist from https://code.google.com/p/google-caja/source/browse/trunk/src/com/google/caja/lang/html/html4-elements-whitelist.json
        elements: 'applet base basefont body frame frameset head html isindex link meta noframes noscript object param script style title'.split(
          ' '
        ),
        eventAttributes: true
      };
    }

    this.stripComments = options.stripComments !== false;
    this.preserveWhitespace = isObjectType(options.preserveWhitespace)
      ? false
      : options.preserveWhitespace;
    this.sanitizeElements = options.sanitize && options.sanitize.elements;
    this.sanitizeEventAttributes = options.sanitize && options.sanitize.eventAttributes;
    this.includeLinePositions = options.includeLinePositions;
    this.textOnlyMode = options.textOnlyMode;
    this.csp = options.csp;
    this.allowExpressions = options.allowExpressions;

    this.preserveStandaloneSections = this.preserveWhitespace && options.preserveStandaloneSections;

    if (options.expression) { this.converters = [readExpression]; }

    if (options.attributes) { this.inTag = true; }

    // special whitespace handling requested for certain elements
    this.whiteSpaceElements = assign({}, options.preserveWhitespace, preserveWhitespaceElements);
  },

  postProcess: function postProcess(result, options) {
    var parserResult = result[0];

    if (options.expression) {
      var expr = flattenExpression(parserResult);
      expr.e = fromExpression(expr.s, expr.r.length);
      return expr;
    } else {
      // special case - empty string
      if (!result.length) {
        return { t: [], v: TEMPLATE_VERSION };
      }

      if (this.sectionDepth > 0) {
        this.error('A section was left open');
      }

      cleanup(
        parserResult.t,
        this.stripComments,
        this.preserveWhitespace,
        !this.preserveWhitespace,
        !this.preserveWhitespace,
        this.whiteSpaceElements,
        this.preserveStandaloneSections
      );

      if (this.csp !== false) {
        var expr$1 = {};

        insertExpressions(parserResult.t, expr$1);
        insertExpressions(parserResult.p || {}, expr$1);

        if (keys(expr$1).length) { parserResult.e = expr$1; }
      }

      return parserResult;
    }
  },

  converters: [readTemplate],

  sortMustacheTags: function sortMustacheTags() {
    // Sort in order of descending opening delimiter length (longer first),
    // to protect against opening delimiters being substrings of each other
    this.tags.sort(function (a, b) {
      return b.open.length - a.open.length;
    });
  }
});

function parse(template, options) {
  return new StandardParser(template, options || {}).result;
}

var parseOptions = [
  'delimiters',
  'tripleDelimiters',
  'staticDelimiters',
  'staticTripleDelimiters',
  'csp',
  'interpolate',
  'preserveWhitespace',
  'preserveStandaloneSections',
  'sanitize',
  'stripComments',
  'contextLines',
  'allowExpressions',
  'attributes'
];

var TEMPLATE_INSTRUCTIONS = "Either preparse or use a ractive runtime source that includes the parser. ";

var COMPUTATION_INSTRUCTIONS = "Either include a version of Ractive that can parse or convert your computation strings to functions.";

function throwNoParse(method, error, instructions) {
  if (!method) {
    fatal(("Missing Ractive.parse - cannot parse " + error + ". " + instructions));
  }
}

function createFunction(body, length) {
  throwNoParse(fromExpression, 'new expression function', TEMPLATE_INSTRUCTIONS);
  return fromExpression(body, length);
}

function createFunctionFromString(str, bindTo) {
  throwNoParse(parse, 'compution string "${str}"', COMPUTATION_INSTRUCTIONS);
  var tpl = parse(str, { expression: true });
  return function() {
    return tpl.e.apply(bindTo, tpl.r.map(function (r) { return bindTo.get(r); }));
  };
}

var parser = {
  fromId: function fromId(id, options) {
    if (!doc) {
      if (options && options.noThrow) {
        return;
      }
      throw new Error(("Cannot retrieve template #" + id + " as Ractive is not running in a browser."));
    }

    if (id) { id = id.replace(/^#/, ''); }

    var template;

    if (!(template = doc.getElementById(id))) {
      if (options && options.noThrow) {
        return;
      }
      throw new Error(("Could not find template element with id #" + id));
    }

    if (template.tagName.toUpperCase() !== 'SCRIPT') {
      if (options && options.noThrow) {
        return;
      }
      throw new Error(("Template element with id #" + id + ", must be a <script> element"));
    }

    return 'textContent' in template ? template.textContent : template.innerHTML;
  },

  isParsed: function isParsed(template) {
    return !isString(template);
  },

  getParseOptions: function getParseOptions(ractive) {
    // Could be Ractive or a Component
    if (ractive.defaults) {
      ractive = ractive.defaults;
    }

    return parseOptions.reduce(function (val, key) {
      val[key] = ractive[key];
      return val;
    }, {});
  },

  parse: function parse$1(template, options) {
    throwNoParse(parse, 'template', TEMPLATE_INSTRUCTIONS);
    var parsed = parse(template, options);
    addFunctions(parsed);
    return parsed;
  },

  parseFor: function parseFor(template, ractive) {
    return this.parse(template, this.getParseOptions(ractive));
  }
};

function getComputationSignature(ractive, key, signature) {
  var getter;
  var setter;

  // useful for debugging
  var getterString;
  var getterUseStack;
  var setterString;

  if (isFunction(signature)) {
    getter = bind(signature, ractive);
    getterString = signature.toString();
    getterUseStack = true;
  }

  if (isString(signature)) {
    getter = createFunctionFromString(signature, ractive);
    getterString = signature;
  }

  if (isObjectType(signature)) {
    if (isString(signature.get)) {
      getter = createFunctionFromString(signature.get, ractive);
      getterString = signature.get;
    } else if (isFunction(signature.get)) {
      getter = bind(signature.get, ractive);
      getterString = signature.get.toString();
      getterUseStack = true;
    } else {
      fatal('`%s` computation must have a `get()` method', key);
    }

    if (isFunction(signature.set)) {
      setter = bind(signature.set, ractive);
      setterString = signature.set.toString();
    }
  }

  return {
    getter: getter,
    setter: setter,
    getterString: getterString,
    setterString: setterString,
    getterUseStack: getterUseStack
  };
}

var id = 0;

var TransitionManager = function TransitionManager(callback, parent) {
  this.callback = callback;
  this.parent = parent;

  this.intros = [];
  this.outros = [];

  this.children = [];
  this.totalChildren = this.outroChildren = 0;

  this.detachQueue = [];
  this.outrosComplete = false;

  this.id = id++;

  if (parent) {
    parent.addChild(this);
  }
};
var TransitionManager__proto__ = TransitionManager.prototype;

TransitionManager__proto__.add = function add (transition) {
  var list = transition.isIntro ? this.intros : this.outros;
  transition.starting = true;
  list.push(transition);
};

TransitionManager__proto__.addChild = function addChild (child) {
  this.children.push(child);

  this.totalChildren += 1;
  this.outroChildren += 1;
};

TransitionManager__proto__.checkStart = function checkStart () {
  if (this.parent && this.parent.started) { this.start(); }
};

TransitionManager__proto__.decrementOutros = function decrementOutros () {
  this.outroChildren -= 1;
  check(this);
};

TransitionManager__proto__.decrementTotal = function decrementTotal () {
  this.totalChildren -= 1;
  check(this);
};

TransitionManager__proto__.detachNodes = function detachNodes () {
    var this$1 = this;

  var len = this.detachQueue.length;
  for (var i = 0; i < len; i++) { this$1.detachQueue[i].detach(); }
  len = this.children.length;
  for (var i$1 = 0; i$1 < len; i$1++) { this$1.children[i$1].detachNodes(); }
  this.detachQueue = [];
};

TransitionManager__proto__.ready = function ready () {
  if (this.detachQueue.length) { detachImmediate(this); }
};

TransitionManager__proto__.remove = function remove (transition) {
  var list = transition.isIntro ? this.intros : this.outros;
  removeFromArray(list, transition);
  check(this);
};

TransitionManager__proto__.start = function start () {
  this.started = true;
  this.children.forEach(function (c) { return c.start(); });
  this.intros.concat(this.outros).forEach(function (t) { return t.start(); });
  check(this);
};

function check(tm) {
  if (!tm.started || tm.outros.length || tm.outroChildren) { return; }

  // If all outros are complete, and we haven't already done this,
  // we notify the parent if there is one, otherwise
  // start detaching nodes
  if (!tm.outrosComplete) {
    tm.outrosComplete = true;

    if (tm.parent) { tm.parent.decrementOutros(tm); }

    if (allOutrosComplete(tm)) {
      tm.detachNodes();
    }
  }

  // Once everything is done, we can notify parent transition
  // manager and call the callback
  if (!tm.intros.length && !tm.totalChildren) {
    if (isFunction(tm.callback)) {
      tm.callback();
    }

    if (tm.parent && !tm.notifiedTotal) {
      tm.notifiedTotal = true;
      tm.parent.decrementTotal();
    }
  }
}

function allOutrosComplete(manager) {
  return !manager || (manager.outrosComplete && allOutrosComplete(manager.parent));
}

// check through the detach queue to see if a node is up or downstream from a
// transition and if not, go ahead and detach it
function detachImmediate(manager) {
  var queue = manager.detachQueue;
  var outros = collectAllOutros(manager);

  if (!outros.length) {
    manager.detachNodes();
  } else {
    var i = queue.length;
    var j = 0;
    var node, trans;
    var nqueue = (manager.detachQueue = []);

    start: while (i--) {
      node = queue[i].node;
      j = outros.length;
      while (j--) {
        trans = outros[j].element.node;
        // check to see if the node is, contains, or is contained by the transitioning node
        if (trans === node || trans.contains(node) || node.contains(trans)) {
          nqueue.push(queue[i]);
          continue start;
        }
      }

      // no match, we can drop it
      queue[i].detach();
    }
  }
}

function collectAllOutros(manager, _list) {
  var list = _list;

  // if there's no list, we're starting at the root to build one
  if (!list) {
    list = [];
    var parent = manager;
    while (parent.parent) { parent = parent.parent; }
    return collectAllOutros(parent, list);
  } else {
    // grab all outros from child managers
    var i = manager.children.length;
    while (i--) {
      list = collectAllOutros(manager.children[i], list);
    }

    // grab any from this manager if there are any
    if (manager.outros.length) { list = list.concat(manager.outros); }

    return list;
  }
}

var batch;

var runloop = {
  active: function active() {
    return !!batch;
  },

  start: function start() {
    var fulfilPromise;
    var promise = new Promise(function (f) { return (fulfilPromise = f); });

    batch = {
      previousBatch: batch,
      transitionManager: new TransitionManager(fulfilPromise, batch && batch.transitionManager),
      fragments: [],
      tasks: [],
      immediateObservers: [],
      deferredObservers: [],
      promise: promise
    };

    return promise;
  },

  end: function end() {
    flushChanges();

    if (!batch.previousBatch) { batch.transitionManager.start(); }
    else { batch.transitionManager.checkStart(); }

    batch = batch.previousBatch;
  },

  addFragment: function addFragment(fragment) {
    addToArray(batch.fragments, fragment);
  },

  // TODO: come up with a better way to handle fragments that trigger their own update
  addFragmentToRoot: function addFragmentToRoot(fragment) {
    if (!batch) { return; }

    var b = batch;
    while (b.previousBatch) {
      b = b.previousBatch;
    }

    addToArray(b.fragments, fragment);
  },

  addObserver: function addObserver(observer, defer) {
    if (!batch) {
      observer.dispatch();
    } else {
      addToArray(defer ? batch.deferredObservers : batch.immediateObservers, observer);
    }
  },

  registerTransition: function registerTransition(transition) {
    transition._manager = batch.transitionManager;
    batch.transitionManager.add(transition);
  },

  // synchronise node detachments with transition ends
  detachWhenReady: function detachWhenReady(thing) {
    batch.transitionManager.detachQueue.push(thing);
  },

  scheduleTask: function scheduleTask(task, postRender) {
    var _batch;

    if (!batch) {
      task();
    } else {
      _batch = batch;
      while (postRender && _batch.previousBatch) {
        // this can't happen until the DOM has been fully updated
        // otherwise in some situations (with components inside elements)
        // transitions and decorators will initialise prematurely
        _batch = _batch.previousBatch;
      }

      _batch.tasks.push(task);
    }
  },

  promise: function promise() {
    if (!batch) { return Promise.resolve(); }

    var target = batch;
    while (target.previousBatch) {
      target = target.previousBatch;
    }

    return target.promise || Promise.resolve();
  }
};

function dispatch(observer) {
  observer.dispatch();
}

function flushChanges() {
  var which = batch.immediateObservers;
  batch.immediateObservers = [];
  which.forEach(dispatch);

  // Now that changes have been fully propagated, we can update the DOM
  // and complete other tasks
  var i = batch.fragments.length;
  var fragment;

  which = batch.fragments;
  batch.fragments = [];

  while (i--) {
    fragment = which[i];
    fragment.update();
  }

  batch.transitionManager.ready();

  which = batch.deferredObservers;
  batch.deferredObservers = [];
  which.forEach(dispatch);

  var tasks = batch.tasks;
  batch.tasks = [];

  for (i = 0; i < tasks.length; i += 1) {
    tasks[i]();
  }

  // If updating the view caused some model blowback - e.g. a triple
  // containing <option> elements caused the binding on the <select>
  // to update - then we start over
  if (
    batch.fragments.length ||
    batch.immediateObservers.length ||
    batch.deferredObservers.length ||
    batch.tasks.length
  )
    { return flushChanges(); }
}

// TODO what happens if a transition is aborted?

var tickers = [];
var running = false;

function tick() {
  runloop.start();

  var now = performance.now();

  var i;
  var ticker;

  for (i = 0; i < tickers.length; i += 1) {
    ticker = tickers[i];

    if (!ticker.tick(now)) {
      // ticker is complete, remove it from the stack, and decrement i so we don't miss one
      tickers.splice(i--, 1);
    }
  }

  runloop.end();

  if (tickers.length) {
    requestAnimationFrame(tick);
  } else {
    running = false;
  }
}

var Ticker = function Ticker(options) {
  this.duration = options.duration;
  this.step = options.step;
  this.complete = options.complete;
  this.easing = options.easing;

  this.start = performance.now();
  this.end = this.start + this.duration;

  this.running = true;

  tickers.push(this);
  if (!running) { requestAnimationFrame(tick); }
};
var Ticker__proto__ = Ticker.prototype;

Ticker__proto__.tick = function tick (now) {
  if (!this.running) { return false; }

  if (now > this.end) {
    if (this.step) { this.step(1); }
    if (this.complete) { this.complete(1); }

    return false;
  }

  var elapsed = now - this.start;
  var eased = this.easing(elapsed / this.duration);

  if (this.step) { this.step(eased); }

  return true;
};

Ticker__proto__.stop = function stop () {
  if (this.abort) { this.abort(); }
  this.running = false;
};

var prefixers = {};

// TODO this is legacy. sooner we can replace the old adaptor API the better
/* istanbul ignore next */
function prefixKeypath(obj, prefix) {
  var prefixed = {};

  if (!prefix) {
    return obj;
  }

  prefix += '.';

  for (var key in obj) {
    if (hasOwn(obj, key)) {
      prefixed[prefix + key] = obj[key];
    }
  }

  return prefixed;
}

function getPrefixer(rootKeypath) {
  var rootDot;

  if (!prefixers[rootKeypath]) {
    rootDot = rootKeypath ? rootKeypath + '.' : '';

    /* istanbul ignore next */
    prefixers[rootKeypath] = function(relativeKeypath, value) {
      var obj;

      if (isString(relativeKeypath)) {
        obj = {};
        obj[rootDot + relativeKeypath] = value;
        return obj;
      }

      if (isObjectType(relativeKeypath)) {
        // 'relativeKeypath' is in fact a hash, not a keypath
        return rootDot ? prefixKeypath(relativeKeypath, rootKeypath) : relativeKeypath;
      }
    };
  }

  return prefixers[rootKeypath];
}

var shared$1 = {};

var Model = (function (ModelBase) {
  function Model(parent, key) {
    ModelBase.call(this, parent);

    this.ticker = null;

    if (parent) {
      this.key = unescapeKey(key);
      this.isReadonly = parent.isReadonly;

      if (parent.value) {
        this.value = parent.value[this.key];
        if (isArray(this.value)) { this.length = this.value.length; }
        this.adapt();
      }
    }
  }

  if ( ModelBase ) Model.__proto__ = ModelBase;
  var Model__proto__ = Model.prototype = Object.create( ModelBase && ModelBase.prototype );
  Model__proto__.constructor = Model;

  Model__proto__.adapt = function adapt () {
    var this$1 = this;

    var adaptors = this.root.adaptors;
    var len = adaptors.length;

    this.rewrap = false;

    // Exit early if no adaptors
    if (len === 0) { return; }

    var value = this.wrapper
      ? 'newWrapperValue' in this
        ? this.newWrapperValue
        : this.wrapperValue
      : this.value;

    // TODO remove this legacy nonsense
    var ractive = this.root.ractive;
    var keypath = this.getKeypath();

    // tear previous adaptor down if present
    if (this.wrapper) {
      var shouldTeardown =
        this.wrapperValue === value
          ? false
          : !this.wrapper.reset || this.wrapper.reset(value) === false;

      if (shouldTeardown) {
        this.wrapper.teardown();
        delete this.wrapper;
        delete this.wrapperValue;
        delete this.newWrapperValue;

        // don't branch for undefined values
        if (this.value !== undefined) {
          var parentValue = this.parent.value || this.parent.createBranch(this.key);
          if (parentValue[this.key] !== value) { parentValue[this.key] = value; }
          this.value = value;
        }
      } else {
        delete this.newWrapperValue;
        this.value = this.wrapper.get();
        return;
      }
    }

    var i;

    for (i = 0; i < len; i += 1) {
      var adaptor = adaptors[i];
      if (adaptor.filter(value, keypath, ractive)) {
        this$1.wrapper = adaptor.wrap(ractive, value, keypath, getPrefixer(keypath));
        this$1.wrapperValue = value;
        this$1.wrapper.__model = this$1; // massive temporary hack to enable array adaptor

        this$1.value = this$1.wrapper.get();

        break;
      }
    }
  };

  Model__proto__.animate = function animate (from, to, options, interpolator) {
    var this$1 = this;

    if (this.ticker) { this.ticker.stop(); }

    var fulfilPromise;
    var promise = new Promise(function (fulfil) { return (fulfilPromise = fulfil); });

    this.ticker = new Ticker({
      duration: options.duration,
      easing: options.easing,
      step: function (t) {
        var value = interpolator(t);
        this$1.applyValue(value);
        if (options.step) { options.step(t, value); }
      },
      complete: function () {
        this$1.applyValue(to);
        if (options.complete) { options.complete(to); }

        this$1.ticker = null;
        fulfilPromise(to);
      }
    });

    promise.stop = this.ticker.stop;
    return promise;
  };

  Model__proto__.applyValue = function applyValue (value, notify) {
    if ( notify === void 0 ) notify = true;

    if (isEqual(value, this.value)) { return; }
    if (this.boundValue) { this.boundValue = null; }

    if (this.parent.wrapper && this.parent.wrapper.set) {
      this.parent.wrapper.set(this.key, value);
      this.parent.value = this.parent.wrapper.get();

      this.value = this.parent.value[this.key];
      if (this.wrapper) { this.newWrapperValue = this.value; }
      this.adapt();
    } else if (this.wrapper) {
      this.newWrapperValue = value;
      this.adapt();
    } else {
      var parentValue = this.parent.value || this.parent.createBranch(this.key);
      if (isObjectLike(parentValue)) {
        parentValue[this.key] = value;
      } else {
        warnIfDebug(("Attempted to set a property of a non-object '" + (this.getKeypath()) + "'"));
        return;
      }

      this.value = value;
      this.adapt();
    }

    if (this.dataModel || (value && value.viewmodel && value.viewmodel.isRoot)) {
      checkDataLink(this, value);
    }

    // keep track of array stuff
    if (isArray(value)) {
      this.length = value.length;
      this.isArray = true;
    } else {
      this.isArray = false;
    }

    // notify dependants
    this.links.forEach(handleChange);
    this.children.forEach(mark);
    this.deps.forEach(handleChange);

    if (notify) { this.notifyUpstream(); }

    if (this.parent.isArray) {
      if (this.key === 'length') { this.parent.length = value; }
      else { this.parent.joinKey('length').mark(); }
    }
  };

  Model__proto__.compute = function compute (key, computed) {
    var registry = this.computed || (this.computed = {});

    if (registry[key]) {
      registry[key].signature = getComputationSignature(this.root.ractive, key, computed);
      registry[key].mark();
    } else {
      registry[key] = new shared$1.Computation(
        this,
        getComputationSignature(this.root.ractive, key, computed),
        key
      );
    }

    return registry[key];
  };

  Model__proto__.createBranch = function createBranch (key) {
    var branch = isNumeric(key) ? [] : {};
    this.applyValue(branch, false);

    return branch;
  };

  Model__proto__.get = function get (shouldCapture, opts) {
    if (this._link) { return this._link.get(shouldCapture, opts); }
    if (shouldCapture) { capture(this); }
    // if capturing, this value needs to be unwrapped because it's for external use
    if (opts && opts.virtual) { return this.getVirtual(false); }
    return maybeBind(
      this,
      (opts && 'unwrap' in opts ? opts.unwrap !== false : shouldCapture) && this.wrapper
        ? this.wrapperValue
        : this.value,
      !opts || opts.shouldBind !== false
    );
  };

  Model__proto__.joinKey = function joinKey (key, opts) {
    var this$1 = this;

    if (this._link) {
      if (opts && opts.lastLink !== false && (isUndefined(key) || key === '')) { return this; }
      return this._link.joinKey(key);
    }

    if (isUndefined(key) || key === '') { return this; }

    var child;
    if (hasOwn(this.childByKey, key)) { child = this.childByKey[key]; }
    else { child = this.computed && this.computed[key]; }

    if (!child) {
      var computed;
      if (this.isRoot && this.ractive && (computed = this.ractive.computed[key])) {
        child = this.compute(key, computed);
      } else if (!this.isRoot && this.root.ractive) {
        var registry = this.root.ractive.computed;
        for (var k in registry) {
          computed = registry[k];
          if (computed.pattern && computed.pattern.test(this$1.getKeypath() + '.' + key)) {
            child = this$1.compute(key, computed);
          }
        }
      }
    }

    if (!child) {
      child = new Model(this, key);
      this.children.push(child);
      this.childByKey[key] = child;

      if (key === 'data') {
        var val = this.retrieve();
        if (val && val.viewmodel && val.viewmodel.isRoot) {
          child.link(val.viewmodel, 'data');
          this.dataModel = val;
        }
      }
    }

    if (child._link && (!opts || opts.lastLink !== false)) { return child._link; }

    return child;
  };

  Model__proto__.mark = function mark$1 (force) {
    if (this._link) { return this._link.mark(force); }

    var old = this.value;
    var value = this.retrieve();

    if (this.dataModel || (value && value.viewmodel && value.viewmodel.isRoot)) {
      checkDataLink(this, value);
    }

    if (force || !isEqual(value, old)) {
      this.value = value;
      if (this.boundValue) { this.boundValue = null; }

      // make sure the wrapper stays in sync
      if (old !== value || this.rewrap) {
        if (this.wrapper) { this.newWrapperValue = value; }
        this.adapt();
      }

      // keep track of array stuff
      if (isArray(value)) {
        this.length = value.length;
        this.isArray = true;
      } else {
        this.isArray = false;
      }

      this.children.forEach(force ? markForce : mark);
      this.links.forEach(marked);

      this.deps.forEach(handleChange);
    }
  };

  Model__proto__.merge = function merge (array, comparator) {
    var newIndices = buildNewIndices(
      this.value === array ? recreateArray(this) : this.value,
      array,
      comparator
    );
    this.parent.value[this.key] = array;
    this.shuffle(newIndices, true);
  };

  Model__proto__.retrieve = function retrieve () {
    return this.parent.value ? this.parent.value[this.key] : undefined;
  };

  Model__proto__.set = function set (value) {
    if (this.ticker) { this.ticker.stop(); }
    this.applyValue(value);
  };

  Model__proto__.shuffle = function shuffle$2 (newIndices, unsafe) {
    shuffle(this, newIndices, false, unsafe);
  };

  Model__proto__.source = function source () {
    return this;
  };

  Model__proto__.teardown = function teardown$4 () {
    var this$1 = this;

    if (this._link) {
      this._link.teardown();
      this._link = null;
    }
    this.children.forEach(teardown);
    if (this.wrapper) { this.wrapper.teardown(); }
    if (this.computed) { keys(this.computed).forEach(function (k) { return this$1.computed[k].teardown(); }); }
  };

  return Model;
}(ModelBase));

function recreateArray(model) {
  var array = [];

  for (var i = 0; i < model.length; i++) {
    array[i] = (model.childByKey[i] || {}).value;
  }

  return array;
}

/* global global */
var data = {};

var SharedModel = (function (Model) {
  function SharedModel(value, name, ractive) {
    Model.call(this, null, ("@" + name));
    this.key = "@" + name;
    this.value = value;
    this.isRoot = true;
    this.root = this;
    this.adaptors = [];
    this.ractive = ractive;
  }

  if ( Model ) SharedModel.__proto__ = Model;
  var SharedModel__proto__ = SharedModel.prototype = Object.create( Model && Model.prototype );
  SharedModel__proto__.constructor = SharedModel;

  SharedModel__proto__.getKeypath = function getKeypath () {
    return this.key;
  };

  SharedModel__proto__.retrieve = function retrieve () {
    return this.value;
  };

  return SharedModel;
}(Model));

var SharedModel$1 = new SharedModel(data, 'shared');

var GlobalModel = new SharedModel(base, 'global');

function findContext(fragment) {
  var frag = fragment;
  while (frag && !frag.context && !frag.aliases) { frag = frag.parent; }
  return frag;
}

function resolveReference(fragment, ref) {
  var initialFragment = fragment;
  // current context ref
  if (ref === '.') { return fragment.findContext(); }

  // ancestor references
  if (ref[0] === '~') { return fragment.ractive.viewmodel.joinAll(splitKeypath(ref.slice(2))); }

  // scoped references
  if (ref[0] === '.' || ref[0] === '^') {
    var frag = fragment;
    var parts = ref.split('/');
    var explicitContext = parts[0] === '^^';

    // find nearest context node
    while (frag && !frag.context) {
      frag = up(frag);
    }
    var context$1 = frag && frag.context;

    // walk up the context chain
    while (frag && parts[0] === '^^') {
      parts.shift();

      // the current fragment should always be a context,
      // and if it happens to be an iteration, jump above the each block
      if (frag.isIteration) {
        frag = frag.parent.parent;
      } else {
        // otherwise jump above the current fragment
        frag = up(frag);
      }

      // walk to the next contexted fragment
      while (frag && !frag.context) {
        frag = up(frag);
      }
      context$1 = frag && frag.context;
    }

    if (!context$1 && explicitContext) {
      throw new Error(
        ("Invalid context parent reference ('" + ref + "'). There is not context at that level.")
      );
    }

    // walk up the context path
    while (parts[0] === '.' || parts[0] === '..') {
      var part = parts.shift();

      if (part === '..') {
        context$1 = context$1.parent;
      }
    }

    ref = parts.join('/');

    // special case - `{{.foo}}` means the same as `{{./foo}}`
    if (ref[0] === '.') { ref = ref.slice(1); }
    return context$1.joinAll(splitKeypath(ref));
  }

  var keys$$1 = splitKeypath(ref);
  if (!keys$$1.length) { return; }
  var base = keys$$1.shift();

  // special refs
  if (base[0] === '@') {
    // shorthand from outside the template
    // @this referring to local ractive instance
    if (base === '@this' || base === '@') {
      return fragment.ractive.viewmodel.getRactiveModel().joinAll(keys$$1);
    } else if (base === '@index' || base === '@key') {
      // @index or @key referring to the nearest repeating index or key
      if (keys$$1.length) { badReference(base); }
      var repeater = findIter(fragment);
      return repeater && repeater[("get" + (base[1] === 'i' ? 'Index' : 'Key'))]();
    } else if (base === '@last') {
      var repeater$1 = findIter(fragment);
      return repeater$1 && repeater$1.parent.getLast();
    } else if (base === '@global') {
      // @global referring to window or global
      return GlobalModel.joinAll(keys$$1);
    } else if (base === '@shared') {
      // @global referring to window or global
      return SharedModel$1.joinAll(keys$$1);
    } else if (base === '@keypath' || base === '@rootpath') {
      // @keypath or @rootpath, the current keypath string
      var root = ref[1] === 'r' ? fragment.ractive.root : null;
      var f = fragment;

      while (
        f &&
        (!f.context || (f.isRoot && f.ractive.component && (root || !f.ractive.isolated)))
      ) {
        f = f.isRoot ? f.componentParent : f.parent;
      }

      return f.getKeypath(root);
    } else if (base === '@context') {
      return new SharedModel(fragment.getContext(), 'context').joinAll(keys$$1);
    } else if (base === '@local') {
      // @context-local data
      return fragment.getContext()._data.joinAll(keys$$1);
    } else if (base === '@style') {
      // @style shared model
      return fragment.ractive.constructor._cssModel.joinAll(keys$$1);
    } else if (base === '@helpers') {
      // @helpers instance model
      return fragment.ractive.viewmodel.getHelpers().joinAll(keys$$1);
    } else if (base === '@macro') {
      var handle = findMacro(fragment);
      if (handle) { return new SharedModel(handle, 'macro').joinAll(keys$$1); }
      else { return; }
    } else {
      // nope
      throw new Error(("Invalid special reference '" + base + "'"));
    }
  }

  // helpers
  if (base && !keys$$1.length) {
    var helpers = fragment.ractive.viewmodel.getHelpers();
    if (helpers.has(base)) { return helpers.joinKey(base); }
  }

  var context = findContext(fragment);

  // check immediate context for a match
  if (context) {
    if (context.context) {
      context = context.context;
    } else {
      // alias block, so get next full context for later
      context = fragment.findContext();
    }
  } else {
    context = fragment.findContext();
  }

  // walk up the fragment hierarchy looking for a matching ref, alias, or key in a context
  var createMapping = false;
  var shouldWarn = fragment.ractive.warnAboutAmbiguity;
  var crossed = 0;
  var model;

  while (fragment) {
    // repeated fragments
    if (fragment.isIteration) {
      if (base === fragment.parent.keyRef) {
        model = fragment.getKey();
      } else if (base === fragment.parent.indexRef) {
        model = fragment.getIndex();
      }

      if (model && keys$$1.length) { badReference(base); }
    }

    // alias node or iteration
    if (!model && fragment.aliases && hasOwn(fragment.aliases, base)) {
      model = fragment.aliases[base];
    }

    // check fragment context to see if it has the key we need
    if (!model && fragment.context && fragment.context.has(base)) {
      model = fragment.context.joinKey(base);

      // this is an implicit mapping
      if (createMapping) {
        if (shouldWarn)
          { warnIfDebug(
            ("'" + ref + "' resolved but is ambiguous and will create a mapping to a parent component.")
          ); }
      } else if (shouldWarn && crossed) { warnIfDebug(("'" + ref + "' resolved but is ambiguous.")); }
    }

    if (model) {
      if (createMapping) {
        model = initialFragment.ractive.viewmodel.createLink(base, model, base, { implicit: true });
      }

      if (keys$$1.length > 0 && isFunction(model.joinAll)) {
        model = model.joinAll(keys$$1);
      }

      return model;
    }

    // don't consider alias blocks when checking for ambiguity
    if (fragment.context && !fragment.aliases) { crossed = 1; }

    if (
      !fragment.ractive.isolated &&
      !(fragment.owner && fragment.owner.containerFragment) &&
      (fragment.componentParent || (!fragment.parent && fragment.ractive.component))
    ) {
      // ascend through component boundary
      fragment = fragment.componentParent || fragment.ractive.component.up;
      createMapping = true;
    } else {
      fragment = fragment.parent;
    }
  }

  // if enabled, check the instance for a match
  var instance = initialFragment.ractive;
  if (instance.resolveInstanceMembers && base !== 'data' && base in instance) {
    return instance.viewmodel
      .getRactiveModel()
      .joinKey(base)
      .joinAll(keys$$1);
  }

  if (shouldWarn) {
    warnIfDebug(("'" + ref + "' is ambiguous and did not resolve."));
  }

  // didn't find anything, so go ahead and create the key on the local model
  return context.joinKey(base).joinAll(keys$$1);
}

function up(fragment) {
  return (
    fragment &&
    ((!fragment.ractive.isolated &&
      !(fragment.owner && fragment.owner.containerFragment) &&
      (fragment.componentParent || (!fragment.parent && fragment.ractive.component))) ||
      fragment.parent)
  );
}

function findIter(start) {
  var fragment = start;
  var next;
  while (!fragment.isIteration && (next = up(fragment))) {
    fragment = next;
  }

  return fragment.isIteration && fragment;
}

function findMacro(start) {
  var fragment = start;
  while (fragment) {
    if (fragment.owner.handle) { return fragment.owner.handle; }
    fragment = up(fragment);
  }
}

function badReference(key) {
  throw new Error(("An index or key reference (" + key + ") cannot have child properties"));
}

var extern = {};

function getRactiveContext(ractive) {
  var assigns = [], len = arguments.length - 1;
  while ( len-- > 0 ) assigns[ len ] = arguments[ len + 1 ];

  var fragment =
    ractive.fragment ||
    ractive._fakeFragment ||
    (ractive._fakeFragment = new FakeFragment(ractive));
  return fragment.getContext.apply(fragment, assigns);
}

function getContext() {
  var assigns = [], len = arguments.length;
  while ( len-- ) assigns[ len ] = arguments[ len ];

  if (!this.ctx) { this.ctx = new extern.Context(this); }
  assigns.unshift(create(this.ctx));
  return assign.apply(null, assigns);
}

var FakeFragment = function FakeFragment(ractive) {
  this.ractive = ractive;
};

FakeFragment.prototype.findContext = function findContext () {
  return this.ractive.viewmodel;
};
var proto = FakeFragment.prototype;
proto.getContext = getContext;
proto.find = proto.findComponent = proto.findAll = proto.findAllComponents = noop;

function findParentWithContext(fragment) {
  var frag = fragment;
  while (frag && !frag.context) { frag = frag.parent; }
  if (!frag) { return fragment && fragment.ractive.fragment; }
  else { return frag; }
}

var keep = false;

function set(pairs, options) {
  var k = keep;

  var deep = options && options.deep;
  var shuffle = options && options.shuffle;
  var promise = runloop.start();
  if (options && 'keep' in options) { keep = options.keep; }

  var i = pairs.length;
  while (i--) {
    var model = pairs[i][0];
    var value = pairs[i][1];
    var keypath = pairs[i][2];

    if (!model) {
      runloop.end();
      throw new Error(("Failed to set invalid keypath '" + keypath + "'"));
    }

    if (deep) { deepSet(model, value); }
    else if (shuffle) {
      var array = value;
      var target = model.get();
      // shuffle target array with itself
      if (!array) { array = target; }

      // if there's not an array there yet, go ahead and set
      if (isUndefined(target)) {
        model.set(array);
      } else {
        if (!isArray(target) || !isArray(array)) {
          runloop.end();
          throw new Error('You cannot merge an array with a non-array');
        }

        var comparator = getComparator(shuffle);
        model.merge(array, comparator);
      }
    } else { model.set(value); }
  }

  runloop.end();

  keep = k;

  if (pairs.length === 1) { return promise.then(function () { return pairs[0][1]; }); }
  else { return promise; }
}

var star = /\*/;
function gather(ractive, keypath, base, isolated) {
  if (!base && (keypath[0] === '.' || keypath[1] === '^')) {
    warnIfDebug(
      "Attempted to set a relative keypath from a non-relative context. You can use a context object to set relative keypaths."
    );
    return [];
  }

  var keys$$1 = splitKeypath(keypath);
  var model = base || ractive.viewmodel;

  if (star.test(keypath)) {
    return model.findMatches(keys$$1);
  } else {
    if (model === ractive.viewmodel) {
      // allow implicit mappings
      if (
        ractive.component &&
        !ractive.isolated &&
        !model.has(keys$$1[0]) &&
        keypath[0] !== '@' &&
        keypath[0] &&
        !isolated
      ) {
        return [resolveReference(ractive.fragment || new FakeFragment(ractive), keypath)];
      } else {
        return [model.joinAll(keys$$1)];
      }
    } else {
      return [model.joinAll(keys$$1)];
    }
  }
}

function build(ractive, keypath, value, isolated) {
  var sets = [];

  // set multiple keypaths in one go
  if (isObject(keypath)) {
    var loop = function ( k ) {
      if (hasOwn(keypath, k)) {
        sets.push.apply(sets, gather(ractive, k, null, isolated).map(function (m) { return [m, keypath[k], k]; }));
      }
    };

    for (var k in keypath) loop( k );
  } else {
    // set a single keypath
    sets.push.apply(sets, gather(ractive, keypath, null, isolated).map(function (m) { return [m, value, keypath]; }));
  }

  return sets;
}

var deepOpts = { virtual: false };
function deepSet(model, value) {
  var dest = model.get(false, deepOpts);

  // if dest doesn't exist, just set it
  if (dest == null || !isObjectType(value) || isDate(value)) { return model.set(value); }
  if (!isObjectType(dest)) { return model.set(value); }

  for (var k in value) {
    if (hasOwn(value, k)) {
      deepSet(model.joinKey(k), value[k]);
    }
  }
}

var comparators = {};
function getComparator(option) {
  if (option === true) { return null; } // use existing arrays
  if (isFunction(option)) { return option; }

  if (isString(option)) {
    return comparators[option] || (comparators[option] = function (thing) { return thing[option]; });
  }

  throw new Error('If supplied, options.compare must be a string, function, or true'); // TODO link to docs
}

var errorMessage = 'Cannot add to a non-numeric value';

function add(ractive, keypath, d, options) {
  if (!isString(keypath) || !isNumeric(d)) {
    throw new Error('Bad arguments');
  }

  var sets = build(ractive, keypath, d, options && options.isolated);

  return set(
    sets.map(function (pair) {
      var model = pair[0];
      var add = pair[1];
      var value = model.get();
      if (!isNumeric(add) || !isNumeric(value)) { throw new Error(errorMessage); }
      return [model, value + add];
    })
  );
}

function Ractive$add(keypath, d, options) {
  var num = isNumber(d) ? d : 1;
  var opts = isObjectType(d) ? d : options;
  return add(this, keypath, num, opts);
}

function immediate(value) {
  var result = Promise.resolve(value);
  defineProperty(result, 'stop', { value: noop });
  return result;
}

var linear = easing.linear;

function getOptions(options, instance) {
  options = options || {};

  var easing$$1;
  if (options.easing) {
    easing$$1 = isFunction(options.easing) ? options.easing : instance.easing[options.easing];
  }

  return {
    easing: easing$$1 || linear,
    duration: 'duration' in options ? options.duration : 400,
    complete: options.complete || noop,
    step: options.step || noop,
    interpolator: options.interpolator
  };
}

function animate(ractive, model, to, options) {
  options = getOptions(options, ractive);
  var from = model.get();

  // don't bother animating values that stay the same
  if (isEqual(from, to)) {
    options.complete(options.to);
    return immediate(to);
  }

  var interpolator = interpolate(from, to, ractive, options.interpolator);

  // if we can't interpolate the value, set it immediately
  if (!interpolator) {
    runloop.start();
    model.set(to);
    runloop.end();

    return immediate(to);
  }

  return model.animate(from, to, options, interpolator);
}

function Ractive$animate(keypath, to, options) {
  if (isObjectType(keypath)) {
    var keys$$1 = keys(keypath);

    throw new Error(("ractive.animate(...) no longer supports objects. Instead of ractive.animate({\n  " + (keys$$1.map(function (key) { return ("'" + key + "': " + (keypath[key])); }).join('\n  ')) + "\n}, {...}), do\n\n" + (keys$$1.map(function (key) { return ("ractive.animate('" + key + "', " + (keypath[key]) + ", {...});"); }).join('\n')) + "\n"));
  }

  return animate(this, this.viewmodel.joinAll(splitKeypath(keypath)), to, options);
}

function enqueue(ractive, event) {
  if (ractive.event) {
    ractive._eventQueue.push(ractive.event);
  }

  ractive.event = event;
}

function dequeue(ractive) {
  if (ractive._eventQueue.length) {
    ractive.event = ractive._eventQueue.pop();
  } else {
    ractive.event = null;
  }
}

var initStars = {};
var bubbleStars = {};

// cartesian product of name parts and stars
// adjusted appropriately for special cases
function variants(name, initial) {
  var map = initial ? initStars : bubbleStars;
  if (map[name]) { return map[name]; }

  var parts = name.split('.');
  var result = [];
  var base = false;

  // initial events the implicit namespace of 'this'
  if (initial) {
    parts.unshift('this');
    base = true;
  }

  // use max - 1 bits as a bitmap to pick a part or a *
  // need to skip the full star case if the namespace is synthetic
  var max = Math.pow(2, parts.length) - (initial ? 1 : 0);
  for (var i = 0; i < max; i++) {
    var join = [];
    for (var j = 0; j < parts.length; j++) {
      join.push(1 & (i >> j) ? '*' : parts[j]);
    }
    result.unshift(join.join('.'));
  }

  if (base) {
    // include non-this-namespaced versions
    if (parts.length > 2) {
      result.push.apply(result, variants(name, false));
    } else {
      result.push('*');
      result.push(name);
    }
  }

  map[name] = result;
  return result;
}

function fireEvent(ractive, eventName, context, args) {
  if ( args === void 0 ) args = [];

  if (!eventName) {
    return;
  }

  context.name = eventName;
  args.unshift(context);

  var eventNames = ractive._nsSubs ? variants(eventName, true) : ['*', eventName];

  return fireEventAs(ractive, eventNames, context, args, true);
}

function fireEventAs(ractive, eventNames, context, args, initialFire) {
  if ( initialFire === void 0 ) initialFire = false;

  var bubble = true;

  if (initialFire || ractive._nsSubs) {
    enqueue(ractive, context);

    var i = eventNames.length;
    while (i--) {
      if (eventNames[i] in ractive._subs) {
        bubble = notifySubscribers(ractive, ractive._subs[eventNames[i]], context, args) && bubble;
      }
    }

    dequeue(ractive);
  }

  if (ractive.parent && bubble) {
    if (initialFire && ractive.component) {
      var fullName = ractive.component.name + '.' + eventNames[eventNames.length - 1];
      eventNames = variants(fullName, false);

      if (context && !context.component) {
        context.component = ractive;
      }
    }

    bubble = fireEventAs(ractive.parent, eventNames, context, args);
  }

  return bubble;
}

function notifySubscribers(ractive, subscribers, context, args) {
  var originalEvent = null;
  var stopEvent = false;

  // subscribers can be modified inflight, e.g. "once" functionality
  // so we need to copy to make sure everyone gets called
  subscribers = subscribers.slice();

  for (var i = 0, len = subscribers.length; i < len; i += 1) {
    if (!subscribers[i].off && subscribers[i].handler.apply(ractive, args) === false) {
      stopEvent = true;
    }
  }

  if (context && stopEvent && (originalEvent = context.event)) {
    originalEvent.preventDefault && originalEvent.preventDefault();
    originalEvent.stopPropagation && originalEvent.stopPropagation();
  }

  return !stopEvent;
}

var Hook = function Hook(event) {
  this.event = event;
  this.method = 'on' + event;
};

Hook.prototype.fire = function fire (ractive, arg) {
  var context = getRactiveContext(ractive);
  var method = this.method;

  if (ractive[method]) {
    arg ? ractive[method](context, arg) : ractive[method](context);
  }

  fireEvent(ractive, this.event, context, arg ? [arg, ractive] : [ractive]);
};

function getChildQueue(queue, ractive) {
  return queue[ractive._guid] || (queue[ractive._guid] = []);
}

function fire(hookQueue, ractive) {
  var childQueue = getChildQueue(hookQueue.queue, ractive);

  hookQueue.hook.fire(ractive);

  // queue is "live" because components can end up being
  // added while hooks fire on parents that modify data values.
  while (childQueue.length) {
    fire(hookQueue, childQueue.shift());
  }

  delete hookQueue.queue[ractive._guid];
}

var HookQueue = function HookQueue(event) {
  this.hook = new Hook(event);
  this.inProcess = {};
  this.queue = {};
};
var HookQueue__proto__ = HookQueue.prototype;

HookQueue__proto__.begin = function begin (ractive) {
  this.inProcess[ractive._guid] = true;
};

HookQueue__proto__.end = function end (ractive) {
  var parent = ractive.parent;

  // If this is *isn't* a child of a component that's in process,
  // it should call methods or fire at this point
  if (!parent || !this.inProcess[parent._guid]) {
    fire(this, ractive);
  } else {
    // elsewise, handoff to parent to fire when ready
    getChildQueue(this.queue, parent).push(ractive);
  }

  delete this.inProcess[ractive._guid];
};

var hooks = {};
[
  'construct',
  'config',
  'attachchild',
  'detach',
  'detachchild',
  'insert',
  'complete',
  'reset',
  'render',
  'unrendering',
  'unrender',
  'teardown',
  'destruct',
  'update'
].forEach(function (hook) {
  hooks[hook] = new Hook(hook);
});
hooks.init = new HookQueue('init');

function findAnchors(fragment, name) {
  if ( name === void 0 ) name = null;

  var res = [];

  findAnchorsIn(fragment, name, res, fragment.ractive);

  return res;
}

function findAnchorsIn(item, name, result, instance) {
  if (item.isAnchor) {
    if (!name || item.name === name) {
      result.push(item);
    }
  } else if (item.items) {
    item.items.forEach(function (i) { return findAnchorsIn(i, name, result, instance); });
  } else if (item.iterations) {
    item.iterations.forEach(function (i) { return findAnchorsIn(i, name, result, instance); });
  } else if (item.fragment && (!item.component || item.fragment.ractive === instance)) {
    findAnchorsIn(item.fragment, name, result, instance);
  } else if (item.instance && item.instance.fragment) {
    var anchors = [];
    findAnchorsIn(item.instance.fragment, name, anchors, instance);
    anchors.forEach(function (a) { return a.ractive === instance && result.push(a); });
  }
}

function updateAnchors(instance, name) {
  if ( name === void 0 ) name = null;

  var anchors = findAnchors(instance.fragment, name);
  var idxs = {};
  var children = instance._children.byName;

  anchors.forEach(function (a) {
    var name = a.name;
    if (!(name in idxs)) { idxs[name] = 0; }
    var idx = idxs[name];
    var child = (children[name] || [])[idx];

    if (child && child.lastBound !== a) {
      if (child.lastBound) { child.lastBound.removeChild(child); }
      a.addChild(child);
    }

    idxs[name]++;
  });
}

function unrenderChild(meta) {
  if (meta.instance.fragment.rendered) {
    meta.shouldDestroy = true;
    meta.instance.unrender();
  }
  meta.instance.el = null;
}

function attachChild(child, options) {
  if ( options === void 0 ) options = {};

  var children = this._children;
  var idx;

  if (child.parent && child.parent !== this)
    { throw new Error(
      ("Instance " + (child._guid) + " is already attached to a different instance " + (child.parent._guid) + ". Please detach it from the other instance using detachChild first.")
    ); }
  else if (child.parent)
    { throw new Error(("Instance " + (child._guid) + " is already attached to this instance.")); }

  var meta = {
    instance: child,
    ractive: this,
    name: options.name || child.constructor.name || 'Ractive',
    target: options.target || false,
    bubble: bubble,
    findNextNode: findNextNode
  };
  meta.nameOption = options.name;

  // child is managing itself
  if (!meta.target) {
    meta.up = this.fragment;
    meta.external = true;
  } else {
    var list;
    if (!(list = children.byName[meta.target])) {
      list = [];
      this.set(("@this.children.byName." + (meta.target)), list);
    }
    idx = options.prepend ? 0 : options.insertAt !== undefined ? options.insertAt : list.length;
  }

  child.parent = this;
  child.root = this.root;
  child.component = meta;
  children.push(meta);

  var promise = runloop.start();

  var rm = child.viewmodel.getRactiveModel();
  rm.joinKey('parent', { lastLink: false }).link(this.viewmodel.getRactiveModel());
  rm.joinKey('root', { lastLink: false }).link(this.root.viewmodel.getRactiveModel());

  hooks.attachchild.fire(child);

  if (meta.target) {
    unrenderChild(meta);
    this.splice(("@this.children.byName." + (meta.target)), idx, 0, meta);
    updateAnchors(this, meta.target);
  } else {
    if (!child.isolated) { child.viewmodel.attached(this.fragment); }
  }

  runloop.end();

  promise.ractive = child;
  return promise.then(function () { return child; });
}

function bubble() {
  runloop.addFragment(this.instance.fragment);
}

function findNextNode() {
  if (this.anchor) { return this.anchor.findNextNode(); }
}

function compute(path, computed) {
  this.computed[path] = computed;
  if (isString(computed) || isFunction(computed))
    { computed = this.computed[path] = { get: computed }; }

  var keys = splitKeypath(path);
  if (!~path.indexOf('*')) {
    var last = keys.pop();
    return this.viewmodel.joinAll(keys).compute(last, computed);
  } else {
    computed.pattern = new RegExp(
      '^' +
        keys
          .map(function (k) { return k.replace(/\*\*/g, '(.+)').replace(/\*/g, '((?:\\\\.|[^\\.])+)'); })
          .join('\\.') +
        '$'
    );
  }
}

function Ractive$compute(path, computed) {
  var promise = runloop.start();
  var comp = compute.call(this, path, computed);

  if (comp) {
    var keys = splitKeypath(path);
    if (keys.length === 1 && !comp.isReadonly) {
      comp.set(this.viewmodel.value[keys[0]]);
    }

    var first = keys.reduce(function (a, c) { return a && a.childByKey[c]; }, this.viewmodel);
    if (first) {
      first.rebind(comp, first, false);
      if (first.parent) { delete first.parent.childByKey[first.key]; }
      fireShuffleTasks();
    }
  }

  runloop.end();

  return promise;
}

function Ractive$detach() {
  if (this.isDetached) {
    return this.el;
  }

  if (this.el) {
    removeFromArray(this.el.__ractive_instances__, this);
  }

  this.el = this.fragment.detach();
  this.isDetached = true;

  hooks.detach.fire(this);
  return this.el;
}

function detachChild(child) {
  var children = this._children;
  var meta, index;

  var i = children.length;
  while (i--) {
    if (children[i].instance === child) {
      index = i;
      meta = children[i];
      break;
    }
  }

  if (!meta || child.parent !== this)
    { throw new Error(("Instance " + (child._guid) + " is not attached to this instance.")); }

  var promise = runloop.start();

  if (meta.anchor) { meta.anchor.removeChild(meta); }
  if (!child.isolated) { child.viewmodel.detached(); }

  children.splice(index, 1);
  if (meta.target) {
    this.splice(
      ("@this.children.byName." + (meta.target)),
      children.byName[meta.target].indexOf(meta),
      1
    );
    updateAnchors(this, meta.target);
  }
  var rm = child.viewmodel.getRactiveModel();
  rm.joinKey('parent', { lastLink: false }).unlink();
  rm.joinKey('root', { lastLink: false }).link(rm);
  child.root = child;
  child.parent = null;
  child.component = null;

  hooks.detachchild.fire(child);

  runloop.end();

  promise.ractive = child;
  return promise.then(function () { return child; });
}

function Ractive$find(selector, options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  if (!this.rendered)
    { throw new Error(
      ("Cannot call ractive.find('" + selector + "') unless instance is rendered to the DOM")
    ); }

  var node = this.fragment.find(selector, options);
  if (node) { return node; }

  if (options.remote) {
    for (var i = 0; i < this._children.length; i++) {
      if (!this$1._children[i].instance.fragment.rendered) { continue; }
      node = this$1._children[i].instance.find(selector, options);
      if (node) { return node; }
    }
  }
}

function Ractive$findAll(selector, options) {
  if ( options === void 0 ) options = {};

  if (!this.rendered)
    { throw new Error(
      ("Cannot call ractive.findAll('" + selector + "', ...) unless instance is rendered to the DOM")
    ); }

  if (!isArray(options.result)) { options.result = []; }

  this.fragment.findAll(selector, options);

  if (options.remote) {
    // seach non-fragment children
    this._children.forEach(function (c) {
      if (!c.target && c.instance.fragment && c.instance.fragment.rendered) {
        c.instance.findAll(selector, options);
      }
    });
  }

  return options.result;
}

function Ractive$findAllComponents(selector, options) {
  if (!options && isObjectType(selector)) {
    options = selector;
    selector = '';
  }

  options = options || {};

  if (!isArray(options.result)) { options.result = []; }

  this.fragment.findAllComponents(selector, options);

  if (options.remote) {
    // search non-fragment children
    this._children.forEach(function (c) {
      if (!c.target && c.instance.fragment && c.instance.fragment.rendered) {
        if (!selector || c.name === selector) {
          options.result.push(c.instance);
        }

        c.instance.findAllComponents(selector, options);
      }
    });
  }

  return options.result;
}

function Ractive$findComponent(selector, options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  if (isObjectType(selector)) {
    options = selector;
    selector = '';
  }

  var child = this.fragment.findComponent(selector, options);
  if (child) { return child; }

  if (options.remote) {
    if (!selector && this._children.length) { return this._children[0].instance; }
    for (var i = 0; i < this._children.length; i++) {
      // skip children that are or should be in an anchor
      if (this$1._children[i].target) { continue; }
      if (this$1._children[i].name === selector) { return this$1._children[i].instance; }
      child = this$1._children[i].instance.findComponent(selector, options);
      if (child) { return child; }
    }
  }
}

function Ractive$findContainer(selector) {
  if (this.container) {
    if (this.container.component && this.container.component.name === selector) {
      return this.container;
    } else {
      return this.container.findContainer(selector);
    }
  }

  return null;
}

function Ractive$findParent(selector) {
  if (this.parent) {
    if (this.parent.component && this.parent.component.name === selector) {
      return this.parent;
    } else {
      return this.parent.findParent(selector);
    }
  }

  return null;
}

function findElement(start, orComponent, name) {
  if ( orComponent === void 0 ) orComponent = true;

  while (
    start &&
    (start.type !== ELEMENT || (name && start.name !== name)) &&
    (!orComponent || (start.type !== COMPONENT && start.type !== ANCHOR))
  ) {
    // start is a fragment - look at the owner
    if (start.owner) { start = start.owner; }
    else if (start.component || start.yield)
      // start is a component or yielder - look at the container
      { start = start.containerFragment || start.component.up; }
    else if (start.parent)
      // start is an item - look at the parent
      { start = start.parent; }
    else if (start.up)
      // start is an item without a parent - look at the parent fragment
      { start = start.up; }
    else { start = undefined; }
  }

  return start;
}

// This function takes an array, the name of a mutator method, and the
// arguments to call that mutator method with, and returns an array that
// maps the old indices to their new indices.

// So if you had something like this...
//
//     array = [ 'a', 'b', 'c', 'd' ];
//     array.push( 'e' );
//
// ...you'd get `[ 0, 1, 2, 3 ]` - in other words, none of the old indices
// have changed. If you then did this...
//
//     array.unshift( 'z' );
//
// ...the indices would be `[ 1, 2, 3, 4, 5 ]` - every item has been moved
// one higher to make room for the 'z'. If you removed an item, the new index
// would be -1...
//
//     array.splice( 2, 2 );
//
// ...this would result in [ 0, 1, -1, -1, 2, 3 ].
//
// This information is used to enable fast, non-destructive shuffling of list
// sections when you do e.g. `ractive.splice( 'items', 2, 2 );

function getNewIndices(length, methodName, args) {
  var newIndices = [];

  var spliceArguments = getSpliceEquivalent(length, methodName, args);

  if (!spliceArguments) {
    return null; // TODO support reverse and sort?
  }

  var balance = spliceArguments.length - 2 - spliceArguments[1];

  var removeStart = Math.min(length, spliceArguments[0]);
  var removeEnd = removeStart + spliceArguments[1];
  newIndices.startIndex = removeStart;

  var i;
  for (i = 0; i < removeStart; i += 1) {
    newIndices.push(i);
  }

  for (; i < removeEnd; i += 1) {
    newIndices.push(-1);
  }

  for (; i < length; i += 1) {
    newIndices.push(i + balance);
  }

  // there is a net shift for the rest of the array starting with index + balance
  if (balance !== 0) {
    newIndices.touchedFrom = spliceArguments[0];
  } else {
    newIndices.touchedFrom = length;
  }

  return newIndices;
}

// The pop, push, shift an unshift methods can all be represented
// as an equivalent splice
function getSpliceEquivalent(length, methodName, args) {
  switch (methodName) {
    case 'splice':
      if (args[0] !== undefined && args[0] < 0) {
        args[0] = length + Math.max(args[0], -length);
      }

      if (isUndefined(args[0])) { args[0] = 0; }

      while (args.length < 2) {
        args.push(length - args[0]);
      }

      if (!isNumber(args[1])) {
        args[1] = length - args[0];
      }

      // ensure we only remove elements that exist
      args[1] = Math.min(args[1], length - args[0]);

      return args;

    case 'sort':
    case 'reverse':
      return null;

    case 'pop':
      if (length) {
        return [length - 1, 1];
      }
      return [0, 0];

    case 'push':
      return [length, 0].concat(args);

    case 'shift':
      return [0, length ? 1 : 0];

    case 'unshift':
      return [0, 0].concat(args);
  }
}

var arrayProto = Array.prototype;

function makeArrayMethod(methodName) {
  function path(keypath) {
    var args = [], len = arguments.length - 1;
    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];

    return model(this.viewmodel.joinAll(splitKeypath(keypath)), args);
  }

  function model(mdl, args) {
    var array = mdl.get();

    if (!isArray(array)) {
      if (isUndefined(array)) {
        array = [];
        var result$1 = arrayProto[methodName].apply(array, args);
        var promise$1 = runloop.start().then(function () { return result$1; });
        mdl.set(array);
        runloop.end();
        return promise$1;
      } else {
        throw new Error(
          ("shuffle array method " + methodName + " called on non-array at " + (mdl.getKeypath()))
        );
      }
    }

    var newIndices = getNewIndices(array.length, methodName, args);
    var result = arrayProto[methodName].apply(array, args);

    var promise = runloop.start().then(function () { return result; });
    promise.result = result;

    if (newIndices) {
      if (mdl.shuffle) {
        mdl.shuffle(newIndices);
      } else {
        // it's a computation, which don't have a shuffle, so just invalidate
        mdl.mark();
      }
    } else {
      mdl.set(result);
    }

    runloop.end();

    return promise;
  }

  return { path: path, model: model };
}

function update$1(ractive, model, options) {
  // if the parent is wrapped, the adaptor will need to be updated before
  // updating on this keypath
  if (model.parent && model.parent.wrapper) {
    model.parent.adapt();
  }

  var promise = runloop.start();

  model.mark(options && options.force);

  // notify upstream of changes
  model.notifyUpstream();

  runloop.end();

  hooks.update.fire(ractive, model);

  return promise;
}

function Ractive$update(keypath, options) {
  var opts, path;

  if (isString(keypath)) {
    path = splitKeypath(keypath);
    opts = options;
  } else {
    opts = keypath;
  }

  return update$1(this, path ? this.viewmodel.joinAll(path) : this.viewmodel, opts);
}

var modelPush = makeArrayMethod('push').model;
var modelPop = makeArrayMethod('pop').model;
var modelShift = makeArrayMethod('shift').model;
var modelUnshift = makeArrayMethod('unshift').model;
var modelSort = makeArrayMethod('sort').model;
var modelSplice = makeArrayMethod('splice').model;
var modelReverse = makeArrayMethod('reverse').model;

var localFragment = {};

var ContextData = (function (Model) {
  function ContextData(options) {
    Model.call(this, null, null);

    this.isRoot = true;
    this.root = this;
    this.value = {};
    this.ractive = options.ractive;
    this.adaptors = [];
    this.context = options.context;
  }

  if ( Model ) ContextData.__proto__ = Model;
  var ContextData__proto__ = ContextData.prototype = Object.create( Model && Model.prototype );
  ContextData__proto__.constructor = ContextData;

  ContextData__proto__.getKeypath = function getKeypath () {
    return '@context.data';
  };

  ContextData__proto__.rebound = function rebound () {};

  return ContextData;
}(Model));

var Context = function Context(fragment, element) {
  this.fragment = fragment;
  this.element = element || findElement(fragment);
  this.node = this.element && this.element.node;
  this.ractive = fragment.ractive;
  this.root = this;
};
var Context__proto__ = Context.prototype;

var prototypeAccessors = { decorators: {},_data: {} };

prototypeAccessors.decorators.get = function () {
  var items = {};
  if (!this.element) { return items; }
  this.element.decorators.forEach(function (d) { return (items[d.name] = d.handle); });
  return items;
};

prototypeAccessors._data.get = function () {
  return (
    this.model ||
    (this.root.model = new ContextData({
      ractive: this.ractive,
      context: this.root
    }))
  );
};

// the usual mutation suspects
Context__proto__.add = function add (keypath, d, options) {
  var num = isNumber(d) ? +d : 1;
  var opts = isObjectType(d) ? d : options;
  return set(
    build$1(this, keypath, num).map(function (pair) {
      var model = pair[0];
        var val = pair[1];
      var value = model.get();
      if (!isNumeric(val) || !isNumeric(value)) { throw new Error('Cannot add non-numeric value'); }
      return [model, value + val];
    }),
    opts
  );
};

Context__proto__.animate = function animate$1 (keypath, value, options) {
  var model = findModel(this, keypath).model;
  return animate(this.ractive, model, value, options);
};

Context__proto__.find = function find (selector, opts) {
  return this.fragment.find(selector, opts);
};

Context__proto__.findAll = function findAll (selector, opts) {
  var result = [];
  opts = opts || {};
  opts.result = result;
  this.fragment.findAll(selector, opts);
  return result;
};

Context__proto__.findAllComponents = function findAllComponents (selector, opts) {
  var result = [];
  opts = opts || {};
  opts.result = result;
  this.fragment.findAllComponents(selector, opts);
  return result;
};

Context__proto__.findComponent = function findComponent (selector, opts) {
  return this.fragment.findComponent(selector, opts);
};

// get relative keypaths and values
Context__proto__.get = function get (keypath) {
  if (!keypath) { return this.fragment.findContext().get(true); }

  var ref = findModel(this, keypath);
    var model = ref.model;

  return model ? model.get(true) : undefined;
};

Context__proto__.getParent = function getParent (component) {
  var fragment = this.fragment;

  if (!fragment.parent && component) { fragment = fragment.componentParent; }
  else {
    if (fragment.context) { fragment = findParentWithContext(fragment.parent); }
    else {
      fragment = findParentWithContext(fragment.parent);
      if (fragment) {
        if (!fragment.parent && component) { fragment = fragment.componentParent; }
        else { fragment = findParentWithContext(fragment.parent); }
      }
    }
  }

  if (!fragment || fragment === this.fragment) { return; }
  else { return fragment.getContext(); }
};

Context__proto__.hasListener = function hasListener (name, bubble) {
  // if the owner is a component, start there because the nearest element
  // may exist outside of the immediate context (yield)
  var el = this.fragment.owner.component
    ? this.fragment.owner
    : this.element || this.fragment.owner;
  var base;

  do {
    base = el.component || el;
    if (base.template.t === ELEMENT) {
      if (findEvent(base, name)) { return true; }
    }
    el = el.up && el.up.owner;
    if (el && el.component) { el = el.component; }
  } while (el && bubble);
};

Context__proto__.link = function link (source, dest) {
  var there = findModel(this, source).model;
  var here = findModel(this, dest).model;
  var promise = runloop.start();
  here.link(there, source);
  runloop.end();
  return promise;
};

Context__proto__.listen = function listen (event, handler) {
  var el = this.element;
  el.on(event, handler);
  return {
    cancel: function cancel() {
      el.off(event, handler);
    }
  };
};

Context__proto__.observe = function observe (keypath, callback, options) {
    if ( options === void 0 ) options = {};

  if (isObject(keypath)) { options = callback || {}; }
  options.fragment = this.fragment;
  return this.ractive.observe(keypath, callback, options);
};

Context__proto__.observeOnce = function observeOnce (keypath, callback, options) {
    if ( options === void 0 ) options = {};

  if (isObject(keypath)) { options = callback || {}; }
  options.fragment = this.fragment;
  return this.ractive.observeOnce(keypath, callback, options);
};

Context__proto__.pop = function pop (keypath) {
  return modelPop(findModel(this, keypath).model, []);
};

Context__proto__.push = function push (keypath) {
    var values = [], len = arguments.length - 1;
    while ( len-- > 0 ) values[ len ] = arguments[ len + 1 ];

  return modelPush(findModel(this, keypath).model, values);
};

Context__proto__.raise = function raise (name, event) {
    var args = [], len = arguments.length - 2;
    while ( len-- > 0 ) args[ len ] = arguments[ len + 2 ];

  var el = this.element;
  var ev;

  while (el) {
    if (el.component) { el = el.component; }
    ev = findEvent(el, name);
    if (ev) {
      return ev.fire(
        ev.element.getContext(
          event || {},
          event && !('original' in event) ? { original: {} } : {}
        ),
        args
      );
    }

    el = el.up && el.up.owner;
  }
};

Context__proto__.readLink = function readLink (keypath, options) {
  return this.ractive.readLink(this.resolve(keypath), options);
};

Context__proto__.resolve = function resolve (path, ractive) {
  var ref = findModel(this, path);
    var model = ref.model;
    var instance = ref.instance;
  return model ? model.getKeypath(ractive || instance) : path;
};

Context__proto__.reverse = function reverse (keypath) {
  return modelReverse(findModel(this, keypath).model, []);
};

Context__proto__.set = function set$2 (keypath, value, options) {
  return set(build$1(this, keypath, value), options);
};

Context__proto__.shift = function shift (keypath) {
  return modelShift(findModel(this, keypath).model, []);
};

Context__proto__.splice = function splice (keypath, index, drop) {
    var add = [], len = arguments.length - 3;
    while ( len-- > 0 ) add[ len ] = arguments[ len + 3 ];

  add.unshift(index, drop);
  return modelSplice(findModel(this, keypath).model, add);
};

Context__proto__.sort = function sort (keypath) {
  return modelSort(findModel(this, keypath).model, []);
};

Context__proto__.subtract = function subtract (keypath, d, options) {
  var num = isNumber(d) ? d : 1;
  var opts = isObjectType(d) ? d : options;
  return set(
    build$1(this, keypath, num).map(function (pair) {
      var model = pair[0];
        var val = pair[1];
      var value = model.get();
      if (!isNumeric(val) || !isNumeric(value)) { throw new Error('Cannot add non-numeric value'); }
      return [model, value - val];
    }),
    opts
  );
};

Context__proto__.toggle = function toggle (keypath, options) {
  var ref = findModel(this, keypath);
    var model = ref.model;
  return set([[model, !model.get()]], options);
};

Context__proto__.unlink = function unlink (dest) {
  var here = findModel(this, dest).model;
  var promise = runloop.start();
  if (here.owner && here.owner._link) { here.owner.unlink(); }
  runloop.end();
  return promise;
};

Context__proto__.unlisten = function unlisten (event, handler) {
  this.element.off(event, handler);
};

Context__proto__.unshift = function unshift (keypath) {
    var add = [], len = arguments.length - 1;
    while ( len-- > 0 ) add[ len ] = arguments[ len + 1 ];

  return modelUnshift(findModel(this, keypath).model, add);
};

Context__proto__.update = function update (keypath, options) {
  return update$1(this.ractive, findModel(this, keypath).model, options);
};

Context__proto__.updateModel = function updateModel (keypath, cascade) {
  var ref = findModel(this, keypath);
    var model = ref.model;
  var promise = runloop.start();
  model.updateFromBindings(cascade);
  runloop.end();
  return promise;
};

// two-way binding related helpers
Context__proto__.isBound = function isBound () {
  var ref = this.getBindingModel(this);
    var model = ref.model;
  return !!model;
};

Context__proto__.getBindingPath = function getBindingPath (ractive) {
  var ref = this.getBindingModel(this);
    var model = ref.model;
    var instance = ref.instance;
  if (model) { return model.getKeypath(ractive || instance); }
};

Context__proto__.getBinding = function getBinding () {
  var ref = this.getBindingModel(this);
    var model = ref.model;
  if (model) { return model.get(true); }
};

Context__proto__.getBindingModel = function getBindingModel (ctx) {
  var el = ctx.element;
  return { model: el.binding && el.binding.model, instance: el.up.ractive };
};

Context__proto__.setBinding = function setBinding (value) {
  var ref = this.getBindingModel(this);
    var model = ref.model;
  return set([[model, value]]);
};

Object.defineProperties( Context__proto__, prototypeAccessors );

Context.forRactive = getRactiveContext;
// circular deps are fun
extern.Context = Context;

// TODO: at some point perhaps this could support relative * keypaths?
function build$1(ctx, keypath, value) {
  var sets = [];

  // set multiple keypaths in one go
  if (isObject(keypath)) {
    for (var k in keypath) {
      if (hasOwn(keypath, k)) {
        sets.push([findModel(ctx, k).model, keypath[k]]);
      }
    }
  } else {
    // set a single keypath
    sets.push([findModel(ctx, keypath).model, value]);
  }

  return sets;
}

function findModel(ctx, path) {
  var frag = ctx.fragment;

  if (!isString(path)) {
    return { model: frag.findContext(), instance: path };
  }

  return { model: resolveReference(frag, path), instance: frag.ractive };
}

function findEvent(el, name) {
  return el.events && el.events.find && el.events.find(function (e) { return ~e.template.n.indexOf(name); });
}

function Ractive$fire(eventName) {
  var args = [], len = arguments.length - 1;
  while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];

  var ctx;

  // watch for reproxy
  if (args[0] instanceof Context) {
    var proto = args.shift();
    ctx = create(proto);
    assign(ctx, proto);
  } else if (isObjectType(args[0]) && (args[0] === null || args[0].constructor === Object)) {
    ctx = Context.forRactive(this, args.shift());
  } else {
    ctx = Context.forRactive(this);
  }

  return fireEvent(this, eventName, ctx, args);
}

function Ractive$get(keypath, opts) {
  if (!isString(keypath)) { return this.viewmodel.get(true, keypath); }

  var keys = splitKeypath(keypath);
  var key = keys[0];

  var model;

  if (!this.viewmodel.has(key)) {
    // if this is an inline component, we may need to create
    // an implicit mapping
    if (this.component && !this.isolated) {
      model = resolveReference(this.fragment || new FakeFragment(this), key);
    }
  }

  model = this.viewmodel.joinAll(keys);
  return model.get(true, opts);
}

function getLocalContext() {
  if (localFragment.f) { return localFragment.f.getContext(); }
}

var query = doc && doc.querySelector;

function getContext$1(node) {
  if (isString(node) && query) {
    node = query.call(document, node);
  }

  var instances;
  if (node) {
    if (node._ractive) {
      return node._ractive.proxy.getContext();
    } else if ((instances = node.__ractive_instances__)) {
      if (instances.length === 1) { return getRactiveContext(instances[0]); }
    } else { return getContext$1(node.parentNode); }
  }
}

function getContext$2(node, options) {
  if (!node) { return getRactiveContext(this); }

  if (isString(node)) {
    node = this.find(node, options);
  }

  return getContext$1(node);
}

var html = 'http://www.w3.org/1999/xhtml';
var mathml = 'http://www.w3.org/1998/Math/MathML';
var svg$1 = 'http://www.w3.org/2000/svg';
var xlink = 'http://www.w3.org/1999/xlink';
var xml = 'http://www.w3.org/XML/1998/namespace';
var xmlns = 'http://www.w3.org/2000/xmlns';

var namespaces = { html: html, mathml: mathml, svg: svg$1, xlink: xlink, xml: xml, xmlns: xmlns };

var createElement;
var matches;
var div;
var methodNames;
var unprefixed;
var prefixed;
var i;
var j;
var makeFunction;

var customStr = isClient && 'registerElement' in doc;
function wrap(is) {
  return customStr ? is : { is: is };
}

// Test for SVG support
if (!svg) {
  /* istanbul ignore next */
  createElement = function (type, ns, is) {
    if (ns && ns !== html) {
      throw "This browser does not support namespaces other than http://www.w3.org/1999/xhtml. The most likely cause of this error is that you're trying to render SVG in an older browser. See http://ractive.js.org/support/#svgs for more information";
    }

    return is ? doc.createElement(type, wrap(is)) : doc.createElement(type);
  };
} else {
  createElement = function (type, ns, is) {
    if (!ns || ns === html) {
      return is ? doc.createElement(type, wrap(is)) : doc.createElement(type);
    }

    return is ? doc.createElementNS(ns, type, wrap(is)) : doc.createElementNS(ns, type);
  };
}

function createDocumentFragment() {
  return doc.createDocumentFragment();
}

function getElement(input) {
  var output;

  if (!input || typeof input === 'boolean') {
    return;
  }

  /* istanbul ignore next */
  if (!win || !doc || !input) {
    return null;
  }

  // We already have a DOM node - no work to do. (Duck typing alert!)
  if (input.nodeType) {
    return input;
  }

  // Get node from string
  if (isString(input)) {
    // try ID first
    output = doc.getElementById(input);

    // then as selector, if possible
    if (!output && doc.querySelector) {
      try {
        output = doc.querySelector(input);
      } catch (e) {
        /* this space intentionally left blank */
      }
    }

    // did it work?
    if (output && output.nodeType) {
      return output;
    }
  }

  // If we've been given a collection (jQuery, Zepto etc), extract the first item
  if (input[0] && input[0].nodeType) {
    return input[0];
  }

  return null;
}

if (!isClient) {
  matches = null;
} else {
  div = createElement('div');
  methodNames = ['matches', 'matchesSelector'];

  makeFunction = function(methodName) {
    return function(node, selector) {
      return node[methodName](selector);
    };
  };

  i = methodNames.length;

  while (i-- && !matches) {
    unprefixed = methodNames[i];

    if (div[unprefixed]) {
      matches = makeFunction(unprefixed);
    } else {
      j = vendors.length;
      while (j--) {
        prefixed = vendors[i] + unprefixed.substr(0, 1).toUpperCase() + unprefixed.substring(1);

        if (div[prefixed]) {
          matches = makeFunction(prefixed);
          break;
        }
      }
    }
  }

  // IE8... and apparently phantom some?
  /* istanbul ignore next */
  if (!matches) {
    matches = function(node, selector) {
      var parentNode, i;

      parentNode = node.parentNode;

      if (!parentNode) {
        // empty dummy <div>
        div.innerHTML = '';

        parentNode = div;
        node = node.cloneNode();

        div.appendChild(node);
      }

      var nodes = parentNode.querySelectorAll(selector);

      i = nodes.length;
      while (i--) {
        if (nodes[i] === node) {
          return true;
        }
      }

      return false;
    };
  }
}

function detachNode(node) {
  // stupid ie
  // eslint-disable-next-line valid-typeof
  if (node && typeof node.parentNode !== 'unknown' && node.parentNode) {
    node.parentNode.removeChild(node);
  }

  return node;
}

function safeToStringValue(value) {
  return value == null || (isNumber(value) && isNaN(value)) || !value.toString ? '' : '' + value;
}

function safeAttributeString(string) {
  return safeToStringValue(string)
    .replace(/&/g, '&amp;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#39;');
}

function Ractive$insert(target, anchor) {
  if (!this.fragment.rendered) {
    // TODO create, and link to, documentation explaining this
    throw new Error(
      'The API has changed - you must call `ractive.render(target[, anchor])` to render your Ractive instance. Once rendered you can use `ractive.insert()`.'
    );
  }

  target = getElement(target);
  anchor = getElement(anchor) || null;

  if (!target) {
    throw new Error('You must specify a valid target to insert into');
  }

  target.insertBefore(this.detach(), anchor);
  this.el = target;

  (target.__ractive_instances__ || (target.__ractive_instances__ = [])).push(this);
  this.isDetached = false;

  fireInsertHook(this);
}

function fireInsertHook(ractive) {
  hooks.insert.fire(ractive);

  ractive.findAllComponents('*').forEach(function (child) {
    fireInsertHook(child.instance);
  });
}

function link(there, here, options) {
  var model;
  var target = (options && (options.ractive || options.instance)) || this;

  // may need to allow a mapping to resolve implicitly
  var sourcePath = splitKeypath(there);
  if (!target.viewmodel.has(sourcePath[0]) && target.component) {
    model = resolveReference(target.component.up, sourcePath[0]);
    model = model.joinAll(sourcePath.slice(1));
  }

  var src = model || target.viewmodel.joinAll(sourcePath);
  var dest = this.viewmodel.joinAll(splitKeypath(here), { lastLink: false });

  if (isUpstream(src, dest) || isUpstream(dest, src)) {
    throw new Error('A keypath cannot be linked to itself.');
  }

  var promise = runloop.start();

  dest.link(src, (options && options.keypath) || there);

  runloop.end();

  return promise;
}

function isUpstream(check, start) {
  var model = start;
  while (model) {
    if (model === check || model.owner === check) { return true; }
    model = model.target || model.parent;
  }
}

var Observer = function Observer(ractive, model, callback, options) {
  this.context = options.context || ractive;
  this.callback = callback;
  this.ractive = ractive;
  this.keypath = options.keypath;
  this.options = options;

  if (model) { this.resolved(model); }

  if (isFunction(options.old)) {
    this.oldContext = create(ractive);
    this.oldFn = options.old;
  }

  if (options.init !== false) {
    this.dirty = true;
    this.dispatch();
  } else {
    updateOld(this);
  }

  this.dirty = false;
};
var Observer__proto__ = Observer.prototype;

Observer__proto__.cancel = function cancel () {
  this.cancelled = true;
  if (this.model) {
    this.model.unregister(this);
  } else {
    this.resolver.unbind();
  }
  removeFromArray(this.ractive._observers, this);
};

Observer__proto__.dispatch = function dispatch () {
  if (!this.cancelled) {
    try {
      this.callback.call(this.context, this.newValue, this.oldValue, this.keypath);
    } catch (err) {
      warnIfDebug(
        ("Failed to execute observer callback for '" + (this.keypath) + "': " + (err.message || err))
      );
    }
    updateOld(this, true);
    this.dirty = false;
  }
};

Observer__proto__.handleChange = function handleChange () {
    var this$1 = this;

  if (!this.dirty) {
    var newValue = this.model.get();
    if (isEqual(newValue, this.oldValue)) { return; }

    this.newValue = newValue;

    if (this.options.strict && this.newValue === this.oldValue) { return; }

    runloop.addObserver(this, this.options.defer);
    this.dirty = true;

    if (this.options.once) { runloop.scheduleTask(function () { return this$1.cancel(); }); }
  } else {
    // make sure the newValue stays updated in case this observer gets touched multiple times in one loop
    this.newValue = this.model.get();
  }
};

Observer__proto__.rebind = function rebind (next, previous) {
    var this$1 = this;

  next = rebindMatch(this.keypath, next, previous);
  if (next === this.model) { return false; }

  if (this.model) { this.model.unregister(this); }
  if (next) { next.addShuffleTask(function () { return this$1.resolved(next); }); }
};

Observer__proto__.resolved = function resolved (model) {
  this.model = model;

  this.oldValue = undefined;
  this.newValue = model.get();

  model.register(this);
};

function updateOld(observer, fresh) {
  var next = fresh
    ? observer.model
      ? observer.model.get()
      : observer.newValue
    : observer.newValue;
  try {
    observer.oldValue = observer.oldFn
      ? observer.oldFn.call(observer.oldContext, undefined, next, observer.keypath)
      : next;
  } catch (err) {
    warnIfDebug(
      ("Failed to execute observer oldValue callback for '" + (this.keypath) + "': " + (err.message || err))
    );
    observer.oldValue = next;
  }
}

function joinKeys() {
  var keys = [], len = arguments.length;
  while ( len-- ) keys[ len ] = arguments[ len ];

  return keys.map(escapeKey).join('.');
}

function splitKeypath$1(keypath) {
  return splitKeypath(keypath).map(unescapeKey);
}

var star$1 = /\*+/g;

var PatternObserver = function PatternObserver(ractive, baseModel, keys$$1, callback, options) {
  var this$1 = this;

  this.context = options.context || ractive;
  this.ractive = ractive;
  this.baseModel = baseModel;
  this.keys = keys$$1;
  this.callback = callback;

  var pattern = keys$$1.join('\\.').replace(star$1, '(.+)');
  var baseKeypath = (this.baseKeypath = baseModel.getKeypath(ractive));
  this.pattern = new RegExp(("^" + (baseKeypath ? baseKeypath + '\\.' : '') + pattern + "$"));
  this.recursive = keys$$1.length === 1 && keys$$1[0] === '**';
  if (this.recursive) { this.keys = ['*']; }
  if (options.old) {
    this.oldContext = create(ractive);
    this.oldFn = options.old;
  }

  this.oldValues = {};
  this.newValues = {};

  this.defer = options.defer;
  this.once = options.once;
  this.strict = options.strict;

  this.dirty = false;
  this.changed = [];
  this.cache = [];
  this.partial = false;
  this.links = options.links;

  var models = baseModel.findMatches(this.keys);

  models.forEach(function (model) {
    this$1.newValues[model.getKeypath(this$1.ractive)] = model.get();
  });

  if (options.init !== false) {
    this.dispatch();
  } else {
    updateOld$1(this, this.newValues);
  }

  baseModel.registerPatternObserver(this);
};
var PatternObserver__proto__ = PatternObserver.prototype;

PatternObserver__proto__.cancel = function cancel () {
  this.baseModel.unregisterPatternObserver(this);
  removeFromArray(this.ractive._observers, this);
};

PatternObserver__proto__.dispatch = function dispatch () {
    var this$1 = this;

  var newValues = this.newValues;
  this.newValues = {};
  keys(newValues).forEach(function (keypath) {
    var newValue = newValues[keypath];
    var oldValue = this$1.oldValues[keypath];

    if (this$1.strict && newValue === oldValue) { return; }
    if (isEqual(newValue, oldValue)) { return; }

    var args = [newValue, oldValue, keypath];
    if (keypath) {
      var wildcards = this$1.pattern.exec(keypath);
      if (wildcards) {
        args = args.concat(wildcards.slice(1));
      }
    }

    try {
      this$1.callback.apply(this$1.context, args);
    } catch (err) {
      warnIfDebug(
        ("Failed to execute pattern observer callback for '" + (this$1.keypath) + "': " + (err.message || err))
      );
    }
  });

  updateOld$1(this, newValues, this.partial);

  this.dirty = false;
};

PatternObserver__proto__.notify = function notify (keys$$1) {
  var path = joinKeys(keys$$1);
  if (!~this.cache.indexOf(path)) {
    this.cache.push(path);
    this.changed.push(keys$$1);
  }
};

PatternObserver__proto__.shuffle = function shuffle (newIndices) {
    var this$1 = this;

  if (!isArray(this.baseModel.value)) { return; }

  var max = this.baseModel.value.length;

  for (var i = 0; i < newIndices.length; i++) {
    if (newIndices[i] === -1 || newIndices[i] === i) { continue; }
    this$1.changed.push([i]);
  }

  for (var i$1 = newIndices.touchedFrom; i$1 < max; i$1++) {
    this$1.changed.push([i$1]);
  }
};

PatternObserver__proto__.handleChange = function handleChange () {
    var this$1 = this;

  if (!this.dirty || this.changed.length) {
    if (!this.dirty) { this.newValues = {}; }

    if (!this.changed.length) {
      this.baseModel.findMatches(this.keys).forEach(function (model) {
        var keypath = model.getKeypath(this$1.ractive);
        this$1.newValues[keypath] = model.get();
      });
      this.partial = false;
    } else {
      var count = 0;

      if (this.recursive) {
        var changed = this.changed.slice();
        this.changed.length = 0;
        this.dirty = true;
        changed.forEach(function (keys$$1) {
          var model = this$1.baseModel.joinAll(keys$$1);
          if (model.isLink && !this$1.links) { return; }
          count++;
          this$1.newValues[model.getKeypath(this$1.ractive)] = model.get();
        });
        this.dirty = false;
      } else {
        var ok = this.baseModel.isRoot
          ? this.changed.map(function (keys$$1) { return keys$$1.map(escapeKey).join('.'); })
          : this.changed.map(function (keys$$1) { return this$1.baseKeypath + '.' + keys$$1.map(escapeKey).join('.'); });

        this.baseModel.findMatches(this.keys).forEach(function (model) {
          var keypath = model.getKeypath(this$1.ractive);
          var check = function (k) {
            return (
              (k.indexOf(keypath) === 0 &&
                (k.length === keypath.length || k[keypath.length] === '.')) ||
              (keypath.indexOf(k) === 0 &&
                (k.length === keypath.length || keypath[k.length] === '.'))
            );
          };

          // is this model on a changed keypath?
          if (ok.filter(check).length) {
            count++;
            this$1.newValues[keypath] = model.get();
          }
        });
      }

      // no valid change triggered, so bail to avoid breakage
      if (!count) { return; }

      this.partial = true;
    }

    runloop.addObserver(this, this.defer);
    this.dirty = true;
    this.changed.length = 0;
    this.cache = [];

    if (this.once) { this.cancel(); }
  }
};

function updateOld$1(observer, vals, partial) {
  var olds = observer.oldValues;

  if (observer.oldFn) {
    if (!partial) { observer.oldValues = {}; }

    keys(vals).forEach(function (k) {
      var args = [olds[k], vals[k], k];
      var parts = observer.pattern.exec(k);
      if (parts) {
        args.push.apply(args, parts.slice(1));
      }
      observer.oldValues[k] = observer.oldFn.apply(observer.oldContext, args);
    });
  } else {
    if (partial) {
      keys(vals).forEach(function (k) { return (olds[k] = vals[k]); });
    } else {
      observer.oldValues = vals;
    }
  }
}

function negativeOne() {
  return -1;
}

var ArrayObserver = function ArrayObserver(ractive, model, callback, options) {
  this.ractive = ractive;
  this.model = model;
  this.keypath = model.getKeypath();
  this.callback = callback;
  this.options = options;

  this.pending = null;

  model.register(this);

  if (options.init !== false) {
    this.sliced = [];
    this.shuffle([]);
    this.dispatch();
  } else {
    this.sliced = this.slice();
  }
};
var ArrayObserver__proto__ = ArrayObserver.prototype;

ArrayObserver__proto__.cancel = function cancel () {
  this.model.unregister(this);
  removeFromArray(this.ractive._observers, this);
};

ArrayObserver__proto__.dispatch = function dispatch () {
  try {
    this.callback(this.pending);
  } catch (err) {
    warnIfDebug(
      ("Failed to execute array observer callback for '" + (this.keypath) + "': " + (err.message || err))
    );
  }
  this.pending = null;
  if (this.options.once) { this.cancel(); }
};

ArrayObserver__proto__.handleChange = function handleChange (path) {
  if (this.pending) {
    // post-shuffle
    runloop.addObserver(this, this.options.defer);
  } else if (!path) {
    // entire array changed
    this.shuffle(this.sliced.map(negativeOne));
    this.handleChange();
  }
};

ArrayObserver__proto__.shuffle = function shuffle (newIndices) {
    var this$1 = this;

  var newValue = this.slice();

  var inserted = [];
  var deleted = [];
  var start;

  var hadIndex = {};

  newIndices.forEach(function (newIndex, oldIndex) {
    hadIndex[newIndex] = true;

    if (newIndex !== oldIndex && isUndefined(start)) {
      start = oldIndex;
    }

    if (newIndex === -1) {
      deleted.push(this$1.sliced[oldIndex]);
    }
  });

  if (isUndefined(start)) { start = newIndices.length; }

  var len = newValue.length;
  for (var i = 0; i < len; i += 1) {
    if (!hadIndex[i]) { inserted.push(newValue[i]); }
  }

  this.pending = { inserted: inserted, deleted: deleted, start: start };
  this.sliced = newValue;
};

ArrayObserver__proto__.slice = function slice () {
  var value = this.model.get();
  return isArray(value) ? value.slice() : [];
};

function observe(keypath, callback, options) {
  var this$1 = this;

  var observers = [];
  var map;
  var opts;

  if (isObject(keypath)) {
    map = keypath;
    opts = callback || {};
  } else {
    if (isFunction(keypath)) {
      map = { '': keypath };
      opts = callback || {};
    } else {
      map = {};
      map[keypath] = callback;
      opts = options || {};
    }
  }

  var silent = false;
  keys(map).forEach(function (keypath) {
    var callback = map[keypath];
    var caller = function() {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      if (silent) { return; }
      return callback.apply(this, args);
    };

    var keypaths = keypath.split(' ');
    if (keypaths.length > 1) { keypaths = keypaths.filter(function (k) { return k; }); }

    keypaths.forEach(function (keypath) {
      opts.keypath = keypath;
      var observer = createObserver(this$1, keypath, caller, opts);
      if (observer) { observers.push(observer); }
    });
  });

  // add observers to the Ractive instance, so they can be
  // cancelled on ractive.teardown()
  this._observers.push.apply(this._observers, observers);

  return {
    cancel: function () { return observers.forEach(function (o) { return o.cancel(); }); },
    isSilenced: function () { return silent; },
    silence: function () { return (silent = true); },
    resume: function () { return (silent = false); }
  };
}

function createObserver(ractive, keypath, callback, options) {
  var keys$$1 = splitKeypath(keypath);
  var wildcardIndex = keys$$1.indexOf('*');
  if (!~wildcardIndex) { wildcardIndex = keys$$1.indexOf('**'); }

  options.fragment = options.fragment || ractive.fragment;

  var model;
  if (!options.fragment) {
    model = ractive.viewmodel.joinKey(keys$$1[0]);
  } else {
    // .*.whatever relative wildcard is a special case because splitkeypath doesn't handle the leading .
    if (~keys$$1[0].indexOf('.*')) {
      model = options.fragment.findContext();
      wildcardIndex = 0;
      keys$$1[0] = keys$$1[0].slice(1);
    } else {
      model =
        wildcardIndex === 0
          ? options.fragment.findContext()
          : resolveReference(options.fragment, keys$$1[0]);
    }
  }

  // the model may not exist key
  if (!model) { model = ractive.viewmodel.joinKey(keys$$1[0]); }

  if (!~wildcardIndex) {
    model = model.joinAll(keys$$1.slice(1));
    if (options.array) {
      return new ArrayObserver(ractive, model, callback, options);
    } else {
      return new Observer(ractive, model, callback, options);
    }
  } else {
    var double = keys$$1.indexOf('**');
    if (~double) {
      if (double + 1 !== keys$$1.length || ~keys$$1.indexOf('*')) {
        warnOnceIfDebug(
          "Recursive observers may only specify a single '**' at the end of the path."
        );
        return;
      }
    }

    model = model.joinAll(keys$$1.slice(1, wildcardIndex));

    return new PatternObserver(ractive, model, keys$$1.slice(wildcardIndex), callback, options);
  }
}

var onceOptions = { init: false, once: true };

function observeOnce(keypath, callback, options) {
  if (isObject(keypath) || isFunction(keypath)) {
    options = assign(callback || {}, onceOptions);
    return this.observe(keypath, options);
  }

  options = assign(options || {}, onceOptions);
  return this.observe(keypath, callback, options);
}

var trim = function (str) { return str.trim(); };

var notEmptyString = function (str) { return str !== ''; };

function Ractive$off(eventName, callback) {
  var this$1 = this;

  // if no event is specified, remove _all_ event listeners
  if (!eventName) {
    this._subs = {};
  } else {
    // Handle multiple space-separated event names
    var eventNames = eventName
      .split(' ')
      .map(trim)
      .filter(notEmptyString);

    eventNames.forEach(function (event) {
      var subs = this$1._subs[event];
      // if given a specific callback to remove, remove only it
      if (subs && callback) {
        var entry = subs.find(function (s) { return s.callback === callback; });
        if (entry) {
          removeFromArray(subs, entry);
          entry.off = true;

          if (event.indexOf('.')) { this$1._nsSubs--; }
        }
      } else if (subs) {
        // otherwise, remove all listeners for this event
        if (event.indexOf('.')) { this$1._nsSubs -= subs.length; }
        subs.length = 0;
      }
    });
  }

  return this;
}

function Ractive$on(eventName, callback) {
  var this$1 = this;

  // eventName may already be a map
  var map = isObjectType(eventName) ? eventName : {};
  // or it may be a string along with a callback
  if (isString(eventName)) { map[eventName] = callback; }

  var silent = false;
  var events = [];

  var loop = function ( k ) {
    var callback$1 = map[k];
    var caller = function() {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      if (!silent) { return callback$1.apply(this, args); }
    };
    var entry = {
      callback: callback$1,
      handler: caller
    };

    if (hasOwn(map, k)) {
      var names = k
        .split(' ')
        .map(trim)
        .filter(notEmptyString);
      names.forEach(function (n) {
        (this$1._subs[n] || (this$1._subs[n] = [])).push(entry);
        if (n.indexOf('.')) { this$1._nsSubs++; }
        events.push([n, entry]);
      });
    }
  };

  for (var k in map) loop( k );

  return {
    cancel: function () { return events.forEach(function (e) { return this$1.off(e[0], e[1].callback); }); },
    isSilenced: function () { return silent; },
    silence: function () { return (silent = true); },
    resume: function () { return (silent = false); }
  };
}

function Ractive$once(eventName, handler) {
  var listener = this.on(eventName, function() {
    handler.apply(this, arguments);
    listener.cancel();
  });

  // so we can still do listener.cancel() manually
  return listener;
}

var pop = makeArrayMethod('pop').path;

var push = makeArrayMethod('push').path;

function readLink(keypath, options) {
  if ( options === void 0 ) options = {};

  var path = splitKeypath(keypath);

  if (this.viewmodel.has(path[0])) {
    var model = this.viewmodel.joinAll(path);

    if (!model.isLink) { return; }

    while ((model = model.target) && options.canonical !== false) {
      if (!model.isLink) { break; }
    }

    if (model) { return { ractive: model.root.ractive, keypath: model.getKeypath() }; }
  }
}

var PREFIX = '/* Ractive.js component styles */';

// Holds current definitions of styles.
var styleDefinitions = [];

// Flag to tell if we need to update the CSS
var isDirty = false;

// These only make sense on the browser. See additional setup below.
var styleElement = null;
var useCssText = null;

// flag to use multiple style tags
var _splitTag = false;
function splitTag(v) {
  return v === undefined ? _splitTag : (_splitTag = v);
}

function addCSS(styleDefinition) {
  styleDefinitions.push(styleDefinition);
  isDirty = true;
}

function applyCSS(force) {
  var styleElement = style();

  // Apply only seems to make sense when we're in the DOM. Server-side renders
  // can call toCSS to get the updated CSS.
  if (!styleElement || (!force && !isDirty)) { return; }

  if (_splitTag) {
    styleDefinitions.forEach(function (s) {
      var el = getStyle(s.id);
      if (el) {
        var css = getCSS(s.id);
        if (useCssText) {
          el.styleSheet.cssText !== css && (el.styleSheet.cssText = css);
        } else {
          el.innerHTML !== css && (el.innerHTML = css);
        }
      }
    });
  } else {
    if (useCssText) {
      styleElement.styleSheet.cssText = getCSS(null);
    } else {
      styleElement.innerHTML = getCSS(null);
    }
  }

  isDirty = false;
}

function getCSS(cssIds) {
  if (cssIds && !isArray(cssIds)) { cssIds = [cssIds]; }
  var filteredStyleDefinitions = cssIds
    ? styleDefinitions.filter(function (style) { return ~cssIds.indexOf(style.id); })
    : styleDefinitions;

  filteredStyleDefinitions.forEach(function (d) { return (d.applied = true); });

  return filteredStyleDefinitions.reduce(
    function (styles, style) { return ("" + (styles ? (styles + "\n\n/* {" + (style.id) + "} */\n" + (style.styles)) : '')); },
    PREFIX
  );
}

function getStyle(id) {
  return doc && (doc.querySelector(("[data-ractive-css=\"" + id + "\"]")) || makeStyle(id));
}

function makeStyle(id) {
  if (doc) {
    var el = doc.createElement('style');
    el.type = 'text/css';
    el.setAttribute('data-ractive-css', id || '');

    doc.getElementsByTagName('head')[0].appendChild(el);

    if (useCssText === null) { useCssText = !!el.styleSheet; }

    return el;
  }
}

function style() {
  if (!styleElement) { styleElement = makeStyle(); }

  return styleElement;
}

var adaptConfigurator = {
  extend: function (Parent, proto, options) {
    proto.adapt = combine(proto.adapt, ensureArray(options.adapt));
  },

  init: function init() {}
};

var remove = /\/\*(?:[\s\S]*?)\*\//g;
var escape = /url\(\s*(['"])(?:\\[\s\S]|(?!\1).)*\1\s*\)|url\((?:\\[\s\S]|[^)])*\)|(['"])(?:\\[\s\S]|(?!\2).)*\2/gi;
var value = /\0(\d+)/g;

// Removes comments and strings from the given CSS to make it easier to parse.
// Callback receives the cleaned CSS and a function which can be used to put
// the removed strings back in place after parsing is done.
function cleanCss(css, callback, additionalReplaceRules) {
  if ( additionalReplaceRules === void 0 ) additionalReplaceRules = [];

  var values = [];
  var reconstruct = function (css) { return css.replace(value, function (match, n) { return values[n]; }); };
  css = css.replace(escape, function (match) { return ("\u0000" + (values.push(match) - 1)); }).replace(remove, '');

  additionalReplaceRules.forEach(function (pattern) {
    css = css.replace(pattern, function (match) { return ("\u0000" + (values.push(match) - 1)); });
  });

  return callback(css, reconstruct);
}

var selectorsPattern = /(?:^|\}|\{|\x01)\s*([^\{\}\0\x01]+)\s*(?=\{)/g;
var importPattern = /@import\s*\([^)]*\)\s*;?/gi;
var importEndPattern = /\x01/g;
var keyframesDeclarationPattern = /@keyframes\s+[^\{\}]+\s*\{(?:[^{}]+|\{[^{}]+})*}/gi;
var selectorUnitPattern = /((?:(?:\[[^\]]+\])|(?:[^\s\+\>~:]))+)((?:::?[^\s\+\>\~\(:]+(?:\([^\)]+\))?)*\s*[\s\+\>\~]?)\s*/g;
var excludePattern = /^(?:@|\d+%)/;
var dataRvcGuidPattern = /\[data-ractive-css~="\{[a-z0-9-]+\}"]/g;

function trim$1(str) {
  return str.trim();
}

function extractString(unit) {
  return unit.str;
}

function transformSelector(selector, parent) {
  var selectorUnits = [];
  var match;

  while ((match = selectorUnitPattern.exec(selector))) {
    selectorUnits.push({
      str: match[0],
      base: match[1],
      modifiers: match[2]
    });
  }

  // For each simple selector within the selector, we need to create a version
  // that a) combines with the id, and b) is inside the id
  var base = selectorUnits.map(extractString);

  var transformed = [];
  var i = selectorUnits.length;

  while (i--) {
    var appended = base.slice();

    // Pseudo-selectors should go after the attribute selector
    var unit = selectorUnits[i];
    appended[i] = unit.base + parent + unit.modifiers || '';

    var prepended = base.slice();
    prepended[i] = parent + ' ' + prepended[i];

    transformed.push(appended.join(' '), prepended.join(' '));
  }

  return transformed.join(', ');
}

function transformCss(css, id) {
  var dataAttr = "[data-ractive-css~=\"{" + id + "}\"]";

  var transformed;

  if (dataRvcGuidPattern.test(css)) {
    transformed = css.replace(dataRvcGuidPattern, dataAttr);
  } else {
    transformed = cleanCss(
      css,
      function (css, reconstruct) {
        css = css
          .replace(importPattern, '$&\x01')
          .replace(selectorsPattern, function (match, $1) {
            // don't transform at-rules and keyframe declarations
            if (excludePattern.test($1)) { return match; }

            var selectors = $1.split(',').map(trim$1);
            var transformed =
              selectors.map(function (selector) { return transformSelector(selector, dataAttr); }).join(', ') + ' ';

            return match.replace($1, transformed);
          })
          .replace(importEndPattern, '');

        return reconstruct(css);
      },
      [keyframesDeclarationPattern]
    );
  }

  return transformed;
}

function s4() {
  return Math.floor((1 + Math.random()) * 0x10000)
    .toString(16)
    .substring(1);
}

function uuid() {
  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
}

function setCSSData(keypath, value, options) {
  var opts = isObjectType(keypath) ? value : options;
  var model = this._cssModel;

  model.locked = true;
  var promise = set(build({ viewmodel: model }, keypath, value, true), opts);
  model.locked = false;

  var cascade = runloop.start();
  this.extensions.forEach(function (e) {
    var model = e._cssModel;
    model.mark();
    model.downstreamChanged('', 1);
  });
  runloop.end();

  applyChanges(this, !opts || opts.apply !== false);

  return promise.then(function () { return cascade; });
}

function applyChanges(component, apply) {
  var local = recomputeCSS(component);
  var child = component.extensions
    .map(function (e) { return applyChanges(e, false); })
    .reduce(function (a, c) { return c || a; }, false);

  if (apply && (local || child)) {
    var def = component._cssDef;
    if (!def || (def && def.applied)) { applyCSS(true); }
  }

  return local || child;
}

function recomputeCSS(component) {
  var css = component.css;

  if (!isFunction(css)) { return; }

  var def = component._cssDef;
  var result = evalCSS(component, css);
  var styles = def.transform ? transformCss(result, def.id) : result;

  if (def.styles === styles) { return; }

  def.styles = styles;

  return true;
}

var CSSModel = (function (SharedModel) {
  function CSSModel(component) {
    SharedModel.call(this, component.cssData, '@style');
    this.component = component;
  }

  if ( SharedModel ) CSSModel.__proto__ = SharedModel;
  var CSSModel__proto__ = CSSModel.prototype = Object.create( SharedModel && SharedModel.prototype );
  CSSModel__proto__.constructor = CSSModel;

  CSSModel__proto__.downstreamChanged = function downstreamChanged (path, depth) {
    if (this.locked) { return; }

    var component = this.component;

    component.extensions.forEach(function (e) {
      var model = e._cssModel;
      model.mark();
      model.downstreamChanged(path, depth || 1);
    });

    if (!depth) {
      applyChanges(component, true);
    }
  };

  return CSSModel;
}(SharedModel));

var hasCurly = /\{/;
var cssConfigurator = {
  name: 'css',

  // Called when creating a new component definition
  extend: function (Parent, proto, options, Child) {
    Child._cssIds = gatherIds(Parent);

    defineProperty(Child, 'cssData', {
      configurable: true,
      value: assign(create(Parent.cssData), options.cssData || {})
    });

    defineProperty(Child, '_cssModel', {
      configurable: true,
      value: new CSSModel(Child)
    });

    if (options.css) { initCSS(options, Child, proto); }
  },

  // Called when creating a new component instance
  init: function (Parent, target, options) {
    if (!options.css) { return; }

    warnIfDebug("\nThe css option is currently not supported on a per-instance basis and will be discarded. Instead, we recommend instantiating from a component definition with a css option.\n\nconst Component = Ractive.extend({\n\t...\n\tcss: '/* your css */',\n\t...\n});\n\nconst componentInstance = new Component({ ... })\n\t\t");
  }
};

function gatherIds(start) {
  var cmp = start;
  var ids = [];

  while (cmp) {
    if (cmp.prototype.cssId) { ids.push(cmp.prototype.cssId); }
    cmp = cmp.Parent;
  }

  return ids;
}

function evalCSS(component, css) {
  if (isString(css)) { return css; }

  var cssData = component.cssData;
  var model = component._cssModel;
  var data = function data(path) {
    return model.joinAll(splitKeypath(path)).get();
  };
  data.__proto__ = cssData;

  var result = css.call(component, data);
  return isString(result) ? result : '';
}

function initCSS(options, target, proto) {
  var css =
    options.css === true
      ? ''
      : isString(options.css) && !hasCurly.test(options.css)
      ? getElement(options.css) || options.css
      : options.css;
  var cssProp = css;

  var id = options.cssId || uuid();

  if (isObjectType(css)) {
    css = 'textContent' in css ? css.textContent : css.innerHTML;
    cssProp = css;
  } else if (isFunction(css)) {
    cssProp = css;
    css = evalCSS(target, css);
  }

  var def = {
    transform: 'noCSSTransform' in options ? !options.noCSSTransform : !options.noCssTransform
  };

  defineProperty(target, '_cssDef', { configurable: true, value: def });

  defineProperty(target, 'css', {
    get: function get() {
      return cssProp;
    },
    set: function set(next) {
      cssProp = next;
      var css = evalCSS(target, cssProp);
      var styles = def.styles;
      def.styles = def.transform ? transformCss(css, id) : css;
      if (def.applied && styles !== def.styles) { applyCSS(true); }
    }
  });

  def.styles = def.transform ? transformCss(css, id) : css;
  def.id = proto.cssId = id;
  target._cssIds.push(id);

  addCSS(target._cssDef);
}

function validate(data) {
  // Warn if userOptions.data is a non-POJO
  if (data && data.constructor !== Object) {
    if (isFunction(data)) {
      // TODO do we need to support this in the new Ractive() case?
    } else if (!isObjectType(data)) {
      fatal(("data option must be an object or a function, `" + data + "` is not valid"));
    } else {
      warnIfDebug(
        'If supplied, options.data should be a plain JavaScript object - using a non-POJO as the root object may work, but is discouraged'
      );
    }
  }
}

var dataConfigurator = {
  name: 'data',

  extend: function (Parent, proto, options) {
    var key;
    var value;

    // check for non-primitives, which could cause mutation-related bugs
    if (options.data && isObject(options.data)) {
      for (key in options.data) {
        value = options.data[key];

        if (value && isObjectType(value)) {
          if (isObject(value) || isArray(value)) {
            warnIfDebug("Passing a `data` option with object and array properties to Ractive.extend() is discouraged, as mutating them is likely to cause bugs. Consider using a data function instead:\n\n  // this...\n  data: function () {\n    return {\n      myObject: {}\n    };\n  })\n\n  // instead of this:\n  data: {\n    myObject: {}\n  }");
          }
        }
      }
    }

    proto.data = combine$1(proto.data, options.data);
  },

  init: function (Parent, ractive, options) {
    var result = combine$1(Parent.prototype.data, options.data);

    if (isFunction(result)) { result = result.call(ractive); }

    // bind functions to the ractive instance at the top level,
    // unless it's a non-POJO (in which case alarm bells should ring)
    if (result && result.constructor === Object) {
      for (var prop in result) {
        if (isFunction(result[prop])) {
          var value = result[prop];
          result[prop] = bind(value, ractive);
          result[prop]._r_unbound = value;
        }
      }
    }

    return result || {};
  },

  reset: function reset(ractive) {
    var result = this.init(ractive.constructor, ractive, ractive.viewmodel);
    ractive.viewmodel.root.set(result);
    return true;
  }
};

function emptyData() {
  return {};
}

function combine$1(parentValue, childValue) {
  validate(childValue);

  var parentIsFn = isFunction(parentValue);

  // Very important, otherwise child instance can become
  // the default data object on Ractive or a component.
  // then ractive.set() ends up setting on the prototype!
  if (!childValue && !parentIsFn) {
    // this needs to be a function so that it can still inherit parent defaults
    childValue = emptyData;
  }

  var childIsFn = isFunction(childValue);

  // Fast path, where we just need to copy properties from
  // parent to child
  if (!parentIsFn && !childIsFn) {
    return fromProperties(childValue, parentValue);
  }

  return function() {
    var child = childIsFn ? callDataFunction(childValue, this) : childValue;
    var parent = parentIsFn ? callDataFunction(parentValue, this) : parentValue;

    return fromProperties(child, parent);
  };
}

function callDataFunction(fn, context) {
  var data = fn.call(context);

  if (!data) { return; }

  if (!isObjectType(data)) {
    fatal('Data function must return an object');
  }

  if (data.constructor !== Object) {
    warnOnceIfDebug(
      'Data function returned something other than a plain JavaScript object. This might work, but is strongly discouraged'
    );
  }

  return data;
}

function fromProperties(primary, secondary) {
  if (primary && secondary) {
    for (var key in secondary) {
      if (!(key in primary)) {
        primary[key] = secondary[key];
      }
    }

    return primary;
  }

  return primary || secondary;
}

var templateConfigurator = {
  name: 'template',

  extend: function extend(Parent, proto, options) {
    // only assign if exists
    if ('template' in options) {
      var template = options.template;

      if (isFunction(template)) {
        proto.template = template;
      } else {
        proto.template = parseTemplate(template, proto);
      }
    }
  },

  init: function init(Parent, ractive, options) {
    // TODO because of prototypal inheritance, we might just be able to use
    // ractive.template, and not bother passing through the Parent object.
    // At present that breaks the test mocks' expectations
    var template = 'template' in options ? options.template : Parent.prototype.template;
    template = template || { v: TEMPLATE_VERSION, t: [] };

    if (isFunction(template)) {
      var fn = template;
      template = getDynamicTemplate(ractive, fn);

      ractive._config.template = {
        fn: fn,
        result: template
      };
    }

    template = parseTemplate(template, ractive);

    // TODO the naming of this is confusing - ractive.template refers to [...],
    // but Component.prototype.template refers to {v:1,t:[],p:[]}...
    // it's unnecessary, because the developer never needs to access
    // ractive.template
    ractive.template = template.t;

    if (template.p) {
      extendPartials(ractive.partials, template.p);
    }
  },

  reset: function reset(ractive) {
    var result = resetValue(ractive);

    if (result) {
      var parsed = parseTemplate(result, ractive);

      ractive.template = parsed.t;
      extendPartials(ractive.partials, parsed.p, true);

      return true;
    }
  }
};

function resetValue(ractive) {
  var initial = ractive._config.template;

  // If this isn't a dynamic template, there's nothing to do
  if (!initial || !initial.fn) {
    return;
  }

  var result = getDynamicTemplate(ractive, initial.fn);

  // TODO deep equality check to prevent unnecessary re-rendering
  // in the case of already-parsed templates
  if (result !== initial.result) {
    initial.result = result;
    return result;
  }
}

function getDynamicTemplate(ractive, fn) {
  return fn.call(ractive, {
    fromId: parser.fromId,
    isParsed: parser.isParsed,
    parse: function parse(template, options) {
      if ( options === void 0 ) options = parser.getParseOptions(ractive);

      return parser.parse(template, options);
    }
  });
}

function parseTemplate(template, ractive) {
  if (isString(template)) {
    // parse will validate and add expression functions
    template = parseAsString(template, ractive);
  } else {
    // need to validate and add exp for already parsed template
    validate$1(template);
    addFunctions(template);
  }

  return template;
}

function parseAsString(template, ractive) {
  // ID of an element containing the template?
  if (template[0] === '#') {
    template = parser.fromId(template);
  }

  return parser.parseFor(template, ractive);
}

function validate$1(template) {
  // Check that the template even exists
  if (template == undefined) {
    throw new Error(("The template cannot be " + template + "."));
  } else if (!isNumber(template.v)) {
    // Check the parsed template has a version at all
    throw new Error(
      "The template parser was passed a non-string template, but the template doesn't have a version.  Make sure you're passing in the template you think you are."
    );
  } else if (template.v !== TEMPLATE_VERSION) {
    // Check we're using the correct version
    throw new Error(
      ("Mismatched template version (expected " + TEMPLATE_VERSION + ", got " + (template.v) + ") Please ensure you are using the latest version of Ractive.js in your build process as well as in your app")
    );
  }
}

function extendPartials(existingPartials, newPartials, overwrite) {
  if (!newPartials) { return; }

  // TODO there's an ambiguity here - we need to overwrite in the `reset()`
  // case, but not initially...

  for (var key in newPartials) {
    if (overwrite || !hasOwn(existingPartials, key)) {
      existingPartials[key] = newPartials[key];
    }
  }
}

var registryNames = [
  'adaptors',
  'components',
  'computed',
  'decorators',
  'easing',
  'events',
  'helpers',
  'interpolators',
  'partials',
  'transitions'
];

var registriesOnDefaults = ['computed', 'helpers'];

var Registry = function Registry(name, useDefaults) {
  this.name = name;
  this.useDefaults = useDefaults;
};
var Registry__proto__ = Registry.prototype;

Registry__proto__.extend = function extend (Parent, proto, options) {
  var parent = this.useDefaults ? Parent.defaults : Parent;
  var target = this.useDefaults ? proto : proto.constructor;
  this.configure(parent, target, options);
};

Registry__proto__.init = function init () {
  // noop
};

Registry__proto__.configure = function configure (Parent, target, options) {
  var name = this.name;
  var option = options[name];

  var registry = create(Parent[name]);

  assign(registry, option);

  target[name] = registry;

  if (name === 'partials' && target[name]) {
    keys(target[name]).forEach(function (key) {
      addFunctions(target[name][key]);
    });
  }
};

Registry__proto__.reset = function reset (ractive) {
  var registry = ractive[this.name];
  var changed = false;

  keys(registry).forEach(function (key) {
    var item = registry[key];

    if (item._fn) {
      if (item._fn.isOwner) {
        registry[key] = item._fn;
      } else {
        delete registry[key];
      }
      changed = true;
    }
  });

  return changed;
};

var registries = registryNames.map(function (name) {
  var putInDefaults = registriesOnDefaults.indexOf(name) > -1;
  return new Registry(name, putInDefaults);
});

function wrap$1(parent, name, method) {
  if (!/_super/.test(method)) { return method; }

  function wrapper() {
    var superMethod = getSuperMethod(wrapper._parent, name);
    var hasSuper = '_super' in this;
    var oldSuper = this._super;

    this._super = superMethod;

    var result = method.apply(this, arguments);

    if (hasSuper) {
      this._super = oldSuper;
    } else {
      delete this._super;
    }

    return result;
  }

  wrapper._parent = parent;
  wrapper._method = method;

  return wrapper;
}

function getSuperMethod(parent, name) {
  if (name in parent) {
    var value = parent[name];

    return isFunction(value) ? value : function () { return value; };
  }

  return noop;
}

function getMessage(deprecated, correct, isError) {
  return (
    "options." + deprecated + " has been deprecated in favour of options." + correct + "." +
    (isError ? (" You cannot specify both options, please use options." + correct + ".") : '')
  );
}

function deprecateOption(options, deprecatedOption, correct) {
  if (deprecatedOption in options) {
    if (!(correct in options)) {
      warnIfDebug(getMessage(deprecatedOption, correct));
      options[correct] = options[deprecatedOption];
    } else {
      throw new Error(getMessage(deprecatedOption, correct, true));
    }
  }
}

function deprecate(options) {
  deprecateOption(options, 'beforeInit', 'onconstruct');
  deprecateOption(options, 'init', 'onrender');
  deprecateOption(options, 'complete', 'oncomplete');
  deprecateOption(options, 'eventDefinitions', 'events');

  // Using extend with Component instead of options,
  // like Human.extend( Spider ) means adaptors as a registry
  // gets copied to options. So we have to check if actually an array
  if (isArray(options.adaptors)) {
    deprecateOption(options, 'adaptors', 'adapt');
  }
}

var config = {
  extend: function (Parent, proto, options, Child) { return configure('extend', Parent, proto, options, Child); },
  init: function (Parent, ractive, options) { return configure('init', Parent, ractive, options); },
  reset: function (ractive) { return order.filter(function (c) { return c.reset && c.reset(ractive); }).map(function (c) { return c.name; }); }
};

var custom = {
  adapt: adaptConfigurator,
  computed: config,
  css: cssConfigurator,
  data: dataConfigurator,
  helpers: config,
  template: templateConfigurator
};

var defaultKeys = keys(defaults);

var isStandardKey = makeObj(defaultKeys.filter(function (key) { return !custom[key]; }));

// blacklisted keys that we don't double extend
var isBlacklisted = makeObj(
  defaultKeys.concat(registries.map(function (r) { return r.name; }), ['on', 'observe', 'attributes', 'cssData', 'use'])
);

var order = [].concat(
  defaultKeys.filter(function (key) { return !registries[key] && !custom[key]; }),
  registries,
  //custom.data,
  custom.template,
  custom.css
);

function configure(method, Parent, target, options, Child) {
  deprecate(options);

  for (var key in options) {
    if (hasOwn(isStandardKey, key)) {
      var value = options[key];

      // warn the developer if they passed a function and ignore its value

      // NOTE: we allow some functions on "el" because we duck type element lists
      // and some libraries or ef'ed-up virtual browsers (phantomJS) return a
      // function object as the result of querySelector methods
      if (key !== 'el' && isFunction(value)) {
        warnIfDebug(
          (key + " is a Ractive option that does not expect a function and will be ignored"),
          method === 'init' ? target : null
        );
      } else {
        target[key] = value;
      }
    }
  }

  // disallow combination of `append` and `enhance`
  if (target.append && target.enhance) {
    throw new Error('Cannot use append and enhance at the same time');
  }

  registries.forEach(function (registry) {
    registry[method](Parent, target, options, Child);
  });

  adaptConfigurator[method](Parent, target, options, Child);
  templateConfigurator[method](Parent, target, options, Child);
  cssConfigurator[method](Parent, target, options, Child);

  extendOtherMethods(Parent.prototype, target, options);
}

var _super = /\b_super\b/;
function extendOtherMethods(parent, target, options) {
  for (var key in options) {
    if (!isBlacklisted[key] && hasOwn(options, key)) {
      var member = options[key];

      // if this is a method that overwrites a method, wrap it:
      if (isFunction(member)) {
        if (
          (key in proto$9 ||
            (key.slice(0, 2) === 'on' && key.slice(2) in hooks && key in target)) &&
          !_super.test(member.toString())
        ) {
          warnIfDebug(
            ("Overriding Ractive prototype function '" + key + "' without calling the '" + _super + "' method can be very dangerous.")
          );
        }
        member = wrap$1(parent, key, member);
      }

      target[key] = member;
    }
  }
}

function makeObj(array) {
  var obj = {};
  array.forEach(function (x) { return (obj[x] = true); });
  return obj;
}

var Item = function Item(options) {
  this.up = options.up;
  this.ractive = options.up.ractive;

  this.template = options.template;
  this.index = options.index;
  this.type = options.template.t;

  this.dirty = false;
};
var Item__proto__ = Item.prototype;

Item__proto__.bubble = function bubble () {
  if (!this.dirty) {
    this.dirty = true;
    this.up.bubble();
  }
};

Item__proto__.destroyed = function destroyed () {
  if (this.fragment) { this.fragment.destroyed(); }
};

Item__proto__.find = function find () {
  return null;
};

Item__proto__.findComponent = function findComponent () {
  return null;
};

Item__proto__.findNextNode = function findNextNode () {
  return this.up.findNextNode(this);
};

Item__proto__.rebound = function rebound (update) {
  if (this.fragment) { this.fragment.rebound(update); }
};

Item__proto__.shuffled = function shuffled () {
  if (this.fragment) { this.fragment.shuffled(); }
};

Item__proto__.valueOf = function valueOf () {
  return this.toString();
};

Item.prototype.findAll = noop;
Item.prototype.findAllComponents = noop;

var ContainerItem = (function (Item) {
  function ContainerItem(options) {
    Item.call(this, options);
  }

  if ( Item ) ContainerItem.__proto__ = Item;
  var ContainerItem__proto__ = ContainerItem.prototype = Object.create( Item && Item.prototype );
  ContainerItem__proto__.constructor = ContainerItem;

  ContainerItem__proto__.detach = function detach () {
    return this.fragment ? this.fragment.detach() : createDocumentFragment();
  };

  ContainerItem__proto__.find = function find (selector) {
    if (this.fragment) {
      return this.fragment.find(selector);
    }
  };

  ContainerItem__proto__.findAll = function findAll (selector, options) {
    if (this.fragment) {
      this.fragment.findAll(selector, options);
    }
  };

  ContainerItem__proto__.findComponent = function findComponent (name) {
    if (this.fragment) {
      return this.fragment.findComponent(name);
    }
  };

  ContainerItem__proto__.findAllComponents = function findAllComponents (name, options) {
    if (this.fragment) {
      this.fragment.findAllComponents(name, options);
    }
  };

  ContainerItem__proto__.firstNode = function firstNode (skipParent) {
    return this.fragment && this.fragment.firstNode(skipParent);
  };

  ContainerItem__proto__.toString = function toString (escape) {
    return this.fragment ? this.fragment.toString(escape) : '';
  };

  return ContainerItem;
}(Item));

var space = /\s+/;

function readStyle(css) {
  if (!isString(css)) { return {}; }

  return cleanCss(css, function (css, reconstruct) {
    return css
      .split(';')
      .filter(function (rule) { return !!rule.trim(); })
      .map(reconstruct)
      .reduce(function (rules, rule) {
        var i = rule.indexOf(':');
        var name = rule.substr(0, i).trim();
        rules[name] = rule.substr(i + 1).trim();
        return rules;
      }, {});
  });
}

function readClass(str) {
  var list = str.split(space);

  // remove any empty entries
  var i = list.length;
  while (i--) {
    if (!list[i]) { list.splice(i, 1); }
  }

  return list;
}

var textTypes = [
  undefined,
  'text',
  'search',
  'url',
  'email',
  'hidden',
  'password',
  'search',
  'reset',
  'submit'
];

function getUpdateDelegate(attribute) {
  var element = attribute.element;
  var name = attribute.name;

  if (name === 'value') {
    if (attribute.interpolator) { attribute.interpolator.bound = true; }

    // special case - selects
    if (element.name === 'select' && name === 'value') {
      return element.getAttribute('multiple') ? updateMultipleSelectValue : updateSelectValue;
    }

    if (element.name === 'textarea') { return updateStringValue; }

    // special case - contenteditable
    if (element.getAttribute('contenteditable') != null) { return updateContentEditableValue; }

    // special case - <input>
    if (element.name === 'input') {
      var type = element.getAttribute('type');

      // type='file' value='{{fileList}}'>
      if (type === 'file') { return noop; } // read-only

      // type='radio' name='{{twoway}}'
      if (type === 'radio' && element.binding && element.binding.attribute.name === 'name')
        { return updateRadioValue; }

      if (~textTypes.indexOf(type)) { return updateStringValue; }
    }

    return updateValue;
  }

  var node = element.node;

  // special case - <input type='radio' name='{{twoway}}' value='foo'>
  if (attribute.isTwoway && name === 'name') {
    if (node.type === 'radio') { return updateRadioName; }
    if (node.type === 'checkbox') { return updateCheckboxName; }
  }

  if (name === 'style') { return updateStyleAttribute; }

  if (name.indexOf('style-') === 0) { return updateInlineStyle; }

  // special case - class names. IE fucks things up, again
  if (name === 'class' && (!node.namespaceURI || node.namespaceURI === html))
    { return updateClassName; }

  if (name.indexOf('class-') === 0) { return updateInlineClass; }

  if (attribute.isBoolean) {
    var type$1 = element.getAttribute('type');
    if (attribute.interpolator && name === 'checked' && (type$1 === 'checkbox' || type$1 === 'radio'))
      { attribute.interpolator.bound = true; }
    return updateBoolean;
  }

  if (attribute.namespace && attribute.namespace !== attribute.node.namespaceURI)
    { return updateNamespacedAttribute; }

  return updateAttribute;
}

function updateMultipleSelectValue(reset) {
  var value = this.getValue();

  if (!isArray(value)) { value = [value]; }

  var options = this.node.options;
  var i = options.length;

  if (reset) {
    while (i--) { options[i].selected = false; }
  } else {
    while (i--) {
      var option = options[i];
      var optionValue = option._ractive ? option._ractive.value : option.value; // options inserted via a triple don't have _ractive

      option.selected = arrayContains(value, optionValue);
    }
  }
}

function updateSelectValue(reset) {
  var value = this.getValue();

  if (!this.locked) {
    // TODO is locked still a thing?
    this.node._ractive.value = value;

    var options = this.node.options;
    var i = options.length;
    var wasSelected = false;

    if (reset) {
      while (i--) { options[i].selected = false; }
    } else {
      while (i--) {
        var option = options[i];
        var optionValue = option._ractive ? option._ractive.value : option.value; // options inserted via a triple don't have _ractive
        if (option.disabled && option.selected) { wasSelected = true; }

        if (optionValue == value) {
          // double equals as we may be comparing numbers with strings
          option.selected = true;
          return;
        }
      }
    }

    if (!wasSelected) { this.node.selectedIndex = -1; }
  }
}

function updateContentEditableValue(reset) {
  var value = this.getValue();

  if (!this.locked) {
    if (reset) { this.node.innerHTML = ''; }
    else { this.node.innerHTML = isUndefined(value) ? '' : value; }
  }
}

function updateRadioValue(reset) {
  var node = this.node;
  var wasChecked = node.checked;

  var value = this.getValue();

  if (reset) { return (node.checked = false); }

  //node.value = this.element.getAttribute( 'value' );
  node.value = this.node._ractive.value = value;
  node.checked = this.element.compare(value, this.element.getAttribute('name'));

  // This is a special case - if the input was checked, and the value
  // changed so that it's no longer checked, the twoway binding is
  // most likely out of date. To fix it we have to jump through some
  // hoops... this is a little kludgy but it works
  if (wasChecked && !node.checked && this.element.binding && this.element.binding.rendered) {
    this.element.binding.group.model.set(this.element.binding.group.getValue());
  }
}

function updateValue(reset) {
  if (!this.locked) {
    if (reset) {
      this.node.removeAttribute('value');
      this.node.value = this.node._ractive.value = null;
    } else {
      var value = this.getValue();

      this.node.value = this.node._ractive.value = value;
      this.node.setAttribute('value', safeToStringValue(value));
    }
  }
}

function updateStringValue(reset) {
  if (!this.locked) {
    if (reset) {
      this.node._ractive.value = '';
      this.node.removeAttribute('value');
    } else {
      var value = this.getValue();

      this.node._ractive.value = value;

      var safeValue = safeToStringValue(value);

      // fixes #3281 â€“ Safari moves caret position when setting an input value to the same value
      if (this.node.value !== safeValue) {
        this.node.value = safeValue;
      }

      this.node.setAttribute('value', safeValue);
    }
  }
}

function updateRadioName(reset) {
  if (reset) { this.node.checked = false; }
  else { this.node.checked = this.element.compare(this.getValue(), this.element.binding.getValue()); }
}

function updateCheckboxName(reset) {
  var ref = this;
  var element = ref.element;
  var node = ref.node;
  var binding = element.binding;

  var value = this.getValue();
  var valueAttribute = element.getAttribute('value');

  if (!isArray(value)) {
    binding.isChecked = node.checked = element.compare(value, valueAttribute);
  } else {
    var i = value.length;
    while (i--) {
      if (element.compare(valueAttribute, value[i])) {
        binding.isChecked = node.checked = true;
        return;
      }
    }
    binding.isChecked = node.checked = false;
  }
}

function updateStyleAttribute(reset) {
  var props = reset ? {} : readStyle(this.getValue() || '');
  var style = this.node.style;
  var keys$$1 = keys(props);
  var prev = this.previous || [];

  var i = 0;
  while (i < keys$$1.length) {
    if (keys$$1[i] in style) {
      var safe = props[keys$$1[i]].replace('!important', '');
      style.setProperty(keys$$1[i], safe, safe.length !== props[keys$$1[i]].length ? 'important' : '');
    }
    i++;
  }

  // remove now-missing attrs
  i = prev.length;
  while (i--) {
    if (!~keys$$1.indexOf(prev[i]) && prev[i] in style) { style.setProperty(prev[i], '', ''); }
  }

  this.previous = keys$$1;
}

function updateInlineStyle(reset) {
  if (!this.style) {
    this.style = hyphenateCamel(this.name.substr(6));
  }

  if (reset && this.node.style.getPropertyValue(this.style) !== this.last) { return; }

  var value = reset ? '' : safeToStringValue(this.getValue());
  var safe = value.replace('!important', '');
  this.node.style.setProperty(this.style, safe, safe.length !== value.length ? 'important' : '');
  this.last = this.node.style.getPropertyValue(this.style);
}

function updateClassName(reset) {
  var value = reset ? [] : readClass(safeToStringValue(this.getValue()));

  // watch out for weirdo svg elements
  var cls = this.node.className;
  cls = cls.baseVal !== undefined ? cls.baseVal : cls;

  var attr = readClass(cls);
  var prev = this.previous || [];

  var className = value.concat(attr.filter(function (c) { return !~prev.indexOf(c); })).join(' ');

  if (className !== cls) {
    if (!isString(this.node.className)) {
      this.node.className.baseVal = className;
    } else {
      this.node.className = className;
    }
  }

  this.previous = value;
}

function updateInlineClass(reset) {
  var name = this.name.substr(6);

  // watch out for weirdo svg elements
  var cls = this.node.className;
  cls = cls.baseVal !== undefined ? cls.baseVal : cls;

  var attr = readClass(cls);
  var value = reset ? false : this.getValue();

  if (!this.inlineClass) { this.inlineClass = name; }

  if (value && !~attr.indexOf(name)) { attr.push(name); }
  else if (!value && ~attr.indexOf(name)) { attr.splice(attr.indexOf(name), 1); }

  if (!isString(this.node.className)) {
    this.node.className.baseVal = attr.join(' ');
  } else {
    this.node.className = attr.join(' ');
  }
}

function updateBoolean(reset) {
  // with two-way binding, only update if the change wasn't initiated by the user
  // otherwise the cursor will often be sent to the wrong place
  if (!this.locked) {
    if (reset) {
      if (this.useProperty) { this.node[this.propertyName] = false; }
      this.node.removeAttribute(this.propertyName);
    } else {
      if (this.useProperty) {
        this.node[this.propertyName] = this.getValue();
      } else {
        var val = this.getValue();
        if (val) {
          this.node.setAttribute(this.propertyName, isString(val) ? val : '');
        } else {
          this.node.removeAttribute(this.propertyName);
        }
      }
    }
  }
}

function updateAttribute(reset) {
  if (reset) {
    if (this.node.getAttribute(this.name) === this.value) {
      this.node.removeAttribute(this.name);
    }
  } else {
    this.value = safeToStringValue(this.getString());
    this.node.setAttribute(this.name, this.value);
  }
}

function updateNamespacedAttribute(reset) {
  if (reset) {
    if (
      this.value ===
      this.node.getAttributeNS(this.namespace, this.name.slice(this.name.indexOf(':') + 1))
    ) {
      this.node.removeAttributeNS(this.namespace, this.name.slice(this.name.indexOf(':') + 1));
    }
  } else {
    this.value = safeToStringValue(this.getString());
    this.node.setAttributeNS(
      this.namespace,
      this.name.slice(this.name.indexOf(':') + 1),
      this.value
    );
  }
}

var propertyNames = {
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  bgcolor: 'bgColor',
  class: 'className',
  codebase: 'codeBase',
  colspan: 'colSpan',
  contenteditable: 'contentEditable',
  datetime: 'dateTime',
  dirname: 'dirName',
  for: 'htmlFor',
  'http-equiv': 'httpEquiv',
  ismap: 'isMap',
  maxlength: 'maxLength',
  novalidate: 'noValidate',
  pubdate: 'pubDate',
  readonly: 'readOnly',
  rowspan: 'rowSpan',
  tabindex: 'tabIndex',
  usemap: 'useMap'
};

var div$1 = doc ? createElement('div') : null;

var attributes = false;
function inAttributes() {
  return attributes;
}

var ConditionalAttribute = (function (Item) {
  function ConditionalAttribute(options) {
    Item.call(this, options);

    this.attributes = [];

    this.owner = options.owner;

    this.fragment = new Fragment({
      ractive: this.ractive,
      owner: this,
      template: this.template
    });

    // this fragment can't participate in node-y things
    this.fragment.findNextNode = noop;

    this.dirty = false;
  }

  if ( Item ) ConditionalAttribute.__proto__ = Item;
  var ConditionalAttribute__proto__ = ConditionalAttribute.prototype = Object.create( Item && Item.prototype );
  ConditionalAttribute__proto__.constructor = ConditionalAttribute;

  ConditionalAttribute__proto__.bind = function bind () {
    this.fragment.bind();
  };

  ConditionalAttribute__proto__.bubble = function bubble () {
    if (!this.dirty) {
      this.dirty = true;
      this.owner.bubble();
    }
  };

  ConditionalAttribute__proto__.destroyed = function destroyed () {
    this.unrender();
  };

  ConditionalAttribute__proto__.render = function render () {
    this.node = this.owner.node;
    if (this.node) {
      this.isSvg = this.node.namespaceURI === svg$1;
    }

    attributes = true;
    if (!this.rendered) { this.fragment.render(); }

    this.rendered = true;
    this.dirty = true; // TODO this seems hacky, but necessary for tests to pass in browser AND node.js
    this.update();
    attributes = false;
  };

  ConditionalAttribute__proto__.toString = function toString () {
    return this.fragment.toString();
  };

  ConditionalAttribute__proto__.unbind = function unbind (view) {
    this.fragment.unbind(view);
  };

  ConditionalAttribute__proto__.unrender = function unrender () {
    this.rendered = false;
    this.fragment.unrender();
  };

  ConditionalAttribute__proto__.update = function update () {
    var this$1 = this;

    var str;
    var attrs;

    if (this.dirty) {
      this.dirty = false;

      var current = attributes;
      attributes = true;
      this.fragment.update();

      if (this.rendered && this.node) {
        str = this.fragment.toString();

        attrs = parseAttributes(str, this.isSvg);

        // any attributes that previously existed but no longer do
        // must be removed
        this.attributes
          .filter(function (a) { return notIn(attrs, a); })
          .forEach(function (a) {
            this$1.node.removeAttribute(a.name);
          });

        attrs.forEach(function (a) {
          this$1.node.setAttribute(a.name, a.value);
        });

        this.attributes = attrs;
      }

      attributes = current || false;
    }
  };

  return ConditionalAttribute;
}(Item));

var onlyWhitespace = /^\s*$/;
function parseAttributes(str, isSvg) {
  if (onlyWhitespace.test(str)) { return []; }
  var tagName = isSvg ? 'svg' : 'div';
  return str
    ? (div$1.innerHTML = "<" + tagName + " " + str + "></" + tagName + ">") && toArray(div$1.childNodes[0].attributes)
    : [];
}

function notIn(haystack, needle) {
  var i = haystack.length;

  while (i--) {
    if (haystack[i].name === needle.name) {
      return false;
    }
  }

  return true;
}

function lookupNamespace(node, prefix) {
  var qualified = "xmlns:" + prefix;

  while (node) {
    if (node.hasAttribute && node.hasAttribute(qualified)) { return node.getAttribute(qualified); }
    node = node.parentNode;
  }

  return namespaces[prefix];
}

var attribute = false;
function inAttribute() {
  return attribute;
}

var Attribute = (function (Item) {
  function Attribute(options) {
    Item.call(this, options);

    this.name = options.template.n;
    this.namespace = null;

    this.owner = options.owner || options.up.owner || options.element || findElement(options.up);
    this.element =
      options.element || (this.owner.attributeByName ? this.owner : findElement(options.up));
    this.up = options.up; // shared
    this.ractive = this.up.ractive;

    this.rendered = false;
    this.updateDelegate = null;
    this.fragment = null;

    this.element.attributeByName[this.name] = this;

    if (!isArray(options.template.f)) {
      this.value = options.template.f;
      if (this.value === 0) {
        this.value = '';
      } else if (isUndefined(this.value)) {
        this.value = true;
      }
      return;
    } else {
      this.fragment = new Fragment({
        owner: this,
        template: options.template.f
      });
    }

    this.interpolator =
      this.fragment &&
      this.fragment.items.length === 1 &&
      this.fragment.items[0].type === INTERPOLATOR &&
      this.fragment.items[0];

    if (this.interpolator) { this.interpolator.owner = this; }
  }

  if ( Item ) Attribute.__proto__ = Item;
  var Attribute__proto__ = Attribute.prototype = Object.create( Item && Item.prototype );
  Attribute__proto__.constructor = Attribute;

  Attribute__proto__.bind = function bind () {
    if (this.fragment) {
      this.fragment.bind();
    }
  };

  Attribute__proto__.bubble = function bubble () {
    if (!this.dirty) {
      this.up.bubble();
      this.element.bubble();
      this.dirty = true;
    }
  };

  Attribute__proto__.firstNode = function firstNode () {};

  Attribute__proto__.getString = function getString () {
    attribute = true;
    var value = this.fragment
      ? this.fragment.toString()
      : this.value != null
      ? '' + this.value
      : '';
    attribute = false;
    return value;
  };

  // TODO could getValue ever be called for a static attribute,
  // or can we assume that this.fragment exists?
  Attribute__proto__.getValue = function getValue () {
    attribute = true;
    var value = this.fragment
      ? this.fragment.valueOf()
      : booleanAttributes[this.name.toLowerCase()]
      ? true
      : this.value;
    attribute = false;
    return value;
  };

  Attribute__proto__.render = function render () {
    var node = this.element.node;
    this.node = node;

    // should we use direct property access, or setAttribute?
    if (!node.namespaceURI || node.namespaceURI === namespaces.html) {
      this.propertyName = propertyNames[this.name] || this.name;

      if (node[this.propertyName] !== undefined) {
        this.useProperty = true;
      }

      // is attribute a boolean attribute or 'value'? If so we're better off doing e.g.
      // node.selected = true rather than node.setAttribute( 'selected', '' )
      if (booleanAttributes[this.name.toLowerCase()] || this.isTwoway) {
        this.isBoolean = true;
      }

      if (this.propertyName === 'value') {
        node._ractive.value = this.value;
      }
    }

    if (node.namespaceURI) {
      var index = this.name.indexOf(':');
      if (index !== -1) {
        this.namespace = lookupNamespace(node, this.name.slice(0, index));
      } else {
        this.namespace = node.namespaceURI;
      }
    }

    this.rendered = true;
    this.updateDelegate = getUpdateDelegate(this);
    this.updateDelegate();
  };

  Attribute__proto__.toString = function toString () {
    if (inAttributes()) { return ''; }
    attribute = true;

    var value = this.getValue();

    // Special case - select and textarea values (should not be stringified)
    if (
      this.name === 'value' &&
      (this.element.getAttribute('contenteditable') !== undefined ||
        (this.element.name === 'select' || this.element.name === 'textarea'))
    ) {
      return;
    }

    // Special case â€“ bound radio `name` attributes
    if (
      this.name === 'name' &&
      this.element.name === 'input' &&
      this.interpolator &&
      this.element.getAttribute('type') === 'radio'
    ) {
      return ("name=\"{{" + (this.interpolator.model.getKeypath()) + "}}\"");
    }

    // Special case - style and class attributes and directives
    if (
      this.owner === this.element &&
      (this.name === 'style' || this.name === 'class' || this.style || this.inlineClass)
    ) {
      return;
    }

    if (
      !this.rendered &&
      this.owner === this.element &&
      (!this.name.indexOf('style-') || !this.name.indexOf('class-'))
    ) {
      if (!this.name.indexOf('style-')) {
        this.style = hyphenateCamel(this.name.substr(6));
      } else {
        this.inlineClass = this.name.substr(6);
      }

      return;
    }

    if (booleanAttributes[this.name.toLowerCase()])
      { return value
        ? isString(value)
          ? ((this.name) + "=\"" + (safeAttributeString(value)) + "\"")
          : this.name
        : ''; }
    if (value == null) { return ''; }

    var str = safeAttributeString(this.getString());
    attribute = false;

    return str ? ((this.name) + "=\"" + str + "\"") : this.name;
  };

  Attribute__proto__.unbind = function unbind (view) {
    if (this.fragment) { this.fragment.unbind(view); }
  };

  Attribute__proto__.unrender = function unrender () {
    this.updateDelegate(true);

    this.rendered = false;
  };

  Attribute__proto__.update = function update () {
    if (this.dirty) {
      var binding;
      this.dirty = false;
      if (this.fragment) { this.fragment.update(); }
      if (this.rendered) { this.updateDelegate(); }
      if (this.isTwoway && !this.locked) {
        this.interpolator.twowayBinding.lastVal(true, this.interpolator.model.get());
      } else if (this.name === 'value' && (binding = this.element.binding)) {
        // special case: name bound element with dynamic value
        var attr = binding.attribute;
        if (attr && !attr.dirty && attr.rendered) {
          this.element.binding.attribute.updateDelegate();
        }
      }
    }
  };

  return Attribute;
}(Item));

var BindingFlag = (function (Item) {
  function BindingFlag(options) {
    Item.call(this, options);

    this.owner = options.owner || options.up.owner || findElement(options.up);
    this.element = this.owner.attributeByName ? this.owner : findElement(options.up);
    this.flag = options.template.v === 'l' ? 'lazy' : 'twoway';
    this.bubbler = this.owner === this.element ? this.element : this.up;

    if (this.element.type === ELEMENT) {
      if (isArray(options.template.f)) {
        this.fragment = new Fragment({
          owner: this,
          template: options.template.f
        });
      }

      this.interpolator =
        this.fragment &&
        this.fragment.items.length === 1 &&
        this.fragment.items[0].type === INTERPOLATOR &&
        this.fragment.items[0];
    }
  }

  if ( Item ) BindingFlag.__proto__ = Item;
  var BindingFlag__proto__ = BindingFlag.prototype = Object.create( Item && Item.prototype );
  BindingFlag__proto__.constructor = BindingFlag;

  BindingFlag__proto__.bind = function bind () {
    if (this.fragment) { this.fragment.bind(); }
    set$1(this, this.getValue(), true);
  };

  BindingFlag__proto__.bubble = function bubble () {
    if (!this.dirty) {
      this.bubbler.bubble();
      this.dirty = true;
    }
  };

  BindingFlag__proto__.getValue = function getValue () {
    if (this.fragment) { return this.fragment.valueOf(); }
    else if ('value' in this) { return this.value; }
    else if ('f' in this.template) { return this.template.f; }
    else { return true; }
  };

  BindingFlag__proto__.render = function render () {
    set$1(this, this.getValue(), true);
  };

  BindingFlag__proto__.toString = function toString () {
    return '';
  };

  BindingFlag__proto__.unbind = function unbind (view) {
    if (this.fragment) { this.fragment.unbind(view); }

    delete this.element[this.flag];
  };

  BindingFlag__proto__.unrender = function unrender () {
    if (this.element.rendered) { this.element.recreateTwowayBinding(); }
  };

  BindingFlag__proto__.update = function update () {
    if (this.dirty) {
      this.dirty = false;
      if (this.fragment) { this.fragment.update(); }
      set$1(this, this.getValue(), true);
    }
  };

  return BindingFlag;
}(Item));

function set$1(flag, value, update) {
  if (value === 0) {
    flag.value = true;
  } else if (value === 'true') {
    flag.value = true;
  } else if (value === 'false' || value === '0') {
    flag.value = false;
  } else {
    flag.value = value;
  }

  var current = flag.element[flag.flag];
  flag.element[flag.flag] = flag.value;
  if (update && !flag.element.attributes.binding && current !== flag.value) {
    flag.element.recreateTwowayBinding();
  }

  return flag.value;
}

function Comment(options) {
  Item.call(this, options);
}

var proto$1 = create(Item.prototype);

assign(proto$1, {
  bind: noop,
  unbind: noop,
  update: noop,

  detach: function detach() {
    return detachNode(this.node);
  },

  firstNode: function firstNode() {
    return this.node;
  },

  render: function render(target) {
    this.rendered = true;

    this.node = doc.createComment(this.template.c);
    target.appendChild(this.node);
  },

  toString: function toString() {
    return ("<!-- " + (this.template.c) + " -->");
  },

  unrender: function unrender(shouldDestroy) {
    if (this.rendered && shouldDestroy) { this.detach(); }
    this.rendered = false;
  }
});

Comment.prototype = proto$1;

// Teardown. This goes through the root fragment and all its children, removing observers
// and generally cleaning up after itself

function Ractive$teardown() {
  var this$1 = this;

  if (this.torndown) {
    warnIfDebug('ractive.teardown() was called on a Ractive instance that was already torn down');
    return Promise.resolve();
  }

  this.shouldDestroy = true;
  return teardown$1(this, function () { return (this$1.fragment.rendered ? this$1.unrender() : Promise.resolve()); });
}

function teardown$1(instance, getPromise) {
  instance.torndown = true;
  instance.fragment.unbind();
  instance._observers.slice().forEach(cancel);

  if (instance.el && instance.el.__ractive_instances__) {
    removeFromArray(instance.el.__ractive_instances__, instance);
  }

  var promise = getPromise();

  hooks.teardown.fire(instance);

  promise.then(function () {
    hooks.destruct.fire(instance);
    instance.viewmodel.teardown();
  });

  return promise;
}

var RactiveModel = (function (SharedModel) {
  function RactiveModel(ractive) {
    SharedModel.call(this, ractive, '@this');
    this.ractive = ractive;
  }

  if ( SharedModel ) RactiveModel.__proto__ = SharedModel;
  var RactiveModel__proto__ = RactiveModel.prototype = Object.create( SharedModel && SharedModel.prototype );
  RactiveModel__proto__.constructor = RactiveModel;

  RactiveModel__proto__.joinKey = function joinKey (key) {
    var model = SharedModel.prototype.joinKey.call(this, key);

    if ((key === 'root' || key === 'parent') && !model.isLink) { return initLink(model, key); }
    else if (key === 'data') { return this.ractive.viewmodel; }
    else if (key === 'cssData') { return this.ractive.constructor._cssModel; }

    return model;
  };

  return RactiveModel;
}(SharedModel));

function initLink(model, key) {
  model.applyValue = function(value) {
    this.parent.value[key] = value;
    if (value && value.viewmodel) {
      this.link(value.viewmodel.getRactiveModel(), key);
      this._link.markedAll();
    } else {
      this.link(create(Missing), key);
      this._link.markedAll();
    }
  };

  if (key === 'root') {
    var mark = model.mark;
    model.mark = function(force) {
      if (this._marking) { return; }
      this._marking = true;
      mark.apply(this, force);
      this._marking = false;
    };
  }

  model.applyValue(model.parent.ractive[key], key);
  model._link.set = function (v) { return model.applyValue(v); };
  model._link.applyValue = function (v) { return model.applyValue(v); };

  return model._link;
}

var specialModels = {
  '@this': function _this(root) {
    return root.getRactiveModel();
  },
  '@global': function _global() {
    return GlobalModel;
  },
  '@shared': function _shared() {
    return SharedModel$1;
  },
  '@style': function _style(root) {
    return root.getRactiveModel().joinKey('cssData');
  },
  '@helpers': function _helpers(root) {
    return root.getHelpers();
  }
};
specialModels['@'] = specialModels['@this'];

var RootModel = (function (Model) {
  function RootModel(options) {
    Model.call(this, null, null);

    this.isRoot = true;
    this.root = this;
    this.ractive = options.ractive; // TODO sever this link

    this.value = options.data;
    this.adaptors = options.adapt;
    this.adapt();
  }

  if ( Model ) RootModel.__proto__ = Model;
  var RootModel__proto__ = RootModel.prototype = Object.create( Model && Model.prototype );
  RootModel__proto__.constructor = RootModel;

  RootModel__proto__.attached = function attached (fragment) {
    attachImplicits(this, fragment);
  };

  RootModel__proto__.createLink = function createLink (keypath, target, targetPath, options) {
    var keys = splitKeypath(keypath);

    var model = this;
    while (keys.length) {
      var key = keys.shift();
      model = model.childByKey[key] || model.joinKey(key);
    }

    return model.link(target, targetPath, options);
  };

  RootModel__proto__.detached = function detached () {
    detachImplicits(this);
  };

  RootModel__proto__.get = function get (shouldCapture, options) {
    if (shouldCapture) { capture(this); }

    if (!options || options.virtual !== false) {
      return this.getVirtual();
    } else {
      return this.value;
    }
  };

  RootModel__proto__.getHelpers = function getHelpers () {
    if (!this.helpers) { this.helpers = new SharedModel(this.ractive.helpers, 'helpers', this.ractive); }
    return this.helpers;
  };

  RootModel__proto__.getKeypath = function getKeypath () {
    return '';
  };

  RootModel__proto__.getRactiveModel = function getRactiveModel () {
    return this.ractiveModel || (this.ractiveModel = new RactiveModel(this.ractive));
  };

  RootModel__proto__.getValueChildren = function getValueChildren () {
    var children = Model.prototype.getValueChildren.call(this, this.value);

    this.children.forEach(function (child) {
      if (child._link) {
        var idx = children.indexOf(child);
        if (~idx) { children.splice(idx, 1, child._link); }
        else { children.push(child._link); }
      }
    });

    return children;
  };

  RootModel__proto__.has = function has (key) {
    if (key[0] === '~' && key[1] === '/') { key = key.slice(2); }
    if (specialModels[key] || key === '') { return true; }

    if (Model.prototype.has.call(this, key)) {
      return true;
    } else {
      var unescapedKey = unescapeKey(key);

      // mappings/links and computations
      if (this.childByKey[unescapedKey] && this.childByKey[unescapedKey]._link) { return true; }
    }
  };

  RootModel__proto__.joinKey = function joinKey (key, opts) {
    if (key[0] === '~' && key[1] === '/') { key = key.slice(2); }

    if (key[0] === '@') {
      var fn = specialModels[key];
      if (fn) { return fn(this); }
    } else {
      return Model.prototype.joinKey.call(this, key, opts);
    }
  };

  RootModel__proto__.set = function set (value) {
    // TODO wrapping root node is a baaaad idea. We should prevent this
    var wrapper = this.wrapper;
    if (wrapper) {
      var shouldTeardown = !wrapper.reset || wrapper.reset(value) === false;

      if (shouldTeardown) {
        wrapper.teardown();
        this.wrapper = null;
        this.value = value;
        this.adapt();
      }
    } else {
      this.value = value;
      this.adapt();
    }

    this.deps.forEach(handleChange);
    this.children.forEach(mark);
  };

  RootModel__proto__.retrieve = function retrieve () {
    return this.wrapper ? this.wrapper.get() : this.value;
  };

  RootModel__proto__.teardown = function teardown () {
    Model.prototype.teardown.call(this);
    this.ractiveModel && this.ractiveModel.teardown();
  };

  return RootModel;
}(Model));
RootModel.prototype.update = noop;

function attachImplicits(model, fragment) {
  if (model._link && model._link.implicit && model._link.isDetached()) {
    model.attach(fragment);
  }

  // look for virtual children to relink and cascade
  for (var k in model.childByKey) {
    if (model.value) {
      if (k in model.value) {
        attachImplicits(model.childByKey[k], fragment);
      } else if (!model.childByKey[k]._link || model.childByKey[k]._link.isDetached()) {
        var mdl = resolveReference(fragment, k);
        if (mdl) {
          model.childByKey[k].link(mdl, k, { implicit: true });
        }
      }
    }
  }
}

function detachImplicits(model) {
  if (model._link && model._link.implicit) {
    model.unlink();
  }

  for (var k in model.childByKey) {
    detachImplicits(model.childByKey[k]);
  }
}

function subscribe(instance, options, type) {
  var subs = (instance.constructor[("_" + type)] || []).concat(toPairs(options[type] || []));
  var single = type === 'on' ? 'once' : (type + "Once");

  subs.forEach(function (ref) {
    var target = ref[0];
    var config = ref[1];

    if (isFunction(config)) {
      instance[type](target, config);
    } else if (isObjectType(config) && isFunction(config.handler)) {
      instance[config.once ? single : type](target, config.handler, create(config));
    }
  });
}

var registryNames$1 = [
  'adaptors',
  'components',
  'decorators',
  'easing',
  'events',
  'interpolators',
  'partials',
  'transitions'
];

var protoRegistries = ['computed', 'helpers'];

var uid = 0;

function construct(ractive, options) {
  if (Ractive.DEBUG) { welcome(); }

  initialiseProperties(ractive);
  handleAttributes(ractive);

  // set up event subscribers
  subscribe(ractive, options, 'on');

  // if there's not a delegation setting, inherit from parent if it's not default
  if (
    !hasOwn(options, 'delegate') &&
    ractive.parent &&
    ractive.parent.delegate !== ractive.delegate
  ) {
    ractive.delegate = false;
  }

  // plugins that need to run at construct
  if (isArray(options.use)) {
    ractive.use.apply(ractive, options.use.filter(function (p) { return p.construct; }));
  }

  hooks.construct.fire(ractive, options);
  if (options.onconstruct) { options.onconstruct.call(ractive, getRactiveContext(ractive), options); }

  // Add registries
  var i = registryNames$1.length;
  while (i--) {
    var name = registryNames$1[i];
    ractive[name] = assign(create(ractive.constructor[name] || null), options[name]);
  }

  i = protoRegistries.length;
  while (i--) {
    var name$1 = protoRegistries[i];
    ractive[name$1] = assign(create(ractive.constructor.prototype[name$1]), options[name$1]);
  }

  if (ractive._attributePartial) {
    ractive.partials['extra-attributes'] = ractive._attributePartial;
    delete ractive._attributePartial;
  }

  // Create a viewmodel
  var viewmodel = new RootModel({
    adapt: getAdaptors(ractive, ractive.adapt, options),
    data: dataConfigurator.init(ractive.constructor, ractive, options),
    ractive: ractive
  });

  // once resolved, share the adaptors array between the root model and instance
  ractive.adapt = viewmodel.adaptors;

  ractive.viewmodel = viewmodel;

  for (var k in ractive.computed) {
    compute.call(ractive, k, ractive.computed[k]);
  }
}

function getAdaptors(ractive, protoAdapt, options) {
  protoAdapt = protoAdapt.map(lookup);
  var adapt = ensureArray(options.adapt).map(lookup);

  var srcs = [protoAdapt, adapt];
  if (ractive.parent && !ractive.isolated) {
    srcs.push(ractive.parent.viewmodel.adaptors);
  }

  return combine.apply(null, srcs);

  function lookup(adaptor) {
    if (isString(adaptor)) {
      adaptor = findInViewHierarchy('adaptors', ractive, adaptor);

      if (!adaptor) {
        fatal(missingPlugin(adaptor, 'adaptor'));
      }
    }

    return adaptor;
  }
}

function initialiseProperties(ractive) {
  // Generate a unique identifier, for places where you'd use a weak map if it
  // existed
  ractive._guid = 'r-' + uid++;

  // events
  ractive._subs = create(null);
  ractive._nsSubs = 0;

  // storage for item configuration from instantiation to reset,
  // like dynamic functions or original values
  ractive._config = {};

  // events
  ractive.event = null;
  ractive._eventQueue = [];

  // observers
  ractive._observers = [];

  // external children
  ractive._children = [];
  ractive._children.byName = {};
  ractive.children = ractive._children;

  if (!ractive.component) {
    ractive.root = ractive;
    ractive.parent = ractive.container = null; // TODO container still applicable?
  }
}

function handleAttributes(ractive) {
  var component = ractive.component;
  var attributes = ractive.constructor.attributes;

  if (attributes && component) {
    var tpl = component.template;
    var attrs = tpl.m ? tpl.m.slice() : [];

    // grab all of the passed attribute names
    var props = attrs.filter(function (a) { return a.t === ATTRIBUTE; }).map(function (a) { return a.n; });

    // warn about missing requireds
    attributes.required.forEach(function (p) {
      if (!~props.indexOf(p)) {
        warnIfDebug(("Component '" + (component.name) + "' requires attribute '" + p + "' to be provided"));
      }
    });

    // set up a partial containing non-property attributes
    var all = attributes.optional.concat(attributes.required);
    var partial = [];
    var i = attrs.length;
    while (i--) {
      var a = attrs[i];
      if (a.t === ATTRIBUTE && !~all.indexOf(a.n)) {
        if (attributes.mapAll) {
          // map the attribute if requested and make the extra attribute in the partial refer to the mapping
          partial.unshift({
            t: ATTRIBUTE,
            n: a.n,
            f: [{ t: INTERPOLATOR, r: ("~/" + (a.n)) }]
          });
        } else {
          // transfer the attribute to the extra attributes partal
          partial.unshift(attrs.splice(i, 1)[0]);
        }
      } else if (
        !attributes.mapAll &&
        (a.t === DECORATOR || a.t === TRANSITION || a.t === BINDING_FLAG)
      ) {
        partial.unshift(attrs.splice(i, 1)[0]);
      }
    }

    if (partial.length) { component.template = { t: tpl.t, e: tpl.e, f: tpl.f, m: attrs, p: tpl.p }; }
    ractive._attributePartial = partial;
  }
}

var Component = (function (Item) {
  function Component(options, ComponentConstructor) {
    var this$1 = this;

    Item.call(this, options);
    var template = options.template;
    this.isAnchor = template.t === ANCHOR;
    this.type = this.isAnchor ? ANCHOR : COMPONENT; // override ELEMENT from super
    var attrs = template.m;

    var partials = template.p || {};
    if (!('content' in partials)) { partials.content = template.f || []; }
    this._partials = partials; // TEMP

    if (this.isAnchor) {
      this.name = template.n;

      this.addChild = addChild;
      this.removeChild = removeChild;
    } else {
      var instance = new ComponentConstructor({ component: true });

      this.instance = instance;
      this.name = template.e;

      if (instance.el || instance.target) {
        warnIfDebug(
          ("The <" + (this.name) + "> component has a default '" + (instance.el ? 'el' : 'target') + "' property; it has been disregarded")
        );
        instance.el = instance.target = null;
      }

      // find container
      var fragment = options.up;
      var container;
      while (fragment) {
        if (fragment.owner.type === YIELDER) {
          container = fragment.owner.container;
          break;
        }

        fragment = fragment.parent;
      }

      // add component-instance-specific properties
      instance.parent = this.up.ractive;
      instance.container = container || null;
      instance.root = instance.parent.root;
      instance.component = this;

      construct(this.instance, { partials: partials }, ComponentConstructor);

      // these can be modified during construction
      template = this.template;
      attrs = template.m;

      // allow components that are so inclined to add programmatic mappings
      if (isArray(this.mappings)) {
        attrs = (attrs || []).concat(this.mappings);
      } else if (isString(this.mappings)) {
        attrs = (attrs || []).concat(parser.parse(this.mappings, { attributes: true }).t);
      }

      // for hackability, this could be an open option
      // for any ractive instance, but for now, just
      // for components and just for ractive...
      instance._inlinePartials = partials;
    }

    this.attributeByName = {};
    this.attributes = [];

    if (attrs) {
      var leftovers = [];
      attrs.forEach(function (template) {
        switch (template.t) {
          case ATTRIBUTE:
          case EVENT:
            this$1.attributes.push(
              createItem({
                owner: this$1,
                up: this$1.up,
                template: template
              })
            );
            break;

          case TRANSITION:
          case BINDING_FLAG:
          case DECORATOR:
            break;

          default:
            leftovers.push(template);
            break;
        }
      });

      if (leftovers.length) {
        this.attributes.push(
          new ConditionalAttribute({
            owner: this,
            up: this.up,
            template: leftovers
          })
        );
      }
    }

    this.eventHandlers = [];
  }

  if ( Item ) Component.__proto__ = Item;
  var Component__proto__ = Component.prototype = Object.create( Item && Item.prototype );
  Component__proto__.constructor = Component;

  Component__proto__.bind = function bind () {
    if (!this.isAnchor) {
      this.attributes.forEach(bind$1);
      this.eventHandlers.forEach(bind$1);

      initialise(
        this.instance,
        {
          partials: this._partials
        },
        {
          cssIds: this.up.cssIds
        }
      );

      if (this.instance.target || this.instance.el) { this.extern = true; }

      this.bound = true;
    }
  };

  Component__proto__.bubble = function bubble () {
    if (!this.dirty) {
      this.dirty = true;
      this.up.bubble();
    }
  };

  Component__proto__.destroyed = function destroyed () {
    if (!this.isAnchor && this.instance.fragment) { this.instance.fragment.destroyed(); }
  };

  Component__proto__.detach = function detach () {
    if (this.isAnchor) {
      if (this.instance) { return this.instance.fragment.detach(); }
      return createDocumentFragment();
    }

    return this.instance.fragment.detach();
  };

  Component__proto__.find = function find (selector, options) {
    if (this.instance) { return this.instance.fragment.find(selector, options); }
  };

  Component__proto__.findAll = function findAll (selector, options) {
    if (this.instance) { this.instance.fragment.findAll(selector, options); }
  };

  Component__proto__.findComponent = function findComponent (name, options) {
    if (!name || this.name === name) { return this.instance; }

    if (this.instance.fragment) {
      return this.instance.fragment.findComponent(name, options);
    }
  };

  Component__proto__.findAllComponents = function findAllComponents (name, options) {
    var result = options.result;

    if (this.instance && (!name || this.name === name)) {
      result.push(this.instance);
    }

    if (this.instance) { this.instance.findAllComponents(name, options); }
  };

  Component__proto__.firstNode = function firstNode (skipParent) {
    if (this.instance) { return this.instance.fragment.firstNode(skipParent); }
  };

  Component__proto__.getContext = function getContext () {
    var assigns = [], len = arguments.length;
    while ( len-- ) assigns[ len ] = arguments[ len ];

    assigns.unshift(this.instance);
    return getRactiveContext.apply(null, assigns);
  };

  Component__proto__.rebound = function rebound (update$$1) {
    this.attributes.forEach(function (x) { return x.rebound(update$$1); });
  };

  Component__proto__.render = function render$2 (target, occupants) {
    if (this.isAnchor) {
      this.rendered = true;
      this.target = target;

      if (!checking.length) {
        checking.push(this.ractive);
        if (occupants) {
          this.occupants = occupants;
          checkAnchors();
          this.occupants = null;
        } else {
          runloop.scheduleTask(checkAnchors, true);
        }
      }
    } else {
      this.attributes.forEach(render);
      this.eventHandlers.forEach(render);

      if (this.extern) {
        this.instance.delegate = false;
        this.instance.render();
      } else {
        render$1(this.instance, target, null, occupants);
      }

      this.rendered = true;
    }
  };

  Component__proto__.shuffled = function shuffled () {
    Item.prototype.shuffled.call(this);
    this.instance &&
      !this.instance.isolated &&
      this.instance.fragment &&
      this.instance.fragment.shuffled();
  };

  Component__proto__.toString = function toString () {
    if (this.instance) { return this.instance.toHTML(); }
  };

  Component__proto__.unbind = function unbind$1 (view) {
    if (!this.isAnchor) {
      this.bound = false;

      this.attributes.forEach(unbind);

      if (view) { this.instance.fragment.unbind(); }
      else { teardown$1(this.instance, function () { return runloop.promise(); }); }
    }
  };

  Component__proto__.unrender = function unrender$1 (shouldDestroy) {
    this.shouldDestroy = shouldDestroy;

    if (this.isAnchor) {
      if (this.item) { unrenderItem(this, this.item); }
      this.target = null;
      if (!checking.length) {
        checking.push(this.ractive);
        runloop.scheduleTask(checkAnchors, true);
      }
    } else {
      this.instance.unrender();
      this.instance.el = this.instance.target = null;
      this.attributes.forEach(unrender);
      this.eventHandlers.forEach(unrender);
    }

    this.rendered = false;
  };

  Component__proto__.update = function update$2 () {
    this.dirty = false;
    if (this.instance) {
      this.instance.fragment.update();
      this.attributes.forEach(update);
      this.eventHandlers.forEach(update);
    }
  };

  return Component;
}(Item));

function addChild(meta) {
  if (this.item) { this.removeChild(this.item); }

  var child = meta.instance;
  meta.anchor = this;

  meta.up = this.up;
  meta.name = meta.nameOption || this.name;
  this.name = meta.name;

  if (!child.isolated) { child.viewmodel.attached(this.up); }

  // render as necessary
  if (this.rendered) {
    renderItem(this, meta);
  }
}

function removeChild(meta) {
  // unrender as necessary
  if (this.item === meta) {
    unrenderItem(this, meta);
    this.name = this.template.n;
  }
}

function renderItem(anchor, meta) {
  if (!anchor.rendered) { return; }

  meta.shouldDestroy = false;
  meta.up = anchor.up;

  anchor.item = meta;
  anchor.instance = meta.instance;
  var nextNode = anchor.up.findNextNode(anchor);

  if (meta.instance.fragment.rendered) {
    meta.instance.unrender();
  }

  meta.partials = meta.instance.partials;
  meta.instance.partials = assign(create(meta.partials), meta.partials, anchor._partials);

  meta.instance.fragment.unbind(true);
  meta.instance.fragment.componentParent = anchor.up;
  meta.instance.fragment.bind(meta.instance.viewmodel);

  anchor.attributes.forEach(bind$1);
  anchor.eventHandlers.forEach(bind$1);
  anchor.attributes.forEach(render);
  anchor.eventHandlers.forEach(render);

  var target = anchor.up.findParentNode();
  render$1(meta.instance, target, target.contains(nextNode) ? nextNode : null, anchor.occupants);

  if (meta.lastBound !== anchor) {
    meta.lastBound = anchor;
  }
}

function unrenderItem(anchor, meta) {
  if (!anchor.rendered) { return; }

  meta.shouldDestroy = true;
  meta.instance.unrender();

  anchor.eventHandlers.forEach(unrender);
  anchor.attributes.forEach(unrender);
  anchor.eventHandlers.forEach(unbind);
  anchor.attributes.forEach(unbind);

  meta.instance.el = meta.instance.anchor = null;
  meta.instance.fragment.componentParent = null;
  meta.up = null;
  meta.anchor = null;
  anchor.item = null;
  anchor.instance = null;
}

var checking = [];
function checkAnchors() {
  var list = checking;
  checking = [];

  list.forEach(updateAnchors);
}

var ComputationChild = (function (Model) {
  function ComputationChild(parent, key) {
    Model.call(this, parent, key);

    this.isReadonly = !this.root.ractive.syncComputedChildren;
    this.dirty = true;
    this.isComputed = true;
  }

  if ( Model ) ComputationChild.__proto__ = Model;
  var ComputationChild__proto__ = ComputationChild.prototype = Object.create( Model && Model.prototype );
  ComputationChild__proto__.constructor = ComputationChild;

  var prototypeAccessors$1 = { setRoot: {} };

  prototypeAccessors$1.setRoot.get = function () {
    return this.parent.setRoot;
  };

  ComputationChild__proto__.applyValue = function applyValue (value) {
    Model.prototype.applyValue.call(this, value);

    if (!this.isReadonly) {
      var source = this.parent;
      // computed models don't have a shuffle method
      while (source && source.shuffle) {
        source = source.parent;
      }

      if (source) {
        source.dependencies.forEach(mark);
      }
    }

    if (this.setRoot) {
      this.setRoot.set(this.setRoot.value);
    }
  };

  ComputationChild__proto__.get = function get (shouldCapture, opts) {
    if (shouldCapture) { capture(this); }

    if (this.dirty) {
      var parentValue = this.parent.get();
      this.value = parentValue ? parentValue[this.key] : undefined;
      if (this.wrapper) { this.newWrapperValue = this.value; }
      this.adapt();
    }

    this.dirty = false;

    return (opts && 'unwrap' in opts ? opts.unwrap !== false : shouldCapture) && this.wrapper
      ? this.wrapperValue
      : this.value;
  };

  ComputationChild__proto__.handleChange = function handleChange$2 () {
    if (this.dirty) {
      this.deps.forEach(handleChange);
      return;
    }

    this.dirty = true;

    if (this.boundValue) { this.boundValue = null; }

    this.links.forEach(marked);
    this.deps.forEach(handleChange);
    this.children.forEach(handleChange);
  };

  ComputationChild__proto__.joinKey = function joinKey (key) {
    if (isUndefined(key) || key === '') { return this; }

    if (!hasOwn(this.childByKey, key)) {
      var child = new ComputationChild(this, key);
      this.children.push(child);
      this.childByKey[key] = child;
    }

    return this.childByKey[key];
  };

  Object.defineProperties( ComputationChild__proto__, prototypeAccessors$1 );

  return ComputationChild;
}(Model));

/* global console */
/* eslint no-console:"off" */

var Computation = (function (Model) {
  function Computation(parent, signature, key) {
    Model.call(this, parent, key);

    this.signature = signature;

    this.isReadonly = !this.signature.setter;
    this.isComputed = true;

    this.dependencies = [];

    this.children = [];
    this.childByKey = {};

    this.deps = [];

    this.dirty = true;

    // TODO: is there a less hackish way to do this?
    this.shuffle = undefined;
  }

  if ( Model ) Computation.__proto__ = Model;
  var Computation__proto__ = Computation.prototype = Object.create( Model && Model.prototype );
  Computation__proto__.constructor = Computation;

  var prototypeAccessors$2 = { setRoot: {} };

  prototypeAccessors$2.setRoot.get = function () {
    if (this.signature.setter) { return this; }
  };

  Computation__proto__.get = function get (shouldCapture, opts) {
    if (shouldCapture) { capture(this); }

    if (this.dirty) {
      var old = this.value;
      this.value = this.getValue();
      // this may cause a view somewhere to update, so it must be in a runloop
      if (!runloop.active()) {
        runloop.start();
        if (!isEqual(old, this.value)) { this.notifyUpstream(); }
        runloop.end();
      } else {
        if (!isEqual(old, this.value)) { this.notifyUpstream(); }
      }
      if (this.wrapper) { this.newWrapperValue = this.value; }
      this.adapt();
      this.dirty = false;
    }

    // if capturing, this value needs to be unwrapped because it's for external use
    return maybeBind(
      this,
      // if unwrap is supplied, it overrides capture
      this.wrapper && (opts && 'unwrap' in opts ? opts.unwrap !== false : shouldCapture)
        ? this.wrapperValue
        : this.value,
      !opts || opts.shouldBind !== false
    );
  };

  Computation__proto__.getContext = function getContext () {
    return this.parent.isRoot ? this.root.ractive : this.parent.get(false, noVirtual);
  };

  Computation__proto__.getValue = function getValue () {
    startCapturing();
    var result;

    try {
      result = this.signature.getter.call(this.root.ractive, this.getContext(), this.getKeypath());
    } catch (err) {
      warnIfDebug(("Failed to compute " + (this.getKeypath()) + ": " + (err.message || err)));

      // TODO this is all well and good in Chrome, but...
      // ...also, should encapsulate this stuff better, and only
      // show it if Ractive.DEBUG
      if (hasConsole) {
        if (console.groupCollapsed)
          { console.groupCollapsed(
            '%cshow details',
            'color: rgb(82, 140, 224); font-weight: normal; text-decoration: underline;'
          ); }
        var sig = this.signature;
        console.error(
          ((err.name) + ": " + (err.message) + "\n\n" + (sig.getterString) + (sig.getterUseStack ? '\n\n' + err.stack : ''))
        );
        if (console.groupCollapsed) { console.groupEnd(); }
      }
    }

    var dependencies = stopCapturing();
    if (this.parent.keypath && !~dependencies.indexOf(this.parent)) { dependencies.push(this.parent); }
    this.setDependencies(dependencies);

    return result;
  };

  Computation__proto__.mark = function mark () {
    this.handleChange();
  };

  Computation__proto__.rebind = function rebind (next, previous) {
    // computations will grab all of their deps again automagically
    if (next !== previous) { this.handleChange(); }
  };

  Computation__proto__.set = function set (value) {
    if (this.isReadonly) {
      throw new Error(("Cannot set read-only computed value '" + (this.key) + "'"));
    }

    this.signature.setter(value, this.getContext(), this.getKeypath());
    this.mark();
  };

  Computation__proto__.setDependencies = function setDependencies (dependencies) {
    var this$1 = this;

    // unregister any soft dependencies we no longer have
    var i = this.dependencies.length;
    while (i--) {
      var model = this$1.dependencies[i];
      if (!~dependencies.indexOf(model)) { model.unregister(this$1); }
    }

    // and add any new ones
    i = dependencies.length;
    while (i--) {
      var model$1 = dependencies[i];
      if (!~this$1.dependencies.indexOf(model$1)) { model$1.register(this$1); }
    }

    this.dependencies = dependencies;
  };

  Computation__proto__.teardown = function teardown () {
    var this$1 = this;

    var i = this.dependencies.length;
    while (i--) {
      if (this$1.dependencies[i]) { this$1.dependencies[i].unregister(this$1); }
    }
    if (this.parent.computed[this.key] === this) { delete this.parent.computed[this.key]; }
    Model.prototype.teardown.call(this);
  };

  Object.defineProperties( Computation__proto__, prototypeAccessors$2 );

  return Computation;
}(Model));

var prototype = Computation.prototype;
var child = ComputationChild.prototype;
prototype.handleChange = child.handleChange;
prototype.joinKey = child.joinKey;

shared$1.Computation = Computation;

var ExpressionProxy = (function (Model) {
  function ExpressionProxy(fragment, template) {
    var this$1 = this;

    Model.call(this, fragment.ractive.viewmodel, null);

    this.fragment = fragment;
    this.template = template;

    this.isReadonly = true;
    this.isComputed = true;
    this.dirty = true;

    this.fn =
      fragment.ractive.allowExpressions === false
        ? noop
        : getFunction(template.s, template.r.length);

    this.models = this.template.r.map(function (ref) {
      return resolveReference(this$1.fragment, ref);
    });
    this.dependencies = [];

    this.shuffle = undefined;

    this.bubble();
  }

  if ( Model ) ExpressionProxy.__proto__ = Model;
  var ExpressionProxy__proto__ = ExpressionProxy.prototype = Object.create( Model && Model.prototype );
  ExpressionProxy__proto__.constructor = ExpressionProxy;

  ExpressionProxy__proto__.bubble = function bubble (actuallyChanged) {
    if ( actuallyChanged === void 0 ) actuallyChanged = true;

    // refresh the keypath
    this.keypath = undefined;

    if (actuallyChanged) {
      this.handleChange();
    }
  };

  ExpressionProxy__proto__.getKeypath = function getKeypath () {
    var this$1 = this;

    if (!this.template) { return '@undefined'; }
    if (!this.keypath) {
      this.keypath =
        '@' +
        this.template.s.replace(/_(\d+)/g, function (match, i) {
          if (i >= this$1.models.length) { return match; }

          var model = this$1.models[i];
          return model ? model.getKeypath() : '@undefined';
        });
    }

    return this.keypath;
  };

  ExpressionProxy__proto__.getValue = function getValue () {
    var this$1 = this;

    startCapturing();
    var result;

    try {
      var params = this.models.map(function (m) { return (m ? m.get(true) : undefined); });
      result = this.fn.apply(this.fragment.ractive, params);
    } catch (err) {
      warnIfDebug(("Failed to compute " + (this.getKeypath()) + ": " + (err.message || err)));
    }

    var dependencies = stopCapturing();
    // remove missing deps
    this.dependencies
      .filter(function (d) { return !~dependencies.indexOf(d); })
      .forEach(function (d) {
        d.unregister(this$1);
        removeFromArray(this$1.dependencies, d);
      });
    // register new deps
    dependencies
      .filter(function (d) { return !~this$1.dependencies.indexOf(d); })
      .forEach(function (d) {
        d.register(this$1);
        this$1.dependencies.push(d);
      });

    return result;
  };

  ExpressionProxy__proto__.notifyUpstream = function notifyUpstream () {};

  ExpressionProxy__proto__.rebind = function rebind (next, previous, safe) {
    var idx = this.models.indexOf(previous);

    if (~idx) {
      next = rebindMatch(this.template.r[idx], next, previous);
      if (next !== previous) {
        previous.unregister(this);
        this.models.splice(idx, 1, next);
        if (next) { next.addShuffleRegister(this, 'mark'); }
      }
    }
    this.bubble(!safe);
  };

  ExpressionProxy__proto__.rebound = function rebound (update) {
    var this$1 = this;

    this.models = this.template.r.map(function (ref) { return resolveReference(this$1.fragment, ref); });
    if (update) { this.bubble(true); }
  };

  ExpressionProxy__proto__.retrieve = function retrieve () {
    return this.get();
  };

  ExpressionProxy__proto__.teardown = function teardown () {
    var this$1 = this;

    this.fragment = undefined;
    if (this.dependencies) { this.dependencies.forEach(function (d) { return d.unregister(this$1); }); }
    Model.prototype.teardown.call(this);
  };

  ExpressionProxy__proto__.unreference = function unreference () {
    Model.prototype.unreference.call(this);
    collect(this);
  };

  ExpressionProxy__proto__.unregister = function unregister (dep) {
    Model.prototype.unregister.call(this, dep);
    collect(this);
  };

  ExpressionProxy__proto__.unregisterLink = function unregisterLink (link) {
    Model.prototype.unregisterLink.call(this, link);
    collect(this);
  };

  return ExpressionProxy;
}(Model));

var prototype$1 = ExpressionProxy.prototype;
var computation = Computation.prototype;
prototype$1.get = computation.get;
prototype$1.handleChange = computation.handleChange;
prototype$1.joinKey = computation.joinKey;
prototype$1.mark = computation.mark;
prototype$1.unbind = noop;

function collect(model) {
  if (!model.deps.length && !model.refs && !model.links.length) { model.teardown(); }
}

function setupArgsFn(item, template, fragment, opts) {
  if ( opts === void 0 ) opts = {};

  if (template && template.f && template.f.s) {
    if (opts.register) {
      item.model = new ExpressionProxy(fragment, template.f);
      item.model.register(item);
    } else {
      item.fn = getFunction(template.f.s, template.f.r.length);
    }
  }
}

function resolveArgs(item, template, fragment, opts) {
  if ( opts === void 0 ) opts = {};

  return template.f.r.map(function (ref, i) {
    var model;

    if (opts.specialRef && (model = opts.specialRef(ref, i))) { return model; }

    model = resolveReference(fragment, ref);

    return model;
  });
}

function teardownArgsFn(item) {
  if (item.model) { item.model.unregister(item); }
}

var missingDecorator = {
  update: noop,
  teardown: noop
};

var Decorator = function Decorator(options) {
  this.owner = options.owner || options.up.owner || findElement(options.up);
  this.element = this.owner.attributeByName ? this.owner : findElement(options.up);
  this.up = options.up || this.owner.up;
  this.ractive = this.up.ractive || this.owner.ractive;
  var template = (this.template = options.template);

  this.name = template.n;

  this.node = null;
  this.handle = null;

  this.element.decorators.push(this);
};
var Decorator__proto__ = Decorator.prototype;

Decorator__proto__.bind = function bind () {
  // if the owner is the elment, make sure the context includes the element
  var frag = this.element === this.owner ? new Fragment({ owner: this.owner }) : this.up;
  setupArgsFn(this, this.template, frag, { register: true });
};

Decorator__proto__.bubble = function bubble () {
  if (!this.dirty) {
    this.dirty = true;
    // decorators may be owned directly by an element or by a fragment if conditional
    this.owner.bubble();
    this.up.bubble();
  }
};

Decorator__proto__.destroyed = function destroyed () {
  if (this.handle) {
    this.handle.teardown();
    this.handle = null;
  }
  this.shouldDestroy = true;
};

Decorator__proto__.handleChange = function handleChange () {
  this.bubble();
};

Decorator__proto__.rebound = function rebound (update) {
  if (this.model) { this.model.rebound(update); }
};

Decorator__proto__.render = function render () {
    var this$1 = this;

  this.shouldDestroy = false;
  if (this.handle) { this.unrender(); }
  var ractive = this.ractive;
  runloop.scheduleTask(function () {
    // bail if the host element has managed to become unrendered
    if (!this$1.element.rendered) { return; }

    var fn = findInViewHierarchy('decorators', ractive, this$1.name);

    if (!fn) {
      warnOnce(missingPlugin(this$1.name, 'decorator'));
      this$1.handle = missingDecorator;
      return;
    }

    this$1.node = this$1.element.node;

    var args = this$1.model ? this$1.model.get() : [];
    localFragment.f = this$1.up;
    this$1.handle = fn.apply(ractive, [this$1.node].concat(args));
    localFragment.f = null;

    if (!this$1.handle || !this$1.handle.teardown) {
      throw new Error(
        ("The '" + (this$1.name) + "' decorator must return an object with a teardown method")
      );
    }

    // watch out for decorators that cause their host element to be unrendered
    if (this$1.shouldDestroy) { this$1.destroyed(); }
  }, true);
};

Decorator__proto__.shuffled = function shuffled () {
  if (this.handle && this.handle.shuffled) { this.handle.shuffled(); }
};

Decorator__proto__.toString = function toString () {
  return '';
};

Decorator__proto__.unbind = function unbind () {
  teardownArgsFn(this, this.template);
};

Decorator__proto__.unrender = function unrender (shouldDestroy) {
  if ((!shouldDestroy || this.element.rendered) && this.handle) {
    this.handle.teardown();
    this.handle = null;
  }
};

Decorator__proto__.update = function update () {
  var instance = this.handle;

  if (!this.dirty) {
    if (instance && instance.invalidate) {
      runloop.scheduleTask(function () { return instance.invalidate(); }, true);
    }
    return;
  }

  this.dirty = false;

  if (instance) {
    if (!instance.update) {
      this.unrender();
      this.render();
    } else {
      var args = this.model ? this.model.get() : [];
      instance.update.apply(this.ractive, args);
    }
  }
};

Decorator.prototype.firstNode = noop;

var Doctype = (function (Item) {
  function Doctype () {
    Item.apply(this, arguments);
  }

  if ( Item ) Doctype.__proto__ = Item;
  var Doctype__proto__ = Doctype.prototype = Object.create( Item && Item.prototype );
  Doctype__proto__.constructor = Doctype;

  Doctype__proto__.toString = function toString () {
    return '<!DOCTYPE' + this.template.a + '>';
  };

  return Doctype;
}(Item));

var proto$2 = Doctype.prototype;
proto$2.bind = proto$2.render = proto$2.teardown = proto$2.unbind = proto$2.unrender = proto$2.update = noop;

var Binding = function Binding(element, name) {
  if ( name === void 0 ) name = 'value';

  this.element = element;
  this.ractive = element.ractive;
  this.attribute = element.attributeByName[name];

  var interpolator = this.attribute.interpolator;
  interpolator.twowayBinding = this;

  var model = interpolator.model;

  if (model.isReadonly && !model.setRoot) {
    var keypath = model.getKeypath().replace(/^@/, '');
    warnOnceIfDebug(
      ("Cannot use two-way binding on <" + (element.name) + "> element: " + keypath + " is read-only. To suppress this warning use <" + (element.name) + " twoway='false'...>"),
      { ractive: this.ractive }
    );
    return false;
  }

  this.attribute.isTwoway = true;
  this.model = model;

  // initialise value, if it's undefined
  var value = model.get();
  this.wasUndefined = isUndefined(value);

  if (isUndefined(value) && this.getInitialValue) {
    value = this.getInitialValue();
    model.set(value);
  }
  this.lastVal(true, value);

  var parentForm = findElement(this.element, false, 'form');
  if (parentForm) {
    this.resetValue = value;
    parentForm.formBindings.push(this);
  }
};
var Binding__proto__ = Binding.prototype;

Binding__proto__.bind = function bind () {
  this.model.registerTwowayBinding(this);
};

Binding__proto__.handleChange = function handleChange () {
    var this$1 = this;

  var value = this.getValue();
  if (this.lastVal() === value) { return; }

  runloop.start();
  this.attribute.locked = true;
  this.model.set(value);
  this.lastVal(true, value);

  // if the value changes before observers fire, unlock to be updatable cause something weird and potentially freezy is up
  if (this.model.get() !== value) { this.attribute.locked = false; }
  else { runloop.scheduleTask(function () { return (this$1.attribute.locked = false); }); }

  runloop.end();
};

Binding__proto__.lastVal = function lastVal (setting, value) {
  if (setting) { this.lastValue = value; }
  else { return this.lastValue; }
};

Binding__proto__.rebind = function rebind (next, previous) {
    var this$1 = this;

  if (this.model && this.model === previous) { previous.unregisterTwowayBinding(this); }
  if (next) {
    this.model = next;
    runloop.scheduleTask(function () { return next.registerTwowayBinding(this$1); });
  }
};

Binding__proto__.rebound = function rebound () {
  if (this.model) { this.model.unregisterTwowayBinding(this); }
  this.model = this.attribute.interpolator.model;
  this.model && this.model.registerTwowayBinding(this);
};

Binding__proto__.render = function render () {
  this.node = this.element.node;
  this.node._ractive.binding = this;
  this.rendered = true; // TODO is this used anywhere?
};

Binding__proto__.setFromNode = function setFromNode (node) {
  this.model.set(node.value);
};

Binding__proto__.unbind = function unbind () {
  this.model && this.model.unregisterTwowayBinding(this);
};

Binding.prototype.unrender = noop;

// This is the handler for DOM events that would lead to a change in the model
// (i.e. change, sometimes, input, and occasionally click and keyup)
function handleDomEvent() {
  this._ractive.binding.handleChange();
}

var CheckboxBinding = (function (Binding) {
  function CheckboxBinding(element) {
    Binding.call(this, element, 'checked');
  }

  if ( Binding ) CheckboxBinding.__proto__ = Binding;
  var CheckboxBinding__proto__ = CheckboxBinding.prototype = Object.create( Binding && Binding.prototype );
  CheckboxBinding__proto__.constructor = CheckboxBinding;

  CheckboxBinding__proto__.render = function render () {
    Binding.prototype.render.call(this);

    this.element.on('change', handleDomEvent);

    if (this.node.attachEvent) {
      this.element.on('click', handleDomEvent);
    }
  };

  CheckboxBinding__proto__.unrender = function unrender () {
    this.element.off('change', handleDomEvent);

    if (this.node.attachEvent) {
      this.element.off('click', handleDomEvent);
    }
  };

  CheckboxBinding__proto__.getInitialValue = function getInitialValue () {
    return !!this.element.getAttribute('checked');
  };

  CheckboxBinding__proto__.getValue = function getValue () {
    return this.node.checked;
  };

  CheckboxBinding__proto__.setFromNode = function setFromNode (node) {
    this.model.set(node.checked);
  };

  return CheckboxBinding;
}(Binding));

function getBindingGroup(group, model, getValue) {
  var hash = group + "-bindingGroup";
  return model[hash] || (model[hash] = new BindingGroup(hash, model, getValue));
}

var BindingGroup = function BindingGroup(hash, model, getValue) {
  var this$1 = this;

  this.model = model;
  this.hash = hash;
  this.getValue = function () {
    this$1.value = getValue.call(this$1);
    return this$1.value;
  };

  this.bindings = [];
};
var BindingGroup__proto__ = BindingGroup.prototype;

BindingGroup__proto__.add = function add (binding) {
  this.bindings.push(binding);
};

BindingGroup__proto__.bind = function bind () {
    var this$1 = this;

  this.value = this.model.get();
  this.bindings.forEach(function (b) { return b.lastVal(true, this$1.value); });
  this.model.registerTwowayBinding(this);
  this.bound = true;
};

BindingGroup__proto__.remove = function remove (binding) {
  removeFromArray(this.bindings, binding);
  if (!this.bindings.length) {
    this.unbind();
  }
};

BindingGroup__proto__.unbind = function unbind () {
  this.model.unregisterTwowayBinding(this);
  this.bound = false;
  delete this.model[this.hash];
};

BindingGroup.prototype.rebind = Binding.prototype.rebind;

var push$1 = [].push;

function getValue() {
  var this$1 = this;

  var all = this.bindings
    .filter(function (b) { return b.node && b.node.checked; })
    .map(function (b) { return b.element.getAttribute('value'); });
  var res = [];
  all.forEach(function (v) {
    if (!this$1.bindings[0].arrayContains(res, v)) { res.push(v); }
  });
  return res;
}

var CheckboxNameBinding = (function (Binding) {
  function CheckboxNameBinding(element) {
    Binding.call(this, element, 'name');

    this.checkboxName = true; // so that ractive.updateModel() knows what to do with this

    // Each input has a reference to an array containing it and its
    // group, as two-way binding depends on being able to ascertain
    // the status of all inputs within the group
    this.group = getBindingGroup('checkboxes', this.model, getValue);
    this.group.add(this);

    if (this.noInitialValue) {
      this.group.noInitialValue = true;
    }

    // If no initial value was set, and this input is checked, we
    // update the model
    if (this.group.noInitialValue && this.element.getAttribute('checked')) {
      var existingValue = this.model.get();
      var bindingValue = this.element.getAttribute('value');

      if (!this.arrayContains(existingValue, bindingValue)) {
        push$1.call(existingValue, bindingValue); // to avoid triggering runloop with array adaptor
      }
    }
  }

  if ( Binding ) CheckboxNameBinding.__proto__ = Binding;
  var CheckboxNameBinding__proto__ = CheckboxNameBinding.prototype = Object.create( Binding && Binding.prototype );
  CheckboxNameBinding__proto__.constructor = CheckboxNameBinding;

  CheckboxNameBinding__proto__.bind = function bind () {
    if (!this.group.bound) {
      this.group.bind();
    }
  };

  CheckboxNameBinding__proto__.getInitialValue = function getInitialValue () {
    // This only gets called once per group (of inputs that
    // share a name), because it only gets called if there
    // isn't an initial value. By the same token, we can make
    // a note of that fact that there was no initial value,
    // and populate it using any `checked` attributes that
    // exist (which users should avoid, but which we should
    // support anyway to avoid breaking expectations)
    this.noInitialValue = true; // TODO are noInitialValue and wasUndefined the same thing?
    return [];
  };

  CheckboxNameBinding__proto__.getValue = function getValue () {
    return this.group.value;
  };

  CheckboxNameBinding__proto__.handleChange = function handleChange () {
    this.isChecked = this.element.node.checked;
    var mval = this.model.get();
    this.group.value = mval === undefined ? [] : mval.slice();
    var value = this.element.getAttribute('value');
    if (this.isChecked && !this.arrayContains(this.group.value, value)) {
      this.group.value.push(value);
    } else if (!this.isChecked && this.arrayContains(this.group.value, value)) {
      this.removeFromArray(this.group.value, value);
    }
    // make sure super knows there's a change
    this.lastValue = null;
    Binding.prototype.handleChange.call(this);
  };

  CheckboxNameBinding__proto__.render = function render () {
    Binding.prototype.render.call(this);

    var node = this.node;

    var existingValue = this.model.get();
    var bindingValue = this.element.getAttribute('value');

    if (isArray(existingValue)) {
      this.isChecked = this.arrayContains(existingValue, bindingValue);
    } else {
      this.isChecked = this.element.compare(existingValue, bindingValue);
    }
    node.name = '{{' + this.model.getKeypath() + '}}';
    node.checked = this.isChecked;

    this.element.on('change', handleDomEvent);

    // in case of IE emergency, bind to click event as well
    if (this.node.attachEvent) {
      this.element.on('click', handleDomEvent);
    }
  };

  CheckboxNameBinding__proto__.setFromNode = function setFromNode (node) {
    this.group.bindings.forEach(function (binding) { return (binding.wasUndefined = true); });

    if (node.checked) {
      var valueSoFar = this.group.getValue();
      valueSoFar.push(this.element.getAttribute('value'));

      this.group.model.set(valueSoFar);
    }
  };

  CheckboxNameBinding__proto__.unbind = function unbind () {
    this.group.remove(this);
  };

  CheckboxNameBinding__proto__.unrender = function unrender () {
    var el = this.element;

    el.off('change', handleDomEvent);

    if (this.node.attachEvent) {
      el.off('click', handleDomEvent);
    }
  };

  CheckboxNameBinding__proto__.arrayContains = function arrayContains (selectValue, optionValue) {
    var this$1 = this;

    var i = selectValue.length;
    while (i--) {
      if (this$1.element.compare(optionValue, selectValue[i])) { return true; }
    }
    return false;
  };

  CheckboxNameBinding__proto__.removeFromArray = function removeFromArray (array, item) {
    var this$1 = this;

    if (!array) { return; }
    var i = array.length;
    while (i--) {
      if (this$1.element.compare(item, array[i])) {
        array.splice(i, 1);
      }
    }
  };

  return CheckboxNameBinding;
}(Binding));

var ContentEditableBinding = (function (Binding) {
  function ContentEditableBinding () {
    Binding.apply(this, arguments);
  }

  if ( Binding ) ContentEditableBinding.__proto__ = Binding;
  var ContentEditableBinding__proto__ = ContentEditableBinding.prototype = Object.create( Binding && Binding.prototype );
  ContentEditableBinding__proto__.constructor = ContentEditableBinding;

  ContentEditableBinding__proto__.getInitialValue = function getInitialValue () {
    return this.element.fragment ? this.element.fragment.toString() : '';
  };

  ContentEditableBinding__proto__.getValue = function getValue () {
    return this.element.node.innerHTML;
  };

  ContentEditableBinding__proto__.render = function render () {
    Binding.prototype.render.call(this);

    var el = this.element;

    el.on('change', handleDomEvent);
    el.on('blur', handleDomEvent);

    if (!this.ractive.lazy) {
      el.on('input', handleDomEvent);

      if (this.node.attachEvent) {
        el.on('keyup', handleDomEvent);
      }
    }
  };

  ContentEditableBinding__proto__.setFromNode = function setFromNode (node) {
    this.model.set(node.innerHTML);
  };

  ContentEditableBinding__proto__.unrender = function unrender () {
    var el = this.element;

    el.off('blur', handleDomEvent);
    el.off('change', handleDomEvent);
    el.off('input', handleDomEvent);
    el.off('keyup', handleDomEvent);
  };

  return ContentEditableBinding;
}(Binding));

function handleBlur() {
  handleDomEvent.call(this);

  var value = this._ractive.binding.model.get();
  this.value = value == undefined ? '' : value;
}

function handleDelay(delay) {
  var timeout;

  return function() {
    var this$1 = this;

    if (timeout) { clearTimeout(timeout); }

    timeout = setTimeout(function () {
      var binding = this$1._ractive.binding;
      if (binding.rendered) { handleDomEvent.call(this$1); }
      timeout = null;
    }, delay);
  };
}

var GenericBinding = (function (Binding) {
  function GenericBinding () {
    Binding.apply(this, arguments);
  }

  if ( Binding ) GenericBinding.__proto__ = Binding;
  var GenericBinding__proto__ = GenericBinding.prototype = Object.create( Binding && Binding.prototype );
  GenericBinding__proto__.constructor = GenericBinding;

  GenericBinding__proto__.getInitialValue = function getInitialValue () {
    return '';
  };

  GenericBinding__proto__.getValue = function getValue () {
    return this.node.value;
  };

  GenericBinding__proto__.render = function render () {
    Binding.prototype.render.call(this);

    // any lazy setting for this element overrides the root
    // if the value is a number, it's a timeout
    var lazy = this.ractive.lazy;
    var timeout = false;
    var el = this.element;

    if ('lazy' in this.element) {
      lazy = this.element.lazy;
    }

    if (isNumeric(lazy)) {
      timeout = +lazy;
      lazy = false;
    }

    this.handler = timeout ? handleDelay(timeout) : handleDomEvent;

    var node = this.node;

    el.on('change', handleDomEvent);

    if (node.type !== 'file') {
      if (!lazy) {
        el.on('input', this.handler);

        // IE is a special snowflake
        if (node.attachEvent) {
          el.on('keyup', this.handler);
        }
      }

      el.on('blur', handleBlur);
    }
  };

  GenericBinding__proto__.unrender = function unrender () {
    var el = this.element;
    this.rendered = false;

    el.off('change', handleDomEvent);
    el.off('input', this.handler);
    el.off('keyup', this.handler);
    el.off('blur', handleBlur);
  };

  return GenericBinding;
}(Binding));

var FileBinding = (function (GenericBinding) {
  function FileBinding () {
    GenericBinding.apply(this, arguments);
  }

  if ( GenericBinding ) FileBinding.__proto__ = GenericBinding;
  var FileBinding__proto__ = FileBinding.prototype = Object.create( GenericBinding && GenericBinding.prototype );
  FileBinding__proto__.constructor = FileBinding;

  FileBinding__proto__.getInitialValue = function getInitialValue () {
    /* istanbul ignore next */
    return undefined;
  };

  FileBinding__proto__.getValue = function getValue () {
    /* istanbul ignore next */
    return this.node.files;
  };

  FileBinding__proto__.render = function render () {
    /* istanbul ignore next */
    this.element.lazy = false;
    /* istanbul ignore next */
    GenericBinding.prototype.render.call(this);
  };

  FileBinding__proto__.setFromNode = function setFromNode (node) {
    /* istanbul ignore next */
    this.model.set(node.files);
  };

  return FileBinding;
}(GenericBinding));

function getSelectedOptions(select) {
  /* istanbul ignore next */
  return select.selectedOptions
    ? toArray(select.selectedOptions)
    : select.options
    ? toArray(select.options).filter(function (option) { return option.selected; })
    : [];
}

var MultipleSelectBinding = (function (Binding) {
  function MultipleSelectBinding () {
    Binding.apply(this, arguments);
  }

  if ( Binding ) MultipleSelectBinding.__proto__ = Binding;
  var MultipleSelectBinding__proto__ = MultipleSelectBinding.prototype = Object.create( Binding && Binding.prototype );
  MultipleSelectBinding__proto__.constructor = MultipleSelectBinding;

  MultipleSelectBinding__proto__.getInitialValue = function getInitialValue () {
    return this.element.options
      .filter(function (option) { return option.getAttribute('selected'); })
      .map(function (option) { return option.getAttribute('value'); });
  };

  MultipleSelectBinding__proto__.getValue = function getValue () {
    var options = this.element.node.options;
    var len = options.length;

    var selectedValues = [];

    for (var i = 0; i < len; i += 1) {
      var option = options[i];

      if (option.selected) {
        var optionValue = option._ractive ? option._ractive.value : option.value;
        selectedValues.push(optionValue);
      }
    }

    return selectedValues;
  };

  MultipleSelectBinding__proto__.handleChange = function handleChange () {
    var attribute = this.attribute;
    var previousValue = attribute.getValue();

    var value = this.getValue();

    if (isUndefined(previousValue) || !arrayContentsMatch(value, previousValue)) {
      Binding.prototype.handleChange.call(this);
    }

    return this;
  };

  MultipleSelectBinding__proto__.render = function render () {
    Binding.prototype.render.call(this);

    this.element.on('change', handleDomEvent);

    if (isUndefined(this.model.get())) {
      // get value from DOM, if possible
      this.handleChange();
    }
  };

  MultipleSelectBinding__proto__.setFromNode = function setFromNode (node) {
    var selectedOptions = getSelectedOptions(node);
    var i = selectedOptions.length;
    var result = new Array(i);

    while (i--) {
      var option = selectedOptions[i];
      result[i] = option._ractive ? option._ractive.value : option.value;
    }

    this.model.set(result);
  };

  MultipleSelectBinding__proto__.unrender = function unrender () {
    this.element.off('change', handleDomEvent);
  };

  return MultipleSelectBinding;
}(Binding));

var NumericBinding = (function (GenericBinding) {
  function NumericBinding () {
    GenericBinding.apply(this, arguments);
  }

  if ( GenericBinding ) NumericBinding.__proto__ = GenericBinding;
  var NumericBinding__proto__ = NumericBinding.prototype = Object.create( GenericBinding && GenericBinding.prototype );
  NumericBinding__proto__.constructor = NumericBinding;

  NumericBinding__proto__.getInitialValue = function getInitialValue () {
    return undefined;
  };

  NumericBinding__proto__.getValue = function getValue () {
    var value = parseFloat(this.node.value);
    return isNaN(value) ? undefined : value;
  };

  NumericBinding__proto__.setFromNode = function setFromNode (node) {
    var value = parseFloat(node.value);
    if (!isNaN(value)) { this.model.set(value); }
  };

  return NumericBinding;
}(GenericBinding));

var siblings = {};

function getSiblings(hash) {
  return siblings[hash] || (siblings[hash] = []);
}

var RadioBinding = (function (Binding) {
  function RadioBinding(element) {
    Binding.call(this, element, 'checked');

    this.siblings = getSiblings(this.ractive._guid + this.element.getAttribute('name'));
    this.siblings.push(this);
  }

  if ( Binding ) RadioBinding.__proto__ = Binding;
  var RadioBinding__proto__ = RadioBinding.prototype = Object.create( Binding && Binding.prototype );
  RadioBinding__proto__.constructor = RadioBinding;

  RadioBinding__proto__.getValue = function getValue () {
    return this.node.checked;
  };

  RadioBinding__proto__.handleChange = function handleChange () {
    runloop.start();

    this.siblings.forEach(function (binding) {
      binding.model.set(binding.getValue());
    });

    runloop.end();
  };

  RadioBinding__proto__.render = function render () {
    Binding.prototype.render.call(this);

    this.element.on('change', handleDomEvent);

    if (this.node.attachEvent) {
      this.element.on('click', handleDomEvent);
    }
  };

  RadioBinding__proto__.setFromNode = function setFromNode (node) {
    this.model.set(node.checked);
  };

  RadioBinding__proto__.unbind = function unbind () {
    removeFromArray(this.siblings, this);
  };

  RadioBinding__proto__.unrender = function unrender () {
    this.element.off('change', handleDomEvent);

    if (this.node.attachEvent) {
      this.element.off('click', handleDomEvent);
    }
  };

  return RadioBinding;
}(Binding));

function getValue$1() {
  var checked = this.bindings.filter(function (b) { return b.node.checked; });
  if (checked.length > 0) {
    return checked[0].element.getAttribute('value');
  }
}

var RadioNameBinding = (function (Binding) {
  function RadioNameBinding(element) {
    var this$1 = this;

    Binding.call(this, element, 'name');

    this.group = getBindingGroup('radioname', this.model, getValue$1);
    this.group.add(this);

    if (element.checked) {
      this.group.value = this.getValue();
    }

    this.attribute.interpolator.pathChanged = function () { return this$1.updateName(); };
  }

  if ( Binding ) RadioNameBinding.__proto__ = Binding;
  var RadioNameBinding__proto__ = RadioNameBinding.prototype = Object.create( Binding && Binding.prototype );
  RadioNameBinding__proto__.constructor = RadioNameBinding;

  RadioNameBinding__proto__.bind = function bind () {
    if (!this.group.bound) {
      this.group.bind();
    }
  };

  RadioNameBinding__proto__.getInitialValue = function getInitialValue () {
    if (this.element.getAttribute('checked')) {
      return this.element.getAttribute('value');
    }
  };

  RadioNameBinding__proto__.getValue = function getValue () {
    return this.element.getAttribute('value');
  };

  RadioNameBinding__proto__.handleChange = function handleChange () {
    // If this <input> is the one that's checked, then the value of its
    // `name` model gets set to its value
    if (this.node.checked) {
      this.group.value = this.getValue();
      Binding.prototype.handleChange.call(this);
    }

    this.updateName();
  };

  RadioNameBinding__proto__.lastVal = function lastVal (setting, value) {
    if (!this.group) { return; }
    if (setting) { this.group.lastValue = value; }
    else { return this.group.lastValue; }
  };

  RadioNameBinding__proto__.rebind = function rebind (next, previous) {
    Binding.prototype.rebind.call(this, next, previous);
    this.updateName();
  };

  RadioNameBinding__proto__.rebound = function rebound (update) {
    Binding.prototype.rebound.call(this, update);
    this.updateName();
  };

  RadioNameBinding__proto__.render = function render () {
    Binding.prototype.render.call(this);

    var node = this.node;

    this.updateName();
    node.checked = this.element.compare(this.model.get(), this.element.getAttribute('value'));

    this.element.on('change', handleDomEvent);

    if (node.attachEvent) {
      this.element.on('click', handleDomEvent);
    }
  };

  RadioNameBinding__proto__.setFromNode = function setFromNode (node) {
    if (node.checked) {
      this.group.model.set(this.element.getAttribute('value'));
    }
  };

  RadioNameBinding__proto__.unbind = function unbind () {
    this.group.remove(this);
  };

  RadioNameBinding__proto__.unrender = function unrender () {
    var el = this.element;

    el.off('change', handleDomEvent);

    if (this.node.attachEvent) {
      el.off('click', handleDomEvent);
    }
  };

  RadioNameBinding__proto__.updateName = function updateName () {
    if (this.node) { this.node.name = "{{" + (this.model.getKeypath()) + "}}"; }
  };

  return RadioNameBinding;
}(Binding));

var SingleSelectBinding = (function (Binding) {
  function SingleSelectBinding () {
    Binding.apply(this, arguments);
  }

  if ( Binding ) SingleSelectBinding.__proto__ = Binding;
  var SingleSelectBinding__proto__ = SingleSelectBinding.prototype = Object.create( Binding && Binding.prototype );
  SingleSelectBinding__proto__.constructor = SingleSelectBinding;

  SingleSelectBinding__proto__.forceUpdate = function forceUpdate () {
    var this$1 = this;

    var value = this.getValue();

    if (value !== undefined) {
      this.attribute.locked = true;
      runloop.scheduleTask(function () { return (this$1.attribute.locked = false); });
      this.model.set(value);
    }
  };

  SingleSelectBinding__proto__.getInitialValue = function getInitialValue () {
    if (this.element.getAttribute('value') !== undefined) {
      return;
    }

    var options = this.element.options;
    var len = options.length;

    if (!len) { return; }

    var value;
    var optionWasSelected;
    var i = len;

    // take the final selected option...
    while (i--) {
      var option = options[i];

      if (option.getAttribute('selected')) {
        if (!option.getAttribute('disabled')) {
          value = option.getAttribute('value');
        }

        optionWasSelected = true;
        break;
      }
    }

    // or the first non-disabled option, if none are selected
    if (!optionWasSelected) {
      while (++i < len) {
        if (!options[i].getAttribute('disabled')) {
          value = options[i].getAttribute('value');
          break;
        }
      }
    }

    // This is an optimisation (aka hack) that allows us to forgo some
    // other more expensive work
    // TODO does it still work? seems at odds with new architecture
    if (value !== undefined) {
      this.element.attributeByName.value.value = value;
    }

    return value;
  };

  SingleSelectBinding__proto__.getValue = function getValue () {
    var options = this.node.options;
    var len = options.length;

    var i;
    for (i = 0; i < len; i += 1) {
      var option = options[i];

      if (options[i].selected && !options[i].disabled) {
        return option._ractive ? option._ractive.value : option.value;
      }
    }
  };

  SingleSelectBinding__proto__.render = function render () {
    Binding.prototype.render.call(this);
    this.element.on('change', handleDomEvent);
  };

  SingleSelectBinding__proto__.setFromNode = function setFromNode (node) {
    var option = getSelectedOptions(node)[0];
    this.model.set(option._ractive ? option._ractive.value : option.value);
  };

  SingleSelectBinding__proto__.unrender = function unrender () {
    this.element.off('change', handleDomEvent);
  };

  return SingleSelectBinding;
}(Binding));

function isBindable(attribute) {
  // The fragment must be a single non-string fragment
  if (
    !attribute ||
    !attribute.template.f ||
    attribute.template.f.length !== 1 ||
    attribute.template.f[0].s
  )
    { return false; }

  // A binding is an interpolator `{{ }}`, yey.
  if (attribute.template.f[0].t === INTERPOLATOR) { return true; }

  // The above is probably the only true case. For the rest, show an appropriate
  // warning before returning false.

  // You can't bind a triple curly. HTML values on an attribute makes no sense.
  if (attribute.template.f[0].t === TRIPLE)
    { warnIfDebug('It is not possible create a binding using a triple mustache.'); }

  return false;
}

function selectBinding(element) {
  var name = element.name;
  var attributes = element.attributeByName;
  if (name !== 'input' && name !== 'textarea' && name !== 'select' && !attributes.contenteditable)
    { return; }
  var isBindableByValue = isBindable(attributes.value);
  var isBindableByContentEditable = isBindable(attributes.contenteditable);
  var isContentEditable = element.getAttribute('contenteditable');

  // contenteditable
  // Bind if the contenteditable is true or a binding that may become true.
  if ((isContentEditable || isBindableByContentEditable) && isBindableByValue)
    { return ContentEditableBinding; }

  // <input>
  if (name === 'input') {
    var type = element.getAttribute('type');

    if (type === 'radio') {
      var isBindableByName = isBindable(attributes.name);
      var isBindableByChecked = isBindable(attributes.checked);

      // For radios we can either bind the name or checked, but not both.
      // Name binding is handed instead.
      if (isBindableByName && isBindableByChecked) {
        warnIfDebug(
          'A radio input can have two-way binding on its name attribute, or its checked attribute - not both',
          { ractive: element.root }
        );
        return RadioNameBinding;
      }

      if (isBindableByName) { return RadioNameBinding; }

      if (isBindableByChecked) { return RadioBinding; }

      // Dead end. Unknown binding on radio input.
      return null;
    }

    if (type === 'checkbox') {
      var isBindableByName$1 = isBindable(attributes.name);
      var isBindableByChecked$1 = isBindable(attributes.checked);

      // A checkbox with bindings for both name and checked. Checked treated as
      // the checkbox value, name is treated as a regular binding.
      //
      // See https://github.com/ractivejs/ractive/issues/1749
      if (isBindableByName$1 && isBindableByChecked$1) { return CheckboxBinding; }

      if (isBindableByName$1) { return CheckboxNameBinding; }

      if (isBindableByChecked$1) { return CheckboxBinding; }

      // Dead end. Unknown binding on checkbox input.
      return null;
    }

    if (type === 'file' && isBindableByValue) { return FileBinding; }

    if (type === 'number' && isBindableByValue) { return NumericBinding; }

    if (type === 'range' && isBindableByValue) { return NumericBinding; }

    // Some input of unknown type (browser usually falls back to text).
    if (isBindableByValue) { return GenericBinding; }

    // Dead end. Some unknown input and an unbindable.
    return null;
  }

  // <select>
  if (name === 'select' && isBindableByValue) {
    return element.getAttribute('multiple') ? MultipleSelectBinding : SingleSelectBinding;
  }

  // <textarea>
  if (name === 'textarea' && isBindableByValue) { return GenericBinding; }

  // Dead end. Some unbindable element.
  return null;
}

var endsWithSemi = /;\s*$/;

var Element = (function (ContainerItem) {
  function Element(options) {
    var this$1 = this;

    ContainerItem.call(this, options);

    this.name = options.template.e.toLowerCase();

    // find parent element
    this.parent = findElement(this.up, false);

    if (this.parent && this.parent.name === 'option') {
      throw new Error(
        ("An <option> element cannot contain other elements (encountered <" + (this.name) + ">)")
      );
    }

    this.decorators = [];

    // create attributes
    this.attributeByName = {};

    var attrs;
    var n, attr, val, cls, name, template, leftovers;

    var m = this.template.m;
    var len = (m && m.length) || 0;

    for (var i = 0; i < len; i++) {
      template = m[i];
      if (template.g) {
        (this$1.statics || (this$1.statics = {}))[template.n] = isString(template.f)
          ? template.f
          : template.n;
      } else {
        switch (template.t) {
          case ATTRIBUTE:
          case BINDING_FLAG:
          case DECORATOR:
          case EVENT:
          case TRANSITION:
            attr = createItem({
              owner: this$1,
              up: this$1.up,
              template: template
            });

            n = template.n;

            attrs = attrs || (attrs = this$1.attributes = []);

            if (n === 'value') { val = attr; }
            else if (n === 'name') { name = attr; }
            else if (n === 'class') { cls = attr; }
            else { attrs.push(attr); }

            break;

          case DELEGATE_FLAG:
            this$1.delegate = false;
            break;

          default:
            (leftovers || (leftovers = [])).push(template);
            break;
        }
      }
    }

    if (val) { attrs.push(val); }
    if (name) { attrs.push(name); }
    if (cls) { attrs.unshift(cls); }

    if (leftovers) {
      (attrs || (this.attributes = [])).push(
        new ConditionalAttribute({
          owner: this,
          up: this.up,
          template: leftovers
        })
      );

      // empty leftovers array
      leftovers = [];
    }

    // create children
    if (options.template.f && !options.deferContent) {
      this.fragment = new Fragment({
        template: options.template.f,
        owner: this,
        cssIds: null
      });
    }

    this.binding = null; // filled in later
  }

  if ( ContainerItem ) Element.__proto__ = ContainerItem;
  var Element__proto__ = Element.prototype = Object.create( ContainerItem && ContainerItem.prototype );
  Element__proto__.constructor = Element;

  Element__proto__.bind = function bind () {
    var attrs = this.attributes;
    if (attrs) {
      attrs.binding = true;
      var len = attrs.length;
      for (var i = 0; i < len; i++) { attrs[i].bind(); }
      attrs.binding = false;
    }

    if (this.fragment) { this.fragment.bind(); }

    // create two-way binding if necessary
    if (!this.binding) { this.recreateTwowayBinding(); }
    else { this.binding.bind(); }
  };

  Element__proto__.createTwowayBinding = function createTwowayBinding () {
    if ('twoway' in this ? this.twoway : this.ractive.twoway) {
      var Binding = selectBinding(this);
      if (Binding) {
        var binding = new Binding(this);
        if (binding && binding.model) { return binding; }
      }
    }
  };

  Element__proto__.destroyed = function destroyed$1 () {
    if (this.attributes) { this.attributes.forEach(destroyed); }
    if (this.fragment) { this.fragment.destroyed(); }
  };

  Element__proto__.detach = function detach () {
    // if this element is no longer rendered, the transitions are complete and the attributes can be torn down
    if (!this.rendered) { this.destroyed(); }

    return detachNode(this.node);
  };

  Element__proto__.find = function find (selector, options) {
    if (this.node && matches(this.node, selector)) { return this.node; }
    if (this.fragment) {
      return this.fragment.find(selector, options);
    }
  };

  Element__proto__.findAll = function findAll (selector, options) {
    var result = options.result;

    if (matches(this.node, selector)) {
      result.push(this.node);
    }

    if (this.fragment) {
      this.fragment.findAll(selector, options);
    }
  };

  Element__proto__.findNextNode = function findNextNode () {
    return null;
  };

  Element__proto__.firstNode = function firstNode () {
    return this.node;
  };

  Element__proto__.getAttribute = function getAttribute (name) {
    if (this.statics && name in this.statics) { return this.statics[name]; }
    var attribute = this.attributeByName[name];
    return attribute ? attribute.getValue() : undefined;
  };

  Element__proto__.getContext = function getContext () {
    var assigns = [], len = arguments.length;
    while ( len-- ) assigns[ len ] = arguments[ len ];

    if (this.fragment) { return (ref = this.fragment).getContext.apply(ref, assigns); }

    if (!this.ctx) { this.ctx = new Context(this.up, this); }
    assigns.unshift(create(this.ctx));
    return assign.apply(null, assigns);
    var ref;
  };

  Element__proto__.off = function off (event, callback, capture) {
    if ( capture === void 0 ) capture = false;

    var delegate = this.up.delegate;
    var ref = this.listeners && this.listeners[event];

    if (!ref) { return; }
    removeFromArray(ref, callback);

    if (delegate) {
      var listeners =
        (delegate.listeners || (delegate.listeners = [])) &&
        (delegate.listeners[event] || (delegate.listeners[event] = []));
      if (listeners.refs && !--listeners.refs) { delegate.off(event, delegateHandler, true); }
    } else if (this.rendered) {
      var n = this.node;
      var add = n.addEventListener;
      var rem = n.removeEventListener;

      if (!ref.length) {
        rem.call(n, event, handler, capture);
      } else if (ref.length && !ref.refs && capture) {
        rem.call(n, event, handler, true);
        add.call(n, event, handler, false);
      }
    }
  };

  Element__proto__.on = function on (event, callback, capture) {
    if ( capture === void 0 ) capture = false;

    var delegate = this.up.delegate;
    var ref = (this.listeners || (this.listeners = {}))[event] || (this.listeners[event] = []);

    if (delegate) {
      var listeners =
        ((delegate.listeners || (delegate.listeners = [])) && delegate.listeners[event]) ||
        (delegate.listeners[event] = []);
      if (!listeners.refs) {
        listeners.refs = 0;
        delegate.on(event, delegateHandler, true);
        listeners.refs++;
      } else {
        listeners.refs++;
      }
    } else if (this.rendered) {
      var n = this.node;
      var add = n.addEventListener;
      var rem = n.removeEventListener;

      if (!ref.length) {
        add.call(n, event, handler, capture);
      } else if (ref.length && !ref.refs && capture) {
        rem.call(n, event, handler, false);
        add.call(n, event, handler, true);
      }
    }

    addToArray(this.listeners[event], callback);
  };

  Element__proto__.recreateTwowayBinding = function recreateTwowayBinding () {
    if (this.binding) {
      this.binding.unbind();
      this.binding.unrender();
    }

    if ((this.binding = this.createTwowayBinding())) {
      this.binding.bind();
      if (this.rendered) { this.binding.render(); }
    }
  };

  Element__proto__.rebound = function rebound (update$$1) {
    ContainerItem.prototype.rebound.call(this, update$$1);
    if (this.attributes) { this.attributes.forEach(function (x) { return x.rebound(update$$1); }); }
    if (this.binding) { this.binding.rebound(update$$1); }
  };

  Element__proto__.render = function render (target, occupants) {
    var this$1 = this;

    // TODO determine correct namespace
    this.namespace = getNamespace(this);

    var node;
    var existing = false;

    if (occupants) {
      var n;
      while ((n = occupants.shift())) {
        if (
          n.nodeName.toUpperCase() === this$1.template.e.toUpperCase() &&
          n.namespaceURI === this$1.namespace
        ) {
          this$1.node = node = n;
          existing = true;
          break;
        } else {
          detachNode(n);
        }
      }
    }

    if (!existing && this.node) {
      node = this.node;
      target.appendChild(node);
      existing = true;
    }

    if (!node) {
      var name = this.template.e;
      node = createElement(
        this.namespace === html ? name.toLowerCase() : name,
        this.namespace,
        this.getAttribute('is')
      );
      this.node = node;
    }

    // tie the node to this vdom element
    defineProperty(node, '_ractive', {
      value: {
        proxy: this
      },
      configurable: true
    });

    if (this.statics) {
      keys(this.statics).forEach(function (k) {
        node.setAttribute(k, this$1.statics[k]);
      });
    }

    if (existing && this.foundNode) { this.foundNode(node); }

    // register intro before rendering content so children can find the intro
    var intro = this.intro;
    if (intro && intro.shouldFire('intro')) {
      intro.isIntro = true;
      intro.isOutro = false;
      runloop.registerTransition(intro);
    }

    if (this.fragment) {
      var children = existing ? toArray(node.childNodes) : undefined;

      this.fragment.render(node, children);

      // clean up leftover children
      if (children) {
        children.forEach(detachNode);
      }
    }

    if (existing) {
      // store initial values for two-way binding
      if (this.binding && this.binding.wasUndefined) { this.binding.setFromNode(node); }
      // remove unused attributes
      var i = node.attributes.length;
      while (i--) {
        var name$1 = node.attributes[i].name;
        if (!(name$1 in this$1.attributeByName) && (!this$1.statics || !(name$1 in this$1.statics)))
          { node.removeAttribute(name$1); }
      }
    }

    // Is this a top-level node of a component? If so, we may need to add
    // a data-ractive-css attribute, for CSS encapsulation
    if (this.up.cssIds) {
      node.setAttribute('data-ractive-css', this.up.cssIds.map(function (x) { return ("{" + x + "}"); }).join(' '));
    }

    if (this.attributes) {
      var len = this.attributes.length;
      for (var i$1 = 0; i$1 < len; i$1++) { this$1.attributes[i$1].render(); }
    }
    if (this.binding) { this.binding.render(); }

    if (!this.up.delegate && this.listeners) {
      var ls = this.listeners;
      for (var k in ls) {
        if (ls[k] && ls[k].length) { this$1.node.addEventListener(k, handler, !!ls[k].refs); }
      }
    }

    if (!existing) {
      target.appendChild(node);
    }

    this.rendered = true;
  };

  Element__proto__.shuffled = function shuffled$1 () {
    ContainerItem.prototype.shuffled.call(this);
    this.decorators.forEach(shuffled);
  };

  Element__proto__.toString = function toString () {
    var this$1 = this;

    var tagName = this.template.e;

    var attrs = (this.attributes && this.attributes.map(stringifyAttribute).join('')) || '';

    if (this.statics)
      { keys(this.statics).forEach(
        function (k) { return k !== 'class' &&
          k !== 'style' &&
          (attrs = " " + k + "=\"" + (safeAttributeString(this$1.statics[k])) + "\"" + attrs); }
      ); }

    // Special case - selected options
    if (this.name === 'option' && this.isSelected()) {
      attrs += ' selected';
    }

    // Special case - two-way radio name bindings
    if (this.name === 'input' && inputIsCheckedRadio(this)) {
      attrs += ' checked';
    }

    // Special case style and class attributes and directives
    var style = this.statics ? this.statics.style : undefined;
    var cls = this.statics ? this.statics.class : undefined;
    this.attributes &&
      this.attributes.forEach(function (attr) {
        if (attr.name === 'class') {
          cls = (cls || '') + (cls ? ' ' : '') + safeAttributeString(attr.getString());
        } else if (attr.name === 'style') {
          style = (style || '') + (style ? ' ' : '') + safeAttributeString(attr.getString());
          if (style && !endsWithSemi.test(style)) { style += ';'; }
        } else if (attr.style) {
          style =
            (style || '') +
            (style ? ' ' : '') +
            (attr.style) + ": " + (safeAttributeString(attr.getString())) + ";";
        } else if (attr.inlineClass && attr.getValue()) {
          cls = (cls || '') + (cls ? ' ' : '') + attr.inlineClass;
        }
      });
    // put classes first, then inline style
    if (style !== undefined) { attrs = ' style' + (style ? ("=\"" + style + "\"") : '') + attrs; }
    if (cls !== undefined) { attrs = ' class' + (cls ? ("=\"" + cls + "\"") : '') + attrs; }

    if (this.up.cssIds) {
      attrs += " data-ractive-css=\"" + (this.up.cssIds.map(function (x) { return ("{" + x + "}"); }).join(' ')) + "\"";
    }

    var str = "<" + tagName + attrs + ">";

    if (voidElements[this.name.toLowerCase()]) { return str; }

    // Special case - textarea
    if (this.name === 'textarea' && this.getAttribute('value') !== undefined) {
      str += escapeHtml(this.getAttribute('value'));
    } else if (this.getAttribute('contenteditable') !== undefined) {
      // Special case - contenteditable
      str += this.getAttribute('value') || '';
    }

    if (this.fragment) {
      str += this.fragment.toString(!/^(?:script|style)$/i.test(this.template.e)); // escape text unless script/style
    }

    str += "</" + tagName + ">";
    return str;
  };

  Element__proto__.unbind = function unbind (view) {
    var attrs = this.attributes;
    if (attrs) {
      attrs.unbinding = true;
      var len = attrs.length;
      for (var i = 0; i < len; i++) { attrs[i].unbind(view); }
      attrs.unbinding = false;
    }

    if (this.binding) { this.binding.unbind(view); }
    if (this.fragment) { this.fragment.unbind(view); }
  };

  Element__proto__.unrender = function unrender (shouldDestroy) {
    if (!this.rendered) { return; }
    this.rendered = false;

    // unrendering before intro completed? complete it now
    // TODO should be an API for aborting transitions
    var transition = this.intro;
    if (transition && transition.complete) { transition.complete(); }

    // Detach as soon as we can
    if (this.name === 'option') {
      // <option> elements detach immediately, so that
      // their parent <select> element syncs correctly, and
      // since option elements can't have transitions anyway
      this.detach();
    } else if (shouldDestroy) {
      runloop.detachWhenReady(this);
    }

    // outro transition
    var outro = this.outro;
    if (outro && outro.shouldFire('outro')) {
      outro.isIntro = false;
      outro.isOutro = true;
      runloop.registerTransition(outro);
    }

    if (this.fragment) { this.fragment.unrender(); }

    if (this.binding) { this.binding.unrender(); }
  };

  Element__proto__.update = function update () {
    if (this.dirty) {
      this.dirty = false;

      var attrs = this.attributes;
      if (attrs) {
        var len = attrs.length;
        for (var i = 0; i < len; i++) { attrs[i].update(); }
      }

      if (this.fragment) { this.fragment.update(); }
    }
  };

  return Element;
}(ContainerItem));

function inputIsCheckedRadio(element) {
  var nameAttr = element.attributeByName.name;
  return (
    element.getAttribute('type') === 'radio' &&
    (nameAttr || {}).interpolator &&
    element.getAttribute('value') === nameAttr.interpolator.model.get()
  );
}

function stringifyAttribute(attribute) {
  var str = attribute.toString();
  return str ? ' ' + str : '';
}

function getNamespace(element) {
  // Use specified namespace...
  var xmlns$$1 = element.getAttribute('xmlns');
  if (xmlns$$1) { return xmlns$$1; }

  // ...or SVG namespace, if this is an <svg> element
  if (element.name === 'svg') { return svg$1; }

  var parent = element.parent;

  if (parent) {
    // ...or HTML, if the parent is a <foreignObject>
    if (parent.name === 'foreignobject') { return html; }

    // ...or inherit from the parent node
    return parent.node.namespaceURI;
  }

  return element.ractive.el.namespaceURI;
}

var stop = false;
function stopPropagation() {
  stop = true;
}
var immediate$1 = false;
function stopImmediatePropagation() {
  immediate$1 = true;
}
var prevent = false;
function preventDefault() {
  prevent = true;
}

function delegateHandler(ev) {
  var name = ev.type;
  var end = ev.currentTarget;
  var endEl = end._ractive && end._ractive.proxy;
  var node = ev.target;
  var bubble = true;
  var listeners;
  var prevented = false;

  stop = immediate$1 = prevent = false;
  var oldStop = ev.stopPropagation;
  var oldImmediate = ev.stopImmediatePropagation;
  var oldPrevent = ev.preventDefault;
  ev.stopPropagation = stopPropagation;
  ev.stopImmediatePropagation = stopImmediatePropagation;
  ev.preventDefault = preventDefault;

  // starting with the origin node, walk up the DOM looking for ractive nodes with a matching event listener
  while (bubble && node && node !== end) {
    var proxy = node._ractive && node._ractive.proxy;
    if (proxy && proxy.up.delegate === endEl && shouldFire(ev, node, end)) {
      listeners = proxy.listeners && proxy.listeners[name];

      if (listeners) {
        var len = listeners.length;
        for (var i = 0; i < len; i++) {
          bubble = listeners[i].call(node, ev) !== false && bubble;
          if (immediate$1) {
            bubble = false;
            break;
          }
          if (stop) { bubble = false; }
          if (prevent && !prevented) {
            prevented = true;
            oldPrevent.call(ev);
          }
        }
      }
    }

    node = node.parentNode || node.correspondingUseElement; // SVG with a <use> element in certain environments
  }

  if (bubble) { bubble = !stop && !immediate$1; }

  if (stop) { oldStop.call(ev); }
  if (immediate$1) { oldImmediate.call(ev); }

  ev.stopPropagation = oldStop;
  ev.stopImmediaitePropagation = oldImmediate;
  ev.preventDefault = oldPrevent;

  return bubble;
}

var UIEvent = win !== null ? win.UIEvent : null;
function shouldFire(event, start, end) {
  if (UIEvent && event instanceof UIEvent) {
    var node = start;
    while (node && node !== end) {
      if (node.disabled) { return false; }
      node = node.parentNode || node.correspondingUseElement;
    }
  }

  return true;
}

function handler(ev) {
  var this$1 = this;

  var el = this._ractive.proxy;
  var listeners;
  if (el.listeners && (listeners = el.listeners[ev.type])) {
    var len = listeners.length;
    for (var i = 0; i < len; i++) { listeners[i] && listeners[i].call(this$1, ev); }
  }
}

var Form = (function (Element) {
  function Form(options) {
    Element.call(this, options);
    this.formBindings = [];
  }

  if ( Element ) Form.__proto__ = Element;
  var Form__proto__ = Form.prototype = Object.create( Element && Element.prototype );
  Form__proto__.constructor = Form;

  Form__proto__.render = function render (target, occupants) {
    Element.prototype.render.call(this, target, occupants);
    this.on('reset', handleReset);
  };

  Form__proto__.unrender = function unrender (shouldDestroy) {
    this.off('reset', handleReset);
    Element.prototype.unrender.call(this, shouldDestroy);
  };

  return Form;
}(Element));

function handleReset() {
  var element = this._ractive.proxy;

  runloop.start();
  element.formBindings.forEach(updateModel);
  runloop.end();
}

function updateModel(binding) {
  binding.model.set(binding.resetValue);
}

var DOMEvent = function DOMEvent(name, owner) {
  if (name.indexOf('*') !== -1) {
    fatal(
      ("Only component proxy-events may contain \"*\" wildcards, <" + (owner.name) + " on-" + name + "=\"...\"/> is not valid")
    );
  }

  this.name = name;
  this.owner = owner;
  this.handler = null;
};
var DOMEvent__proto__ = DOMEvent.prototype;

DOMEvent__proto__.bind = function bind () {};

DOMEvent__proto__.render = function render (directive) {
    var this$1 = this;

  var name = this.name;

  var register = function () {
    var node = this$1.owner.node;

    this$1.owner.on(
      name,
      (this$1.handler = function (event) {
        return directive.fire({
          node: node,
          original: event,
          event: event,
          name: name
        });
      })
    );
  };

  if (name !== 'load') {
    // schedule events so that they take place after twoway binding
    runloop.scheduleTask(register, true);
  } else {
    // unless its a load event
    register();
  }
};

DOMEvent__proto__.unbind = function unbind () {};

DOMEvent__proto__.unrender = function unrender () {
  if (this.handler) { this.owner.off(this.name, this.handler); }
};

var CustomEvent = function CustomEvent(eventPlugin, owner, name, args) {
  this.eventPlugin = eventPlugin;
  this.owner = owner;
  this.name = name;
  this.handler = null;
  this.args = args;
};
var CustomEvent__proto__ = CustomEvent.prototype;

CustomEvent__proto__.bind = function bind () {};

CustomEvent__proto__.render = function render (directive) {
    var this$1 = this;

  runloop.scheduleTask(function () {
    var node = this$1.owner.node;

    localFragment.f = directive.up;
    this$1.handler = this$1.eventPlugin.apply(
      this$1.owner.ractive,
      [
        node,
        function (event) {
            if ( event === void 0 ) event = {};

          if (event.original) { event.event = event.original; }
          else { event.original = event.event; }

          event.name = this$1.name;
          event.node = event.node || node;
          return directive.fire(event);
        }
      ].concat(this$1.args || [])
    );
    localFragment.f = null;
  });
};

CustomEvent__proto__.unbind = function unbind () {};

CustomEvent__proto__.unrender = function unrender () {
    var this$1 = this;

  if (this.handler) { this.handler.teardown(); }
  else { runloop.scheduleTask(function () { return this$1.handler && this$1.handler.teardown(); }); }
};

var RactiveEvent = function RactiveEvent(component, name) {
  this.component = component;
  this.name = name;
  this.handler = null;
};
var RactiveEvent__proto__ = RactiveEvent.prototype;

RactiveEvent__proto__.bind = function bind (directive) {
  var ractive = this.component.instance;

  this.handler = ractive.on(this.name, function () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

    // watch for reproxy
    if (args[0] instanceof Context) {
      var ctx = args.shift();
      ctx.component = ractive;
      directive.fire(ctx, args);
    } else {
      directive.fire({}, args);
    }

    // cancel bubbling
    return false;
  });
};

RactiveEvent__proto__.render = function render () {};

RactiveEvent__proto__.unbind = function unbind () {
  this.handler.cancel();
};

RactiveEvent__proto__.unrender = function unrender () {};

var specialPattern = /^(event|arguments|@node|@event|@context)(\..+)?$/;
var dollarArgsPattern = /^\$(\d+)(\..+)?$/;

var EventDirective = function EventDirective(options) {
  this.owner = options.owner || options.up.owner || findElement(options.up);
  this.element = this.owner.attributeByName ? this.owner : findElement(options.up, true);
  this.template = options.template;
  this.up = options.up;
  this.ractive = options.up.ractive;
  this.events = [];
};
var EventDirective__proto__ = EventDirective.prototype;

EventDirective__proto__.bind = function bind () {
    var this$1 = this;

  // sometimes anchors will cause an unbind without unrender
  if (this.events.length) {
    this.events.forEach(function (e) { return e.unrender(); });
    this.events = [];
  }

  if (this.element.type === COMPONENT || this.element.type === ANCHOR) {
    this.template.n.forEach(function (n) {
      this$1.events.push(new RactiveEvent(this$1.element, n));
    });
  } else {
    var args;
    if ((args = this.template.a)) {
      var rs = args.r.map(function (r) {
        var model = resolveReference(this$1.up, r);
        return model ? model.get() : undefined;
      });
      try {
        args = getFunction(args.s, rs.length).apply(null, rs);
      } catch (err) {
        args = null;
        warnIfDebug(
          ("Failed to compute args for event on-" + (this.template.n.join('- ')) + ": " + (err.message ||
            err))
        );
      }
    }

    this.template.n.forEach(function (n) {
      var fn = findInViewHierarchy('events', this$1.ractive, n);
      if (fn) {
        this$1.events.push(new CustomEvent(fn, this$1.element, n, args));
      } else {
        this$1.events.push(new DOMEvent(n, this$1.element));
      }
    });
  }

  // method calls
  this.models = null;

  addToArray(this.element.events || (this.element.events = []), this);

  setupArgsFn(this, this.template);
  if (!this.fn) { this.action = this.template.f; }

  this.events.forEach(function (e) { return e.bind(this$1); });
};

EventDirective__proto__.destroyed = function destroyed () {
  this.events.forEach(function (e) { return e.unrender(); });
};

EventDirective__proto__.fire = function fire (event, args) {
    var this$1 = this;
    if ( args === void 0 ) args = [];

  var context =
    event instanceof Context && event.refire ? event : this.element.getContext(event);

  if (this.fn) {
    var values = [];

    var models = resolveArgs(this, this.template, this.up, {
      specialRef: function specialRef(ref) {
        var specialMatch = specialPattern.exec(ref);
        if (specialMatch) {
          // on-click="foo(event.node)"
          return {
            special: specialMatch[1],
            keys: specialMatch[2] ? splitKeypath(specialMatch[2].substr(1)) : []
          };
        }

        var dollarMatch = dollarArgsPattern.exec(ref);
        if (dollarMatch) {
          // on-click="foo($1)"
          return {
            special: 'arguments',
            keys: [dollarMatch[1] - 1].concat(
              dollarMatch[2] ? splitKeypath(dollarMatch[2].substr(1)) : []
            )
          };
        }
      }
    });

    if (models) {
      models.forEach(function (model) {
        if (!model) { return values.push(undefined); }

        if (model.special) {
          var which = model.special;
          var obj;

          if (which === '@node') {
            obj = this$1.element.node;
          } else if (which === '@event') {
            obj = event && event.event;
          } else if (which === 'event') {
            warnOnceIfDebug(
              "The event reference available to event directives is deprecated and should be replaced with @context and @event"
            );
            obj = context;
          } else if (which === '@context') {
            obj = context;
          } else {
            obj = args;
          }

          var keys = model.keys.slice();

          while (obj && keys.length) { obj = obj[keys.shift()]; }
          return values.push(obj);
        }

        if (model.wrapper) {
          return values.push(model.wrapperValue);
        }

        values.push(model.get());
      });
    }

    // make event available as `this.event`
    var ractive = this.ractive;
    var oldEvent = ractive.event;

    ractive.event = context;
    var returned = this.fn.apply(ractive, values);
    var result = returned.pop();

    // Auto prevent and stop if return is explicitly false
    if (result === false) {
      var original = event ? event.original : undefined;
      if (original) {
        original.preventDefault && original.preventDefault();
        original.stopPropagation && original.stopPropagation();
      } else {
        warnOnceIfDebug(
          ("handler '" + (this.template.n.join(
            ' '
          )) + "' returned false, but there is no event available to cancel")
        );
      }
    } else if (!returned.length && isArray(result) && isString(result[0])) {
      // watch for proxy events
      result = fireEvent(this.ractive, result.shift(), context, result);
    }

    ractive.event = oldEvent;

    return result;
  } else {
    return fireEvent(this.ractive, this.action, context, args);
  }
};

EventDirective__proto__.handleChange = function handleChange () {};

EventDirective__proto__.render = function render () {
    var this$1 = this;

  this.events.forEach(function (e) { return e.render(this$1); });
};

EventDirective__proto__.toString = function toString () {
  return '';
};

EventDirective__proto__.unbind = function unbind (view) {
  removeFromArray(this.element.events, this);
  this.events.forEach(function (e) { return e.unbind(view); });
};

EventDirective__proto__.unrender = function unrender () {
  this.events.forEach(function (e) { return e.unrender(); });
};

var proto$3 = EventDirective.prototype;
proto$3.firstNode = proto$3.rebound = proto$3.update = noop;

function progressiveText(item, target, occupants, text) {
  if (occupants) {
    var n = occupants[0];
    if (n && n.nodeType === 3) {
      var idx = n.nodeValue.indexOf(text);
      occupants.shift();

      if (idx === 0) {
        if (n.nodeValue.length !== text.length) {
          occupants.unshift(n.splitText(text.length));
        }
      } else {
        n.nodeValue = text;
      }
    } else {
      n = item.node = doc.createTextNode(text);
      if (occupants[0]) {
        target.insertBefore(n, occupants[0]);
      } else {
        target.appendChild(n);
      }
    }

    item.node = n;
  } else {
    if (!item.node) { item.node = doc.createTextNode(text); }
    target.appendChild(item.node);
  }
}

var ReferenceExpressionProxy = (function (LinkModel) {
  function ReferenceExpressionProxy(fragment, template) {
    LinkModel.call(this, null, null, null, '@undefined');
    this.root = fragment.ractive.viewmodel;
    this.template = template;
    this.rootLink = true;
    this.template = template;
    this.fragment = fragment;

    this.rebound();
  }

  if ( LinkModel ) ReferenceExpressionProxy.__proto__ = LinkModel;
  var ReferenceExpressionProxy__proto__ = ReferenceExpressionProxy.prototype = Object.create( LinkModel && LinkModel.prototype );
  ReferenceExpressionProxy__proto__.constructor = ReferenceExpressionProxy;

  ReferenceExpressionProxy__proto__.getKeypath = function getKeypath () {
    return this.model ? this.model.getKeypath() : '@undefined';
  };

  ReferenceExpressionProxy__proto__.rebound = function rebound () {
    var this$1 = this;

    var fragment = this.fragment;
    var template = this.template;

    var base = (this.base = resolve(fragment, template));
    var idx;

    if (this.proxy) {
      teardown$2(this);
    }

    var proxy = (this.proxy = {
      rebind: function (next, previous) {
        if (previous === base) {
          next = rebindMatch(template, next, previous);
          if (next !== base) {
            this$1.base = base = next;
          }
        } else if (~(idx = members.indexOf(previous))) {
          next = rebindMatch(template.m[idx].n, next, previous);
          if (next !== members[idx]) {
            members.splice(idx, 1, next || Missing);
          }
        }

        if (next !== previous) {
          previous.unregister(proxy);
          if (next) { next.addShuffleTask(function () { return next.register(proxy); }); }
        }
      },
      handleChange: function () {
        pathChanged();
      }
    });

    base.register(proxy);

    var members = (this.members = template.m.map(function (tpl) {
      if (isString(tpl)) {
        return { get: function () { return tpl; } };
      }

      var model;

      if (tpl.t === REFERENCE) {
        model = resolveReference(fragment, tpl.n);
        model.register(proxy);

        return model;
      }

      model = new ExpressionProxy(fragment, tpl);
      model.register(proxy);
      return model;
    }));

    var pathChanged = function () {
      var model =
        base &&
        base.joinAll(
          members.reduce(function (list, m) {
            var k = m.get();
            if (isArray(k)) { return list.concat(k); }
            else { list.push(escapeKey(String(k))); }
            return list;
          }, [])
        );

      if (model !== this$1.model) {
        this$1.model = model;
        this$1.relinking(model);
        fireShuffleTasks();
        refreshPathDeps(this$1);
        this$1.fragment.shuffled();
      }
    };

    pathChanged();
  };

  ReferenceExpressionProxy__proto__.teardown = function teardown () {
    teardown$2(this);
    LinkModel.prototype.teardown.call(this);
  };

  ReferenceExpressionProxy__proto__.unreference = function unreference () {
    LinkModel.prototype.unreference.call(this);
    if (!this.deps.length && !this.refs) { this.teardown(); }
  };

  ReferenceExpressionProxy__proto__.unregister = function unregister (dep) {
    LinkModel.prototype.unregister.call(this, dep);
    if (!this.deps.length && !this.refs) { this.teardown(); }
  };

  return ReferenceExpressionProxy;
}(LinkModel));

function teardown$2(proxy) {
  if (proxy.base) { proxy.base.unregister(proxy.proxy); }
  if (proxy.models) {
    proxy.models.forEach(function (m) {
      if (m.unregister) { m.unregister(proxy); }
    });
  }
}

function refreshPathDeps(proxy) {
  var len = proxy.deps.length;
  var i, v;

  for (i = 0; i < len; i++) {
    v = proxy.deps[i];
    if (v.pathChanged) { v.pathChanged(); }
    if (v.fragment && v.fragment.pathModel) { v.fragment.pathModel.applyValue(proxy.getKeypath()); }
  }

  len = proxy.children.length;
  for (i = 0; i < len; i++) {
    refreshPathDeps(proxy.children[i]);
  }
}

var eproto = ExpressionProxy.prototype;
var proto$4 = ReferenceExpressionProxy.prototype;

proto$4.unreference = eproto.unreference;
proto$4.unregister = eproto.unregister;
proto$4.unregisterLink = eproto.unregisterLink;

function resolve(fragment, template) {
  if (template.r) {
    return resolveReference(fragment, template.r);
  } else if (template.x) {
    return new ExpressionProxy(fragment, template.x);
  } else if (template.rx) {
    return new ReferenceExpressionProxy(fragment, template.rx);
  }
}

var Mustache = (function (Item) {
  function Mustache(options) {
    Item.call(this, options);

    if (options.owner) { this.parent = options.owner; }

    this.isStatic = !!options.template.s;

    this.model = null;
    this.dirty = false;
  }

  if ( Item ) Mustache.__proto__ = Item;
  var Mustache__proto__ = Mustache.prototype = Object.create( Item && Item.prototype );
  Mustache__proto__.constructor = Mustache;

  Mustache__proto__.bind = function bind (pre) {
    // yield mustaches and inner contexts should resolve in container context
    var start = this.template.y
      ? this.template.y.containerFragment
      : this.containerFragment || this.up;
    // try to find a model for this view
    var model = pre || resolve(start, this.template);

    if (model) {
      var value = model.get();

      if (this.isStatic) {
        this.model = { get: function () { return value; } };
        model.unreference();
        return;
      }

      model.register(this);
      this.model = model;
    }
  };

  Mustache__proto__.handleChange = function handleChange () {
    this.bubble();
  };

  Mustache__proto__.rebind = function rebind (next, previous, safe) {
    if (this.isStatic) { return; }

    next = rebindMatch(this.template, next, previous, this.up);
    if (next === this.model) { return false; }

    if (this.model) {
      this.model.unregister(this);
    }
    if (next) { next.addShuffleRegister(this, 'mark'); }
    this.model = next;
    if (!safe) { this.handleChange(); }
    return true;
  };

  Mustache__proto__.rebound = function rebound (update) {
    if (this.model) {
      if (this.model.rebound) { this.model.rebound(update); }
      else {
        // check to see if the model actually changed...
        // yield mustaches and inner contexts should resolve in container context
        var start = this.template.y
          ? this.template.y.containerFragment
          : this.containerFragment || this.up;
        // try to find a model for this view
        var model = resolve(start, this.template);
        if (model !== this.model) {
          this.model.unregister(this);
          this.bind(model);
        }
      }

      if (update) { this.bubble(); }
    }
    if (this.fragment) { this.fragment.rebound(update); }
  };

  Mustache__proto__.unbind = function unbind () {
    if (!this.isStatic) {
      this.model && this.model.unregister(this);
      this.model = undefined;
    }
  };

  return Mustache;
}(Item));

function MustacheContainer(options) {
  Mustache.call(this, options);
}

var proto$5 = (MustacheContainer.prototype = Object.create(ContainerItem.prototype));

assign(proto$5, Mustache.prototype, { constructor: MustacheContainer });

var Interpolator = (function (Mustache) {
  function Interpolator () {
    Mustache.apply(this, arguments);
  }

  if ( Mustache ) Interpolator.__proto__ = Mustache;
  var Interpolator__proto__ = Interpolator.prototype = Object.create( Mustache && Mustache.prototype );
  Interpolator__proto__.constructor = Interpolator;

  Interpolator__proto__.bubble = function bubble () {
    if (this.owner) { this.owner.bubble(); }
    Mustache.prototype.bubble.call(this);
  };

  Interpolator__proto__.detach = function detach () {
    return detachNode(this.node);
  };

  Interpolator__proto__.firstNode = function firstNode () {
    return this.node;
  };

  Interpolator__proto__.getString = function getString () {
    return this.model ? safeToStringValue(this.model.get()) : '';
  };

  Interpolator__proto__.render = function render (target, occupants) {
    if (inAttributes()) { return; }
    var value = (this.value = this.getString());

    this.rendered = true;

    progressiveText(this, target, occupants, value);
  };

  Interpolator__proto__.toString = function toString (escape) {
    var string = this.getString();
    return escape ? escapeHtml(string) : string;
  };

  Interpolator__proto__.unrender = function unrender (shouldDestroy) {
    if (shouldDestroy) { this.detach(); }
    this.rendered = false;
  };

  Interpolator__proto__.update = function update () {
    if (this.dirty) {
      this.dirty = false;
      if (this.rendered) {
        var value = this.getString();
        if (value !== this.value) { this.node.data = this.value = value; }
      }
    }
  };

  Interpolator__proto__.valueOf = function valueOf () {
    return this.model ? this.model.get() : undefined;
  };

  return Interpolator;
}(Mustache));

var Input = (function (Element) {
  function Input () {
    Element.apply(this, arguments);
  }

  if ( Element ) Input.__proto__ = Element;
  var Input__proto__ = Input.prototype = Object.create( Element && Element.prototype );
  Input__proto__.constructor = Input;

  Input__proto__.render = function render (target, occupants) {
    Element.prototype.render.call(this, target, occupants);
    this.node.defaultValue = this.node.value;
  };
  Input__proto__.compare = function compare (value, attrValue) {
    var comparator = this.getAttribute('value-comparator');
    if (comparator) {
      if (isFunction(comparator)) {
        return comparator(value, attrValue);
      }
      if (value && attrValue) {
        return value[comparator] == attrValue[comparator];
      }
    }
    return value == attrValue;
  };

  return Input;
}(Element));

// simple JSON parser, without the restrictions of JSON parse
// (i.e. having to double-quote keys).
//
// If passed a hash of values as the second argument, ${placeholders}
// will be replaced with those values

var specials$1 = {
  true: true,
  false: false,
  null: null,
  undefined: undefined
};

var specialsPattern = new RegExp('^(?:' + keys(specials$1).join('|') + ')');
var numberPattern$1 = /^(?:[+-]?)(?:(?:(?:0|[1-9]\d*)?\.\d+)|(?:(?:0|[1-9]\d*)\.)|(?:0|[1-9]\d*))(?:[eE][+-]?\d+)?/;
var placeholderPattern = /\$\{([^\}]+)\}/g;
var placeholderAtStartPattern = /^\$\{([^\}]+)\}/;
var onlyWhitespace$1 = /^\s*$/;

var JsonParser = Parser.extend({
  init: function init(str, options) {
    this.values = options.values;
    this.sp();
  },

  postProcess: function postProcess(result) {
    if (result.length !== 1 || !onlyWhitespace$1.test(this.leftover)) {
      return null;
    }

    return { value: result[0].v };
  },

  converters: [
    function getPlaceholder(parser) {
      if (!parser.values) { return null; }

      var placeholder = parser.matchPattern(placeholderAtStartPattern);

      if (placeholder && hasOwn(parser.values, placeholder)) {
        return { v: parser.values[placeholder] };
      }
    },

    function getSpecial(parser) {
      var special = parser.matchPattern(specialsPattern);
      if (special) { return { v: specials$1[special] }; }
    },

    function getNumber(parser) {
      var number = parser.matchPattern(numberPattern$1);
      if (number) { return { v: +number }; }
    },

    function getString(parser) {
      var stringLiteral = readStringLiteral(parser);
      var values = parser.values;

      if (stringLiteral && values) {
        return {
          v: stringLiteral.v.replace(placeholderPattern, function (match, $1) { return $1 in values ? values[$1] : $1; }
          )
        };
      }

      return stringLiteral;
    },

    function getObject(parser) {
      if (!parser.matchString('{')) { return null; }

      var result = {};

      parser.sp();

      if (parser.matchString('}')) {
        return { v: result };
      }

      var pair;
      while ((pair = getKeyValuePair(parser))) {
        result[pair.key] = pair.value;

        parser.sp();

        if (parser.matchString('}')) {
          return { v: result };
        }

        if (!parser.matchString(',')) {
          return null;
        }
      }

      return null;
    },

    function getArray(parser) {
      if (!parser.matchString('[')) { return null; }

      var result = [];

      parser.sp();

      if (parser.matchString(']')) {
        return { v: result };
      }

      var valueToken;
      while ((valueToken = parser.read())) {
        result.push(valueToken.v);

        parser.sp();

        if (parser.matchString(']')) {
          return { v: result };
        }

        if (!parser.matchString(',')) {
          return null;
        }

        parser.sp();
      }

      return null;
    }
  ]
});

function getKeyValuePair(parser) {
  parser.sp();

  var key = readKey(parser);

  if (!key) { return null; }

  var pair = { key: key };

  parser.sp();
  if (!parser.matchString(':')) {
    return null;
  }
  parser.sp();

  var valueToken = parser.read();

  if (!valueToken) { return null; }

  pair.value = valueToken.v;
  return pair;
}

function parseJSON(str, values) {
  var parser = new JsonParser(str, { values: values });
  return parser.result;
}

var Mapping = (function (Item) {
  function Mapping(options) {
    Item.call(this, options);

    this.name = options.template.n;

    this.owner = options.owner || options.up.owner || options.element || findElement(options.up);
    this.element =
      options.element || (this.owner.attributeByName ? this.owner : findElement(options.up));
    this.up = this.element.up; // shared
    this.ractive = this.up.ractive;

    this.element.attributeByName[this.name] = this;

    this.value = options.template.f;
  }

  if ( Item ) Mapping.__proto__ = Item;
  var Mapping__proto__ = Mapping.prototype = Object.create( Item && Item.prototype );
  Mapping__proto__.constructor = Mapping;

  Mapping__proto__.bind = function bind () {
    var template = this.template.f;
    var viewmodel = this.element.instance.viewmodel;

    if (template === 0) {
      // empty attributes are `true`
      viewmodel.joinKey(this.name).set(true);
    } else if (isString(template)) {
      var parsed = parseJSON(template);
      viewmodel.joinKey(this.name).set(parsed ? parsed.value : template);
    } else if (isArray(template)) {
      createMapping(this, true);
    }
  };

  Mapping__proto__.rebound = function rebound (update) {
    if (this.boundFragment) { this.boundFragment.rebound(update); }
    if (this.link) {
      this.model = resolve(this.up, this.template.f[0]);
      var model = this.element.instance.viewmodel.joinAll(splitKeypath(this.name));
      model.link(this.model, this.name, { mapping: true });
    }
  };

  Mapping__proto__.render = function render () {};

  Mapping__proto__.unbind = function unbind (view) {
    if (this.model) { this.model.unregister(this); }
    if (this.boundFragment) { this.boundFragment.unbind(view); }

    if (this.element.bound) {
      if (this.link.target === this.model) { this.link.owner.unlink(); }
    }
  };

  Mapping__proto__.unrender = function unrender () {};

  Mapping__proto__.update = function update () {
    if (this.dirty) {
      this.dirty = false;
      if (this.boundFragment) { this.boundFragment.update(); }
    }
  };

  return Mapping;
}(Item));

function createMapping(item) {
  var template = item.template.f;
  var viewmodel = item.element.instance.viewmodel;
  var childData = viewmodel.value;

  if (template.length === 1 && template[0].t === INTERPOLATOR) {
    var model = resolve(item.up, template[0]);
    var val = model.get(false);

    // if the interpolator is not static
    if (!template[0].s) {
      item.model = model;
      item.link = viewmodel.createLink(item.name, model, template[0].r, {
        mapping: true
      });

      // initialize parent side of the mapping from child data
      if (isUndefined(val) && !model.isReadonly && item.name in childData) {
        model.set(childData[item.name]);
      }
    } else if (!isObjectType(val) || template[0].x) {
      // copy non-object, non-computed vals through
      viewmodel.joinKey(splitKeypath(item.name)).set(val);
    } else {
      // warn about trying to copy an object
      warnIfDebug(("Cannot copy non-computed object value from static mapping '" + (item.name) + "'"));
    }

    // if the item isn't going to manage the model, give it a change to tear down if it's computed
    if (model !== item.model) { model.unregister(); }
  } else {
    item.boundFragment = new Fragment({
      owner: item,
      template: template
    }).bind();

    item.model = viewmodel.joinKey(splitKeypath(item.name));
    item.model.set(item.boundFragment.valueOf());

    // item is a *bit* of a hack
    item.boundFragment.bubble = function () {
      Fragment.prototype.bubble.call(item.boundFragment);
      // defer this to avoid mucking around model deps if there happens to be an expression involved
      runloop.scheduleTask(function () {
        item.boundFragment.update();
        item.model.set(item.boundFragment.valueOf());
      });
    };
  }
}

var Option = (function (Element) {
  function Option(options) {
    var template = options.template;
    if (!template.a) { template.a = {}; }

    // If the value attribute is missing, use the element's content,
    // as long as it isn't disabled
    if (isUndefined(template.a.value) && !('disabled' in template.a)) {
      template.a.value = template.f || '';
    }

    Element.call(this, options);

    this.select = findElement(this.parent || this.up, false, 'select');
  }

  if ( Element ) Option.__proto__ = Element;
  var Option__proto__ = Option.prototype = Object.create( Element && Element.prototype );
  Option__proto__.constructor = Option;

  Option__proto__.bind = function bind () {
    if (!this.select) {
      Element.prototype.bind.call(this);
      return;
    }

    // If the select has a value, it overrides the `selected` attribute on
    // this option - so we delete the attribute
    var selectedAttribute = this.attributeByName.selected;
    if (selectedAttribute && this.select.getAttribute('value') !== undefined) {
      var index = this.attributes.indexOf(selectedAttribute);
      this.attributes.splice(index, 1);
      delete this.attributeByName.selected;
    }

    Element.prototype.bind.call(this);
    this.select.options.push(this);
  };

  Option__proto__.bubble = function bubble () {
    // if we're using content as value, may need to update here
    var value = this.getAttribute('value');
    if (this.node && this.node.value !== value) {
      this.node._ractive.value = value;
    }
    Element.prototype.bubble.call(this);
  };

  Option__proto__.getAttribute = function getAttribute (name) {
    var attribute = this.attributeByName[name];
    return attribute
      ? attribute.getValue()
      : name === 'value' && this.fragment
      ? this.fragment.valueOf()
      : undefined;
  };

  Option__proto__.isSelected = function isSelected () {
    var this$1 = this;

    var optionValue = this.getAttribute('value');

    if (isUndefined(optionValue) || !this.select) {
      return false;
    }

    var selectValue = this.select.getAttribute('value');

    if (this.select.compare(selectValue, optionValue)) {
      return true;
    }

    if (this.select.getAttribute('multiple') && isArray(selectValue)) {
      var i = selectValue.length;
      while (i--) {
        if (this$1.select.compare(selectValue[i], optionValue)) {
          return true;
        }
      }
    }
  };

  Option__proto__.render = function render (target, occupants) {
    Element.prototype.render.call(this, target, occupants);

    if (!this.attributeByName.value) {
      this.node._ractive.value = this.getAttribute('value');
    }
  };

  Option__proto__.unbind = function unbind (view) {
    Element.prototype.unbind.call(this, view);

    if (this.select) {
      removeFromArray(this.select.options, this);
    }
  };

  return Option;
}(Element));

function getPartialTemplate(ractive, name, up) {
  // If the partial in instance or view heirarchy instances, great
  var partial = getPartialFromRegistry(ractive, name, up || {});
  if (partial) { return partial; }

  // Does it exist on the page as a script tag?
  partial = parser.fromId(name, { noThrow: true });
  if (partial) {
    // parse and register to this ractive instance
    var parsed = parser.parseFor(partial, ractive);

    // register extra partials on the ractive instance if they don't already exist
    if (parsed.p) { fillGaps(ractive.partials, parsed.p); }

    // register (and return main partial if there are others in the template)
    return (ractive.partials[name] = parsed.t);
  }
}

function getPartialFromRegistry(ractive, name, up) {
  // if there was an instance up-hierarchy, cool
  var partial = findParentPartial(name, up.owner);
  if (partial) { return partial; }

  // find first instance in the ractive or view hierarchy that has this partial
  var instance = findInstance('partials', ractive, name);

  if (!instance) {
    return;
  }

  partial = instance.partials[name];

  // partial is a function?
  var fn;
  if (isFunction(partial)) {
    fn = partial;
    // super partial
    if (fn.styleSet) { return fn; }

    fn = partial.bind(instance);
    fn.isOwner = hasOwn(instance.partials, name);
    partial = fn.call(ractive, parser);
  }

  if (!partial && partial !== '') {
    warnIfDebug(noRegistryFunctionReturn, name, 'partial', 'partial', {
      ractive: ractive
    });
    return;
  }

  // If this was added manually to the registry,
  // but hasn't been parsed, parse it now
  if (!parser.isParsed(partial)) {
    // use the parseOptions of the ractive instance on which it was found
    var parsed = parser.parseFor(partial, instance);

    // Partials cannot contain nested partials!
    // TODO add a test for this
    if (parsed.p) {
      warnIfDebug('Partials ({{>%s}}) cannot contain nested inline partials', name, { ractive: ractive });
    }

    // if fn, use instance to store result, otherwise needs to go
    // in the correct point in prototype chain on instance or constructor
    var target = fn ? instance : findOwner(instance, name);

    // may be a template with partials, which need to be registered and main template extracted
    target.partials[name] = partial = parsed.t;
  }

  // store for reset
  if (fn) { partial._fn = fn; }

  // if the partial is a pre-parsed template object, import any expressions and update the registry
  if (partial.v) {
    addFunctions(partial);
    return (instance.partials[name] = partial.t);
  } else {
    return partial;
  }
}

function findOwner(ractive, key) {
  return hasOwn(ractive.partials, key) ? ractive : findConstructor(ractive.constructor, key);
}

function findConstructor(constructor, key) {
  if (!constructor) {
    return;
  }
  return hasOwn(constructor.partials, key) ? constructor : findConstructor(constructor.Parent, key);
}

function findParentPartial(name, parent) {
  if (parent) {
    if (
      parent.template &&
      parent.template.p &&
      !isArray(parent.template.p) &&
      hasOwn(parent.template.p, name)
    ) {
      return parent.template.p[name];
    } else if (parent.up && parent.up.owner) {
      return findParentPartial(name, parent.up.owner);
    }
  }
}

function Partial(options) {
  MustacheContainer.call(this, options);

  var tpl = options.template;

  // yielder is a special form of partial that will later require special handling
  if (tpl.t === YIELDER) {
    this.yielder = 1;
  } else if (tpl.t === ELEMENT) {
    // this is a macro partial, complete with macro constructor
    // leaving this as an element will confuse up-template searches
    this.type = PARTIAL;
    this.macro = options.macro;
  }
}

var proto$6 = (Partial.prototype = create(MustacheContainer.prototype));

assign(proto$6, {
  constructor: Partial,

  bind: function bind() {
    var template = this.template;

    if (this.yielder) {
      // the container is the instance that owns this node
      this.container = this.up.ractive;
      this.component = this.container.component;
      this.containerFragment = this.up;

      // normal component
      if (this.component) {
        // yields skip the owning instance and go straight to the surrounding context
        this.up = this.component.up;

        // {{yield}} is equivalent to {{yield content}}
        if (!template.r && !template.x && !template.rx) { this.refName = 'content'; }
      } else {
        // plain-ish instance that may be attached to a parent later
        this.fragment = new Fragment({
          owner: this,
          template: []
        });
        this.fragment.bind();
        return;
      }
    }

    // this is a macro/super partial
    if (this.macro) {
      this.fn = this.macro;
    } else {
      // this is a plain partial or yielder
      if (!this.refName) { this.refName = template.r; }

      // if the refName exists as a partial, this is a plain old partial reference where no model binding will happen
      if (this.refName) {
        partialFromValue(this, this.refName);
      }

      // this is a dynamic/inline partial
      if (!this.partial && !this.fn) {
        MustacheContainer.prototype.bind.call(this);
        if (this.model) { partialFromValue(this, this.model.get()); }
      }
    }

    if (!this.partial && !this.fn) {
      warnOnceIfDebug(("Could not find template for partial '" + (this.name) + "'"));
    }

    createFragment(this, this.partial || []);

    // macro/super partial
    if (this.fn) { initMacro(this); }

    this.fragment.bind();
  },

  bubble: function bubble() {
    if (!this.dirty) {
      this.dirty = true;

      if (this.yielder) {
        this.containerFragment.bubble();
      } else {
        this.up.bubble();
      }
    }
  },

  findNextNode: function findNextNode() {
    return (this.containerFragment || this.up).findNextNode(this);
  },

  handleChange: function handleChange() {
    this.dirtyTemplate = true;
    this.externalChange = true;
    this.bubble();
  },

  rebound: function rebound(update) {
    var this$1 = this;

    if (this._attrs) {
      keys(this._attrs).forEach(function (k) { return this$1._attrs[k].rebound(update); });
    }
    MustacheContainer.prototype.rebound.call(this, update);
  },

  refreshAttrs: function refreshAttrs() {
    var this$1 = this;

    keys(this._attrs).forEach(function (k) {
      this$1.handle.attributes[k] = !this$1._attrs[k].items.length || this$1._attrs[k].valueOf();
    });
  },

  resetTemplate: function resetTemplate() {
    var this$1 = this;

    if (this.fn && this.proxy) {
      this.last = 0;
      if (this.externalChange) {
        if (isFunction(this.proxy.teardown)) { this.proxy.teardown(); }
        this.fn = this.proxy = null;
      } else {
        this.partial = this.fnTemplate;
        return true;
      }
    }

    this.partial = null;

    if (this.refName) {
      this.partial = getPartialTemplate(this.ractive, this.refName, this.up);
    }

    if (!this.partial && this.model) {
      partialFromValue(this, this.model.get());
    }

    if (!this.fn) {
      if (this.last && this.partial === this.last) { return false; }
      else if (this.partial) {
        this.last = this.partial;
        contextifyTemplate(this);
      }
    }

    this.unbindAttrs();

    if (this.fn) {
      initMacro(this);
      if (isFunction(this.proxy.render)) { runloop.scheduleTask(function () { return this$1.proxy.render(); }); }
    } else if (!this.partial) {
      warnOnceIfDebug(("Could not find template for partial '" + (this.name) + "'"));
    }

    return true;
  },

  render: function render(target, occupants) {
    if (this.fn && this.fn._cssDef && !this.fn._cssDef.applied) { applyCSS(); }

    this.fragment.render(target, occupants);

    if (this.proxy && isFunction(this.proxy.render)) { this.proxy.render(); }
  },

  unbind: function unbind(view) {
    this.fragment.unbind(view);

    this.unbindAttrs(view);

    MustacheContainer.prototype.unbind.call(this, view);
  },

  unbindAttrs: function unbindAttrs(view) {
    var this$1 = this;

    if (this._attrs) {
      keys(this._attrs).forEach(function (k) {
        this$1._attrs[k].unbind(view);
      });
    }
  },

  unrender: function unrender(shouldDestroy) {
    if (this.proxy && isFunction(this.proxy.teardown)) { this.proxy.teardown(); }

    this.fragment.unrender(shouldDestroy);
  },

  update: function update() {
    var this$1 = this;

    var proxy = this.proxy;
    this.updating = 1;

    if (this.dirtyAttrs) {
      this.dirtyAttrs = false;
      keys(this._attrs).forEach(function (k) { return this$1._attrs[k].update(); });
      this.refreshAttrs();
      if (isFunction(proxy.update)) { proxy.update(this.handle.attributes); }
    }

    if (this.dirtyTemplate) {
      this.dirtyTemplate = false;
      this.resetTemplate() && this.fragment.resetTemplate(this.partial || []);
    }

    if (this.dirty) {
      this.dirty = false;
      if (proxy && isFunction(proxy.invalidate)) { proxy.invalidate(); }
      this.fragment.update();
    }

    this.externalChange = false;
    this.updating = 0;
  }
});

function createFragment(self, partial) {
  self.partial = self.last = partial;
  contextifyTemplate(self);

  var options = {
    owner: self,
    template: self.partial
  };

  if (self.yielder) { options.ractive = self.container.parent; }

  if (self.fn) { options.cssIds = self.fn._cssIds; }

  self.fragment = new Fragment(options);
}

function contextifyTemplate(self) {
  if (self.template.c) {
    self.partial = [{ t: SECTION, n: SECTION_WITH, f: self.partial }];
    assign(self.partial[0], self.template.c);
    if (self.yielder) { self.partial[0].y = self; }
    else { self.partial[0].z = self.template.z; }
  }
}

function partialFromValue(self, value, okToParse) {
  var tpl = value;

  if (isArray(tpl)) {
    self.partial = tpl;
  } else if (tpl && isObjectType(tpl)) {
    if (isArray(tpl.t)) { self.partial = tpl.t; }
    else if (isString(tpl.template))
      { self.partial = parsePartial(tpl.template, tpl.template, self.ractive).t; }
  } else if (isFunction(tpl) && tpl.styleSet) {
    self.fn = tpl;
    if (self.fragment) { self.fragment.cssIds = tpl._cssIds; }
  } else if (tpl != null) {
    tpl = getPartialTemplate(self.ractive, '' + tpl, self.containerFragment || self.up);
    if (tpl) {
      self.name = value;
      if (tpl.styleSet) {
        self.fn = tpl;
        if (self.fragment) { self.fragment.cssIds = tpl._cssIds; }
      } else { self.partial = tpl; }
    } else if (okToParse) {
      self.partial = parsePartial('' + value, '' + value, self.ractive).t;
    } else {
      self.name = value;
    }
  }

  return self.partial;
}

function setTemplate(template) {
  partialFromValue(this, template, true);

  if (!this.initing) {
    this.dirtyTemplate = true;
    this.fnTemplate = this.partial;

    if (this.updating) {
      this.bubble();
      runloop.promise();
    } else {
      var promise = runloop.start();

      this.bubble();
      runloop.end();

      return promise;
    }
  }
}

function aliasLocal(ref, name) {
  var aliases = this.fragment.aliases || (this.fragment.aliases = {});
  if (!name) {
    aliases[ref] = this._data;
  } else {
    aliases[name] = this._data.joinAll(splitKeypath(ref));
  }
}

var extras = 'extra-attributes';

function initMacro(self) {
  var fn = self.fn;
  var fragment = self.fragment;

  // defensively copy the template in case it changes
  var template = (self.template = assign({}, self.template));
  var handle = (self.handle = fragment.getContext({
    proxy: self,
    aliasLocal: aliasLocal,
    name: self.template.e || self.name,
    attributes: {},
    setTemplate: setTemplate.bind(self),
    template: template,
    macro: fn
  }));

  if (!template.p) { template.p = {}; }
  template.p = handle.partials = assign({}, template.p);
  if (!hasOwn(template.p, 'content')) { template.p.content = template.f || []; }

  if (isArray(fn.attributes)) {
    self._attrs = {};

    var invalidate = function() {
      this.dirty = true;
      self.dirtyAttrs = true;
      self.bubble();
    };

    if (isArray(template.m)) {
      var attrs = template.m;
      template.p[extras] = template.m = attrs.filter(function (a) { return !~fn.attributes.indexOf(a.n); });
      attrs
        .filter(function (a) { return ~fn.attributes.indexOf(a.n); })
        .forEach(function (a) {
          var fragment = new Fragment({
            template: a.f,
            owner: self
          });
          fragment.bubble = invalidate;
          fragment.findFirstNode = noop;
          self._attrs[a.n] = fragment;
        });
    } else {
      template.p[extras] = [];
    }
  } else {
    template.p[extras] = template.m;
  }

  if (self._attrs) {
    keys(self._attrs).forEach(function (k) {
      self._attrs[k].bind();
    });
    self.refreshAttrs();
  }

  self.initing = 1;
  self.proxy = fn.call(self.ractive, handle, handle.attributes) || {};
  if (!self.partial) { self.partial = []; }
  self.fnTemplate = self.partial;
  self.initing = 0;

  contextifyTemplate(self);
  fragment.resetTemplate(self.partial);
}

function parsePartial(name, partial, ractive) {
  var parsed;

  try {
    parsed = parser.parse(partial, parser.getParseOptions(ractive));
  } catch (e) {
    warnIfDebug(("Could not parse partial from expression '" + name + "'\n" + (e.message)));
  }

  return parsed || { t: [] };
}

var KeyModel = function KeyModel(value, context, instance) {
  this.value = this.key = value;
  this.context = context;
  this.isReadonly = this.isKey = true;
  this.deps = [];
  this.links = [];
  this.children = [];
  this.instance = instance;
};
var KeyModel__proto__ = KeyModel.prototype;

KeyModel__proto__.applyValue = function applyValue (value) {
  if (value !== this.value) {
    this.value = this.key = value;
    this.deps.forEach(handleChange);
    this.links.forEach(handleChange);
    this.children.forEach(function (c) {
      c.applyValue(c.context.getKeypath(c.instance));
    });
  }
};

KeyModel__proto__.destroyed = function destroyed () {
  if (this.upstream) { this.upstream.unregisterChild(this); }
};

KeyModel__proto__.get = function get (shouldCapture) {
  if (shouldCapture) { capture(this); }
  return unescapeKey(this.value);
};

KeyModel__proto__.getKeypath = function getKeypath () {
  return unescapeKey(this.value);
};

KeyModel__proto__.has = function has () {
  return false;
};

KeyModel__proto__.rebind = function rebind (next, previous) {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) { this$1.deps[i].rebind(next, previous, false); }

  i = this.links.length;
  while (i--) { this$1.links[i].relinking(next, false); }
};

KeyModel__proto__.register = function register (dependant) {
  this.deps.push(dependant);
};

KeyModel__proto__.registerChild = function registerChild (child) {
  addToArray(this.children, child);
  child.upstream = this;
};

KeyModel__proto__.registerLink = function registerLink (link) {
  addToArray(this.links, link);
};

KeyModel__proto__.unregister = function unregister (dependant) {
  removeFromArray(this.deps, dependant);
};

KeyModel__proto__.unregisterChild = function unregisterChild (child) {
  removeFromArray(this.children, child);
};

KeyModel__proto__.unregisterLink = function unregisterLink (link) {
  removeFromArray(this.links, link);
};

KeyModel.prototype.reference = noop;
KeyModel.prototype.unreference = noop;

var keypathString = /^"(\\"|[^"])+"$/;

var RepeatedFragment = function RepeatedFragment(options) {
  this.parent = options.owner.up;

  // bit of a hack, so reference resolution works without another
  // layer of indirection
  this.up = this;
  this.owner = options.owner;
  this.ractive = this.parent.ractive;
  this.delegate =
    this.ractive.delegate !== false && (this.parent.delegate || findDelegate(this.parent));
  // delegation disabled by directive
  if (this.delegate && this.delegate.delegate === false) { this.delegate = false; }
  // let the element know it's a delegate handler
  if (this.delegate) { this.delegate.delegate = this.delegate; }

  // encapsulated styles should be inherited until they get applied by an element
  this.cssIds = 'cssIds' in options ? options.cssIds : this.parent ? this.parent.cssIds : null;

  this.context = null;
  this.rendered = false;
  this.iterations = [];

  this.template = options.template;

  this.indexRef = options.indexRef;
  this.keyRef = options.keyRef;

  this.pendingNewIndices = null;
  this.previousIterations = null;

  // track array versus object so updates of type rest
  this.isArray = false;
};
var RepeatedFragment__proto__ = RepeatedFragment.prototype;

RepeatedFragment__proto__.bind = function bind (context) {
    var this$1 = this;

  this.context = context;
  this.bound = true;
  var value = context.get();

  var aliases = (this.aliases = this.owner.template.z && this.owner.template.z.slice());

  var shuffler = aliases && aliases.find(function (a) { return a.n === 'shuffle'; });
  if (shuffler && shuffler.x && shuffler.x.x) {
    if (shuffler.x.x.s === 'true') { this.shuffler = true; }
    else if (keypathString.test(shuffler.x.x.s))
      { this.shuffler = splitKeypath(shuffler.x.x.s.slice(1, -1)); }
  }

  if (this.shuffler) { this.values = shuffleValues(this, this.shuffler); }

  if (this.source) { this.source.model.unbind(this.source); }
  var source = context.isComputed && aliases && aliases.find(function (a) { return a.n === 'source'; });
  if (source && source.x && source.x.r) {
    var model = resolve(this, source.x);
    this.source = {
      handleChange: function handleChange() {},
      rebind: function rebind(next) {
        this.model.unregister(this);
        this.model = next;
        next.register(this);
      }
    };
    this.source.model = model;
    model.register(this.source);
  }

  // {{#each array}}...
  if ((this.isArray = isArray(value))) {
    // we can't use map, because of sparse arrays
    this.iterations = [];
    var max = (this.length = value.length);
    for (var i = 0; i < max; i += 1) {
      this$1.iterations[i] = this$1.createIteration(i, i);
    }
  } else if (isObject(value)) {
    // {{#each object}}...
    this.isArray = false;

    // TODO this is a dreadful hack. There must be a neater way
    if (this.indexRef) {
      var refs = this.indexRef.split(',');
      this.keyRef = refs[0];
      this.indexRef = refs[1];
    }

    var ks = keys(value);
    this.length = ks.length;

    this.iterations = ks.map(function (key, index) {
      return this$1.createIteration(key, index);
    });
  }

  return this;
};

RepeatedFragment__proto__.bubble = function bubble (index) {
  if (!this.bubbled) { this.bubbled = []; }
  this.bubbled.push(index);

  if (!this.rebounding) { this.owner.bubble(); }
};

RepeatedFragment__proto__.createIteration = function createIteration (key, index) {
  var fragment = new Fragment({
    owner: this,
    template: this.template
  });

  fragment.isIteration = true;
  fragment.delegate = this.delegate;

  if (this.aliases) { fragment.aliases = {}; }
  swizzleFragment(this, fragment, key, index);

  return fragment.bind(fragment.context);
};

RepeatedFragment__proto__.destroyed = function destroyed () {
    var this$1 = this;

  var len = this.iterations.length;
  for (var i = 0; i < len; i++) { this$1.iterations[i].destroyed(); }
  if (this.pathModel) { this.pathModel.destroyed(); }
  if (this.rootModel) { this.rootModel.destroyed(); }
};

RepeatedFragment__proto__.detach = function detach () {
  var docFrag = createDocumentFragment();
  this.iterations.forEach(function (fragment) { return docFrag.appendChild(fragment.detach()); });
  return docFrag;
};

RepeatedFragment__proto__.find = function find (selector, options) {
  return findMap(this.iterations, function (i) { return i.find(selector, options); });
};

RepeatedFragment__proto__.findAll = function findAll (selector, options) {
  return this.iterations.forEach(function (i) { return i.findAll(selector, options); });
};

RepeatedFragment__proto__.findAllComponents = function findAllComponents (name, options) {
  return this.iterations.forEach(function (i) { return i.findAllComponents(name, options); });
};

RepeatedFragment__proto__.findComponent = function findComponent (name, options) {
  return findMap(this.iterations, function (i) { return i.findComponent(name, options); });
};

RepeatedFragment__proto__.findContext = function findContext () {
  return this.context;
};

RepeatedFragment__proto__.findNextNode = function findNextNode (iteration) {
    var this$1 = this;

  if (iteration.index < this.iterations.length - 1) {
    for (var i = iteration.index + 1; i < this.iterations.length; i++) {
      var node = this$1.iterations[i].firstNode(true);
      if (node) { return node; }
    }
  }

  return this.owner.findNextNode();
};

RepeatedFragment__proto__.firstNode = function firstNode (skipParent) {
  return this.iterations[0] ? this.iterations[0].firstNode(skipParent) : null;
};

RepeatedFragment__proto__.getLast = function getLast () {
  return this.lastModel || (this.lastModel = new KeyModel(this.length - 1));
};

RepeatedFragment__proto__.rebind = function rebind (next) {
    var this$1 = this;

  this.context = next;
  if (this.source) { return; }
  if (next) {
    this.iterations.forEach(function (fragment) {
      swizzleFragment(this$1, fragment, fragment.key, fragment.index);
    });
  }
};

RepeatedFragment__proto__.rebound = function rebound (update$$1) {
    var this$1 = this;

  this.context = this.owner.model;
  this.iterations.forEach(function (f, i) {
    f.context = contextFor(this$1, f, i);
    f.rebound(update$$1);
  });
};

RepeatedFragment__proto__.render = function render (target, occupants) {
  var xs = this.iterations;
  if (xs) {
    var len = xs.length;
    for (var i = 0; i < len; i++) {
      xs[i].render(target, occupants);
    }
  }

  this.rendered = true;
};

RepeatedFragment__proto__.shuffle = function shuffle (newIndices, merge) {
    var this$1 = this;

  if (!this.pendingNewIndices) { this.previousIterations = this.iterations.slice(); }

  if (!this.pendingNewIndices) { this.pendingNewIndices = []; }

  this.pendingNewIndices.push(newIndices);

  var iterations = [];

  newIndices.forEach(function (newIndex, oldIndex) {
    if (newIndex === -1) { return; }

    var fragment = this$1.iterations[oldIndex];
    iterations[newIndex] = fragment;

    if (newIndex !== oldIndex && fragment) {
      fragment.dirty = true;
      if (merge) { fragment.shouldRebind = 1; }
    }
  });

  this.iterations = iterations;

  // if merging, we're in the midst of an update already
  if (!merge) { this.bubble(); }
};

RepeatedFragment__proto__.shuffled = function shuffled$2 () {
  this.iterations.forEach(shuffled);
};

RepeatedFragment__proto__.toString = function toString (escape) {
  return this.iterations ? this.iterations.map(escape ? toEscapedString : toString$1).join('') : '';
};

RepeatedFragment__proto__.unbind = function unbind (view) {
  this.bound = false;
  if (this.source) { this.source.model.unregister(this.source); }
  var iterations = this.pendingNewIndices ? this.previousIterations : this.iterations;
  var len = iterations.length;
  for (var i = 0; i < len; i++) { iterations[i].unbind(view); }
  return this;
};

RepeatedFragment__proto__.unrender = function unrender (shouldDestroy) {
    var this$1 = this;

  var len = this.iterations.length;
  for (var i = 0; i < len; i++) { this$1.iterations[i].unrender(shouldDestroy); }
  if (this.pendingNewIndices && this.previousIterations) {
    len = this.previousIterations.length;
    for (var i$1 = 0; i$1 < len; i$1++) { this$1.previousIterations[i$1].unrender(shouldDestroy); }
  }
  this.rendered = false;
};

RepeatedFragment__proto__.update = function update$3 () {
    var this$1 = this;

  if (this.pendingNewIndices) {
    this.bubbled.length = 0;
    this.updatePostShuffle();
    return;
  }

  if (this.updating) { return; }
  this.updating = true;

  if (this.shuffler) {
    var values = shuffleValues(this, this.shuffler);
    var newIndices = buildNewIndices(this.values, values);
    if (!newIndices.same) {
      this.shuffle(newIndices, true);
      this.updatePostShuffle();
    } else {
      this.iterations.forEach(update);
    }
  } else {
    var len = this.iterations.length;
    for (var i = 0; i < len; i++) {
      var f = this$1.iterations[i];
      f && f.idxModel && f.idxModel.applyValue(i);
    }

    var value = this.context.get();
    var wasArray = this.isArray;

    var toRemove;
    var oldKeys;
    var reset = true;
    var i$1;

    if ((this.isArray = isArray(value))) {
      // if there's a source to map back to, make sure everything stays bound correctly
      if (this.source) {
        this.rebounding = 1;
        var source = this.source.model.get();
        this.iterations.forEach(function (f, c) {
          if (c < value.length && f.lastValue !== value[c] && ~(i$1 = source.indexOf(value[c]))) {
            swizzleFragment(this$1, f, c, c);
            f.rebound(true);
          }
        });
        this.rebounding = 0;
      }

      if (wasArray) {
        reset = false;
        if (this.iterations.length > value.length) {
          toRemove = this.iterations.splice(value.length);
        }
      }
    } else if (isObject(value) && !wasArray) {
      reset = false;
      toRemove = [];
      oldKeys = {};
      i$1 = this.iterations.length;

      while (i$1--) {
        var fragment = this$1.iterations[i$1];
        if (fragment.key in value) {
          oldKeys[fragment.key] = true;
        } else {
          this$1.iterations.splice(i$1, 1);
          toRemove.push(fragment);
        }
      }
    }

    var newLength = isArray(value) ? value.length : isObject(value) ? keys(value).length : 0;
    this.length = newLength;
    this.updateLast();

    if (reset) {
      toRemove = this.iterations;
      this.iterations = [];
    }

    if (toRemove) {
      len = toRemove.length;
      for (var i$2 = 0; i$2 < len; i$2++) { toRemove[i$2].unbind().unrender(true); }
    }

    // update the remaining ones
    if (!reset && this.isArray && this.bubbled && this.bubbled.length) {
      var bubbled = this.bubbled;
      this.bubbled = [];
      len = bubbled.length;
      for (var i$3 = 0; i$3 < len; i$3++)
        { this$1.iterations[bubbled[i$3]] && this$1.iterations[bubbled[i$3]].update(); }
    } else {
      len = this.iterations.length;
      for (var i$4 = 0; i$4 < len; i$4++) { this$1.iterations[i$4].update(); }
    }

    // add new iterations
    var docFrag;
    var fragment$1;

    if (newLength > this.iterations.length) {
      docFrag = this.rendered ? createDocumentFragment() : null;
      i$1 = this.iterations.length;

      if (isArray(value)) {
        while (i$1 < value.length) {
          fragment$1 = this$1.createIteration(i$1, i$1);

          this$1.iterations.push(fragment$1);
          if (this$1.rendered) { fragment$1.render(docFrag); }

          i$1 += 1;
        }
      } else if (isObject(value)) {
        // TODO this is a dreadful hack. There must be a neater way
        if (this.indexRef && !this.keyRef) {
          var refs = this.indexRef.split(',');
          this.keyRef = refs[0];
          this.indexRef = refs[1];
        }

        keys(value).forEach(function (key) {
          if (!oldKeys || !(key in oldKeys)) {
            fragment$1 = this$1.createIteration(key, i$1);

            this$1.iterations.push(fragment$1);
            if (this$1.rendered) { fragment$1.render(docFrag); }

            i$1 += 1;
          }
        });
      }

      if (this.rendered) {
        var parentNode = this.parent.findParentNode();
        var anchor = this.parent.findNextNode(this.owner);

        parentNode.insertBefore(docFrag, anchor);
      }
    }
  }

  this.updating = false;
};

RepeatedFragment__proto__.updateLast = function updateLast () {
  if (this.lastModel) { this.lastModel.applyValue(this.length - 1); }
};

RepeatedFragment__proto__.updatePostShuffle = function updatePostShuffle () {
    var this$1 = this;

  var newIndices = this.pendingNewIndices[0];
  var parentNode = this.rendered ? this.parent.findParentNode() : null;
  var nextNode = parentNode && this.owner.findNextNode();
  var docFrag = parentNode ? createDocumentFragment() : null;

  // map first shuffle through
  this.pendingNewIndices.slice(1).forEach(function (indices) {
    newIndices.forEach(function (newIndex, oldIndex) {
      newIndices[oldIndex] = indices[newIndex];
    });
  });

  var len = (this.length = this.context.get().length);
  var prev = this.previousIterations;
  var iters = this.iterations;
  var value = this.context.get();
  var stash = {};
  var idx, dest, pos, next, anchor, rebound;

  var map = new Array(newIndices.length);
  newIndices.forEach(function (e, i) { return (map[e] = i); });

  this.updateLast();

  idx = pos = 0;
  while (idx < len) {
    // if there's not an existing thing to shuffle, handle that
    if (isUndefined(map[idx])) {
      next = iters[idx] = this$1.createIteration(idx, idx);
      if (parentNode) {
        anchor = prev[pos];
        anchor = (anchor && parentNode && anchor.firstNode()) || nextNode;

        next.render(docFrag);
        parentNode.insertBefore(docFrag, anchor);
      }

      idx++;
    } else {
      dest = newIndices[pos];

      if (dest === -1) {
        // if it needs to be dropped, drop it
        prev[pos] && prev[pos].unbind().unrender(true);
        prev[pos++] = 0;
      } else if (dest > idx) {
        // if it needs to move down, stash it
        stash[dest] = prev[pos];
        prev[pos++] = null;
      } else {
        // get the fragment that goes for this idx
        iters[idx] = next = iters[idx] || stash[idx] || this$1.createIteration(idx, idx);

        // if it's an existing fragment, swizzle
        if (stash[idx] || pos !== idx) {
          rebound = this$1.source && next.lastValue !== value[idx];
          swizzleFragment(this$1, next, idx, idx);
        }

        // does next need to be moved?
        if (parentNode && (stash[idx] || !prev[pos])) {
          anchor = prev[pos + 1];
          anchor = (anchor && parentNode && anchor.firstNode()) || nextNode;

          if (stash[idx]) {
            parentNode.insertBefore(next.detach(), anchor);
          } else {
            next.render(docFrag);
            parentNode.insertBefore(docFrag, anchor);
          }
        }

        prev[pos++] = 0;
        idx++;
      }

      if (next && isObjectType(next)) {
        if (next.shouldRebind || rebound) {
          next.rebound(rebound);
          next.shouldRebind = 0;
        }
        next.update();
        next.shuffled();
      }
    }
  }

  // clean up any stragglers
  var plen = prev.length;
  for (var i = 0; i < plen; i++) { prev[i] && prev[i].unbind().unrender(true); }

  if (this.shuffler) { this.values = shuffleValues(this, this.shuffler); }

  this.pendingNewIndices = null;
  this.previousIterations = null;
};

RepeatedFragment.prototype.getContext = getContext;
RepeatedFragment.prototype.getKeypath = getKeypath;

// find the topmost delegate
function findDelegate(start) {
  var frag = start;
  var delegate, el;

  out: while (frag) {
    // find next element
    el = 0;
    while (!el && frag) {
      if (frag.owner.type === ELEMENT) { el = frag.owner; }
      if (frag.owner.ractive && frag.owner.ractive.delegate === false) { break out; }
      frag = frag.parent || frag.componentParent;
    }

    if (el.delegate === false) { break out; }
    delegate = el.delegate || el;

    // find next repeated fragment
    while (frag) {
      if (frag.iterations) { break; }
      if (frag.owner.ractive && frag.owner.ractive.delegate === false) { break out; }
      frag = frag.parent || frag.componentParent;
    }
  }

  return delegate;
}

function swizzleFragment(section, fragment, key, idx) {
  var model = section.context ? contextFor(section, fragment, key) : undefined;

  fragment.key = key;
  fragment.index = idx;
  fragment.context = model;
  if (section.source) { fragment.lastValue = model && model.get(); }

  if (fragment.idxModel) { fragment.idxModel.applyValue(idx); }
  if (fragment.keyModel) { fragment.keyModel.applyValue(key); }
  if (fragment.pathModel) {
    fragment.pathModel.context = model;
    fragment.pathModel.applyValue(model.getKeypath());
  }
  if (fragment.rootModel) {
    fragment.rootModel.context = model;
    fragment.rootModel.applyValue(model.getKeypath(fragment.ractive.root));
  }

  // handle any aliases
  var aliases = fragment.aliases;
  section.aliases &&
    section.aliases.forEach(function (a) {
      if (a.x.r === '.') { aliases[a.n] = model; }
      else if (a.x.r === '@index') { aliases[a.n] = fragment.getIndex(); }
      else if (a.x.r === '@key') { aliases[a.n] = fragment.getKey(); }
      else if (a.x.r === '@keypath') { aliases[a.n] = fragment.getKeypath(); }
      else if (a.x.r === '@rootpath') { aliases[a.n] = fragment.getKeypath(true); }
    });
}

function shuffleValues(section, shuffler) {
  var array = section.context.get() || [];
  if (shuffler === true) {
    return array.slice();
  } else {
    return array.map(function (v) { return shuffler.reduce(function (a, c) { return a && a[c]; }, v); });
  }
}

function contextFor(section, fragment, key) {
  if (section.source) {
    var idx;
    var source = section.source.model.get();
    if (source.indexOf && ~(idx = source.indexOf(section.context.joinKey(key).get())))
      { return section.source.model.joinKey(idx); }
  }

  return section.context.joinKey(key);
}

function isEmpty(value) {
  return (
    !value ||
    (isArray(value) && value.length === 0) ||
    (isObject(value) && keys(value).length === 0)
  );
}

function getType(value, hasIndexRef) {
  if (hasIndexRef || isArray(value)) { return SECTION_EACH; }
  if (isObjectLike(value)) { return SECTION_IF_WITH; }
  if (isUndefined(value)) { return null; }
  return SECTION_IF;
}

var Section = (function (MustacheContainer) {
  function Section(options) {
    MustacheContainer.call(this, options);

    this.isAlias = options.template.t === ALIAS;
    this.sectionType = options.template.n || (this.isAlias && SECTION_WITH) || null;
    this.templateSectionType = this.sectionType;
    this.subordinate = options.template.l === 1;
    this.fragment = null;
  }

  if ( MustacheContainer ) Section.__proto__ = MustacheContainer;
  var Section__proto__ = Section.prototype = Object.create( MustacheContainer && MustacheContainer.prototype );
  Section__proto__.constructor = Section;

  Section__proto__.bind = function bind () {
    MustacheContainer.prototype.bind.call(this);

    if (this.subordinate) {
      this.sibling = this.up.items[this.up.items.indexOf(this) - 1];
      this.sibling.nextSibling = this;
    }

    // if we managed to bind, we need to create children
    if (this.model || this.isAlias) {
      this.dirty = true;
      this.update();
    } else if (
      this.sectionType &&
      this.sectionType === SECTION_UNLESS &&
      (!this.sibling || !this.sibling.isTruthy())
    ) {
      this.fragment = new Fragment({
        owner: this,
        template: this.template.f
      }).bind();
    }
  };

  Section__proto__.bubble = function bubble () {
    if (!this.dirty && this.yield) {
      this.dirty = true;
      this.containerFragment.bubble();
    } else { MustacheContainer.prototype.bubble.call(this); }
  };

  Section__proto__.detach = function detach () {
    var frag = this.fragment || this.detached;
    return frag ? frag.detach() : MustacheContainer.prototype.detach.call(this);
  };

  Section__proto__.findNextNode = function findNextNode () {
    return (this.containerFragment || this.up).findNextNode(this);
  };

  Section__proto__.isTruthy = function isTruthy () {
    if (this.subordinate && this.sibling.isTruthy()) { return true; }
    var value = !this.model ? undefined : this.model.isRoot ? this.model.value : this.model.get();
    return !!value && (this.templateSectionType === SECTION_IF_WITH || !isEmpty(value));
  };

  Section__proto__.rebind = function rebind (next, previous, safe) {
    if (MustacheContainer.prototype.rebind.call(this, next, previous, safe)) {
      if (this.fragment && this.sectionType !== SECTION_IF && this.sectionType !== SECTION_UNLESS) {
        this.fragment.rebind(next);
      }
    }
  };

  Section__proto__.rebound = function rebound (update) {
    if (this.model) {
      if (this.model.rebound) { this.model.rebound(update); }
      else {
        MustacheContainer.prototype.unbind.call(this);
        MustacheContainer.prototype.bind.call(this);
        if (
          this.sectionType === SECTION_WITH ||
          this.sectionType === SECTION_IF_WITH ||
          this.sectionType === SECTION_EACH
        ) {
          if (this.fragment) { this.fragment.rebind(this.model); }
        }

        if (update) { this.bubble(); }
      }
    }
    if (this.fragment) { this.fragment.rebound(update); }
  };

  Section__proto__.render = function render (target, occupants) {
    this.rendered = true;
    if (this.fragment) { this.fragment.render(target, occupants); }
  };

  Section__proto__.shuffle = function shuffle (newIndices) {
    if (this.fragment && this.sectionType === SECTION_EACH) {
      this.fragment.shuffle(newIndices);
    }
  };

  Section__proto__.unbind = function unbind (view) {
    MustacheContainer.prototype.unbind.call(this, view);
    if (this.fragment) { this.fragment.unbind(view); }
  };

  Section__proto__.unrender = function unrender (shouldDestroy) {
    if (this.rendered && this.fragment) { this.fragment.unrender(shouldDestroy); }
    this.rendered = false;
  };

  Section__proto__.update = function update () {
    var this$1 = this;

    if (!this.dirty) { return; }

    if (this.fragment && this.sectionType !== SECTION_IF && this.sectionType !== SECTION_UNLESS) {
      this.fragment.context = this.model;
    }

    if (!this.model && this.sectionType !== SECTION_UNLESS && !this.isAlias) { return; }

    this.dirty = false;

    var value = !this.model ? undefined : this.model.isRoot ? this.model.value : this.model.get();
    var siblingFalsey = !this.subordinate || !this.sibling.isTruthy();
    var lastType = this.sectionType;

    if (this.yield && this.yield !== value) {
      this.up = this.containerFragment;
      this.container = null;
      this.yield = null;
      if (this.rendered) { this.fragment.unbind().unrender(true); }
      this.fragment = null;
    } else if (this.rendered && !this.yield && value instanceof Context) {
      if (this.rendered && this.fragment) { this.fragment.unbind().unrender(true); }
      this.fragment = null;
    }

    // watch for switching section types
    if (this.sectionType === null || this.templateSectionType === null)
      { this.sectionType = getType(value, this.template.i); }
    if (lastType && lastType !== this.sectionType && this.fragment) {
      if (this.rendered) {
        this.fragment.unbind().unrender(true);
      }

      this.fragment = null;
    }

    var newFragment;

    var fragmentShouldExist =
      this.sectionType === SECTION_EACH || // each always gets a fragment, which may have no iterations
      this.sectionType === SECTION_WITH || // with (partial context) always gets a fragment
      (siblingFalsey &&
        (this.sectionType === SECTION_UNLESS ? !this.isTruthy() : this.isTruthy())) || // if, unless, and if-with depend on siblings and the condition
      this.isAlias;

    if (fragmentShouldExist) {
      if (!this.fragment) { this.fragment = this.detached; }

      if (this.fragment) {
        // check for detached fragment
        if (this.detached) {
          attach(this, this.fragment);
          this.detached = false;
          this.rendered = true;
        }

        if (!this.fragment.bound) { this.fragment.bind(this.model); }
        this.fragment.update();
      } else {
        if (this.sectionType === SECTION_EACH) {
          newFragment = new RepeatedFragment({
            owner: this,
            template: this.template.f,
            indexRef: this.template.i
          }).bind(this.model);
        } else {
          // only with and if-with provide context - if and unless do not
          var context =
            this.sectionType !== SECTION_IF && this.sectionType !== SECTION_UNLESS
              ? this.model
              : null;

          if (value instanceof Context) {
            this.yield = value;
            this.containerFragment = this.up;
            this.up = value.fragment;
            this.container = value.ractive;
            context = undefined;
          }

          newFragment = new Fragment({
            owner: this,
            template: this.template.f
          }).bind(context);
        }
      }
    } else {
      if (this.fragment && this.rendered) {
        if (keep !== true) {
          this.fragment.unbind().unrender(true);
        } else {
          this.unrender(false);
          this.detached = this.fragment;
          runloop.promise().then(function () {
            if (this$1.detached) { this$1.detach(); }
          });
        }
      } else if (this.fragment) {
        this.fragment.unbind();
      }

      this.fragment = null;
    }

    if (newFragment) {
      if (this.rendered) {
        attach(this, newFragment);
      }

      this.fragment = newFragment;
    }

    if (this.nextSibling) {
      this.nextSibling.dirty = true;
      this.nextSibling.update();
    }
  };

  return Section;
}(MustacheContainer));

function attach(section, fragment) {
  var anchor = (section.containerFragment || section.up).findNextNode(section);

  if (anchor) {
    var docFrag = createDocumentFragment();
    fragment.render(docFrag);

    anchor.parentNode.insertBefore(docFrag, anchor);
  } else {
    fragment.render(section.up.findParentNode());
  }
}

var Select = (function (Element) {
  function Select(options) {
    Element.call(this, options);
    this.options = [];
  }

  if ( Element ) Select.__proto__ = Element;
  var Select__proto__ = Select.prototype = Object.create( Element && Element.prototype );
  Select__proto__.constructor = Select;

  Select__proto__.foundNode = function foundNode (node) {
    if (this.binding) {
      var selectedOptions = getSelectedOptions(node);

      if (selectedOptions.length > 0) {
        this.selectedOptions = selectedOptions;
      }
    }
  };

  Select__proto__.render = function render (target, occupants) {
    Element.prototype.render.call(this, target, occupants);
    this.sync();

    var node = this.node;

    var i = node.options.length;
    while (i--) {
      node.options[i].defaultSelected = node.options[i].selected;
    }

    this.rendered = true;
  };

  Select__proto__.sync = function sync () {
    var this$1 = this;

    var selectNode = this.node;

    if (!selectNode) { return; }

    var options = toArray(selectNode.options);

    if (this.selectedOptions) {
      options.forEach(function (o) {
        if (this$1.selectedOptions.indexOf(o) >= 0) { o.selected = true; }
        else { o.selected = false; }
      });
      this.binding.setFromNode(selectNode);
      delete this.selectedOptions;
      return;
    }

    var selectValue = this.getAttribute('value');
    var isMultiple = this.getAttribute('multiple');
    var array = isMultiple && isArray(selectValue);

    // If the <select> has a specified value, that should override
    // these options
    if (selectValue !== undefined) {
      var optionWasSelected;

      options.forEach(function (o) {
        var optionValue = o._ractive ? o._ractive.value : o.value;
        var shouldSelect = isMultiple
          ? array && this$1.valueContains(selectValue, optionValue)
          : this$1.compare(selectValue, optionValue);

        if (shouldSelect) {
          optionWasSelected = true;
        }

        o.selected = shouldSelect;
      });

      if (!optionWasSelected && !isMultiple) {
        if (this.binding) {
          this.binding.forceUpdate();
        }
      }
    } else if (this.binding && this.binding.forceUpdate) {
      // Otherwise the value should be initialised according to which
      // <option> element is selected, if twoway binding is in effect
      this.binding.forceUpdate();
    }
  };
  Select__proto__.valueContains = function valueContains (selectValue, optionValue) {
    var this$1 = this;

    var i = selectValue.length;
    while (i--) {
      if (this$1.compare(optionValue, selectValue[i])) { return true; }
    }
  };
  Select__proto__.compare = function compare (optionValue, selectValue) {
    var comparator = this.getAttribute('value-comparator');
    if (comparator) {
      if (isFunction(comparator)) {
        return comparator(selectValue, optionValue);
      }
      if (selectValue && optionValue) {
        return selectValue[comparator] == optionValue[comparator];
      }
    }
    return selectValue == optionValue;
  };
  Select__proto__.update = function update () {
    var dirty = this.dirty;
    Element.prototype.update.call(this);
    if (dirty) {
      this.sync();
    }
  };

  return Select;
}(Element));

var Textarea = (function (Input) {
  function Textarea(options) {
    var template = options.template;

    options.deferContent = true;

    Input.call(this, options);

    // check for single interpolator binding
    if (!this.attributeByName.value) {
      if (template.f && isBindable({ template: template })) {
        (this.attributes || (this.attributes = [])).push(
          createItem({
            owner: this,
            template: { t: ATTRIBUTE, f: template.f, n: 'value' },
            up: this.up
          })
        );
      } else {
        this.fragment = new Fragment({
          owner: this,
          cssIds: null,
          template: template.f
        });
      }
    }
  }

  if ( Input ) Textarea.__proto__ = Input;
  var Textarea__proto__ = Textarea.prototype = Object.create( Input && Input.prototype );
  Textarea__proto__.constructor = Textarea;

  Textarea__proto__.bubble = function bubble () {
    var this$1 = this;

    if (!this.dirty) {
      this.dirty = true;

      if (this.rendered && !this.binding && this.fragment) {
        runloop.scheduleTask(function () {
          this$1.dirty = false;
          this$1.node.value = this$1.fragment.toString();
        });
      }

      this.up.bubble(); // default behaviour
    }
  };

  return Textarea;
}(Input));

var Text = (function (Item) {
  function Text(options) {
    Item.call(this, options);
    this.type = TEXT;
  }

  if ( Item ) Text.__proto__ = Item;
  var Text__proto__ = Text.prototype = Object.create( Item && Item.prototype );
  Text__proto__.constructor = Text;

  Text__proto__.detach = function detach () {
    return detachNode(this.node);
  };

  Text__proto__.firstNode = function firstNode () {
    return this.node;
  };

  Text__proto__.render = function render (target, occupants) {
    if (inAttributes()) { return; }
    this.rendered = true;

    progressiveText(this, target, occupants, this.template);
  };

  Text__proto__.toString = function toString (escape) {
    return escape ? escapeHtml(this.template) : this.template;
  };

  Text__proto__.unrender = function unrender (shouldDestroy) {
    if (this.rendered && shouldDestroy) { this.detach(); }
    this.rendered = false;
  };

  Text__proto__.valueOf = function valueOf () {
    return this.template;
  };

  return Text;
}(Item));

var proto$7 = Text.prototype;
proto$7.bind = proto$7.unbind = proto$7.update = noop;

var visible;
var hidden = 'hidden';

if (doc) {
  var prefix$2;

  /* istanbul ignore next */
  if (hidden in doc) {
    prefix$2 = '';
  } else {
    var i$1 = vendors.length;
    while (i$1--) {
      var vendor = vendors[i$1];
      hidden = vendor + 'Hidden';

      if (hidden in doc) {
        prefix$2 = vendor;
        break;
      }
    }
  }

  /* istanbul ignore else */
  if (prefix$2 !== undefined) {
    doc.addEventListener(prefix$2 + 'visibilitychange', onChange);
    onChange();
  } else {
    // gah, we're in an old browser
    if ('onfocusout' in doc) {
      doc.addEventListener('focusout', onHide);
      doc.addEventListener('focusin', onShow);
    } else {
      win.addEventListener('pagehide', onHide);
      win.addEventListener('blur', onHide);

      win.addEventListener('pageshow', onShow);
      win.addEventListener('focus', onShow);
    }

    visible = true; // until proven otherwise. Not ideal but hey
  }
}

function onChange() {
  visible = !doc[hidden];
}

/* istanbul ignore next */
function onHide() {
  visible = false;
}

/* istanbul ignore next */
function onShow() {
  visible = true;
}

var prefix;

/* istanbul ignore next */
if (!isClient) {
  prefix = null;
} else {
  var prefixCache = {};
  var testStyle = createElement('div').style;

  // technically this also normalizes on hyphenated styles as well
  prefix = function(prop) {
    if (!prefixCache[prop]) {
      var name = hyphenateCamel(prop);

      if (testStyle[prop] !== undefined) {
        prefixCache[prop] = name;
      } else {
        /* istanbul ignore next */
        // test vendors...
        var i = vendors.length;
        while (i--) {
          var vendor = "-" + (vendors[i]) + "-" + name;
          if (testStyle[vendor] !== undefined) {
            prefixCache[prop] = vendor;
            break;
          }
        }
      }
    }

    return prefixCache[prop];
  };
}

var prefix$1 = prefix;

var vendorPattern = new RegExp('^(?:' + vendors.join('|') + ')([A-Z])');

function hyphenate(str) {
  /* istanbul ignore next */
  if (!str) { return ''; } // edge case

  /* istanbul ignore next */
  if (vendorPattern.test(str)) { str = '-' + str; }

  return str.replace(/[A-Z]/g, function (match) { return '-' + match.toLowerCase(); });
}

var createTransitions;

if (!isClient) {
  createTransitions = null;
} else {
  var testStyle$1 = createElement('div').style;
  var linear$1 = function (x) { return x; };

  var canUseCssTransitions = {};
  var cannotUseCssTransitions = {};

  // determine some facts about our environment
  var TRANSITION$1;
  var TRANSITIONEND;
  var CSS_TRANSITIONS_ENABLED;
  var TRANSITION_DURATION;
  var TRANSITION_PROPERTY;
  var TRANSITION_TIMING_FUNCTION;

  if (testStyle$1.transition !== undefined) {
    TRANSITION$1 = 'transition';
    TRANSITIONEND = 'transitionend';
    CSS_TRANSITIONS_ENABLED = true;
  } else if (testStyle$1.webkitTransition !== undefined) {
    TRANSITION$1 = 'webkitTransition';
    TRANSITIONEND = 'webkitTransitionEnd';
    CSS_TRANSITIONS_ENABLED = true;
  } else {
    CSS_TRANSITIONS_ENABLED = false;
  }

  if (TRANSITION$1) {
    TRANSITION_DURATION = TRANSITION$1 + 'Duration';
    TRANSITION_PROPERTY = TRANSITION$1 + 'Property';
    TRANSITION_TIMING_FUNCTION = TRANSITION$1 + 'TimingFunction';
  }

  createTransitions = function(t, to, options, changedProperties, resolve) {
    // Wait a beat (otherwise the target styles will be applied immediately)
    // TODO use a fastdom-style mechanism?
    setTimeout(function () {
      var jsTransitionsComplete;
      var cssTransitionsComplete;
      var cssTimeout; // eslint-disable-line prefer-const

      function transitionDone() {
        clearTimeout(cssTimeout);
      }

      function checkComplete() {
        if (jsTransitionsComplete && cssTransitionsComplete) {
          t.unregisterCompleteHandler(transitionDone);
          // will changes to events and fire have an unexpected consequence here?
          t.ractive.fire(t.name + ':end', t.node, t.isIntro);
          resolve();
        }
      }

      // this is used to keep track of which elements can use CSS to animate
      // which properties
      var hashPrefix = (t.node.namespaceURI || '') + t.node.tagName;

      // need to reset transition properties
      var style = t.node.style;
      var previous = {
        property: style[TRANSITION_PROPERTY],
        timing: style[TRANSITION_TIMING_FUNCTION],
        duration: style[TRANSITION_DURATION]
      };

      function transitionEndHandler(event) {
        if (event.target !== t.node) { return; }
        var index = changedProperties.indexOf(event.propertyName);

        if (index !== -1) {
          changedProperties.splice(index, 1);
        }

        if (changedProperties.length) {
          // still transitioning...
          return;
        }

        clearTimeout(cssTimeout);
        cssTransitionsDone();
      }

      function cssTransitionsDone() {
        style[TRANSITION_PROPERTY] = previous.property;
        style[TRANSITION_TIMING_FUNCTION] = previous.duration;
        style[TRANSITION_DURATION] = previous.timing;

        t.node.removeEventListener(TRANSITIONEND, transitionEndHandler, false);

        cssTransitionsComplete = true;
        checkComplete();
      }

      t.node.addEventListener(TRANSITIONEND, transitionEndHandler, false);

      // safety net in case transitionend never fires
      cssTimeout = setTimeout(function () {
        changedProperties = [];
        cssTransitionsDone();
      }, options.duration + (options.delay || 0) + 50);
      t.registerCompleteHandler(transitionDone);

      style[TRANSITION_PROPERTY] = changedProperties.join(',');
      var easingName = hyphenate(options.easing || 'linear');
      style[TRANSITION_TIMING_FUNCTION] = easingName;
      var cssTiming = style[TRANSITION_TIMING_FUNCTION] === easingName;
      style[TRANSITION_DURATION] = options.duration / 1000 + 's';

      setTimeout(function () {
        var i = changedProperties.length;
        var hash;
        var originalValue = null;
        var index;
        var propertiesToTransitionInJs = [];
        var prop;
        var suffix;
        var interpolator;

        while (i--) {
          prop = changedProperties[i];
          hash = hashPrefix + prop;

          if (cssTiming && CSS_TRANSITIONS_ENABLED && !cannotUseCssTransitions[hash]) {
            var initial = style[prop];
            style[prop] = to[prop];

            // If we're not sure if CSS transitions are supported for
            // this tag/property combo, find out now
            if (!(hash in canUseCssTransitions)) {
              originalValue = t.getStyle(prop);

              // if this property is transitionable in this browser,
              // the current style will be different from the target style
              canUseCssTransitions[hash] = t.getStyle(prop) != to[prop];
              cannotUseCssTransitions[hash] = !canUseCssTransitions[hash];

              // Reset, if we're going to use timers after all
              if (cannotUseCssTransitions[hash]) {
                style[prop] = initial;
              }
            }
          }

          if (!cssTiming || !CSS_TRANSITIONS_ENABLED || cannotUseCssTransitions[hash]) {
            // we need to fall back to timer-based stuff
            if (originalValue === null) { originalValue = t.getStyle(prop); }

            // need to remove this from changedProperties, otherwise transitionEndHandler
            // will get confused
            index = changedProperties.indexOf(prop);
            if (index === -1) {
              warnIfDebug(
                'Something very strange happened with transitions. Please raise an issue at https://github.com/ractivejs/ractive/issues - thanks!',
                { node: t.node }
              );
            } else {
              changedProperties.splice(index, 1);
            }

            // TODO Determine whether this property is animatable at all

            suffix = /[^\d]*$/.exec(originalValue)[0];
            interpolator = interpolate(parseFloat(originalValue), parseFloat(to[prop]));

            // ...then kick off a timer-based transition
            if (interpolator) {
              propertiesToTransitionInJs.push({
                name: prop,
                interpolator: interpolator,
                suffix: suffix
              });
            } else {
              style[prop] = to[prop];
            }

            originalValue = null;
          }
        }

        // javascript transitions
        if (propertiesToTransitionInJs.length) {
          var easing;

          if (isString(options.easing)) {
            easing = t.ractive.easing[options.easing];

            if (!easing) {
              warnOnceIfDebug(missingPlugin(options.easing, 'easing'));
              easing = linear$1;
            }
          } else if (isFunction(options.easing)) {
            easing = options.easing;
          } else {
            easing = linear$1;
          }

          new Ticker({
            duration: options.duration,
            easing: easing,
            step: function step(pos) {
              var i = propertiesToTransitionInJs.length;
              while (i--) {
                var prop = propertiesToTransitionInJs[i];
                style[prop.name] = prop.interpolator(pos) + prop.suffix;
              }
            },
            complete: function complete() {
              jsTransitionsComplete = true;
              checkComplete();
            }
          });
        } else {
          jsTransitionsComplete = true;
        }

        if (changedProperties.length) {
          style[TRANSITION_PROPERTY] = changedProperties.join(',');
        } else {
          style[TRANSITION_PROPERTY] = 'none';

          // We need to cancel the transitionEndHandler, and deal with
          // the fact that it will never fire
          t.node.removeEventListener(TRANSITIONEND, transitionEndHandler, false);
          cssTransitionsComplete = true;
          checkComplete();
        }
      }, 0);
    }, options.delay || 0);
  };
}

var createTransitions$1 = createTransitions;

var getComputedStyle = win && win.getComputedStyle;
var resolved = Promise.resolve();

var names = {
  t0: 'intro-outro',
  t1: 'intro',
  t2: 'outro'
};

var Transition = function Transition(options) {
  this.owner = options.owner || options.up.owner || findElement(options.up);
  this.element = this.owner.attributeByName ? this.owner : findElement(options.up);
  this.ractive = this.owner.ractive;
  this.template = options.template;
  this.up = options.up;
  this.options = options;
  this.onComplete = [];
};
var Transition__proto__ = Transition.prototype;

Transition__proto__.animateStyle = function animateStyle (style, value, options) {
    var this$1 = this;

  if (arguments.length === 4) {
    throw new Error(
      't.animateStyle() returns a promise - use .then() instead of passing a callback'
    );
  }

  // Special case - page isn't visible. Don't animate anything, because
  // that way you'll never get CSS transitionend events
  if (!visible) {
    this.setStyle(style, value);
    return resolved;
  }

  var to;

  if (isString(style)) {
    to = {};
    to[style] = value;
  } else {
    to = style;

    // shuffle arguments
    options = value;
  }

  return new Promise(function (fulfil) {
    // Edge case - if duration is zero, set style synchronously and complete
    if (!options.duration) {
      this$1.setStyle(to);
      fulfil();
      return;
    }

    // Get a list of the properties we're animating
    var propertyNames = keys(to);
    var changedProperties = [];

    // Store the current styles
    var computedStyle = getComputedStyle(this$1.node);

    var i = propertyNames.length;
    while (i--) {
      var prop = propertyNames[i];
      var name = prefix$1(prop);

      var current = computedStyle[prefix$1(prop)];

      // record the starting points
      var init = this$1.node.style[name];
      if (!(name in this$1.originals)) { this$1.originals[name] = this$1.node.style[name]; }
      this$1.node.style[name] = to[prop];
      this$1.targets[name] = this$1.node.style[name];
      this$1.node.style[name] = init;

      // we need to know if we're actually changing anything
      if (current != to[prop]) {
        // use != instead of !==, so we can compare strings with numbers
        changedProperties.push(name);

        // if we happened to prefix, make sure there is a properly prefixed value
        to[name] = to[prop];

        // make the computed style explicit, so we can animate where
        // e.g. height='auto'
        this$1.node.style[name] = current;
      }
    }

    // If we're not actually changing anything, the transitionend event
    // will never fire! So we complete early
    if (!changedProperties.length) {
      fulfil();
      return;
    }

    createTransitions$1(this$1, to, options, changedProperties, fulfil);
  });
};

Transition__proto__.bind = function bind () {
  var options = this.options;
  var type = options.template && options.template.v;
  if (type) {
    if (type === 't0' || type === 't1') { this.element.intro = this; }
    if (type === 't0' || type === 't2') { this.element.outro = this; }
    this.eventName = names[type];
  }

  var ractive = this.owner.ractive;

  this.name = options.name || options.template.n;

  if (options.params) {
    this.params = options.params;
  }

  if (isFunction(this.name)) {
    this._fn = this.name;
    this.name = this._fn.name;
  } else {
    this._fn = findInViewHierarchy('transitions', ractive, this.name);
  }

  if (!this._fn) {
    warnOnceIfDebug(missingPlugin(this.name, 'transition'), { ractive: ractive });
  }

  setupArgsFn(this, options.template);
};

Transition__proto__.getParams = function getParams () {
  if (this.params) { return this.params; }

  // get expression args if supplied
  if (this.fn) {
    var values = resolveArgs(this, this.template, this.up).map(function (model) {
      if (!model) { return undefined; }

      return model.get();
    });
    return this.fn.apply(this.ractive, values);
  }
};

Transition__proto__.getStyle = function getStyle (props) {
  var computedStyle = getComputedStyle(this.node);

  if (isString(props)) {
    return computedStyle[prefix$1(props)];
  }

  if (!isArray(props)) {
    throw new Error(
      'Transition$getStyle must be passed a string, or an array of strings representing CSS properties'
    );
  }

  var styles = {};

  var i = props.length;
  while (i--) {
    var prop = props[i];
    var value = computedStyle[prefix$1(prop)];

    if (value === '0px') { value = 0; }
    styles[prop] = value;
  }

  return styles;
};

Transition__proto__.processParams = function processParams (params, defaults) {
  if (isNumber(params)) {
    params = { duration: params };
  } else if (isString(params)) {
    if (params === 'slow') {
      params = { duration: 600 };
    } else if (params === 'fast') {
      params = { duration: 200 };
    } else {
      params = { duration: 400 };
    }
  } else if (!params) {
    params = {};
  }

  return assign({}, defaults, params);
};

Transition__proto__.registerCompleteHandler = function registerCompleteHandler (fn) {
  addToArray(this.onComplete, fn);
};

Transition__proto__.setStyle = function setStyle (style, value) {
    var this$1 = this;

  if (isString(style)) {
    var name = prefix$1(style);
    if (!hasOwn(this.originals, name)) { this.originals[name] = this.node.style[name]; }
    this.node.style[name] = value;
    this.targets[name] = this.node.style[name];
  } else {
    var prop;
    for (prop in style) {
      if (hasOwn(style, prop)) {
        this$1.setStyle(prop, style[prop]);
      }
    }
  }

  return this;
};

Transition__proto__.shouldFire = function shouldFire (type) {
  if (!this.ractive.transitionsEnabled) { return false; }

  // check for noIntro and noOutro cases, which only apply when the owner ractive is rendering and unrendering, respectively
  if (type === 'intro' && this.ractive.rendering && nearestProp('noIntro', this.ractive, true))
    { return false; }
  if (type === 'outro' && this.ractive.unrendering && nearestProp('noOutro', this.ractive, false))
    { return false; }

  var params = this.getParams(); // this is an array, the params object should be the first member
  // if there's not a parent element, this can't be nested, so roll on
  if (!this.element.parent) { return true; }

  // if there is a local param, it takes precedent
  if (params && params[0] && isObject(params[0]) && 'nested' in params[0]) {
    if (params[0].nested !== false) { return true; }
  } else {
    // use the nearest instance setting
    // find the nearest instance that actually has a nested setting
    if (nearestProp('nestedTransitions', this.ractive) !== false) { return true; }
  }

  // check to see if this is actually a nested transition
  var el = this.element.parent;
  while (el) {
    if (el[type] && el[type].starting) { return false; }
    el = el.parent;
  }

  return true;
};

Transition__proto__.start = function start () {
    var this$1 = this;

  var node = (this.node = this.element.node);
  var originals = (this.originals = {}); //= node.getAttribute( 'style' );
  var targets = (this.targets = {});

  var completed;
  var args = this.getParams();

  // create t.complete() - we don't want this on the prototype,
  // because we don't want `this` silliness when passing it as
  // an argument
  this.complete = function (noReset) {
    this$1.starting = false;
    if (completed) {
      return;
    }

    this$1.onComplete.forEach(function (fn) { return fn(); });
    if (!noReset && this$1.isIntro) {
      for (var k in targets) {
        if (node.style[k] === targets[k]) { node.style[k] = originals[k]; }
      }
    }

    this$1._manager.remove(this$1);

    completed = true;
  };

  // If the transition function doesn't exist, abort
  if (!this._fn) {
    this.complete();
    return;
  }

  var promise = this._fn.apply(this.ractive, [this].concat(args));
  if (promise) { promise.then(this.complete); }
};

Transition__proto__.toString = function toString () {
  return '';
};

Transition__proto__.unbind = function unbind () {
  if (!this.element.attributes || !this.element.attributes.unbinding) {
    var type = this.options && this.options.template && this.options.template.v;
    if (type === 't0' || type === 't1') { this.element.intro = null; }
    if (type === 't0' || type === 't2') { this.element.outro = null; }
  }
};

Transition__proto__.unregisterCompleteHandler = function unregisterCompleteHandler (fn) {
  removeFromArray(this.onComplete, fn);
};

var proto$8 = Transition.prototype;
proto$8.destroyed = proto$8.firstNode = proto$8.rebound = proto$8.render = proto$8.unrender = proto$8.update = noop;

function nearestProp(prop, ractive, rendering) {
  var instance = ractive;
  while (instance) {
    if (
      hasOwn(instance, prop) &&
      (isUndefined(rendering) || rendering ? instance.rendering : instance.unrendering)
    )
      { return instance[prop]; }
    instance = instance.component && instance.component.ractive;
  }

  return ractive[prop];
}

var elementCache = {};

var ieBug;
var ieBlacklist;

try {
  createElement('table').innerHTML = 'foo';
} catch (/* istanbul ignore next */ err) {
  ieBug = true;

  ieBlacklist = {
    TABLE: ['<table class="x">', '</table>'],
    THEAD: ['<table><thead class="x">', '</thead></table>'],
    TBODY: ['<table><tbody class="x">', '</tbody></table>'],
    TR: ['<table><tr class="x">', '</tr></table>'],
    SELECT: ['<select class="x">', '</select>']
  };
}

function insertHtml(html$$1, node) {
  var nodes = [];

  // render 0 and false
  if (html$$1 == null || html$$1 === '') { return nodes; }

  var container;
  var wrapper;
  var selectedOption;

  /* istanbul ignore if */
  if (ieBug && (wrapper = ieBlacklist[node.tagName])) {
    container = element('DIV');
    container.innerHTML = wrapper[0] + html$$1 + wrapper[1];
    container = container.querySelector('.x');

    if (container.tagName === 'SELECT') {
      selectedOption = container.options[container.selectedIndex];
    }
  } else if (node.namespaceURI === svg$1) {
    container = element('DIV');
    container.innerHTML = '<svg class="x">' + html$$1 + '</svg>';
    container = container.querySelector('.x');
  } else if (node.tagName === 'TEXTAREA') {
    container = createElement('div');

    if (typeof container.textContent !== 'undefined') {
      container.textContent = html$$1;
    } else {
      container.innerHTML = html$$1;
    }
  } else {
    container = element(node.tagName);
    container.innerHTML = html$$1;

    if (container.tagName === 'SELECT') {
      selectedOption = container.options[container.selectedIndex];
    }
  }

  var child;
  while ((child = container.firstChild)) {
    nodes.push(child);
    container.removeChild(child);
  }

  // This is really annoying. Extracting <option> nodes from the
  // temporary container <select> causes the remaining ones to
  // become selected. So now we have to deselect them. IE8, you
  // amaze me. You really do
  // ...and now Chrome too
  var i;
  if (node.tagName === 'SELECT') {
    i = nodes.length;
    while (i--) {
      if (nodes[i] !== selectedOption) {
        nodes[i].selected = false;
      }
    }
  }

  return nodes;
}

function element(tagName) {
  return elementCache[tagName] || (elementCache[tagName] = createElement(tagName));
}

var Triple = (function (Mustache) {
  function Triple(options) {
    Mustache.call(this, options);
  }

  if ( Mustache ) Triple.__proto__ = Mustache;
  var Triple__proto__ = Triple.prototype = Object.create( Mustache && Mustache.prototype );
  Triple__proto__.constructor = Triple;

  Triple__proto__.detach = function detach () {
    var docFrag = createDocumentFragment();
    if (this.nodes) { this.nodes.forEach(function (node) { return docFrag.appendChild(node); }); }
    return docFrag;
  };

  Triple__proto__.find = function find (selector) {
    var this$1 = this;

    var len = this.nodes.length;
    var i;

    for (i = 0; i < len; i += 1) {
      var node = this$1.nodes[i];

      if (node.nodeType !== 1) { continue; }

      if (matches(node, selector)) { return node; }

      var queryResult = node.querySelector(selector);
      if (queryResult) { return queryResult; }
    }

    return null;
  };

  Triple__proto__.findAll = function findAll (selector, options) {
    var this$1 = this;

    var result = options.result;
    var len = this.nodes.length;
    var i;

    for (i = 0; i < len; i += 1) {
      var node = this$1.nodes[i];

      if (node.nodeType !== 1) { continue; }

      if (matches(node, selector)) { result.push(node); }

      var queryAllResult = node.querySelectorAll(selector);
      if (queryAllResult) {
        result.push.apply(result, queryAllResult);
      }
    }
  };

  Triple__proto__.findComponent = function findComponent () {
    return null;
  };

  Triple__proto__.firstNode = function firstNode () {
    return this.rendered && this.nodes[0];
  };

  Triple__proto__.render = function render (target, occupants, anchor) {
    var this$1 = this;

    if (!this.nodes) {
      var html = this.model ? this.model.get() : '';
      this.nodes = insertHtml(html, target);
    }

    var nodes = this.nodes;

    // progressive enhancement
    if (occupants) {
      var i = -1;
      var next;

      // start with the first node that should be rendered
      while (occupants.length && (next = this.nodes[i + 1])) {
        var n = (void 0);
        // look through the occupants until a matching node is found
        while ((n = occupants.shift())) {
          var t = n.nodeType;

          if (
            t === next.nodeType &&
            ((t === 1 && n.outerHTML === next.outerHTML) ||
              ((t === 3 || t === 8) && n.nodeValue === next.nodeValue))
          ) {
            this$1.nodes.splice(++i, 1, n); // replace the generated node with the existing one
            break;
          } else {
            target.removeChild(n); // remove the non-matching existing node
          }
        }
      }

      if (i >= 0) {
        // update the list of remaining nodes to attach, excluding any that were replaced by existing nodes
        nodes = this.nodes.slice(i);
      }

      // update the anchor to be the next occupant
      if (occupants.length) { anchor = occupants[0]; }
    }

    // attach any remainging nodes to the parent
    if (nodes.length) {
      var frag = createDocumentFragment();
      nodes.forEach(function (n) { return frag.appendChild(n); });

      if (anchor) {
        target.insertBefore(frag, anchor);
      } else {
        target.appendChild(frag);
      }
    }

    this.rendered = true;
  };

  Triple__proto__.toString = function toString () {
    var value = this.model && this.model.get();
    value = value != null ? '' + value : '';

    return inAttribute() ? decodeCharacterReferences(value) : value;
  };

  Triple__proto__.unrender = function unrender () {
    if (this.nodes)
      { this.nodes.forEach(function (node) {
        // defer detachment until all relevant outros are done
        runloop.detachWhenReady({
          node: node,
          detach: function detach() {
            detachNode(node);
          }
        });
      }); }
    this.rendered = false;
    this.nodes = null;
  };

  Triple__proto__.update = function update () {
    if (this.rendered && this.dirty) {
      this.dirty = false;

      this.unrender();
      this.render(this.up.findParentNode(), null, this.up.findNextNode(this));
    } else {
      // make sure to reset the dirty flag even if not rendered
      this.dirty = false;
    }
  };

  return Triple;
}(Mustache));

// finds the component constructor in the registry or view hierarchy registries
function getComponentConstructor(ractive, name) {
  var instance = findInstance('components', ractive, name);
  var Component;

  if (instance) {
    Component = instance.components[name];

    if (Component && !Component.isInstance) {
      if (Component.default && Component.default.isInstance) { Component = Component.default; }
      else if (!Component.then && isFunction(Component)) {
        // function option, execute and store for reset
        var fn = Component.bind(instance);
        fn.isOwner = hasOwn(instance.components, name);
        Component = fn();

        if (!Component) {
          warnIfDebug(noRegistryFunctionReturn, name, 'component', 'component', {
            ractive: ractive
          });
          return;
        }

        if (isString(Component)) {
          // allow string lookup
          Component = getComponentConstructor(ractive, Component);
        }

        Component._fn = fn;
        instance.components[name] = Component;
      }
    }
  }

  return Component;
}

function asyncProxy(promise, options) {
  var partials = options.template.p || {};
  var name = options.template.e;

  var opts = assign({}, options, {
    template: { t: ELEMENT, e: name },
    macro: function macro(handle) {
      handle.setTemplate(partials['async-loading'] || []);
      promise.then(
        function (cmp) {
          options.up.ractive.components[name] = cmp;
          if (partials['async-loaded']) {
            handle.partials.component = [options.template];
            handle.setTemplate(partials['async-loaded']);
          } else {
            handle.setTemplate([options.template]);
          }
        },
        function (err) {
          if (partials['async-failed']) {
            handle.aliasLocal('error', 'error');
            handle.set('@local.error', err);
            handle.setTemplate(partials['async-failed']);
          } else {
            handle.setTemplate([]);
          }
        }
      );
    }
  });
  return new Partial(opts);
}

function extract(tpl, type, name) {
  var p = tpl.f.find(function (s) { return s.t === type; });
  if (p) {
    if (p.n)
      { return [
        {
          t: 19,
          n: 54,
          f: p.f || [],
          z: [{ n: p.n, x: { r: ("__await." + name) } }]
        }
      ]; }
    else { return p.f || []; }
  } else { return []; }
}

function Await(options) {
  var tpl = options.template;

  var success = extract(tpl, THEN, 'value');
  var error = extract(tpl, CATCH, 'error');
  var pending = extract(tpl, SECTION);
  var undef = extract(tpl, ELSE);

  var opts = assign({}, options, {
    template: {
      t: ELEMENT,
      m: [
        {
          t: ATTRIBUTE,
          n: 'for',
          f: [{ t: INTERPOLATOR, r: tpl.r, rx: tpl.rx, x: tpl.x }]
        }
      ]
    },
    macro: function macro(handle, attrs) {
      handle.aliasLocal('__await');

      function update(attrs) {
        if (attrs.for && isFunction(attrs.for.then)) {
          handle.setTemplate(pending);

          attrs.for.then(
            function (v) {
              handle.set('@local.value', v);
              handle.setTemplate(success);
            },
            function (e) {
              handle.set('@local.error', e);
              handle.setTemplate(error);
            }
          );
        } else if (isUndefined(attrs.for)) {
          handle.setTemplate(undef);
        } else {
          handle.set('@local.value', attrs.for);
          handle.setTemplate(success);
        }
      }

      update(attrs);

      return {
        update: update
      };
    }
  });

  opts.macro.attributes = ['for'];

  return new Partial(opts);
}

var constructors = {};
constructors[ALIAS] = Section;
constructors[ANCHOR] = Component;
constructors[AWAIT] = Await;
constructors[DOCTYPE] = Doctype;
constructors[INTERPOLATOR] = Interpolator;
constructors[PARTIAL] = Partial;
constructors[SECTION] = Section;
constructors[TRIPLE] = Triple;
constructors[YIELDER] = Partial;

constructors[ATTRIBUTE] = Attribute;
constructors[BINDING_FLAG] = BindingFlag;
constructors[DECORATOR] = Decorator;
constructors[EVENT] = EventDirective;
constructors[TRANSITION] = Transition;
constructors[COMMENT] = Comment;

var specialElements = {
  doctype: Doctype,
  form: Form,
  input: Input,
  option: Option,
  select: Select,
  textarea: Textarea
};

function createItem(options) {
  if (isString(options.template)) {
    return new Text(options);
  }

  var ctor;
  var name;
  var type = options.template.t;

  if (type === ELEMENT) {
    name = options.template.e;

    // could be a macro partial
    ctor = findInstance('partials', options.up.ractive, name);
    if (ctor) {
      ctor = ctor.partials[name];
      if (ctor.styleSet) {
        options.macro = ctor;
        return new Partial(options);
      }
    }

    // could be component or element
    ctor = getComponentConstructor(options.up.ractive, name);
    if (ctor) {
      if (isFunction(ctor.then)) {
        return asyncProxy(ctor, options);
      } else if (isFunction(ctor)) {
        return new Component(options, ctor);
      }
    }

    ctor = specialElements[name.toLowerCase()] || Element;
    return new ctor(options);
  }

  var Item;

  // component mappings are a special case of attribute
  if (type === ATTRIBUTE) {
    var el = options.owner;
    if (!el || (el.type !== ANCHOR && el.type !== COMPONENT && el.type !== ELEMENT)) {
      el = findElement(options.up);
    }
    options.element = el;

    Item = el.type === COMPONENT || el.type === ANCHOR ? Mapping : Attribute;
  } else {
    Item = constructors[type];
  }

  if (!Item) { throw new Error(("Unrecognised item type " + type)); }

  return new Item(options);
}

// TODO all this code needs to die
function processItems(items, values, guid, counter) {
  if ( counter === void 0 ) counter = 0;

  return items
    .map(function (item) {
      if (item.type === TEXT) {
        return item.template;
      }

      if (item.fragment) {
        if (item.fragment.iterations) {
          return item.fragment.iterations
            .map(function (fragment) {
              return processItems(fragment.items, values, guid, counter);
            })
            .join('');
        } else {
          return processItems(item.fragment.items, values, guid, counter);
        }
      }

      var placeholderId = guid + "-" + (counter++);
      var model = item.model || item.newModel;

      values[placeholderId] = model
        ? model.wrapper
          ? model.wrapperValue
          : model.get()
        : undefined;

      return '${' + placeholderId + '}';
    })
    .join('');
}

function resolveAliases(aliases, fragment, dest) {
  if ( dest === void 0 ) dest = {};

  for (var i = 0; i < aliases.length; i++) {
    if (!dest[aliases[i].n]) {
      var m = resolve(fragment, aliases[i].x);
      dest[aliases[i].n] = m;
      m.reference();
    }
  }

  return dest;
}

var Fragment = function Fragment(options) {
  this.owner = options.owner; // The item that owns this fragment - an element, section, partial, or attribute

  this.isRoot = !options.owner.up;
  this.parent = this.isRoot ? null : this.owner.up;
  this.ractive = options.ractive || (this.isRoot ? options.owner : this.parent.ractive);

  this.componentParent =
    this.isRoot && this.ractive.component
      ? this.ractive.component.up
      : this.owner.containerFragment || null;
  if (!this.isRoot || this.ractive.delegate) {
    this.delegate = this.owner.containerFragment
      ? this.owner.containerFragment && this.owner.containerFragment.delegate
      : (this.componentParent && this.componentParent.delegate) ||
        (this.parent && this.parent.delegate);
  } else {
    this.delegate = false;
  }

  this.context = null;
  this.rendered = false;

  // encapsulated styles should be inherited until they get applied by an element
  if ('cssIds' in options) {
    this.cssIds = options.cssIds && options.cssIds.length && options.cssIds;
  } else {
    this.cssIds = this.parent ? this.parent.cssIds : null;
  }

  this.dirty = false;
  this.dirtyValue = true; // used for attribute values

  this.template = options.template || [];
  this.createItems();
};
var Fragment__proto__ = Fragment.prototype;

Fragment__proto__.bind = function bind (context) {
    var this$1 = this;

  this.context = context;

  if (this.owner.template.z) {
    this.aliases = resolveAliases(
      this.owner.template.z,
      this.owner.containerFragment || this.parent
    );
  }

  var len = this.items.length;
  for (var i = 0; i < len; i++) { this$1.items[i].bind(); }
  this.bound = true;

  // in rare cases, a forced resolution (or similar) will cause the
  // fragment to be dirty before it's even finished binding. In those
  // cases we update immediately
  if (this.dirty) { this.update(); }

  return this;
};

Fragment__proto__.bubble = function bubble () {
  this.dirtyValue = true;

  if (!this.dirty) {
    this.dirty = true;

    if (this.isRoot) {
      // TODO encapsulate 'is component root, but not overall root' check?
      if (this.ractive.component) {
        this.ractive.component.bubble();
      } else if (this.bound) {
        runloop.addFragment(this);
      }
    } else {
      this.owner.bubble(this.index);
    }
  }
};

Fragment__proto__.createItems = function createItems () {
    var this$1 = this;

  // this is a hot code path
  var max = this.template.length;
  this.items = [];
  for (var i = 0; i < max; i++) {
    this$1.items[i] = createItem({
      up: this$1,
      template: this$1.template[i],
      index: i
    });
  }
};

Fragment__proto__.destroyed = function destroyed () {
    var this$1 = this;

  var len = this.items.length;
  for (var i = 0; i < len; i++) { this$1.items[i].destroyed(); }
  if (this.pathModel) { this.pathModel.destroyed(); }
  if (this.rootModel) { this.rootModel.destroyed(); }
};

Fragment__proto__.detach = function detach () {
  var docFrag = createDocumentFragment();
  var xs = this.items;
  var len = xs.length;
  for (var i = 0; i < len; i++) {
    docFrag.appendChild(xs[i].detach());
  }
  return docFrag;
};

Fragment__proto__.find = function find (selector, options) {
  return findMap(this.items, function (i) { return i.find(selector, options); });
};

Fragment__proto__.findAll = function findAll (selector, options) {
  if (this.items) {
    this.items.forEach(function (i) { return i.findAll && i.findAll(selector, options); });
  }
};

Fragment__proto__.findComponent = function findComponent (name, options) {
  return findMap(this.items, function (i) { return i.findComponent(name, options); });
};

Fragment__proto__.findAllComponents = function findAllComponents (name, options) {
  if (this.items) {
    this.items.forEach(function (i) { return i.findAllComponents && i.findAllComponents(name, options); });
  }
};

Fragment__proto__.findContext = function findContext () {
  var base = findParentWithContext(this);
  if (!base || !base.context) { return this.ractive.viewmodel; }
  else { return base.context; }
};

Fragment__proto__.findNextNode = function findNextNode (item) {
    var this$1 = this;

  // search for the next node going forward
  if (item) {
    var it;
    for (var i = item.index + 1; i < this.items.length; i++) {
      it = this$1.items[i];
      if (!it || !it.firstNode) { continue; }

      var node = it.firstNode(true);
      if (node) { return node; }
    }
  }

  // if this is the root fragment, and there are no more items,
  // it means we're at the end...
  if (this.isRoot) {
    if (this.ractive.component) {
      return this.ractive.component.up.findNextNode(this.ractive.component);
    }

    // TODO possible edge case with other content
    // appended to this.ractive.el?
    return null;
  }

  if (this.parent) { return this.owner.findNextNode(this); } // the argument is in case the parent is a RepeatedFragment
};

Fragment__proto__.findParentNode = function findParentNode () {
  var fragment = this;

  do {
    if (fragment.owner.type === ELEMENT) {
      return fragment.owner.node;
    }

    if (fragment.isRoot && !fragment.ractive.component) {
      // TODO encapsulate check
      return fragment.ractive.el;
    }

    if (fragment.owner.type === YIELDER) {
      fragment = fragment.owner.containerFragment;
    } else {
      fragment = fragment.componentParent || fragment.parent; // TODO ugh
    }
  } while (fragment);

  throw new Error('Could not find parent node'); // TODO link to issue tracker
};

Fragment__proto__.firstNode = function firstNode (skipParent) {
  var node = findMap(this.items, function (i) { return i.firstNode(true); });
  if (node) { return node; }
  if (skipParent) { return null; }

  return this.parent.findNextNode(this.owner);
};

Fragment__proto__.getKey = function getKey () {
  return this.keyModel || (this.keyModel = new KeyModel(this.key));
};

Fragment__proto__.getIndex = function getIndex () {
  return this.idxModel || (this.idxModel = new KeyModel(this.index));
};

Fragment__proto__.rebind = function rebind (next) {
  this.context = next;
  if (this.rootModel) { this.rootModel.context = this.context; }
  if (this.pathModel) { this.pathModel.context = this.context; }
};

Fragment__proto__.rebound = function rebound (update$$1) {
  if (this.owner.template.z) {
    var aliases = this.aliases;
    for (var k in aliases) {
      if (aliases[k].rebound) { aliases[k].rebound(update$$1); }
      else {
        aliases[k].unreference();
        aliases[k] = 0;
      }
    }

    resolveAliases(this.owner.template.z, this.owner.containerFragment || this.parent, aliases);
  }

  this.items.forEach(function (x) { return x.rebound(update$$1); });
  if (update$$1) {
    if (this.rootModel) { this.rootModel.applyValue(this.context.getKeypath(this.ractive.root)); }
    if (this.pathModel) { this.pathModel.applyValue(this.context.getKeypath()); }
  }
};

Fragment__proto__.render = function render (target, occupants) {
  if (this.rendered) { throw new Error('Fragment is already rendered!'); }
  this.rendered = true;

  var xs = this.items;
  var len = xs.length;
  for (var i = 0; i < len; i++) {
    xs[i].render(target, occupants);
  }
};

Fragment__proto__.resetTemplate = function resetTemplate (template) {
  var wasBound = this.bound;
  var wasRendered = this.rendered;

  // TODO ensure transitions are disabled globally during reset

  if (wasBound) {
    if (wasRendered) { this.unrender(true); }
    this.unbind();
  }

  this.template = template;
  this.createItems();

  if (wasBound) {
    this.bind(this.context);

    if (wasRendered) {
      var parentNode = this.findParentNode();
      var anchor = this.findNextNode();

      if (anchor) {
        var docFrag = createDocumentFragment();
        this.render(docFrag);
        parentNode.insertBefore(docFrag, anchor);
      } else {
        this.render(parentNode);
      }
    }
  }
};

Fragment__proto__.shuffled = function shuffled$3 () {
  this.items.forEach(shuffled);
  if (this.rootModel) { this.rootModel.applyValue(this.context.getKeypath(this.ractive.root)); }
  if (this.pathModel) { this.pathModel.applyValue(this.context.getKeypath()); }
};

Fragment__proto__.toString = function toString (escape) {
  return this.items.map(escape ? toEscapedString : toString$1).join('');
};

Fragment__proto__.unbind = function unbind (view) {
    var this$1 = this;

  if (this.owner.template.z && !this.owner.yielder) {
    for (var k in this$1.aliases) {
      this$1.aliases[k].unreference();
    }

    this.aliases = {};
  }

  this.context = null;
  var len = this.items.length;
  for (var i = 0; i < len; i++) { this$1.items[i].unbind(view); }
  this.bound = false;

  return this;
};

Fragment__proto__.unrender = function unrender (shouldDestroy) {
    var this$1 = this;

  var len = this.items.length;
  for (var i = 0; i < len; i++) { this$1.items[i].unrender(shouldDestroy); }
  this.rendered = false;
};

Fragment__proto__.update = function update () {
    var this$1 = this;

  if (this.dirty) {
    if (!this.updating) {
      this.dirty = false;
      this.updating = true;
      var len = this.items.length;
      for (var i = 0; i < len; i++) { this$1.items[i].update(); }
      this.updating = false;
    } else if (this.isRoot) {
      runloop.addFragmentToRoot(this);
    }
  }
};

Fragment__proto__.valueOf = function valueOf () {
  if (this.items.length === 1) {
    return this.items[0].valueOf();
  }

  if (this.dirtyValue) {
    var values = {};
    var source = processItems(this.items, values, this.ractive._guid);
    var parsed = parseJSON(source, values);

    this.value = parsed ? parsed.value : this.toString();

    this.dirtyValue = false;
  }

  return this.value;
};
Fragment.prototype.getContext = getContext;
Fragment.prototype.getKeypath = getKeypath;

function getKeypath(root) {
  var base = findParentWithContext(this);
  var model;
  if (root) {
    if (!this.rootModel) {
      this.rootModel = new KeyModel(
        this.context.getKeypath(this.ractive.root),
        this.context,
        this.ractive.root
      );
      model = this.rootModel;
    } else { return this.rootModel; }
  } else {
    if (!this.pathModel) {
      this.pathModel = new KeyModel(this.context.getKeypath(), this.context);
      model = this.pathModel;
    } else { return this.pathModel; }
  }

  if (base && base.context) { base.getKeypath(root).registerChild(model); }

  return model;
}

function initialise(ractive, userOptions, options) {
  // initialize settable computeds
  var computed = ractive.viewmodel.computed;
  if (computed) {
    for (var k in computed) {
      if (k in ractive.viewmodel.value && computed[k] && !computed[k].isReadonly) {
        computed[k].set(ractive.viewmodel.value[k]);
      }
    }
  }

  // init config from Parent and options
  config.init(ractive.constructor, ractive, userOptions);

  // call any passed in plugins
  if (isArray(userOptions.use))
    { ractive.use.apply(ractive, userOptions.use.filter(function (p) { return !p.construct; })); }

  hooks.config.fire(ractive);

  hooks.init.begin(ractive);

  var fragment = (ractive.fragment = createFragment$1(ractive, options));
  if (fragment) { fragment.bind(ractive.viewmodel); }

  hooks.init.end(ractive);

  // general config done, set up observers
  subscribe(ractive, userOptions, 'observe');

  if (fragment) {
    // render automatically ( if `el` is specified )
    var el = (ractive.el = ractive.target = getElement(ractive.el || ractive.target));
    if (el && !ractive.component) {
      var promise = ractive.render(el, ractive.append);

      if (Ractive.DEBUG_PROMISES) {
        promise.catch(function (err) {
          warnOnceIfDebug(
            'Promise debugging is enabled, to help solve errors that happen asynchronously. Some browsers will log unhandled promise rejections, in which case you can safely disable promise debugging:\n  Ractive.DEBUG_PROMISES = false;'
          );
          warnIfDebug('An error happened during rendering', { ractive: ractive });
          logIfDebug(err);

          throw err;
        });
      }
    }
  }
}

function createFragment$1(ractive, options) {
  if ( options === void 0 ) options = {};

  if (ractive.template) {
    var cssIds = [].concat(ractive.constructor._cssIds || [], options.cssIds || []);

    return new Fragment({
      owner: ractive,
      template: ractive.template,
      cssIds: cssIds
    });
  }
}

function render$1(ractive, target, anchor, occupants) {
  // set a flag to let any transitions know that this instance is currently rendering
  ractive.rendering = true;

  var promise = runloop.start();
  runloop.scheduleTask(function () { return hooks.render.fire(ractive); }, true);

  if (ractive.fragment.rendered) {
    throw new Error(
      'You cannot call ractive.render() on an already rendered instance! Call ractive.unrender() first'
    );
  }

  if (ractive.destroyed) {
    ractive.destroyed = false;
    ractive.fragment = createFragment$1(ractive).bind(ractive.viewmodel);
  }

  anchor = getElement(anchor) || ractive.anchor;

  ractive.el = ractive.target = target;
  ractive.anchor = anchor;

  // ensure encapsulated CSS is up-to-date
  if (ractive.cssId) { applyCSS(); }

  if (target) {
    (target.__ractive_instances__ || (target.__ractive_instances__ = [])).push(ractive);

    if (anchor) {
      var docFrag = doc.createDocumentFragment();
      ractive.fragment.render(docFrag);
      target.insertBefore(docFrag, anchor);
    } else {
      ractive.fragment.render(target, occupants);
    }
  }

  runloop.end();
  ractive.rendering = false;

  return promise.then(function () {
    if (ractive.torndown) { return; }

    hooks.complete.fire(ractive);
  });
}

function Ractive$render(target, anchor) {
  if (this.torndown) {
    warnIfDebug('ractive.render() was called on a Ractive instance that was already torn down');
    return Promise.resolve();
  }

  target = getElement(target) || this.el;

  if (!this.append && target) {
    // Teardown any existing instances *before* trying to set up the new one -
    // avoids certain weird bugs
    var others = target.__ractive_instances__;
    if (others) { others.forEach(teardown); }

    // make sure we are the only occupants
    if (!this.enhance) {
      target.innerHTML = ''; // TODO is this quicker than removeChild? Initial research inconclusive
    }
  }

  var occupants = this.enhance ? toArray(target.childNodes) : null;
  var promise = render$1(this, target, anchor, occupants);

  if (occupants) {
    while (occupants.length) { target.removeChild(occupants.pop()); }
  }

  return promise;
}

var shouldRerender = ['template', 'partials', 'components', 'decorators', 'events'];

function Ractive$reset(data) {
  data = data || {};

  if (!isObjectType(data)) {
    throw new Error('The reset method takes either no arguments, or an object containing new data');
  }

  // TEMP need to tidy this up
  data = dataConfigurator.init(this.constructor, this, { data: data });

  var promise = runloop.start();

  // If the root object is wrapped, try and use the wrapper's reset value
  var wrapper = this.viewmodel.wrapper;
  if (wrapper && wrapper.reset) {
    if (wrapper.reset(data) === false) {
      // reset was rejected, we need to replace the object
      this.viewmodel.set(data);
    }
  } else {
    this.viewmodel.set(data);
  }

  // reset config items and track if need to rerender
  var changes = config.reset(this);
  var rerender;

  var i = changes.length;
  while (i--) {
    if (shouldRerender.indexOf(changes[i]) > -1) {
      rerender = true;
      break;
    }
  }

  if (rerender) {
    hooks.unrender.fire(this);
    this.fragment.resetTemplate(this.template);
    hooks.render.fire(this);
    hooks.complete.fire(this);
  }

  runloop.end();

  hooks.reset.fire(this, data);

  return promise;
}

function collect$1(source, name, attr, dest) {
  source.forEach(function (item) {
    // queue to rerender if the item is a partial and the current name matches
    if (item.type === PARTIAL && (item.refName === name || item.name === name)) {
      item.inAttribute = attr;
      dest.push(item);
      return; // go no further
    }

    // if it has a fragment, process its items
    if (item.fragment) {
      collect$1(item.fragment.iterations || item.fragment.items, name, attr, dest);
    } else if (isArray(item.items)) {
      // or if it is itself a fragment, process its items
      collect$1(item.items, name, attr, dest);
    } else if (item.type === COMPONENT && item.instance) {
      // or if it is a component, step in and process its items
      // ...unless the partial is shadowed
      if (item.instance.partials[name]) { return; }
      collect$1(item.instance.fragment.items, name, attr, dest);
    }

    // if the item is an element, process its attributes too
    if (item.type === ELEMENT) {
      if (isArray(item.attributes)) {
        collect$1(item.attributes, name, true, dest);
      }
    }
  });
}

function resetPartial(name, partial) {
  var collection = [];
  collect$1(this.fragment.items, name, false, collection);

  var promise = runloop.start();

  this.partials[name] = partial;
  collection.forEach(handleChange);

  runloop.end();

  return promise;
}

// TODO should resetTemplate be asynchronous? i.e. should it be a case
// of outro, update template, intro? I reckon probably not, since that
// could be achieved with unrender-resetTemplate-render. Also, it should
// conceptually be similar to resetPartial, which couldn't be async

function Ractive$resetTemplate(template) {
  templateConfigurator.init(null, this, { template: template });

  var transitionsEnabled = this.transitionsEnabled;
  this.transitionsEnabled = false;

  // Is this is a component, we need to set the `shouldDestroy`
  // flag, otherwise it will assume by default that a parent node
  // will be detached, and therefore it doesn't need to bother
  // detaching its own nodes
  var component = this.component;
  if (component) { component.shouldDestroy = true; }
  this.unrender();
  if (component) { component.shouldDestroy = false; }

  var promise = runloop.start();

  // remove existing fragment and create new one
  this.fragment.unbind().unrender(true);

  this.fragment = new Fragment({
    template: this.template,
    root: this,
    owner: this
  });

  var docFrag = createDocumentFragment();
  this.fragment.bind(this.viewmodel).render(docFrag);

  // if this is a component, its el may not be valid, so find a
  // target based on the component container
  if (component && !component.external) {
    this.fragment.findParentNode().insertBefore(docFrag, component.findNextNode());
  } else {
    this.el.insertBefore(docFrag, this.anchor);
  }

  runloop.end();

  this.transitionsEnabled = transitionsEnabled;

  return promise;
}

var reverse = makeArrayMethod('reverse').path;

function Ractive$set(keypath, value, options) {
  var ractive = this;

  var opts = isObjectType(keypath) ? value : options;

  return set(build(ractive, keypath, value, opts && opts.isolated), opts);
}

var shift = makeArrayMethod('shift').path;

var sort = makeArrayMethod('sort').path;

var splice = makeArrayMethod('splice').path;

function Ractive$subtract(keypath, d, options) {
  var num = isNumber(d) ? -d : -1;
  var opts = isObjectType(d) ? d : options;
  return add(this, keypath, num, opts);
}

function Ractive$toggle(keypath, options) {
  if (!isString(keypath)) {
    throw new TypeError(badArguments);
  }

  return set(
    gather(this, keypath, null, options && options.isolated).map(function (m) { return [m, !m.get()]; }),
    options
  );
}

function Ractive$toCSS() {
  var cssIds = [this.cssId ].concat( this.findAllComponents().map(function (c) { return c.cssId; }));
  var uniqueCssIds = keys(cssIds.reduce(function (ids, id) { return (ids[id] = true, ids); }, {}));
  return getCSS(uniqueCssIds);
}

function Ractive$toHTML() {
  return this.fragment.toString(true);
}

function toText() {
  return this.fragment.toString(false);
}

function Ractive$transition(name, node, params) {
  if (node instanceof HTMLElement) {
    // good to go
  } else if (isObject(node)) {
    // omitted, use event node
    params = node;
  }

  // if we allow query selector, then it won't work
  // simple params like "fast"

  // else if ( typeof node === 'string' ) {
  // 	// query selector
  // 	node = this.find( node )
  // }

  node = node || this.event.node;

  if (!node || !node._ractive) {
    fatal(("No node was supplied for transition " + name));
  }

  params = params || {};
  var owner = node._ractive.proxy;
  var transition = new Transition({ owner: owner, up: owner.up, name: name, params: params });
  transition.bind();

  var promise = runloop.start();
  runloop.registerTransition(transition);
  runloop.end();

  promise.then(function () { return transition.unbind(); });
  return promise;
}

function unlink(here) {
  var promise = runloop.start();
  this.viewmodel.joinAll(splitKeypath(here), { lastLink: false }).unlink();
  runloop.end();
  return promise;
}

function Ractive$unrender() {
  if (!this.fragment.rendered) {
    warnIfDebug('ractive.unrender() was called on a Ractive instance that was not rendered');
    return Promise.resolve();
  }

  this.unrendering = true;
  var promise = runloop.start();

  hooks.unrendering.fire(this);

  // If this is a component, and the component isn't marked for destruction,
  // don't detach nodes from the DOM unnecessarily
  var shouldDestroy =
    !this.component ||
    (this.component.anchor || {}).shouldDestroy ||
    this.component.shouldDestroy ||
    this.shouldDestroy;
  this.fragment.unrender(shouldDestroy);
  if (shouldDestroy) { this.destroyed = true; }

  removeFromArray(this.el.__ractive_instances__, this);

  hooks.unrender.fire(this);

  runloop.end();
  this.unrendering = false;

  return promise;
}

var unshift = makeArrayMethod('unshift').path;

function Ractive$updateModel(keypath, cascade) {
  var promise = runloop.start();

  if (!keypath) {
    this.viewmodel.updateFromBindings(true);
  } else {
    this.viewmodel.joinAll(splitKeypath(keypath)).updateFromBindings(cascade !== false);
  }

  runloop.end();

  return promise;
}

function use() {
  var this$1 = this;
  var plugins = [], len = arguments.length;
  while ( len-- ) plugins[ len ] = arguments[ len ];

  plugins.forEach(function (p) {
    p({
      proto: this$1,
      Ractive: this$1.constructor.Ractive,
      instance: this$1
    });
  });
  return this;
}

var proto$9 = {
  add: Ractive$add,
  animate: Ractive$animate,
  attachChild: attachChild,
  compute: Ractive$compute,
  detach: Ractive$detach,
  detachChild: detachChild,
  find: Ractive$find,
  findAll: Ractive$findAll,
  findAllComponents: Ractive$findAllComponents,
  findComponent: Ractive$findComponent,
  findContainer: Ractive$findContainer,
  findParent: Ractive$findParent,
  fire: Ractive$fire,
  get: Ractive$get,
  getLocalContext: getLocalContext,
  getContext: getContext$2,
  insert: Ractive$insert,
  link: link,
  observe: observe,
  observeOnce: observeOnce,
  off: Ractive$off,
  on: Ractive$on,
  once: Ractive$once,
  pop: pop,
  push: push,
  readLink: readLink,
  render: Ractive$render,
  reset: Ractive$reset,
  resetPartial: resetPartial,
  resetTemplate: Ractive$resetTemplate,
  reverse: reverse,
  set: Ractive$set,
  shift: shift,
  sort: sort,
  splice: splice,
  subtract: Ractive$subtract,
  teardown: Ractive$teardown,
  toggle: Ractive$toggle,
  toCSS: Ractive$toCSS,
  toCss: Ractive$toCSS,
  toHTML: Ractive$toHTML,
  toHtml: Ractive$toHTML,
  toText: toText,
  transition: Ractive$transition,
  unlink: unlink,
  unrender: Ractive$unrender,
  unshift: unshift,
  update: Ractive$update,
  updateModel: Ractive$updateModel,
  use: use
};

function isInstance(object) {
  return object && object instanceof this;
}

function styleGet(keypath, opts) {
  return this._cssModel.joinAll(splitKeypath(keypath)).get(true, opts);
}

var styles = [];

function addStyle(id, css) {
  if (styles.find(function (s) { return s.id === id; }))
    { throw new Error(("Extra styles with the id '" + id + "' have already been added.")); }
  styles.push({ id: id, css: css });

  if (!this.css) {
    Object.defineProperty(this, 'css', { configurable: false, writable: false, value: buildCSS });
  }

  if (!this._cssDef) {
    Object.defineProperty(this, '_cssDef', {
      configurable: true,
      writable: false,
      value: {
        transform: false,
        id: 'Ractive.addStyle'
      }
    });

    addCSS(this._cssDef);
  }

  recomputeCSS(this);
  applyCSS(true);
}

function buildCSS(data) {
  return styles
    .map(function (s) { return "\n/* ---- extra style " + (s.id) + " */\n" + (isFunction(s.css) ? s.css(data) : s.css); })
    .join('');
}

function hasStyle(id) {
  return !!styles.find(function (s) { return s.id === id; });
}

function sharedSet(keypath, value, options) {
  var opts = isObjectType(keypath) ? value : options;
  var model = SharedModel$1;

  return set(build({ viewmodel: model }, keypath, value, true), opts);
}

function sharedGet(keypath, opts) {
  return SharedModel$1.joinAll(splitKeypath(keypath)).get(true, opts);
}

function use$1() {
  var this$1 = this;
  var plugins = [], len = arguments.length;
  while ( len-- ) plugins[ len ] = arguments[ len ];

  plugins.forEach(function (p) {
    isFunction(p) &&
      p({
        proto: this$1.prototype,
        Ractive: this$1.Ractive,
        instance: this$1
      });
  });
  return this;
}

var callsSuper = /super\s*\(|\.call\s*\(\s*this/;

function extend() {
  var options = [], len = arguments.length;
  while ( len-- ) options[ len ] = arguments[ len ];

  if (!options.length) {
    return extendOne(this);
  } else {
    return options.reduce(extendOne, this);
  }
}

function extendWith(Class, options) {
  if ( options === void 0 ) options = {};

  return extendOne(this, options, Class);
}

function extendOne(Parent, options, Target) {
  if ( options === void 0 ) options = {};

  var proto;
  var Child = isFunction(Target) && Target;

  if (options.prototype instanceof Ractive) {
    throw new Error("Ractive no longer supports multiple inheritance.");
  }

  if (Child) {
    if (!(Child.prototype instanceof Parent)) {
      throw new Error(
        "Only classes that inherit the appropriate prototype may be used with extend"
      );
    }
    if (!callsSuper.test(Child.toString())) {
      throw new Error("Only classes that call super in their constructor may be used with extend");
    }

    proto = Child.prototype;
  } else {
    Child = function(options) {
      if (!(this instanceof Child)) { return new Child(options); }
      if (options && options.component === true) { return; }

      construct(this, options || {});
      initialise(this, options || {}, {});
    };

    proto = create(Parent.prototype);
    proto.constructor = Child;

    Child.prototype = proto;
  }

  // Static properties
  defineProperties(Child, {
    // alias prototype as defaults
    defaults: { value: proto },

    extend: { value: extend, writable: true, configurable: true },
    extendWith: { value: extendWith, writable: true, configurable: true },
    extensions: { value: [] },
    use: { value: use$1 },

    isInstance: { value: isInstance },

    Parent: { value: Parent },
    Ractive: { value: Ractive },

    styleGet: { value: styleGet.bind(Child), configurable: true },
    styleSet: { value: setCSSData.bind(Child), configurable: true }
  });

  // extend configuration
  config.extend(Parent, proto, options, Child);

  // store event and observer registries on the constructor when extending
  Child._on = (Parent._on || []).concat(toPairs(options.on));
  Child._observe = (Parent._observe || []).concat(toPairs(options.observe));

  Parent.extensions.push(Child);

  // attribute defs are not inherited, but they need to be stored
  if (options.attributes) {
    var attrs;

    // allow an array of optional props or an object with arrays for optional and required props
    if (isArray(options.attributes)) {
      attrs = { optional: options.attributes, required: [] };
    } else {
      attrs = options.attributes;
    }

    // make sure the requisite keys actually store arrays
    if (!isArray(attrs.required)) { attrs.required = []; }
    if (!isArray(attrs.optional)) { attrs.optional = []; }

    Child.attributes = attrs;
  }

  dataConfigurator.extend(Parent, proto, options, Child);

  defineProperty(Child, 'helpers', { writable: true, value: proto.helpers });

  if (isArray(options.use)) { Child.use.apply(Child, options.use); }

  return Child;
}

defineProperties(Ractive, {
  sharedGet: { value: sharedGet },
  sharedSet: { value: sharedSet },
  styleGet: { configurable: true, value: styleGet.bind(Ractive) },
  styleSet: { configurable: true, value: setCSSData.bind(Ractive) },
  addCSS: { configurable: false, value: addStyle.bind(Ractive) },
  hasCSS: { configurable: false, value: hasStyle.bind(Ractive) }
});

function macro(fn, opts) {
  if (!isFunction(fn)) { throw new Error("The macro must be a function"); }

  assign(fn, opts);

  defineProperties(fn, {
    extensions: { value: [] },
    _cssIds: { value: [] },
    cssData: { value: assign(create(this.cssData), fn.cssData || {}) },

    styleGet: { value: styleGet.bind(fn) },
    styleSet: { value: setCSSData.bind(fn) }
  });

  defineProperty(fn, '_cssModel', { value: new CSSModel(fn) });

  if (fn.css) { initCSS(fn, fn, fn); }

  this.extensions.push(fn);

  return fn;
}

function findPlugin(name, type, instance) {
  return findInViewHierarchy(type, instance, name);
}

function Ractive(options) {
  if (!(this instanceof Ractive)) { return new Ractive(options); }
  if (options && options.component) { return; }

  construct(this, options || {});
  initialise(this, options || {}, {});
}

// check to see if we're being asked to force Ractive as a global for some weird environments
if (win && !win.Ractive) {
  var opts$1 = '';
  var script =
    document.currentScript ||
    /* istanbul ignore next */ document.querySelector('script[data-ractive-options]');

  if (script) { opts$1 = script.getAttribute('data-ractive-options') || ''; }

  /* istanbul ignore next */
  if (~opts$1.indexOf('ForceGlobal')) { win.Ractive = Ractive; }
} else if (win) {
  warn("Ractive already appears to be loaded while loading 1.4.0.");
}

assign(Ractive.prototype, proto$9, defaults);
Ractive.prototype.constructor = Ractive;

// alias prototype as `defaults`
Ractive.defaults = Ractive.prototype;

// share defaults with the parser
shared.defaults = Ractive.defaults;
shared.Ractive = Ractive;

// static properties
defineProperties(Ractive, {
  // debug flag
  DEBUG: { writable: true, value: true },
  DEBUG_PROMISES: { writable: true, value: true },

  // static methods:
  extend: { value: extend },
  extendWith: { value: extendWith },
  escapeKey: { value: escapeKey },
  evalObjectString: { value: parseJSON },
  findPlugin: { value: findPlugin },
  getContext: { value: getContext$1 },
  getCSS: { value: getCSS },
  isInstance: { value: isInstance },
  joinKeys: { value: joinKeys },
  macro: { value: macro },
  normaliseKeypath: { value: normalise },
  parse: { value: parse },
  splitKeypath: { value: splitKeypath$1 },
  // sharedSet and styleSet are in _extend because circular refs
  unescapeKey: { value: unescapeKey },
  use: { value: use$1 },

  // support
  enhance: { writable: true, value: false },
  svg: { value: svg },
  tick: {
    get: function get() {
      return batch && batch.promise;
    }
  },

  // version
  VERSION: { value: '1.4.0' },

  // plugins
  adaptors: { writable: true, value: {} },
  components: { writable: true, value: {} },
  decorators: { writable: true, value: {} },
  easing: { writable: true, value: easing },
  events: { writable: true, value: {} },
  extensions: { value: [] },
  helpers: { writable: true, value: defaults.helpers },
  interpolators: { writable: true, value: interpolators },
  partials: { writable: true, value: {} },
  transitions: { writable: true, value: {} },

  // CSS variables
  cssData: { configurable: true, value: {} },
  perComponentStyleElements: { get: splitTag, set: splitTag },

  // access to @shared without an instance
  sharedData: { value: data },

  // for getting the source Ractive lib from a constructor
  Ractive: { value: Ractive },

  // to allow extending contexts
  Context: { value: extern.Context.prototype }
});

// cssData must already be in place
defineProperty(Ractive, '_cssModel', {
  configurable: true,
  value: new CSSModel(Ractive)
});

defineProperty(Ractive.prototype, 'rendered', {
  get: function get() {
    return this.fragment && this.fragment.rendered;
  }
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Ractive);
//# sourceMappingURL=/media/sync/dev/js/ractive/.gobble-build/10-transpile/.cache/ractive.mjs.map


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames not based on template
/******/ 			if ({"Resources_assets_js_login_Login_js":1,"Resources_assets_js_register_Register_js":1}[chunkId]) return "js/auth/" + chunkId + ".js";
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.miniCssF = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".css";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		// data-webpack is not used as build has no uniqueName
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "/";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/auth": 0,
/******/ 			"css/auth": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if("css/auth" != chunkId) {
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/auth"], () => (__webpack_require__("./Resources/assets/js/app.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/auth"], () => (__webpack_require__("./Resources/assets/sass/app.scss")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;